!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    HessianBlockType& A() { return _hessian;}$/;"	f	class:g2o::BaseVertex
A	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    const HessianBlockType& A() const { return _hessian;}$/;"	f	class:g2o::BaseVertex
ABx_lx	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  ABx_lx              = 0x200,$/;"	e	enum:Eigen::DecompositionOptions
ALIVE	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	115;"	d
AMDOrdering	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Ordering.h	/^class AMDOrdering$/;"	c	namespace:Eigen
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	396;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	399;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	402;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	406;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	408;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	410;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	414;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	417;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	420;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	425;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	428;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	431;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	435;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	391;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	394;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	397;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	403;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	405;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	409;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	412;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	415;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	420;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	423;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	426;"	d	file:
ARCHITECTURE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	430;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	396;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	399;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	402;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	406;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	408;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	410;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	414;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	417;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	420;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	425;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	428;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	431;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	435;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	391;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	394;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	397;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	403;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	405;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	409;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	412;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	415;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	420;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	423;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	426;"	d	file:
ARCHITECTURE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	430;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	396;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	399;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	402;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	406;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	408;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	410;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	414;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	417;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	420;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	425;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	428;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	431;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	435;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	391;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	394;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	397;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	403;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	405;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	409;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	412;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	415;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	420;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	423;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	426;"	d	file:
ARCHITECTURE_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	430;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	416;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	419;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	422;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	425;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	429;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	431;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	433;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	437;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	440;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	443;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	448;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	451;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	454;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	459;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	462;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	465;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	468;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	404;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	407;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	410;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	414;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	416;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	418;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	422;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	425;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	428;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	433;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	436;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	439;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	444;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	447;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	450;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	453;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	396;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	399;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	402;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	406;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	408;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	410;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	414;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	417;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	420;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	425;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	428;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	431;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	435;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	391;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	394;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	397;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	403;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	405;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	409;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	412;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	415;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	420;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	423;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	426;"	d	file:
ARCHITECTURE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	430;"	d	file:
AT_COMPUTEACTIVERROR	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^      AT_COMPUTEACTIVERROR = OptimizableGraph::AT_NUM_ELEMENTS,$/;"	e	enum:g2o::SparseOptimizer::__anon466
AT_NUM_ELEMENTS	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^      AT_NUM_ELEMENTS, \/\/ keep as last element$/;"	e	enum:g2o::OptimizableGraph::ActionType
AT_NUM_ELEMENTS	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^      AT_NUM_ELEMENTS, \/\/ keep as last element$/;"	e	enum:g2o::SparseOptimizer::__anon466
AT_POSTITERATION	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^      AT_PREITERATION, AT_POSTITERATION,$/;"	e	enum:g2o::OptimizableGraph::ActionType
AT_PREITERATION	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^      AT_PREITERATION, AT_POSTITERATION,$/;"	e	enum:g2o::OptimizableGraph::ActionType
AbstractHyperGraphElementCreator	./Thirdparty/g2o/g2o/core/creators.h	/^  class  AbstractHyperGraphElementCreator$/;"	c	namespace:g2o
AbstractOptimizationAlgorithmCreator	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  AbstractOptimizationAlgorithmCreator::AbstractOptimizationAlgorithmCreator(const OptimizationAlgorithmProperty& p) :$/;"	f	class:g2o::AbstractOptimizationAlgorithmCreator
AbstractOptimizationAlgorithmCreator	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	/^  class  AbstractOptimizationAlgorithmCreator$/;"	c	namespace:g2o
AbstractRobustKernelCreator	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	/^  class  AbstractRobustKernelCreator$/;"	c	namespace:g2o
AccPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef ResPacket AccPacket;$/;"	t	class:Eigen::internal::gebp_traits
AccPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::AccPacket AccPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
AccPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,DoublePacket,Scalar>::type AccPacket;$/;"	t	class:Eigen::internal::gebp_traits
AcceptKeyFrames	./src/LocalMapping.cc	/^bool LocalMapping::AcceptKeyFrames()$/;"	f	class:ORB_SLAM2::LocalMapping
AccessorLevels	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum AccessorLevels {$/;"	g	namespace:Eigen
Action	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum Action {GetAction, SetAction};$/;"	g	namespace:Eigen
ActionMap	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^      typedef std::map<std::string, HyperGraphElementAction*> ActionMap;$/;"	t	class:g2o::HyperGraphElementAction
ActionType	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    enum ActionType {$/;"	g	struct:g2o::OptimizableGraph
ActivateLocalizationMode	./src/System.cc	/^void System::ActivateLocalizationMode()$/;"	f	class:ORB_SLAM2::System
ActualCols	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      ActualCols = Transpose ? MaxRows : MaxCols$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon36
ActualIndex	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^        ActualIndex = ReturnOpposite ? -Index : Index,$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon12
ActualLhsType	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typedef typename LhsBlasTraits::DirectLinearAccessType ActualLhsType;$/;"	t	class:Eigen::ProductBase
ActualLhsType	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  typedef typename LhsProductTraits::DirectLinearAccessType ActualLhsType;$/;"	t	struct:Eigen::internal::triangular_solver_selector
ActualLhsType	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  typedef typename LhsProductTraits::ExtractType ActualLhsType;$/;"	t	struct:Eigen::internal::triangular_solver_selector
ActualPacketAccessBit	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^const unsigned int ActualPacketAccessBit = 0x0;$/;"	m	namespace:Eigen
ActualPacketAccessBit	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^const unsigned int ActualPacketAccessBit = PacketAccessBit;$/;"	m	namespace:Eigen
ActualRhsType	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typedef typename RhsBlasTraits::DirectLinearAccessType ActualRhsType;$/;"	t	class:Eigen::ProductBase
ActualRows	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      ActualRows = Transpose ? MaxCols : MaxRows,$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon36
AddChild	./src/KeyFrame.cc	/^void KeyFrame::AddChild(KeyFrame *pKF)$/;"	f	class:ORB_SLAM2::KeyFrame
AddConnection	./src/KeyFrame.cc	/^void KeyFrame::AddConnection(KeyFrame *pKF, const int &weight)$/;"	f	class:ORB_SLAM2::KeyFrame
AddCost	./Thirdparty/sparseicp/include/Eigen/src/Core/NumTraits.h	/^    AddCost = 1,$/;"	e	enum:Eigen::GenericNumTraits::__anon30
AddKeyFrame	./src/Map.cc	/^void Map::AddKeyFrame(KeyFrame *pKF)$/;"	f	class:ORB_SLAM2::Map
AddLoopEdge	./src/KeyFrame.cc	/^void KeyFrame::AddLoopEdge(KeyFrame *pKF)$/;"	f	class:ORB_SLAM2::KeyFrame
AddMapPoint	./src/KeyFrame.cc	/^void KeyFrame::AddMapPoint(MapPoint *pMP, const size_t &idx)$/;"	f	class:ORB_SLAM2::KeyFrame
AddMapPoint	./src/Map.cc	/^void Map::AddMapPoint(MapPoint *pMP)$/;"	f	class:ORB_SLAM2::Map
AddObservation	./src/MapPoint.cc	/^void MapPoint::AddObservation(KeyFrame* pKF, size_t idx)$/;"	f	class:ORB_SLAM2::MapPoint
AdjacencyMap	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^      typedef std::tr1::unordered_map<OptimizableGraph::Vertex*, AdjacencyMapEntry, VertexIDHashFunction> AdjacencyMap;$/;"	t	class:g2o::EstimatePropagator
AdjacencyMap	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^    typedef std::map<HyperGraph::Vertex*, AdjacencyMapEntry> AdjacencyMap;$/;"	t	struct:g2o::HyperDijkstra
AdjacencyMapEntry	./Thirdparty/g2o/g2o/core/estimate_propagator.cpp	/^  EstimatePropagator::AdjacencyMapEntry::AdjacencyMapEntry()$/;"	f	class:g2o::EstimatePropagator::AdjacencyMapEntry
AdjacencyMapEntry	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^      class AdjacencyMapEntry {$/;"	c	class:g2o::EstimatePropagator
AdjacencyMapEntry	./Thirdparty/g2o/g2o/core/hyper_dijkstra.cpp	/^  HyperDijkstra::AdjacencyMapEntry::AdjacencyMapEntry(HyperGraph::Vertex* child_, HyperGraph::Vertex* parent_, $/;"	f	class:g2o::HyperDijkstra::AdjacencyMapEntry
AdjacencyMapEntry	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^    struct  AdjacencyMapEntry{$/;"	s	struct:g2o::HyperDijkstra
AdjointReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^                     >::type AdjointReturnType;$/;"	t	class:Eigen::MatrixBase
AdjointReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^                     >::type AdjointReturnType;$/;"	t	class:Eigen::SparseMatrixBase
Affine	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  Affine        = 0x2,$/;"	e	enum:Eigen::TransformTraits
Affine2D	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Transform<double,2,Eigen::Affine,Eigen::ColMajor>                Affine2D;$/;"	t	namespace:g2o
Affine2d	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,Affine> Affine2d;$/;"	t	namespace:Eigen
Affine2f	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,Affine> Affine2f;$/;"	t	namespace:Eigen
Affine3D	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Transform<double,3,Eigen::Affine,Eigen::ColMajor>                Affine3D;$/;"	t	namespace:g2o
Affine3d	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,Affine> Affine3d;$/;"	t	namespace:Eigen
Affine3f	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,Affine> Affine3f;$/;"	t	namespace:Eigen
AffineCompact	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  AffineCompact = 0x10 | Affine,$/;"	e	enum:Eigen::TransformTraits
AffineCompact2d	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,AffineCompact> AffineCompact2d;$/;"	t	namespace:Eigen
AffineCompact2f	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,AffineCompact> AffineCompact2f;$/;"	t	namespace:Eigen
AffineCompact3d	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,AffineCompact> AffineCompact3d;$/;"	t	namespace:Eigen
AffineCompact3f	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,AffineCompact> AffineCompact3f;$/;"	t	namespace:Eigen
AffinePart	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^                              Block<MatrixType,Dim,HDim> >::type AffinePart;$/;"	t	class:Eigen::Transform
AffinePart	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::AffinePart AffinePart;$/;"	t	struct:Eigen::internal::transform_take_affine_part
AffineTransformType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  typedef Transform<Scalar,Dim,Affine> AffineTransformType;$/;"	t	class:Eigen::Translation
Aii	./Thirdparty/g2o/g2o/core/matrix_structure.h	/^    int* Aii; \/\/\/< row indices of A, of size nz = Ap [n]$/;"	m	class:g2o::MatrixStructure
Align	./4pcs/Registration.cc	/^        int FPCSRegistration::Align(PointCloud<PointXYZ>::Ptr &output) {$/;"	f	class:pcl::FPCS::FPCSRegistration
Aligned	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  Aligned=1 $/;"	e	enum:Eigen::__anon71
AlignedBit	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^const unsigned int AlignedBit = 0x80;$/;"	m	namespace:Eigen
AlignedBox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline AlignedBox()$/;"	f	class:Eigen::AlignedBox
AlignedBox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline AlignedBox(const VectorType& _min, const VectorType& _max) : m_min(_min), m_max(_max) {}$/;"	f	class:Eigen::AlignedBox
AlignedBox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline explicit AlignedBox(const AlignedBox<OtherScalarType,AmbientDimAtCompileTime>& other)$/;"	f	class:Eigen::AlignedBox
AlignedBox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline explicit AlignedBox(const VectorType& p) : m_min(p), m_max(p) {}$/;"	f	class:Eigen::AlignedBox
AlignedBox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline explicit AlignedBox(int _dim) : m_min(_dim), m_max(_dim)$/;"	f	class:Eigen::AlignedBox
AlignedBox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^class AlignedBox$/;"	c	namespace:Eigen
AlignedBox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	110;"	d
AlignedBox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	55;"	d
AlignedBox	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox()$/;"	f	class:Eigen::AlignedBox
AlignedBox	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox(const OtherVectorType1& _min, const OtherVectorType2& _max) : m_min(_min), m_max(_max) {}$/;"	f	class:Eigen::AlignedBox
AlignedBox	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline explicit AlignedBox(Index _dim) : m_min(_dim), m_max(_dim)$/;"	f	class:Eigen::AlignedBox
AlignedBox	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline explicit AlignedBox(const AlignedBox<OtherScalarType,AmbientDimAtCompileTime>& other)$/;"	f	class:Eigen::AlignedBox
AlignedBox	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline explicit AlignedBox(const MatrixBase<Derived>& a_p)$/;"	f	class:Eigen::AlignedBox
AlignedBox	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^class AlignedBox$/;"	c	namespace:Eigen
AlignedMapType	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    typedef Eigen::Map<Derived, Aligned> AlignedMapType;$/;"	t	class:Eigen::PlainObjectBase
AlignedOnScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    AlignedOnScalar = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon141
AlignedOnScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
AlignedOnScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon212
AlignedOnScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon213
AlignedOnScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon204
AlignedOnScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon206
AlignedOnScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon207
AlignedOnScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    AlignedOnScalar = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon218
AlignedOnScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
AlignedOnScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon223
AlignedOnScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon224
AlignedOnScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon225
AlignedScaling2d	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<double,2> AlignedScaling2d;$/;"	t	namespace:Eigen
AlignedScaling2f	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<float, 2> AlignedScaling2f;$/;"	t	namespace:Eigen
AlignedScaling3d	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<double,3> AlignedScaling3d;$/;"	t	namespace:Eigen
AlignedScaling3f	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<float, 3> AlignedScaling3f;$/;"	t	namespace:Eigen
AlignmentMask	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^      AlignmentMask = int(PacketSize)-1,$/;"	e	enum:Eigen::LLT::__anon426
AlignmentMask	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^      AlignmentMask = int(PacketSize)-1,$/;"	e	enum:Eigen::SVD::__anon378
AlignmentMatch	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^      AlignmentMatch = (_Options!=Aligned) || ((PlainObjectType::Flags&AlignedBit)==0) || ((traits<Derived>::Flags&AlignedBit)==AlignedBit),$/;"	e	enum:Eigen::internal::traits::match::__anon186
AllAtOnceTraversal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  AllAtOnceTraversal$/;"	e	enum:Eigen::__anon72
AltiVec	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^    AltiVec = 0x2,$/;"	e	enum:Eigen::Architecture::Type
AmbiVector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    AmbiVector(Index size)$/;"	f	class:Eigen::internal::AmbiVector
AmbiVector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^class AmbiVector$/;"	c	namespace:Eigen::internal
AmbientDimAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  enum { AmbientDimAtCompileTime = _AmbientDim };$/;"	e	enum:Eigen::AlignedBox::__anon379
AmbientDimAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  enum { AmbientDimAtCompileTime = _AmbientDim };$/;"	e	enum:Eigen::Hyperplane::__anon385
AmbientDimAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  enum { AmbientDimAtCompileTime = _AmbientDim };$/;"	e	enum:Eigen::ParametrizedLine::__anon382
AmbientDimAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  enum { AmbientDimAtCompileTime = _AmbientDim };$/;"	e	enum:Eigen::AlignedBox::__anon428
AmbientDimAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^    AmbientDimAtCompileTime = _AmbientDim,$/;"	e	enum:Eigen::Hyperplane::__anon444
AmbientDimAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^    AmbientDimAtCompileTime = _AmbientDim,$/;"	e	enum:Eigen::ParametrizedLine::__anon440
Ancestor	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename remove_all<Lhs>::type Ancestor;$/;"	t	struct:Eigen::internal::traits
AngleAxis	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	33;"	d
AngleAxis	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	88;"	d
AngleAxis	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  AngleAxis() {}$/;"	f	class:Eigen::AngleAxis
AngleAxis	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline AngleAxis(Scalar angle, const MatrixBase<Derived>& axis) : m_axis(axis), m_angle(angle) {}$/;"	f	class:Eigen::AngleAxis
AngleAxis	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline AngleAxis(const QuaternionType& q) { *this = q; }$/;"	f	class:Eigen::AngleAxis
AngleAxis	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline explicit AngleAxis(const AngleAxis<OtherScalarType>& other)$/;"	f	class:Eigen::AngleAxis
AngleAxis	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline explicit AngleAxis(const MatrixBase<Derived>& m) { *this = m; }$/;"	f	class:Eigen::AngleAxis
AngleAxis	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^class AngleAxis : public RotationBase<AngleAxis<_Scalar>,3>$/;"	c	namespace:Eigen
AngleAxis	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  AngleAxis() {}$/;"	f	class:Eigen::AngleAxis
AngleAxis	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  inline AngleAxis(const Scalar& angle, const MatrixBase<Derived>& axis) : m_axis(axis), m_angle(angle) {}$/;"	f	class:Eigen::AngleAxis
AngleAxis	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  inline explicit AngleAxis(const AngleAxis<OtherScalarType>& other)$/;"	f	class:Eigen::AngleAxis
AngleAxis	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  inline explicit AngleAxis(const MatrixBase<Derived>& m) { *this = m; }$/;"	f	class:Eigen::AngleAxis
AngleAxis	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  template<typename QuatDerived> inline explicit AngleAxis(const QuaternionBase<QuatDerived>& q) { *this = q; }$/;"	f	class:Eigen::AngleAxis
AngleAxis	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^class AngleAxis : public RotationBase<AngleAxis<_Scalar>,3>$/;"	c	namespace:Eigen
AngleAxisType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  typedef AngleAxis<Scalar> AngleAxisType;$/;"	t	class:Eigen::Quaternion
AngleAxisType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  typedef AngleAxis<Scalar> AngleAxisType;$/;"	t	class:Eigen::QuaternionBase
AngleAxisType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  typedef typename Base::AngleAxisType AngleAxisType;$/;"	t	class:Eigen::Quaternion
AngleAxisd	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	35;"	d
AngleAxisd	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	90;"	d
AngleAxisd	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^typedef AngleAxis<double> AngleAxisd;$/;"	t	namespace:Eigen
AngleAxisd	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^typedef AngleAxis<double> AngleAxisd;$/;"	t	namespace:Eigen
AngleAxisf	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	34;"	d
AngleAxisf	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	89;"	d
AngleAxisf	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^typedef AngleAxis<float> AngleAxisf;$/;"	t	namespace:Eigen
AngleAxisf	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^typedef AngleAxis<float> AngleAxisf;$/;"	t	namespace:Eigen
Ap	./Thirdparty/g2o/g2o/core/matrix_structure.h	/^    int* Ap;  \/\/\/< column pointers for A, of size n+1$/;"	m	class:g2o::MatrixStructure
Architecture	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^namespace Architecture$/;"	n	namespace:Eigen
Array	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    Array(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::Array
Array	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array() : Base()$/;"	f	class:Eigen::Array
Array	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const Array& other)$/;"	f	class:Eigen::Array
Array	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::Array
Array	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Array
Array	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::Array
Array	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const Scalar& val0, const Scalar& val1, const Scalar& val2)$/;"	f	class:Eigen::Array
Array	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const Scalar& val0, const Scalar& val1, const Scalar& val2, const Scalar& val3)$/;"	f	class:Eigen::Array
Array	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const T0& val0, const T1& val1)$/;"	f	class:Eigen::Array
Array	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE explicit Array(Index dim)$/;"	f	class:Eigen::Array
Array	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^class Array$/;"	c	namespace:Eigen
Array	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^  ::Array(const Scalar *data)$/;"	f	class:Eigen::Array
ArrayBase	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    ArrayBase() : Base() {}$/;"	f	class:Eigen::ArrayBase
ArrayBase	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^template<typename Derived> class ArrayBase$/;"	c	namespace:Eigen
ArrayWrapper	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline ArrayWrapper(ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::ArrayWrapper
ArrayWrapper	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^class ArrayWrapper : public ArrayBase<ArrayWrapper<ExpressionType> >$/;"	c	namespace:Eigen
ArrayXpr	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^struct ArrayXpr {};$/;"	s	namespace:Eigen
AssignFeaturesToGrid	./src/Frame.cc	/^void Frame::AssignFeaturesToGrid()$/;"	f	class:ORB_SLAM2::Frame
AutoAlign	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  AutoAlign = 0,$/;"	e	enum:Eigen::__anon75
Ax_lBx	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  Ax_lBx              = 0x100,$/;"	e	enum:Eigen::DecompositionOptions
BAx_lx	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  BAx_lx              = 0x400,$/;"	e	enum:Eigen::DecompositionOptions
BG_BLACK	./Thirdparty/g2o/g2o/stuff/color_macros.h	35;"	d
BG_BLUE	./Thirdparty/g2o/g2o/stuff/color_macros.h	41;"	d
BG_GREEN	./Thirdparty/g2o/g2o/stuff/color_macros.h	37;"	d
BG_LIGHTBLUE	./Thirdparty/g2o/g2o/stuff/color_macros.h	39;"	d
BG_MAGENTA	./Thirdparty/g2o/g2o/stuff/color_macros.h	40;"	d
BG_RED	./Thirdparty/g2o/g2o/stuff/color_macros.h	36;"	d
BG_WHITE	./Thirdparty/g2o/g2o/stuff/color_macros.h	42;"	d
BG_YELLOW	./Thirdparty/g2o/g2o/stuff/color_macros.h	38;"	d
BHATTACHARYYA	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^  BHATTACHARYYA,$/;"	e	enum:DBoW2::ScoringType
BINARY	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^  BINARY$/;"	e	enum:DBoW2::WeightingType
BL	./include/ORBextractor.h	/^    cv::Point2i UL, UR, BL, BR;$/;"	m	class:ORB_SLAM2::ExtractorNode
BLASFUNC	./Thirdparty/sparseicp/include/Eigen/src/misc/blas.h	9;"	d
BLASLONG	./Thirdparty/sparseicp/include/Eigen/src/misc/blas.h	/^typedef long BLASLONG;$/;"	t
BLASLONG	./Thirdparty/sparseicp/include/Eigen/src/misc/blas.h	/^typedef long long BLASLONG;$/;"	t
BLASULONG	./Thirdparty/sparseicp/include/Eigen/src/misc/blas.h	/^typedef unsigned long BLASULONG;$/;"	t
BLASULONG	./Thirdparty/sparseicp/include/Eigen/src/misc/blas.h	/^typedef unsigned long long BLASULONG;$/;"	t
BLAS_H	./Thirdparty/sparseicp/include/Eigen/src/misc/blas.h	2;"	d
BLOCKSIZE	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	const size_t     BLOCKSIZE=8192;$/;"	m	namespace:nanoflann
BOTH_MATRICES_MUST_HAVE_THE_SAME_STORAGE_ORDER	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        BOTH_MATRICES_MUST_HAVE_THE_SAME_STORAGE_ORDER,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
BR	./include/ORBextractor.h	/^    cv::Point2i UL, UR, BL, BR;$/;"	m	class:ORB_SLAM2::ExtractorNode
BackupStackType	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    BackupStackType;$/;"	t	class:g2o::BaseVertex
BandMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline BandMatrix(Index rows=Rows, Index cols=Cols, Index supers=Supers, Index subs=Subs)$/;"	f	class:Eigen::internal::BandMatrix
BandMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^class BandMatrix : public BandMatrixBase<BandMatrix<_Scalar,Rows,Cols,Supers,Subs,Options> >$/;"	c	namespace:Eigen::internal
BandMatrixBase	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^class BandMatrixBase : public EigenBase<Derived>$/;"	c	namespace:Eigen::internal
BandMatrixWrapper	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline BandMatrixWrapper(const CoefficientsType& coeffs, Index rows=_Rows, Index cols=_Cols, Index supers=_Supers, Index subs=_Subs)$/;"	f	class:Eigen::internal::BandMatrixWrapper
BandMatrixWrapper	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^class BandMatrixWrapper : public BandMatrixBase<BandMatrixWrapper<_CoefficientsType,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	c	namespace:Eigen::internal
Base	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodDecomposition> Base;$/;"	t	class:Eigen::CholmodDecomposition
Base	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLDLT> Base;$/;"	t	class:Eigen::CholmodSimplicialLDLT
Base	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLLT> Base;$/;"	t	class:Eigen::CholmodSimplicialLLT
Base	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodSupernodalLLT> Base;$/;"	t	class:Eigen::CholmodSupernodalLLT
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    typedef PlainObjectBase<Array> Base;$/;"	t	class:Eigen::Array
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    typedef DenseBase<Derived> Base;$/;"	t	class:Eigen::ArrayBase
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    typedef ArrayBase<ArrayWrapper> Base;$/;"	t	class:Eigen::ArrayWrapper
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    typedef MatrixBase<MatrixWrapper<ExpressionType> > Base;$/;"	t	class:Eigen::MatrixWrapper
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    typedef BandMatrix<Scalar,Size,Size,Options&SelfAdjoint?0:1,1,Options|RowMajor> Base;$/;"	t	class:Eigen::internal::TridiagonalMatrix
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::internal::BandMatrixBase
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    typedef Impl Base;$/;"	t	class:Eigen::Block
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    typedef Impl Base;$/;"	t	class:Eigen::BlockImpl
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    typedef MapBase<BlockType> Base;$/;"	t	class:Eigen::internal::BlockImpl_dense
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    typedef typename internal::dense_xpr_base<BlockType>::type Base;$/;"	t	class:Eigen::internal::BlockImpl_dense
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^                                         typename internal::traits<Rhs>::StorageKind>::ret>::Base Base;$/;"	t	class:Eigen::CwiseBinaryOp
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::dense_xpr_base<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::type Base;$/;"	t	class:Eigen::CwiseBinaryOpImpl
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^    typedef typename internal::dense_xpr_base<CwiseNullaryOp>::type Base;$/;"	t	class:Eigen::CwiseNullaryOp
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^    typedef typename CwiseUnaryOpImpl<UnaryOp, XprType,typename internal::traits<XprType>::StorageKind>::Base Base;$/;"	t	class:Eigen::CwiseUnaryOp
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^    typedef typename internal::dense_xpr_base<CwiseUnaryOp<UnaryOp, XprType> >::type Base;$/;"	t	class:Eigen::CwiseUnaryOpImpl
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    typedef typename CwiseUnaryViewImpl<ViewOp, MatrixType,typename internal::traits<MatrixType>::StorageKind>::Base Base;$/;"	t	class:Eigen::CwiseUnaryView
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    typedef typename internal::dense_xpr_base< CwiseUnaryView<ViewOp, MatrixType> >::type Base;$/;"	t	class:Eigen::CwiseUnaryViewImpl
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef DenseCoeffsBase<Derived> Base;$/;"	t	class:Eigen::DenseBase
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef DenseCoeffsBase<Derived, ReadOnlyAccessors> Base;$/;"	t	class:Eigen::DenseCoeffsBase
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef DenseCoeffsBase<Derived, WriteAccessors> Base;$/;"	t	class:Eigen::DenseCoeffsBase
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::DenseCoeffsBase
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    typedef typename internal::dense_xpr_base<Diagonal>::type Base;$/;"	t	class:Eigen::Diagonal
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    typedef MatrixBase<DiagonalProduct> Base;$/;"	t	class:Eigen::DiagonalProduct
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    typedef MatrixBase<Flagged> Base;$/;"	t	class:Eigen::Flagged
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^    typedef typename internal::dense_xpr_base<ForceAlignedAccess>::type Base;$/;"	t	class:Eigen::ForceAlignedAccess
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    typedef Matrix<typename internal::scalar_product_traits<typename Lhs::Scalar, typename Rhs::Scalar>::ReturnType,1,1> Base;$/;"	t	class:Eigen::GeneralProduct
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    typedef MapBase<Map> Base;$/;"	t	class:Eigen::Map
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    typedef MapBase<Derived, ReadOnlyAccessors> Base;$/;"	t	class:Eigen::MapBase
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    typedef typename internal::dense_xpr_base<Derived>::type Base;$/;"	t	class:Eigen::MapBase
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    typedef PlainObjectBase<Matrix> Base;$/;"	t	class:Eigen::Matrix
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    typedef DenseBase<Derived> Base;$/;"	t	class:Eigen::MatrixBase
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^    typedef typename internal::dense_xpr_base<NestByValue>::type Base;$/;"	t	class:Eigen::NestByValue
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::PermutationBase
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef PermutationBase<Map> Base;$/;"	t	class:Eigen::Map
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef PermutationBase<PermutationMatrix> Base;$/;"	t	class:Eigen::PermutationMatrix
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef PermutationBase<PermutationWrapper> Base;$/;"	t	class:Eigen::PermutationWrapper
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::dense_xpr_base<Derived>::type Base;$/;"	t	class:Eigen::PlainObjectBase
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^                       typename NestedProduct::_RhsNested> Base;$/;"	t	class:Eigen::ScaledProduct
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typedef MatrixBase<Derived> Base;$/;"	t	class:Eigen::ProductBase
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^    typedef RefBase<Ref> Base;$/;"	t	class:Eigen::Ref
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^  typedef MapBase<Derived> Base;$/;"	t	class:Eigen::RefBase
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    typedef typename internal::dense_xpr_base<Replicate>::type Base;$/;"	t	class:Eigen::Replicate
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^    typedef typename internal::dense_xpr_base<ReturnByValue>::type Base;$/;"	t	class:Eigen::ReturnByValue
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    typedef typename internal::dense_xpr_base<Reverse>::type Base;$/;"	t	class:Eigen::Reverse
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    typedef typename internal::dense_xpr_base<Select>::type Base;$/;"	t	class:Eigen::Select
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    typedef TriangularBase<SelfAdjointView> Base;$/;"	t	class:Eigen::SelfAdjointView
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    typedef typename internal::dense_xpr_base<SelfCwiseBinaryOp>::type Base;$/;"	t	class:Eigen::SelfCwiseBinaryOp
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  typedef ReturnByValue<triangular_solve_retval> Base;$/;"	t	struct:Eigen::internal::triangular_solve_retval
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^    typedef Stride<0, Value> Base;$/;"	t	class:Eigen::InnerStride
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^    typedef Stride<Value, 0> Base;$/;"	t	class:Eigen::OuterStride
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    typedef typename internal::dense_xpr_base<SwapWrapper>::type Base;$/;"	t	class:Eigen::SwapWrapper
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    typedef typename TransposeImpl<MatrixType,typename internal::traits<MatrixType>::StorageKind>::Base Base;$/;"	t	class:Eigen::Transpose
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    typedef typename internal::TransposeImpl_base<MatrixType>::type Base;$/;"	t	class:Eigen::TransposeImpl
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsBase<Map> Base;$/;"	t	class:Eigen::Map
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsBase<Transpositions> Base;$/;"	t	class:Eigen::Transpositions
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsBase<TranspositionsWrapper> Base;$/;"	t	class:Eigen::TranspositionsWrapper
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularBase<TriangularView> Base;$/;"	t	class:Eigen::TriangularView
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorBlock.h	/^                     internal::traits<VectorType>::Flags & RowMajorBit ? Size : 1> Base;$/;"	t	class:Eigen::VectorBlock
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::dense_xpr_base<PartialReduxExpr>::type Base;$/;"	t	class:Eigen::PartialReduxExpr
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    typedef MatrixBase<CoeffBasedProduct> Base;$/;"	t	class:Eigen::CoeffBasedProduct
Base	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  typedef blas_traits<NestedXpr> Base;$/;"	t	struct:Eigen::internal::blas_traits
Base	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  typedef RotationBase<AngleAxis<_Scalar>,3> Base;$/;"	t	class:Eigen::AngleAxis
Base	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  typedef RotationBase<Quaternion<_Scalar>,3> Base;$/;"	t	class:Eigen::Quaternion
Base	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  typedef RotationBase<Rotation2D<_Scalar>,2> Base;$/;"	t	class:Eigen::Rotation2D
Base	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^    typedef FullPivLU<MatrixType> Base;$/;"	t	class:Eigen::LU
Base	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^    typedef MatrixBase<Minor> Base;$/;"	t	class:Eigen::Minor
Base	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/QR.h	/^    typedef HouseholderQR<MatrixType> Base;$/;"	t	class:Eigen::QR
Base	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    typedef SelfAdjointEigenSolver<_MatrixType> Base;$/;"	t	class:Eigen::GeneralizedSelfAdjointEigenSolver
Base	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  typedef RotationBase<AngleAxis<_Scalar>,3> Base;$/;"	t	class:Eigen::AngleAxis
Base	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    typedef MatrixBase<Homogeneous> Base;$/;"	t	class:Eigen::Homogeneous
Base	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    typedef QuaternionBase<Map<Quaternion<_Scalar>, _Options> > Base;$/;"	t	class:Eigen::Map
Base	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    typedef QuaternionBase<Map<const Quaternion<_Scalar>, _Options> > Base;$/;"	t	class:Eigen::Map
Base	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  typedef QuaternionBase<Quaternion<_Scalar,_Options> > Base;$/;"	t	class:Eigen::Quaternion
Base	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  typedef RotationBase<Derived, 3> Base;$/;"	t	class:Eigen::QuaternionBase
Base	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  typedef RotationBase<Rotation2D<_Scalar>,2> Base;$/;"	t	class:Eigen::Rotation2D
Base	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef IterativeSolverBase<BiCGSTAB> Base;$/;"	t	class:Eigen::BiCGSTAB
Base	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef IterativeSolverBase<ConjugateGradient> Base;$/;"	t	class:Eigen::ConjugateGradient
Base	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef PastixBase<PastixLDLT<MatrixType, _UpLo> > Base; $/;"	t	class:Eigen::PastixLDLT
Base	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef PastixBase<PastixLLT<MatrixType, _UpLo> > Base;$/;"	t	class:Eigen::PastixLLT
Base	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef PastixBase<PastixLU<MatrixType> > Base;$/;"	t	class:Eigen::PastixLU
Base	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef PardisoImpl< PardisoLDLT<MatrixType,Options> > Base;$/;"	t	class:Eigen::PardisoLDLT
Base	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef PardisoImpl< PardisoLLT<MatrixType,_UpLo> > Base;$/;"	t	class:Eigen::PardisoLLT
Base	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef PardisoImpl< PardisoLU<MatrixType> > Base;$/;"	t	class:Eigen::PardisoLU
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SimplicialCholeskyBase<SimplicialCholesky> Base;$/;"	t	class:Eigen::SimplicialCholesky
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SimplicialCholeskyBase<SimplicialLDLT> Base;$/;"	t	class:Eigen::SimplicialLDLT
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SimplicialCholeskyBase<SimplicialLLT> Base;$/;"	t	class:Eigen::SimplicialLLT
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      typedef typename _MatrixTypeNested::InnerIterator Base;$/;"	t	class:Eigen::BlockImpl::InnerIterator
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      typedef typename _MatrixTypeNested::ReverseInnerIterator Base;$/;"	t	class:Eigen::BlockImpl::ReverseInnerIterator
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^      BinaryOp,Lhs,Rhs, InnerIterator> Base;$/;"	t	class:Eigen::CwiseBinaryOpImpl::InnerIterator
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename CwiseUnaryOpImpl<UnaryOp,MatrixType,Sparse>::MatrixTypeIterator Base;$/;"	t	class:Eigen::CwiseUnaryOpImpl::InnerIterator
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename CwiseUnaryOpImpl<UnaryOp,MatrixType,Sparse>::MatrixTypeReverseIterator Base;$/;"	t	class:Eigen::CwiseUnaryOpImpl::ReverseInnerIterator
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename CwiseUnaryViewImpl<ViewOp,MatrixType,Sparse>::MatrixTypeIterator Base;$/;"	t	class:Eigen::CwiseUnaryViewImpl::InnerIterator
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename CwiseUnaryViewImpl<ViewOp,MatrixType,Sparse>::MatrixTypeReverseIterator Base;$/;"	t	class:Eigen::CwiseUnaryViewImpl::ReverseInnerIterator
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    typedef SparseMatrixBase<SparseDenseOuterProduct> Base;$/;"	t	class:Eigen::SparseDenseOuterProduct
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    typedef typename _LhsNested::InnerIterator Base;$/;"	t	class:Eigen::SparseDenseOuterProduct::InnerIterator
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^      const Transpose<const typename Rhs::DiagonalVectorType> >::InnerIterator Base;$/;"	t	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^      const typename Lhs::DiagonalVectorType>::InnerIterator Base;$/;"	t	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typedef typename CwiseUnaryOp<scalar_multiple_op<typename Lhs::Scalar>,const Rhs>::InnerIterator Base;$/;"	t	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typedef typename CwiseUnaryOp<scalar_multiple_op<typename Rhs::Scalar>,const Lhs>::InnerIterator Base;$/;"	t	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::SparseMatrixBase
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    typedef SparseMatrixBase<SparseSparseProduct> Base;$/;"	t	class:Eigen::SparseSparseProduct
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename _MatrixTypeNested::InnerIterator Base;$/;"	t	class:Eigen::TransposeImpl::InnerIterator
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename _MatrixTypeNested::ReverseInnerIterator Base;$/;"	t	class:Eigen::TransposeImpl::ReverseInnerIterator
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename MatrixTypeNestedCleaned::InnerIterator Base;$/;"	t	class:Eigen::SparseTriangularView::InnerIterator
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename MatrixTypeNestedCleaned::ReverseInnerIterator Base;$/;"	t	class:Eigen::SparseTriangularView::ReverseInnerIterator
Base	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    typedef internal::SparseLUImpl<Scalar, Index> Base;$/;"	t	class:Eigen::SparseLU
Base	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SuperLUBase<_MatrixType,SuperILU> Base;$/;"	t	class:Eigen::SuperILU
Base	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SuperLUBase<_MatrixType,SuperLU> Base;$/;"	t	class:Eigen::SuperLU
Base	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^  typedef ReturnByValue<image_retval_base> Base;$/;"	t	struct:Eigen::internal::image_retval_base
Base	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^  typedef ReturnByValue<kernel_retval_base> Base;$/;"	t	struct:Eigen::internal::kernel_retval_base
Base	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^  typedef ReturnByValue<solve_retval_base> Base;$/;"	t	struct:Eigen::internal::solve_retval_base
Base	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^  typedef ReturnByValue<sparse_solve_retval_base> Base;$/;"	t	struct:Eigen::internal::sparse_solve_retval_base
BaseBinaryEdge	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      BaseBinaryEdge() : BaseEdge<D,E>(),$/;"	f	class:g2o::BaseBinaryEdge
BaseBinaryEdge	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^  class BaseBinaryEdge : public BaseEdge<D, E>$/;"	c	namespace:g2o
BaseClass	./Thirdparty/g2o/g2o/core/parameter_container.h	/^      typedef std::map<int, Parameter*> BaseClass;$/;"	t	class:g2o::ParameterContainer
BaseClass	./Thirdparty/g2o/g2o/stuff/property.h	/^      typedef std::map<std::string, BaseProperty*>        BaseClass;$/;"	t	class:g2o::PropertyMap
BaseEdge	./Thirdparty/g2o/g2o/core/base_edge.h	/^      BaseEdge() : OptimizableGraph::Edge()$/;"	f	class:g2o::BaseEdge
BaseEdge	./Thirdparty/g2o/g2o/core/base_edge.h	/^  class BaseEdge : public OptimizableGraph::Edge$/;"	c	namespace:g2o
BaseMultiEdge	./Thirdparty/g2o/g2o/core/base_multi_edge.h	/^      BaseMultiEdge() : BaseEdge<D,E>()$/;"	f	class:g2o::BaseMultiEdge
BaseMultiEdge	./Thirdparty/g2o/g2o/core/base_multi_edge.h	/^  class BaseMultiEdge : public BaseEdge<D,E>$/;"	c	namespace:g2o
BaseProperty	./Thirdparty/g2o/g2o/stuff/property.cpp	/^  BaseProperty::BaseProperty(const std::string name_) :_name(name_){$/;"	f	class:g2o::BaseProperty
BaseProperty	./Thirdparty/g2o/g2o/stuff/property.h	/^  class  BaseProperty {$/;"	c	namespace:g2o
BaseUnaryEdge	./Thirdparty/g2o/g2o/core/base_unary_edge.h	/^      BaseUnaryEdge() : BaseEdge<D,E>(),$/;"	f	class:g2o::BaseUnaryEdge
BaseUnaryEdge	./Thirdparty/g2o/g2o/core/base_unary_edge.h	/^  class BaseUnaryEdge : public BaseEdge<D,E>$/;"	c	namespace:g2o
BaseVertex	./Thirdparty/g2o/g2o/core/base_vertex.h	/^  class BaseVertex : public OptimizableGraph::Vertex {$/;"	c	namespace:g2o
BaseVertex	./Thirdparty/g2o/g2o/core/base_vertex.hpp	/^BaseVertex<D, T>::BaseVertex() :$/;"	f	class:BaseVertex
BasisReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^                  internal::traits<Derived>::ColsAtCompileTime> BasisReturnType;$/;"	t	class:Eigen::MatrixBase
BatchStatisticsContainer	./Thirdparty/g2o/g2o/core/batch_stats.h	/^  typedef std::vector<G2OBatchStatistics> BatchStatisticsContainer;$/;"	t	namespace:g2o
BiCGSTAB	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  BiCGSTAB() : Base() {}$/;"	f	class:Eigen::BiCGSTAB
BiCGSTAB	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  BiCGSTAB(const MatrixType& A) : Base(A) {}$/;"	f	class:Eigen::BiCGSTAB
BiCGSTAB	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^class BiCGSTAB : public IterativeSolverBase<BiCGSTAB<_MatrixType,_Preconditioner> >$/;"	c	namespace:Eigen
BidiagonalType	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef BandMatrix<RealScalar, ColsAtCompileTime, ColsAtCompileTime, 1, 0> BidiagonalType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
BinaryFunc	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef scalar_product_op<T> BinaryFunc;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
Block	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline Block(XprType& xpr, Index a_startRow, Index a_startCol)$/;"	f	class:Eigen::Block
Block	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline Block(XprType& xpr, Index i) : Impl(xpr,i)$/;"	f	class:Eigen::Block
Block	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline Block(XprType& xpr,$/;"	f	class:Eigen::Block
Block	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel> class Block$/;"	c	namespace:Eigen
BlockImpl	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline BlockImpl(XprType& xpr, Index a_startRow, Index a_startCol) : Impl(xpr, a_startRow, a_startCol) {}$/;"	f	class:Eigen::BlockImpl
BlockImpl	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline BlockImpl(XprType& xpr, Index a_startRow, Index a_startCol, Index blockRows, Index blockCols)$/;"	f	class:Eigen::BlockImpl
BlockImpl	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline BlockImpl(XprType& xpr, Index i) : Impl(xpr,i) {}$/;"	f	class:Eigen::BlockImpl
BlockImpl	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^class BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Dense>$/;"	c	namespace:Eigen
BlockImpl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockImpl(const SparseMatrixType& xpr, int i)$/;"	f	class:Eigen::BlockImpl
BlockImpl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockImpl(const SparseMatrixType& xpr, int startRow, int startCol, int blockRows, int blockCols)$/;"	f	class:Eigen::BlockImpl
BlockImpl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockImpl(const XprType& xpr, int i)$/;"	f	class:Eigen::BlockImpl
BlockImpl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockImpl(const XprType& xpr, int startRow, int startCol, int blockRows, int blockCols)$/;"	f	class:Eigen::BlockImpl
BlockImpl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^class BlockImpl<SparseMatrix<_Scalar, _Options, _Index>,BlockRows,BlockCols,true,Sparse>$/;"	c	namespace:Eigen
BlockImpl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^class BlockImpl<XprType,BlockRows,BlockCols,InnerPanel,Sparse>$/;"	c	namespace:Eigen
BlockImpl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^class BlockImpl<XprType,BlockRows,BlockCols,true,Sparse>$/;"	c	namespace:Eigen
BlockImpl_dense	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline BlockImpl_dense(XprType& xpr, Index a_startRow, Index a_startCol)$/;"	f	class:Eigen::internal::BlockImpl_dense
BlockImpl_dense	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline BlockImpl_dense(XprType& xpr, Index i)$/;"	f	class:Eigen::internal::BlockImpl_dense
BlockImpl_dense	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline BlockImpl_dense(XprType& xpr, Index startRow, Index startCol)$/;"	f	class:Eigen::internal::BlockImpl_dense
BlockImpl_dense	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline BlockImpl_dense(XprType& xpr, const Scalar* data, Index blockRows, Index blockCols)$/;"	f	class:Eigen::internal::BlockImpl_dense
BlockImpl_dense	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline BlockImpl_dense(XprType& xpr,$/;"	f	class:Eigen::internal::BlockImpl_dense
BlockImpl_dense	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^class BlockImpl_dense<XprType,BlockRows,BlockCols, InnerPanel,true>$/;"	c	namespace:Eigen::internal
BlockImpl_dense	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel, bool HasDirectAccess> class BlockImpl_dense$/;"	c	namespace:Eigen::internal
BlockIndexVector	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Ref<Matrix<Index,Dynamic,1> > BlockIndexVector;$/;"	t	class:Eigen::internal::SparseLUImpl
BlockScalarVector	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Ref<Matrix<Scalar,Dynamic,1> > BlockScalarVector;$/;"	t	class:Eigen::internal::SparseLUImpl
BlockSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^    BlockSize  = EIGEN_PLAIN_ENUM_MAX(mr,nr)$/;"	e	enum:Eigen::internal::tribb_kernel::__anon50
BlockSolver	./Thirdparty/g2o/g2o/core/block_solver.h	/^  class BlockSolver: public BlockSolverBase {$/;"	c	namespace:g2o
BlockSolver	./Thirdparty/g2o/g2o/core/block_solver.hpp	/^BlockSolver<Traits>::BlockSolver(LinearSolverType* linearSolver) :$/;"	f	class:g2o::BlockSolver
BlockSolverBase	./Thirdparty/g2o/g2o/core/block_solver.h	/^  class BlockSolverBase : public Solver$/;"	c	namespace:g2o
BlockSolverTraits	./Thirdparty/g2o/g2o/core/block_solver.h	/^  struct BlockSolverTraits$/;"	s	namespace:g2o
BlockSolverTraits	./Thirdparty/g2o/g2o/core/block_solver.h	/^  struct BlockSolverTraits<Eigen::Dynamic, Eigen::Dynamic>$/;"	s	namespace:g2o
BlockSolverX	./Thirdparty/g2o/g2o/core/block_solver.h	/^  typedef BlockSolver< BlockSolverTraits<Eigen::Dynamic, Eigen::Dynamic> > BlockSolverX;$/;"	t	namespace:g2o
BlockSolver_3_2	./Thirdparty/g2o/g2o/core/block_solver.h	/^  typedef BlockSolver< BlockSolverTraits<3, 2> > BlockSolver_3_2;$/;"	t	namespace:g2o
BlockSolver_6_3	./Thirdparty/g2o/g2o/core/block_solver.h	/^  typedef BlockSolver< BlockSolverTraits<6, 3> > BlockSolver_6_3;  $/;"	t	namespace:g2o
BlockSolver_7_3	./Thirdparty/g2o/g2o/core/block_solver.h	/^  typedef BlockSolver< BlockSolverTraits<7, 3> > BlockSolver_7_3;  $/;"	t	namespace:g2o
BlockType	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    typedef Block<XprType, BlockRows, BlockCols, InnerPanel> BlockType;$/;"	t	class:Eigen::internal::BlockImpl_dense
BlockType	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^  typedef Block<MatrixType,Dynamic,Dynamic> BlockType;$/;"	t	struct:Eigen::internal::partial_lu_impl
BlockType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    typedef Block<SparseMatrixType, BlockRows, BlockCols, true> BlockType;$/;"	t	class:Eigen::BlockImpl
BlockType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    typedef Block<XprType, BlockRows, BlockCols, true> BlockType;$/;"	t	class:Eigen::BlockImpl
BlockType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^  typedef Block<XprType, BlockRows, BlockCols, InnerPanel> BlockType;$/;"	t	class:Eigen::BlockImpl
BoolProperty	./Thirdparty/g2o/g2o/stuff/property.h	/^  typedef Property<bool> BoolProperty;$/;"	t	namespace:g2o
BothDirections	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  BothDirections $/;"	e	enum:Eigen::DirectionType
BottomLeft	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
BottomLeft	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeft=0, BottomRight=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomLeftCeil	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftCeil=4, BottomRightCeil=5,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomLeftFloor	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftFloor=0, BottomRightFloor=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomRight	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
BottomRight	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeft=0, BottomRight=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomRightCeil	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftCeil=4, BottomRightCeil=5,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomRightFloor	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftFloor=0, BottomRightFloor=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
BoundingBox	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		typedef std::vector<Interval> BoundingBox;$/;"	t	class:nanoflann::KDTreeSingleIndexAdaptor
BowVector	./Thirdparty/DBoW2/DBoW2/BowVector.cpp	/^BowVector::BowVector(void)$/;"	f	class:DBoW2::BowVector
BowVector	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^class BowVector: $/;"	c	namespace:DBoW2
Branch	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		typedef BranchSt* Branch;$/;"	t	class:nanoflann::KDTreeSingleIndexAdaptor
BranchSt	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		typedef BranchStruct<NodePtr, DistanceType> BranchSt;$/;"	t	class:nanoflann::KDTreeSingleIndexAdaptor
BranchStruct	./Thirdparty/sparseicp/include/nanoflann.hpp	/^			BranchStruct() {}$/;"	f	struct:nanoflann::KDTreeSingleIndexAdaptor::BranchStruct
BranchStruct	./Thirdparty/sparseicp/include/nanoflann.hpp	/^			BranchStruct(const T& aNode, DistanceType dist) : node(aNode), mindist(dist) {}$/;"	f	struct:nanoflann::KDTreeSingleIndexAdaptor::BranchStruct
BranchStruct	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		struct BranchStruct$/;"	s	class:nanoflann::KDTreeSingleIndexAdaptor
BuildType	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^      typedef Block<CoefficientsType,1, DiagonalSize> BuildType;$/;"	t	struct:Eigen::internal::BandMatrixBase::DiagonalIntReturnType
BuiltIn	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  BuiltIn$/;"	e	enum:Eigen::__anon74
BundleAdjustment	./src/Optimizer.cc	/^void Optimizer::BundleAdjustment(const vector<KeyFrame *> &vpKFs, const vector<MapPoint *> &vpMP,$/;"	f	class:ORB_SLAM2::Optimizer
CHI_SQUARE	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^  CHI_SQUARE,$/;"	e	enum:DBoW2::ScoringType
CJMADD	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1101;"	d
CL_BLACK	./Thirdparty/g2o/g2o/stuff/color_macros.h	45;"	d
CL_BLUE	./Thirdparty/g2o/g2o/stuff/color_macros.h	51;"	d
CL_GREEN	./Thirdparty/g2o/g2o/stuff/color_macros.h	47;"	d
CL_LIGHTBLUE	./Thirdparty/g2o/g2o/stuff/color_macros.h	49;"	d
CL_MAGENTA	./Thirdparty/g2o/g2o/stuff/color_macros.h	50;"	d
CL_RED	./Thirdparty/g2o/g2o/stuff/color_macros.h	46;"	d
CL_WHITE	./Thirdparty/g2o/g2o/stuff/color_macros.h	52;"	d
CL_YELLOW	./Thirdparty/g2o/g2o/stuff/color_macros.h	48;"	d
CMAKE_BINARY_DIR	./Thirdparty/DBoW2/build/Makefile	/^CMAKE_BINARY_DIR = \/home\/wu6shen\/Computer-Vision\/Project\/ORB_SLAM2\/Thirdparty\/DBoW2\/build$/;"	m
CMAKE_BINARY_DIR	./Thirdparty/g2o/build/Makefile	/^CMAKE_BINARY_DIR = \/home\/wu6shen\/Computer-Vision\/Project\/ORB_SLAM2\/Thirdparty\/g2o\/build$/;"	m
CMAKE_BINARY_DIR	./build/Makefile	/^CMAKE_BINARY_DIR = \/home\/wu6shen\/Computer-Vision\/Project\/Relocal-ORB\/build$/;"	m
CMAKE_BINARY_DIR	./cmake-build-debug/Makefile	/^CMAKE_BINARY_DIR = \/home\/wu6shen\/Computer-Vision\/Project\/Relocal-ORB\/cmake-build-debug$/;"	m
CMAKE_COMMAND	./Thirdparty/DBoW2/build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	./Thirdparty/g2o/build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	./build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	./cmake-build-debug/Makefile	/^CMAKE_COMMAND = \/home\/wu6shen\/Downloads\/clion-2018.1.4\/bin\/cmake\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	./Thirdparty/DBoW2/build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wu6shen\/Computer-Vision\/Project\/ORB_SLAM2\/Thirdparty\/DBoW2$/;"	m
CMAKE_SOURCE_DIR	./Thirdparty/g2o/build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wu6shen\/Computer-Vision\/Project\/ORB_SLAM2\/Thirdparty\/g2o$/;"	m
CMAKE_SOURCE_DIR	./build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wu6shen\/Computer-Vision\/Project\/Relocal-ORB$/;"	m
CMAKE_SOURCE_DIR	./cmake-build-debug/Makefile	/^CMAKE_SOURCE_DIR = \/home\/wu6shen\/Computer-Vision\/Project\/Relocal-ORB$/;"	m
COEFFICIENT_WRITE_ACCESS_TO_SELFADJOINT_NOT_SUPPORTED	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        COEFFICIENT_WRITE_ACCESS_TO_SELFADJOINT_NOT_SUPPORTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
COLAMDOrdering	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Ordering.h	/^class COLAMDOrdering$/;"	c	namespace:Eigen
COLAMD_ASSERT	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	246;"	d
COLAMD_DEBUG0	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	240;"	d
COLAMD_DEBUG1	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	241;"	d
COLAMD_DEBUG2	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	242;"	d
COLAMD_DEBUG3	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	243;"	d
COLAMD_DEBUG4	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	244;"	d
COLAMD_DEFRAG_COUNT	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	76;"	d
COLAMD_DENSE_COL	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	73;"	d
COLAMD_DENSE_ROW	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	70;"	d
COLAMD_EMPTY	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	112;"	d
COLAMD_ERROR_A_not_present	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	89;"	d
COLAMD_ERROR_A_too_small	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	95;"	d
COLAMD_ERROR_col_length_negative	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	96;"	d
COLAMD_ERROR_internal_error	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	99;"	d
COLAMD_ERROR_ncol_negative	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	92;"	d
COLAMD_ERROR_nnz_negative	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	93;"	d
COLAMD_ERROR_nrow_negative	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	91;"	d
COLAMD_ERROR_out_of_memory	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	98;"	d
COLAMD_ERROR_p0_nonzero	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	94;"	d
COLAMD_ERROR_p_not_present	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	90;"	d
COLAMD_ERROR_row_index_out_of_bounds	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	97;"	d
COLAMD_INFO1	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	82;"	d
COLAMD_INFO2	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	83;"	d
COLAMD_INFO3	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	84;"	d
COLAMD_KNOBS	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	64;"	d
COLAMD_MAX	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	105;"	d
COLAMD_MIN	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	106;"	d
COLAMD_NDEBUG	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	57;"	d
COLAMD_OK	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	87;"	d
COLAMD_OK_BUT_JUMBLED	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	88;"	d
COLAMD_STATS	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	67;"	d
COLAMD_STATUS	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	79;"	d
COL_IS_ALIVE	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	127;"	d
COL_IS_DEAD	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	126;"	d
COL_IS_DEAD_PRINCIPAL	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	128;"	d
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	124;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	144;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	14;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	150;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	153;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	192;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	210;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	219;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	237;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	262;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	265;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	45;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	57;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	75;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	221;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	224;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	239;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	257;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	260;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	263;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	124;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	144;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	14;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	150;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	153;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	192;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	210;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	219;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	237;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	262;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	265;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	45;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	57;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	75;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	221;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	224;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	239;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	257;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	260;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	263;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	124;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	144;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	14;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	150;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	153;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	192;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	210;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	219;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	237;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	262;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	265;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	45;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	57;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	75;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	221;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	224;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	239;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	257;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	260;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	263;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	115;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	142;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	149;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	176;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	218;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	236;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	264;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	285;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	42;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	198;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	234;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	249;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	267;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	270;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	273;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	124;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	144;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	14;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	150;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	153;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	192;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	210;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	219;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	237;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	262;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	265;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	45;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	57;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	75;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	221;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	224;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	239;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	257;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	260;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	263;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_VERSION_INTERNAL	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	232;"	d	file:
COMPILER_VERSION_INTERNAL	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	230;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	183;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	213;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	225;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	247;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	252;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	68;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	78;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	91;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	185;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	196;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	215;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	242;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	183;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	213;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	225;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	247;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	252;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	68;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	78;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	91;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	185;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	196;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	215;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	242;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	183;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	213;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	225;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	247;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	252;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	68;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	78;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	91;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	185;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	196;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	215;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	242;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	124;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	130;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	144;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	180;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	191;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	221;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	229;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	258;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	267;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	272;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	188;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	200;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	219;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	237;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	242;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	252;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	257;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	183;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	213;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	225;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	247;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	252;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	68;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	78;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	91;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	185;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	196;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	215;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	242;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	106;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	120;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	134;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	195;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	20;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	226;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	240;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	248;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	39;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	47;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	54;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	60;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	69;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	79;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	92;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	197;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	233;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	248;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	106;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	120;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	134;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	195;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	20;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	226;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	240;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	248;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	39;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	47;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	54;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	60;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	69;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	79;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	92;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	197;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	233;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	248;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	106;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	120;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	134;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	195;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	20;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	226;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	240;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	248;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	39;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	47;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	54;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	60;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	69;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	79;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	92;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	197;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	233;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	248;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	145;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	166;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	181;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	203;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	240;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	259;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	273;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	191;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	258;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	106;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	120;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	134;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	195;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	20;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	226;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	240;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	248;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	39;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	47;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	54;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	60;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	69;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	79;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	92;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	197;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	233;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	248;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	100;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	114;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	121;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	159;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	174;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	188;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	199;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	215;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	22;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	232;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	241;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	249;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	41;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	48;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	93;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	204;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	234;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	249;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	100;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	114;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	121;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	159;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	174;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	188;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	199;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	215;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	22;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	232;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	241;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	249;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	41;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	48;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	93;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	204;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	234;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	249;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	100;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	114;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	121;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	159;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	174;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	188;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	199;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	215;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	22;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	232;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	241;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	249;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	41;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	48;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	93;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	204;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	234;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	249;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	167;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	196;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	207;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	210;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	223;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	241;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	246;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	255;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	269;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	274;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	29;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	221;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	239;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	254;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	259;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	100;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	114;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	121;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	159;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	174;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	188;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	199;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	215;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	22;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	232;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	241;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	249;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	41;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	48;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	93;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	204;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	234;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	249;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_TWEAK	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_TWEAK	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	206;"	d	file:
COMPILER_VERSION_TWEAK	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_VERSION_TWEAK	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_TWEAK	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_VERSION_TWEAK	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_TWEAK	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_TWEAK	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	206;"	d	file:
COMPILER_VERSION_TWEAK	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_VERSION_TWEAK	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_TWEAK	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_VERSION_TWEAK	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_TWEAK	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_TWEAK	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	206;"	d	file:
COMPILER_VERSION_TWEAK	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_VERSION_TWEAK	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_TWEAK	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_VERSION_TWEAK	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	206;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_VERSION_TWEAK	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
CONVERTER_H	./include/Converter.h	22;"	d
CURRENT_TIME	./Thirdparty/DBoW2/DUtils/Timestamp.h	/^    CURRENT_TIME = 0x1,$/;"	e	enum:DUtils::Timestamp::tOptions
CXX_STD	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	534;"	d	file:
CXX_STD	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	536;"	d	file:
C_DIALECT	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	550;"	d	file:
C_DIALECT	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	552;"	d	file:
C_DIALECT	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	555;"	d	file:
C_DIALECT	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	557;"	d	file:
C_DIALECT	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	559;"	d	file:
Cache	./Thirdparty/g2o/g2o/core/cache.cpp	/^  Cache::Cache(CacheContainer* container_, const ParameterVector& parameters_) :$/;"	f	class:g2o::Cache
Cache	./Thirdparty/g2o/g2o/core/cache.h	/^  class  Cache: public HyperGraph::HyperGraphElement$/;"	c	namespace:g2o
CacheContainer	./Thirdparty/g2o/g2o/core/cache.cpp	/^  CacheContainer::CacheContainer(OptimizableGraph::Vertex* vertex_) {$/;"	f	class:g2o::CacheContainer
CacheContainer	./Thirdparty/g2o/g2o/core/cache.h	/^  class  CacheContainer: public std::map<Cache::CacheKey, Cache*>$/;"	c	namespace:g2o
CacheKey	./Thirdparty/g2o/g2o/core/cache.cpp	/^  Cache::CacheKey::CacheKey() :$/;"	f	class:g2o::Cache::CacheKey
CacheKey	./Thirdparty/g2o/g2o/core/cache.cpp	/^  Cache::CacheKey::CacheKey(const std::string& type_, const ParameterVector& parameters_) :$/;"	f	class:g2o::Cache::CacheKey
CacheKey	./Thirdparty/g2o/g2o/core/cache.h	/^      class  CacheKey$/;"	c	class:g2o::Cache
CanVectorizeInner	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      CanVectorizeInner =    SameType$/;"	e	enum:Eigen::internal::traits::__anon46
CanVectorizeInner	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      CanVectorizeInner = internal::traits<CoeffBasedProduct>::CanVectorizeInner$/;"	e	enum:Eigen::CoeffBasedProduct::__anon47
CanVectorizeLhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      CanVectorizeLhs = (!LhsRowMajor) && (LhsFlags & PacketAccessBit)$/;"	e	enum:Eigen::internal::traits::__anon46
CanVectorizeRhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      CanVectorizeRhs = RhsRowMajor && (RhsFlags & PacketAccessBit)$/;"	e	enum:Eigen::internal::traits::__anon46
ChangeCalibration	./src/Tracking.cc	/^void Tracking::ChangeCalibration(const string &strSettingPath)$/;"	f	class:ORB_SLAM2::Tracking
ChangeParent	./src/KeyFrame.cc	/^void KeyFrame::ChangeParent(KeyFrame *pKF)$/;"	f	class:ORB_SLAM2::KeyFrame
CheckDistEpipolarLine	./src/ORBmatcher.cc	/^bool ORBmatcher::CheckDistEpipolarLine(const cv::KeyPoint &kp1,const cv::KeyPoint &kp2,const cv::Mat &F12,const KeyFrame* pKF2)$/;"	f	class:ORB_SLAM2::ORBmatcher
CheckEnoughNewMapPoints	./src/Registrating.cc	/^	bool Registrating::CheckEnoughNewMapPoints() {$/;"	f	class:ORB_SLAM2::Registrating
CheckFinish	./src/LocalMapping.cc	/^bool LocalMapping::CheckFinish()$/;"	f	class:ORB_SLAM2::LocalMapping
CheckFinish	./src/LoopClosing.cc	/^bool LoopClosing::CheckFinish()$/;"	f	class:ORB_SLAM2::LoopClosing
CheckFinish	./src/Viewer.cc	/^bool Viewer::CheckFinish()$/;"	f	class:ORB_SLAM2::Viewer
CheckFundamental	./src/Initializer.cc	/^float Initializer::CheckFundamental(const cv::Mat &F21, vector<bool> &vbMatchesInliers, float sigma)$/;"	f	class:ORB_SLAM2::Initializer
CheckHomography	./src/Initializer.cc	/^float Initializer::CheckHomography(const cv::Mat &H21, const cv::Mat &H12, vector<bool> &vbMatchesInliers, float sigma)$/;"	f	class:ORB_SLAM2::Initializer
CheckInliers	./src/PnPsolver.cc	/^void PnPsolver::CheckInliers()$/;"	f	class:ORB_SLAM2::PnPsolver
CheckInliers	./src/PoseSolver.cc	/^void PoseSolver::CheckInliers()$/;"	f	class:ORB_SLAM2::PoseSolver
CheckInliers	./src/Sim3Solver.cc	/^void Sim3Solver::CheckInliers()$/;"	f	class:ORB_SLAM2::Sim3Solver
CheckNewKeyFrames	./src/LocalMapping.cc	/^bool LocalMapping::CheckNewKeyFrames()$/;"	f	class:ORB_SLAM2::LocalMapping
CheckNewKeyFrames	./src/LoopClosing.cc	/^bool LoopClosing::CheckNewKeyFrames()$/;"	f	class:ORB_SLAM2::LoopClosing
CheckRT	./src/Initializer.cc	/^int Initializer::CheckRT(const cv::Mat &R, const cv::Mat &t, const vector<cv::KeyPoint> &vKeys1, const vector<cv::KeyPoint> &vKeys2,$/;"	f	class:ORB_SLAM2::Initializer
CheckReplacedInLastFrame	./src/Tracking.cc	/^void Tracking::CheckReplacedInLastFrame()$/;"	f	class:ORB_SLAM2::Tracking
CheckSetCurrentMap	./src/Registrating.cc	/^	bool Registrating::CheckSetCurrentMap() {$/;"	f	class:ORB_SLAM2::Registrating
CholMatrixType	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef MatrixType CholMatrixType;$/;"	t	class:Eigen::CholmodBase
CholMatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,Index> CholMatrixType;$/;"	t	class:Eigen::SimplicialCholesky
CholMatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,Index> CholMatrixType;$/;"	t	class:Eigen::SimplicialCholeskyBase
CholMatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,Index> CholMatrixType;$/;"	t	class:Eigen::SimplicialLDLT
CholMatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,Index> CholMatrixType;$/;"	t	class:Eigen::SimplicialLLT
CholMatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseMatrix<Scalar, ColMajor, Index>                   CholMatrixType;$/;"	t	struct:Eigen::internal::traits
CholMatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseMatrix<Scalar, ColMajor, Index>               CholMatrixType;$/;"	t	struct:Eigen::internal::traits
CholeskyDecomposition	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^        CholeskyDecomposition() : Eigen::SimplicialLDLT<SparseMatrix, Eigen::Upper>() {}$/;"	f	class:g2o::LinearSolverEigen::CholeskyDecomposition
CholeskyDecomposition	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    class CholeskyDecomposition : public Eigen::SimplicialLDLT<SparseMatrix, Eigen::Upper>$/;"	c	class:g2o::LinearSolverEigen
CholmodAuto	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
CholmodBase	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodBase()$/;"	f	class:Eigen::CholmodBase
CholmodBase	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodBase(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
CholmodBase	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodBase : internal::noncopyable$/;"	c	namespace:Eigen
CholmodDecomposition	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodDecomposition() : Base() { init(); }$/;"	f	class:Eigen::CholmodDecomposition
CholmodDecomposition	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodDecomposition(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodDecomposition
CholmodDecomposition	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodDecomposition : public CholmodBase<_MatrixType, _UpLo, CholmodDecomposition<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodLDLt	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
CholmodMode	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^enum CholmodMode {$/;"	g	namespace:Eigen
CholmodSimplicialLDLT	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLDLT() : Base() { init(); }$/;"	f	class:Eigen::CholmodSimplicialLDLT
CholmodSimplicialLDLT	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLDLT(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodSimplicialLDLT
CholmodSimplicialLDLT	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodSimplicialLDLT : public CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLDLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodSimplicialLLT	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLLT() : Base() { init(); }$/;"	f	class:Eigen::CholmodSimplicialLLT
CholmodSimplicialLLT	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLLT(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodSimplicialLLT
CholmodSimplicialLLT	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodSimplicialLLT : public CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodSimplicialLLt	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
CholmodSupernodalLLT	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSupernodalLLT() : Base() { init(); }$/;"	f	class:Eigen::CholmodSupernodalLLT
CholmodSupernodalLLT	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSupernodalLLT(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodSupernodalLLT
CholmodSupernodalLLT	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodSupernodalLLT : public CholmodBase<_MatrixType, _UpLo, CholmodSupernodalLLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodSupernodalLLt	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
CmpPairFirst	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^    struct CmpPairFirst {$/;"	s	namespace:g2o::__anon468
CoeffBasedProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    inline CoeffBasedProduct(const CoeffBasedProduct& other)$/;"	f	class:Eigen::CoeffBasedProduct
CoeffBasedProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    inline CoeffBasedProduct(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::CoeffBasedProduct
CoeffBasedProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^class CoeffBasedProduct$/;"	c	namespace:Eigen
CoeffBasedProductMode	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum { CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon78
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^      CoeffReadCost = internal::traits<Derived>::CoeffReadCost,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon10
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::traits::__anon13
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    CoeffReadCost = internal::traits<_CoefficientsType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon14
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    CoeffReadCost = LhsCoeffReadCost + RhsCoeffReadCost + functor_traits<BinaryOp>::Cost$/;"	e	enum:Eigen::internal::traits::__anon179
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^    CoeffReadCost = functor_traits<NullaryOp>::Cost$/;"	e	enum:Eigen::internal::traits::__anon329
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^    CoeffReadCost = _XprTypeNested::CoeffReadCost + functor_traits<UnaryOp>::Cost$/;"	e	enum:Eigen::internal::traits::__anon69
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    CoeffReadCost = traits<_MatrixTypeNested>::CoeffReadCost + functor_traits<ViewOp>::Cost,$/;"	e	enum:Eigen::internal::traits::__anon139
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^      CoeffReadCost = internal::traits<Derived>::CoeffReadCost,$/;"	e	enum:Eigen::DenseBase::__anon255
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    CoeffReadCost = _MatrixTypeNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon233
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    CoeffReadCost = NumTraits<Scalar>::MulCost + MatrixType::CoeffReadCost + DiagonalType::DiagonalVectorType::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon171
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::traits::__anon15
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^      CoeffReadCost = Traits::CoeffReadCost,$/;"	e	enum:Eigen::PermutationBase::__anon27
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^      CoeffReadCost = Traits::CoeffReadCost,$/;"	e	enum:Eigen::Transpose::__anon29
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    CoeffReadCost = _IndicesType::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon28
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    CoeffReadCost = 0 \/\/ FIXME why is it needed ?$/;"	e	enum:Eigen::internal::traits::__anon65
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    CoeffReadCost = _MatrixTypeNested::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon337
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    CoeffReadCost = _MatrixTypeNested::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon241
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    CoeffReadCost = traits<typename remove_all<ConditionMatrixNested>::type>::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon32
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    CoeffReadCost = MatrixTypeNestedCleaned::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon332
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    CoeffReadCost = MatrixTypeNestedPlain::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon62
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^      CoeffReadCost = internal::traits<Derived>::CoeffReadCost,$/;"	e	enum:Eigen::TriangularBase::__anon229
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    CoeffReadCost = MatrixTypeNestedCleaned::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon230
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    CoeffReadCost = TraversalSize==Dynamic ? Dynamic$/;"	e	enum:Eigen::internal::traits::__anon22
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      CoeffReadCost = InnerSize == Dynamic ? Dynamic$/;"	e	enum:Eigen::internal::traits::__anon46
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^    CoeffReadCost = _MatrixTypeNested::CoeffReadCost \/\/ minor is used typically on tiny matrices,$/;"	e	enum:Eigen::internal::traits::__anon388
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    CoeffReadCost = _MatrixTypeNested::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon429
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    CoeffReadCost = LhsCoeffReadCost + RhsCoeffReadCost + NumTraits<Scalar>::MulCost$/;"	e	enum:Eigen::internal::traits::__anon406
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    CoeffReadCost = Dynamic$/;"	e	enum:Eigen::internal::traits::__anon407
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::traits::__anon410
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    CoeffReadCost = _MatrixTypeNested::CoeffReadCost*10$/;"	e	enum:Eigen::internal::traits::__anon411
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^      CoeffReadCost = internal::traits<Derived>::CoeffReadCost,$/;"	e	enum:Eigen::SparseMatrixBase::__anon419
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    CoeffReadCost = Dynamic$/;"	e	enum:Eigen::internal::traits::__anon421
CoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::traits::__anon396
CoeffReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::ArrayBase
CoeffReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::DenseBase
CoeffReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^                     >::type CoeffReturnType;$/;"	t	class:Eigen::DenseCoeffsBase
CoeffReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::MapBase
CoeffReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::MatrixBase
CoeffReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::conditional<_HasDirectAccess, const Scalar&, Scalar>::type CoeffReturnType;$/;"	t	class:Eigen::SparseMatrixBase
CoeffVectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef Matrix<Scalar, SizeMinusOne, 1, Options & ~RowMajor, MaxSizeMinusOne, 1> CoeffVectorType;$/;"	t	class:Eigen::HessenbergDecomposition
CoeffVectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef Matrix<Scalar, SizeMinusOne, 1, Options & ~RowMajor, MaxSizeMinusOne, 1> CoeffVectorType;$/;"	t	class:Eigen::Tridiagonalization
CoeffVectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename Tridiagonalization<MatrixType>::CoeffVectorType CoeffVectorType;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
Coefficients	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^                        : int(AmbientDimAtCompileTime)+1,1> Coefficients;$/;"	t	class:Eigen::Hyperplane
Coefficients	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  typedef Matrix<Scalar, 4, 1> Coefficients;$/;"	t	class:Eigen::Quaternion
Coefficients	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^                        : Index(AmbientDimAtCompileTime)+1,1,Options> Coefficients;$/;"	t	class:Eigen::Hyperplane
Coefficients	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    typedef Map<Matrix<_Scalar,4,1>, _Options> Coefficients;$/;"	t	struct:Eigen::internal::traits
Coefficients	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    typedef Map<const Matrix<_Scalar,4,1>, _Options> Coefficients;$/;"	t	struct:Eigen::internal::traits
Coefficients	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    typedef typename internal::traits<Map>::Coefficients Coefficients;$/;"	t	class:Eigen::Map
Coefficients	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  typedef Matrix<_Scalar,4,1,_Options> Coefficients;$/;"	t	struct:Eigen::internal::traits
Coefficients	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  typedef typename internal::traits<Derived>::Coefficients Coefficients;$/;"	t	class:Eigen::QuaternionBase
Coefficients	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  typedef typename internal::traits<Quaternion>::Coefficients Coefficients;$/;"	t	class:Eigen::Quaternion
CoefficientsType	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrix>::CoefficientsType CoefficientsType;$/;"	t	class:Eigen::internal::BandMatrix
CoefficientsType	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrixWrapper>::CoefficientsType CoefficientsType;$/;"	t	class:Eigen::internal::BandMatrixWrapper
CoefficientsType	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<Derived>::CoefficientsType CoefficientsType;$/;"	t	class:Eigen::internal::BandMatrixBase
CoefficientsType	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^  typedef Matrix<Scalar,DataRowsAtCompileTime,ColsAtCompileTime,Options&RowMajor?RowMajor:ColMajor> CoefficientsType;$/;"	t	struct:Eigen::internal::traits
CoefficientsType	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^  typedef _CoefficientsType CoefficientsType;$/;"	t	struct:Eigen::internal::traits
CoherentAccessPattern	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^const int CoherentAccessPattern     = 0x1;$/;"	m	namespace:Eigen
ColMajor	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  ColMajor = 0,$/;"	e	enum:Eigen::__anon75
ColPivHouseholderQR	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR()$/;"	f	class:Eigen::ColPivHouseholderQR
ColPivHouseholderQR	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR(Index rows, Index cols)$/;"	f	class:Eigen::ColPivHouseholderQR
ColPivHouseholderQR	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR(const MatrixType& matrix)$/;"	f	class:Eigen::ColPivHouseholderQR
ColPivHouseholderQR	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^template<typename _MatrixType> class ColPivHouseholderQR$/;"	c	namespace:Eigen
ColPivHouseholderQRPreconditioner	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  ColPivHouseholderQRPreconditioner,$/;"	e	enum:Eigen::QRPreconditioners
ColSort	./Thirdparty/g2o/g2o/core/matrix_structure.cpp	/^struct ColSort$/;"	s	namespace:g2o	file:
ColSpMatrix	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef SparseMatrix<Scalar, ColMajor> ColSpMatrix;$/;"	t	class:Eigen::PastixBase
ColSpMatrix	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename Base::ColSpMatrix ColSpMatrix;$/;"	t	class:Eigen::PastixLDLT
ColSpMatrix	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename Base::ColSpMatrix ColSpMatrix;$/;"	t	class:Eigen::PastixLLT
ColSpMatrix	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename Base::ColSpMatrix ColSpMatrix;$/;"	t	class:Eigen::PastixLU
ColType	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename internal::plain_col_type<MatrixType>::type ColType;$/;"	t	class:Eigen::JacobiSVD
ColVector	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^    typedef Matrix<Scalar, MatrixType::RowsAtCompileTime, 1> ColVector;$/;"	t	class:Eigen::SVD
ColVectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^    typedef Matrix<Scalar, MatrixType::RowsAtCompileTime, 1, MatrixType::Options, MatrixType::MaxRowsAtCompileTime, 1> ColVectorType;$/;"	t	class:Eigen::LU
ColVectorType	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename internal::plain_col_type<MatrixType>::type ColVectorType;$/;"	t	class:Eigen::FullPivHouseholderQR
ColVectorType	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, 1> ColVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
ColXpr	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::ColXpr ColXpr;$/;"	t	class:Eigen::MatrixBase
ColXpr	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, 1, !IsRowMajor> ColXpr;$/;"	t
Colamd_Row	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^struct Colamd_Row$/;"	s	namespace:internal
Cols	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    Cols  = _Rhs::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon145
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon427
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::LLT::__anon425
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon10
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    ColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon13
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    ColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon14
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    ColsAtCompileTime = MatrixCols == 0 ? 0 : BlockCols,$/;"	e	enum:Eigen::internal::traits::__anon184
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    ColsAtCompileTime = traits<Ancestor>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon178
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon255
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    ColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon233
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^      ColsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon197
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    ColsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon199
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon171
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::MapBase::__anon202
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    ColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon15
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^      ColsAtCompileTime = Traits::ColsAtCompileTime,$/;"	e	enum:Eigen::PermutationBase::__anon27
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^      ColsAtCompileTime = Traits::ColsAtCompileTime,$/;"	e	enum:Eigen::Transpose::__anon29
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    ColsAtCompileTime = _IndicesType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon28
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    ColsAtCompileTime = traits<Rhs>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon65
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    ColsAtCompileTime = ColFactor==Dynamic || int(MatrixType::ColsAtCompileTime)==Dynamic$/;"	e	enum:Eigen::internal::traits::__anon337
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon241
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    ColsAtCompileTime = ConditionMatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon32
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    ColsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon62
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon229
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    ColsAtCompileTime = Direction==Horizontal ? 1 : MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon21
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      ColsAtCompileTime = _RhsNested::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon46
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^    ColsAtCompileTime = (MatrixType::ColsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon388
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon453
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::ComplexSchur::__anon458
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::EigenSolver::__anon454
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon459
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^        ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::RealQZ::__anon452
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::RealSchur::__anon456
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon455
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    ColsAtCompileTime = Direction==Horizontal ? ColsPlusOne : MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon429
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^      ColsAtCompileTime = internal::traits<HouseholderSequence>::ColsAtCompileTime,$/;"	e	enum:Eigen::HouseholderSequence::__anon4
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    ColsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon3
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::FullPivLU::__anon341
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::PartialPivLU::__anon338
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon7
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon6
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::HouseholderQR::__anon5
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon359
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon356
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon357
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon358
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::UpperBidiagonalization::__anon360
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    ColsAtCompileTime    = Tr ? int(traits<Lhs>::ColsAtCompileTime)     : int(traits<Rhs>::ColsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon406
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    ColsAtCompileTime = _Rhs::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon407
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    ColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon411
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon410
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon419
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    ColsAtCompileTime    = _RhsNested::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon421
ColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    ColsAtCompileTime = IsColVector ? 1 : Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon396
ColsAtCompileTimeMinusOne	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^      ColsAtCompileTimeMinusOne = internal::decrement_size<ColsAtCompileTime>::ret$/;"	e	enum:Eigen::internal::UpperBidiagonalization::__anon360
ColsBlockXpr	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, Dynamic, !IsRowMajor> ColsBlockXpr;$/;"	t
ColsPlusOne	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    ColsPlusOne = (MatrixType::ColsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon429
ColumnVectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ColumnVectorType;$/;"	t	class:Eigen::EigenSolver
ColumnVectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ColumnVectorType;$/;"	t	class:Eigen::GeneralizedEigenSolver
ColumnVectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ColumnVectorType;$/;"	t	class:Eigen::RealQZ
ColumnVectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ColumnVectorType;$/;"	t	class:Eigen::RealSchur
ColwiseReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef VectorwiseOp<Derived, Vertical> ColwiseReturnType;$/;"	t	class:Eigen::DenseBase
CommaInitializer	./Thirdparty/sparseicp/include/Eigen/src/Core/CommaInitializer.h	/^  inline CommaInitializer(XprType& xpr, const DenseBase<OtherDerived>& other)$/;"	f	struct:Eigen::CommaInitializer
CommaInitializer	./Thirdparty/sparseicp/include/Eigen/src/Core/CommaInitializer.h	/^  inline CommaInitializer(XprType& xpr, const Scalar& s)$/;"	f	struct:Eigen::CommaInitializer
CommaInitializer	./Thirdparty/sparseicp/include/Eigen/src/Core/CommaInitializer.h	/^struct CommaInitializer$/;"	s	namespace:Eigen
CompareError	./src/Initializer.cc	/^void Initializer::CompareError(const Frame &last, const Frame &current, vector<pair<int, int> > &matches12, vector<bool> &inliers, cv::Mat &F) {$/;"	f	class:ORB_SLAM2::Initializer
CompleteUnrolling	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  CompleteUnrolling$/;"	e	enum:Eigen::__anon73
ComplexEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      ComplexEigenSolver(const MatrixType& matrix, bool computeEigenvectors = true)$/;"	f	class:Eigen::ComplexEigenSolver
ComplexEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComplexEigenSolver()$/;"	f	class:Eigen::ComplexEigenSolver
ComplexEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComplexEigenSolver(Index size)$/;"	f	class:Eigen::ComplexEigenSolver
ComplexEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^template<typename _MatrixType> class ComplexEigenSolver$/;"	c	namespace:Eigen
ComplexMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> ComplexMatrixType;$/;"	t	class:Eigen::ComplexSchur
ComplexScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/util/ForwardDeclarations.h	/^  typedef std::complex<typename NumTraits<Scalar>::Real> ComplexScalar;$/;"	t	struct:Eigen::internal::stem_function
ComplexScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::ComplexEigenSolver
ComplexScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::ComplexSchur
ComplexScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::EigenSolver
ComplexScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::GeneralizedEigenSolver
ComplexScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef std::complex<typename NumTraits<Scalar>::Real> ComplexScalar;$/;"	t	class:Eigen::RealQZ
ComplexScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef std::complex<typename NumTraits<Scalar>::Real> ComplexScalar;$/;"	t	class:Eigen::RealSchur
ComplexSchur	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexSchur(Index size = RowsAtCompileTime==Dynamic ? 1 : RowsAtCompileTime)$/;"	f	class:Eigen::ComplexSchur
ComplexSchur	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexSchur(const MatrixType& matrix, bool computeU = true)$/;"	f	class:Eigen::ComplexSchur
ComplexSchur	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^template<typename _MatrixType> class ComplexSchur$/;"	c	namespace:Eigen
ComplexVectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ComplexVectorType;$/;"	t	class:Eigen::GeneralizedEigenSolver
CompressedStorage	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    CompressedStorage()$/;"	f	class:Eigen::internal::CompressedStorage
CompressedStorage	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    CompressedStorage(const CompressedStorage& other)$/;"	f	class:Eigen::internal::CompressedStorage
CompressedStorage	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    CompressedStorage(size_t size)$/;"	f	class:Eigen::internal::CompressedStorage
CompressedStorage	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^class CompressedStorage$/;"	c	namespace:Eigen::internal
ComputationInfo	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum ComputationInfo {$/;"	g	namespace:Eigen
ComputeBoW	./src/Frame.cc	/^void Frame::ComputeBoW()$/;"	f	class:ORB_SLAM2::Frame
ComputeBoW	./src/KeyFrame.cc	/^void KeyFrame::ComputeBoW()$/;"	f	class:ORB_SLAM2::KeyFrame
ComputeBoW	./src/Map.cc	/^void Map::ComputeBoW(ORBVocabulary *pVoc) {$/;"	f	class:ORB_SLAM2::Map
ComputeCentroid	./src/Sim3Solver.cc	/^void Sim3Solver::ComputeCentroid(cv::Mat &P, cv::Mat &Pr, cv::Mat &C)$/;"	f	class:ORB_SLAM2::Sim3Solver
ComputeDistinctiveDescriptors	./src/MapPoint.cc	/^void MapPoint::ComputeDistinctiveDescriptors()$/;"	f	class:ORB_SLAM2::MapPoint
ComputeEigenvectors	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  ComputeEigenvectors = 0x80,$/;"	e	enum:Eigen::DecompositionOptions
ComputeF12	./src/LocalMapping.cc	/^cv::Mat LocalMapping::ComputeF12(KeyFrame *&pKF1, KeyFrame *&pKF2)$/;"	f	class:ORB_SLAM2::LocalMapping
ComputeF21	./src/Initializer.cc	/^cv::Mat Initializer::ComputeF21(const vector<cv::Point2f> &vP1,const vector<cv::Point2f> &vP2)$/;"	f	class:ORB_SLAM2::Initializer
ComputeFullU	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  ComputeFullU        = 0x04,$/;"	e	enum:Eigen::DecompositionOptions
ComputeFullV	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  ComputeFullV        = 0x10,$/;"	e	enum:Eigen::DecompositionOptions
ComputeH21	./src/Initializer.cc	/^cv::Mat Initializer::ComputeH21(const vector<cv::Point2f> &vP1, const vector<cv::Point2f> &vP2)$/;"	f	class:ORB_SLAM2::Initializer
ComputeImageBounds	./src/Frame.cc	/^void Frame::ComputeImageBounds(const cv::Mat &imLeft)$/;"	f	class:ORB_SLAM2::Frame
ComputeKeyPointsOctTree	./src/ORBextractor.cc	/^void ORBextractor::ComputeKeyPointsOctTree(vector<vector<KeyPoint> >& allKeypoints)$/;"	f	class:ORB_SLAM2::ORBextractor
ComputeKeyPointsOld	./src/ORBextractor.cc	/^void ORBextractor::ComputeKeyPointsOld(std::vector<std::vector<KeyPoint> > &allKeypoints)$/;"	f	class:ORB_SLAM2::ORBextractor
ComputePyramid	./src/ORBextractor.cc	/^void ORBextractor::ComputePyramid(cv::Mat image)$/;"	f	class:ORB_SLAM2::ORBextractor
ComputeSceneMedianDepth	./src/KeyFrame.cc	/^float KeyFrame::ComputeSceneMedianDepth(const int q)$/;"	f	class:ORB_SLAM2::KeyFrame
ComputeSim3	./src/LoopClosing.cc	/^bool LoopClosing::ComputeSim3()$/;"	f	class:ORB_SLAM2::LoopClosing
ComputeSim3	./src/Sim3Solver.cc	/^void Sim3Solver::ComputeSim3(cv::Mat &P1, cv::Mat &P2)$/;"	f	class:ORB_SLAM2::Sim3Solver
ComputeStereoFromRGBD	./src/Frame.cc	/^void Frame::ComputeStereoFromRGBD(const cv::Mat &imDepth)$/;"	f	class:ORB_SLAM2::Frame
ComputeStereoMatches	./src/Frame.cc	/^void Frame::ComputeStereoMatches()$/;"	f	class:ORB_SLAM2::Frame
ComputeThinU	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  ComputeThinU        = 0x08,$/;"	e	enum:Eigen::DecompositionOptions
ComputeThinV	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  ComputeThinV        = 0x20,$/;"	e	enum:Eigen::DecompositionOptions
ComputeThreeMaxima	./src/ORBmatcher.cc	/^void ORBmatcher::ComputeThreeMaxima(vector<int>* histo, const int L, int &ind1, int &ind2, int &ind3)$/;"	f	class:ORB_SLAM2::ORBmatcher
ConditionMatrixNested	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^  typedef typename ConditionMatrixType::Nested ConditionMatrixNested;$/;"	t	struct:Eigen::internal::traits
Conj	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Conj = NumTraits<LhsScalar>::IsComplex$/;"	e	enum:Eigen::internal::scalar_conj_product_op::__anon260
ConjLhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = _ConjLhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon51
ConjLhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = _ConjLhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon52
ConjLhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = _ConjLhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon53
ConjLhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = false,$/;"	e	enum:Eigen::internal::gebp_traits::__anon54
ConjRhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = _ConjRhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon51
ConjRhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = _ConjRhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon53
ConjRhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = _ConjRhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon54
ConjRhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = false,$/;"	e	enum:Eigen::internal::gebp_traits::__anon52
Conjugate	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^        Conjugate = ReturnOpposite && NumTraits<Scalar>::IsComplex,$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon12
ConjugateGradient	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  ConjugateGradient() : Base() {}$/;"	f	class:Eigen::ConjugateGradient
ConjugateGradient	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  ConjugateGradient(const MatrixType& A) : Base(A) {}$/;"	f	class:Eigen::ConjugateGradient
ConjugateGradient	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^class ConjugateGradient : public IterativeSolverBase<ConjugateGradient<_MatrixType,_UpLo,_Preconditioner> >$/;"	c	namespace:Eigen
ConjugateReturnType	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    > ConjugateReturnType;$/;"	t	class:Eigen::HouseholderSequence
ConjugateReturnType	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^                  >::type ConjugateReturnType;$/;"	t
ConsistentGroup	./include/LoopClosing.h	/^    typedef pair<set<KeyFrame*>,int> ConsistentGroup;    $/;"	t	class:ORB_SLAM2::LoopClosing
ConstAffinePart	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^                              const Block<const MatrixType,Dim,HDim> >::type ConstAffinePart;$/;"	t	class:Eigen::Transform
ConstAffinePart	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::ConstAffinePart ConstAffinePart;$/;"	t	struct:Eigen::internal::transform_take_affine_part
ConstAlignedMapType	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    typedef const Eigen::Map<const Derived, Aligned> ConstAlignedMapType;$/;"	t	class:Eigen::PlainObjectBase
ConstColXpr	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, 1, !IsRowMajor> ConstColXpr;$/;"	t
ConstColsBlockXpr	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, Dynamic, !IsRowMajor> ConstColsBlockXpr;$/;"	t
ConstColwiseReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef const VectorwiseOp<const Derived, Vertical> ConstColwiseReturnType;$/;"	t	class:Eigen::DenseBase
ConstDiagonalIndexReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct ConstDiagonalIndexReturnType { typedef const Diagonal<const Derived,Index> Type; };$/;"	s	class:Eigen::MatrixBase
ConstDiagonalReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^	typedef typename internal::add_const<Diagonal<const Derived> >::type ConstDiagonalReturnType;$/;"	t	class:Eigen::MatrixBase
ConstFixedSegmentReturnType	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^template<int Size> struct ConstFixedSegmentReturnType { typedef const VectorBlock<const Derived, Size> Type; };$/;"	s
ConstInnerVectorReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Block<const Derived,IsRowMajor?1:Dynamic,IsRowMajor?Dynamic:1,true> ConstInnerVectorReturnType;$/;"	t	class:Eigen::SparseMatrixBase
ConstLinearPart	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef const Block<const MatrixType,Dim,Dim> ConstLinearPart;$/;"	t	class:Eigen::Transform
ConstLinearPart	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef const Block<ConstMatrixType,Dim,Dim,int(Mode)==(AffineCompact)> ConstLinearPart;$/;"	t	class:Eigen::Transform
ConstMapType	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    typedef const Eigen::Map<const Derived, Unaligned> ConstMapType;$/;"	t	class:Eigen::PlainObjectBase
ConstMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef const MatrixType ConstMatrixType;$/;"	t	class:Eigen::Transform
ConstNColsBlockXpr	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNColsBlockXpr { typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	s
ConstNRowsBlockXpr	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNRowsBlockXpr { typedef const Block<const Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	s
ConstNormalReturnType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  typedef const Block<const Coefficients,AmbientDimAtCompileTime,1> ConstNormalReturnType;$/;"	t	class:Eigen::Hyperplane
ConstReverseReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef const Reverse<const Derived, BothDirections> ConstReverseReturnType;$/;"	t	class:Eigen::DenseBase
ConstRowXpr	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, 1, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> ConstRowXpr;$/;"	t
ConstRowsBlockXpr	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, Dynamic, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> ConstRowsBlockXpr;$/;"	t
ConstRowwiseReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef const VectorwiseOp<const Derived, Horizontal> ConstRowwiseReturnType;$/;"	t	class:Eigen::DenseBase
ConstSegmentReturnType	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^typedef const VectorBlock<const Derived> ConstSegmentReturnType;$/;"	t
ConstSelfAdjointViewReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct ConstSelfAdjointViewReturnType { typedef const SelfAdjointView<const Derived, UpLo> Type; };$/;"	s	class:Eigen::MatrixBase
ConstStartMinusOne	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^                  internal::traits<Derived>::ColsAtCompileTime==1 ? 1 : SizeMinusOne> ConstStartMinusOne;$/;"	t	class:Eigen::MatrixBase
ConstTranslationPart	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef const Block<const MatrixType,Dim,1> ConstTranslationPart;$/;"	t	class:Eigen::Transform
ConstTranslationPart	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef const Block<ConstMatrixType,Dim,1,int(Mode)==(AffineCompact)> ConstTranslationPart;$/;"	t	class:Eigen::Transform
ConstTransposeReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^	typedef typename internal::add_const<Transpose<const Derived> >::type ConstTransposeReturnType;$/;"	t	class:Eigen::DenseBase
ConstTransposeReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::ConstTransposeReturnType ConstTransposeReturnType;$/;"	t	class:Eigen::MatrixBase
ConstTriangularViewReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct ConstTriangularViewReturnType { typedef const TriangularView<const Derived, Mode> Type; };$/;"	s	class:Eigen::MatrixBase
Constant	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Constant(Index nbRows, Index nbCols, const Scalar& value)$/;"	f	class:Eigen::DenseBase
Constant	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Constant(Index size, const Scalar& value)$/;"	f	class:Eigen::DenseBase
Constant	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Constant(const Scalar& value)$/;"	f	class:Eigen::DenseBase
ConstantReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,Derived> ConstantReturnType;$/;"	t	class:Eigen::ArrayBase
ConstantReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,Derived> ConstantReturnType;$/;"	t	class:Eigen::DenseBase
ConstantReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,Derived> ConstantReturnType;$/;"	t	class:Eigen::MatrixBase
ConstantReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,Matrix<Scalar,Dynamic,Dynamic> > ConstantReturnType;$/;"	t	class:Eigen::SparseMatrixBase
Converter	./include/Converter.h	/^class Converter$/;"	c	namespace:ORB_SLAM2
CornerType	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	g	namespace:Eigen
CornerType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  enum CornerType$/;"	g	class:Eigen::AlignedBox
CorrectLoop	./src/LoopClosing.cc	/^void LoopClosing::CorrectLoop()$/;"	f	class:ORB_SLAM2::LoopClosing
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = (NumTraits<LhsScalar>::MulCost + NumTraits<RhsScalar>::MulCost), \/\/ rough estimate!$/;"	e	enum:Eigen::internal::functor_traits::__anon268
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = (NumTraits<LhsScalar>::MulCost + NumTraits<RhsScalar>::MulCost)\/2, \/\/ rough estimate!$/;"	e	enum:Eigen::internal::functor_traits::__anon259
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon295
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon296
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon297
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon298
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon299
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon300
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<LhsScalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon261
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon257
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon262
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon263
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon266
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon271
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon272
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<Scalar>::IsComplex ? NumTraits<Scalar>::AddCost : 0,$/;"	e	enum:Eigen::internal::functor_traits::__anon274
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<bool>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon269
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<bool>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon270
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false };$/;"	e	enum:Eigen::internal::functor_traits::__anon265
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess=0 };$/;"	e	enum:Eigen::internal::functor_traits::__anon264
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon276
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon277
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon278
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon279
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon323
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon324
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon325
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon326
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon321
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon322
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon310
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon311
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon312
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon313
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon314
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon315
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon316
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon317
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon318
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::HasSetLinear, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon287
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::Vectorizable, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon285
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 2 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon284
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 2*NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon304
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon301
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasExp }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon280
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasLog }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon281
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar1>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon283
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = false, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon286
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = packet_traits<Scalar>::HasAdd }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon294
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasAbs2 }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon273
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon302
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon282
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon303
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon307
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon308
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon309
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon305
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon306
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost + functor_traits<T2>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon328
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon327
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon319
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon320
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = is_same<Scalar, NewType>::value ? 0 : NumTraits<NewType>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon275
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Random.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false, IsRepeatable = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon203
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    Cost = (  Derived::SizeAtCompileTime == Dynamic$/;"	e	enum:Eigen::internal::redux_traits::__anon190
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^  template<typename _Scalar, int Size> struct Cost$/;"	s	struct:Eigen::internal::member_redux
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^    Cost = NumTraits<Scalar>::AddCost$/;"	e	enum:Eigen::internal::functor_traits::__anon236
Cost	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^    Cost = NumTraits<Scalar>::AddCost$/;"	e	enum:Eigen::internal::functor_traits::__anon237
CostFunction	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^    struct  CostFunction {$/;"	s	struct:g2o::HyperDijkstra
CostOpType	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename MemberOp::template Cost<InputScalar,TraversalSize> CostOpType;$/;"	t	struct:Eigen::internal::traits
CostOpType	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename MemberOp::template Cost<InputScalar,int(TraversalSize)> CostOpType;$/;"	t	struct:Eigen::internal::traits
CreateInitialMapMonocular	./src/Tracking.cc	/^void Tracking::CreateInitialMapMonocular()$/;"	f	class:ORB_SLAM2::Tracking
CreateInitialMapRelocal	./src/Tracking.cc	/^void Tracking::CreateInitialMapRelocal() {$/;"	f	class:ORB_SLAM2::Tracking
CreateNewKeyFrame	./src/Tracking.cc	/^void Tracking::CreateNewKeyFrame()$/;"	f	class:ORB_SLAM2::Tracking
CreateNewMapPoints	./src/LocalMapping.cc	/^void LocalMapping::CreateNewMapPoints()$/;"	f	class:ORB_SLAM2::LocalMapping
CreatorInformation	./Thirdparty/g2o/g2o/core/factory.h	/^          CreatorInformation()$/;"	f	class:g2o::Factory::CreatorInformation
CreatorInformation	./Thirdparty/g2o/g2o/core/factory.h	/^      class CreatorInformation$/;"	c	class:g2o::Factory
CreatorList	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	/^      typedef std::list<AbstractOptimizationAlgorithmCreator*>      CreatorList;$/;"	t	class:g2o::OptimizationAlgorithmFactory
CreatorMap	./Thirdparty/g2o/g2o/core/factory.h	/^      typedef std::map<std::string, CreatorInformation*>               CreatorMap;$/;"	t	class:g2o::Factory
CreatorMap	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	/^      typedef std::map<std::string, AbstractRobustKernelCreator*>              CreatorMap;$/;"	t	class:g2o::RobustKernelFactory
CrossReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ExpressionType::PlainObject CrossReturnType;$/;"	t	class:Eigen::VectorwiseOp
Cw	./include/KeyFrame.h	/^    cv::Mat Cw; \/\/ Stereo middel point. Only for visualization$/;"	m	class:ORB_SLAM2::KeyFrame
Cwise	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Cwise.h	/^    inline Cwise(const ExpressionType& matrix) : m_matrix(matrix) {}$/;"	f	class:Eigen::Cwise
Cwise	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Cwise.h	/^template<typename ExpressionType> class Cwise$/;"	c	namespace:Eigen
CwiseBinaryOp	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE CwiseBinaryOp(const Lhs& aLhs, const Rhs& aRhs, const BinaryOp& func = BinaryOp())$/;"	f	class:Eigen::CwiseBinaryOp
CwiseBinaryOp	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^class CwiseBinaryOp : internal::no_assignment_operator,$/;"	c	namespace:Eigen
CwiseBinaryOpImpl	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^class CwiseBinaryOpImpl<BinaryOp, Lhs, Rhs, Dense>$/;"	c	namespace:Eigen
CwiseBinaryOpImpl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CwiseBinaryOpImpl()$/;"	f	class:Eigen::CwiseBinaryOpImpl
CwiseBinaryOpImpl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^class CwiseBinaryOpImpl<BinaryOp, Lhs, Rhs, Sparse>$/;"	c	namespace:Eigen
CwiseBinaryXpr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef CwiseBinaryOp<BinaryFunc, Lhs, Rhs> CwiseBinaryXpr;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
CwiseBinaryXpr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> CwiseBinaryXpr;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
CwiseNullaryOp	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^    CwiseNullaryOp(Index nbRows, Index nbCols, const NullaryOp& func = NullaryOp())$/;"	f	class:Eigen::CwiseNullaryOp
CwiseNullaryOp	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^class CwiseNullaryOp : internal::no_assignment_operator,$/;"	c	namespace:Eigen
CwiseUnaryOp	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^    inline CwiseUnaryOp(const XprType& xpr, const UnaryOp& func = UnaryOp())$/;"	f	class:Eigen::CwiseUnaryOp
CwiseUnaryOp	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^class CwiseUnaryOp : internal::no_assignment_operator,$/;"	c	namespace:Eigen
CwiseUnaryOpImpl	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^class CwiseUnaryOpImpl<UnaryOp,XprType,Dense>$/;"	c	namespace:Eigen
CwiseUnaryOpImpl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class CwiseUnaryOpImpl<UnaryOp,MatrixType,Sparse>$/;"	c	namespace:Eigen
CwiseUnaryView	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    inline CwiseUnaryView(const MatrixType& mat, const ViewOp& func = ViewOp())$/;"	f	class:Eigen::CwiseUnaryView
CwiseUnaryView	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^class CwiseUnaryView : public CwiseUnaryViewImpl<ViewOp, MatrixType, typename internal::traits<MatrixType>::StorageKind>$/;"	c	namespace:Eigen
CwiseUnaryViewImpl	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^class CwiseUnaryViewImpl<ViewOp,MatrixType,Dense>$/;"	c	namespace:Eigen
CwiseUnaryViewImpl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class CwiseUnaryViewImpl<ViewOp,MatrixType,Sparse>$/;"	c	namespace:Eigen
DBoW2	./Thirdparty/DBoW2/DBoW2/BowVector.cpp	/^namespace DBoW2 {$/;"	n	file:
DBoW2	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^namespace DBoW2 {$/;"	n
DBoW2	./Thirdparty/DBoW2/DBoW2/FClass.h	/^namespace DBoW2 {$/;"	n
DBoW2	./Thirdparty/DBoW2/DBoW2/FORB.cpp	/^namespace DBoW2 {$/;"	n	file:
DBoW2	./Thirdparty/DBoW2/DBoW2/FORB.h	/^namespace DBoW2 {$/;"	n
DBoW2	./Thirdparty/DBoW2/DBoW2/FeatureVector.cpp	/^namespace DBoW2 {$/;"	n	file:
DBoW2	./Thirdparty/DBoW2/DBoW2/FeatureVector.h	/^namespace DBoW2 {$/;"	n
DBoW2	./Thirdparty/DBoW2/DBoW2/ScoringObject.h	/^namespace DBoW2 {$/;"	n
DBoW2	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^namespace DBoW2 {$/;"	n
DEAD	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	116;"	d
DEAD_NON_PRINCIPAL	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	120;"	d
DEAD_PRINCIPAL	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	119;"	d
DEC	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	439;"	d	file:
DEC	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	434;"	d	file:
DEC	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	439;"	d	file:
DEC	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	434;"	d	file:
DEC	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	439;"	d	file:
DEC	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	434;"	d	file:
DEC	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	472;"	d	file:
DEC	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	457;"	d	file:
DEC	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	439;"	d	file:
DEC	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	434;"	d	file:
DECL_GSISX	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	51;"	d
DECL_GSSVX	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	15;"	d
DEG2RAD	./Thirdparty/g2o/g2o/stuff/macros.h	31;"	d
DELTA	./4pcs/Registration.h	13;"	d
DELTA_EPOCH_IN_MICROSECS	./Thirdparty/g2o/g2o/stuff/timeutil.cpp	43;"	d	file:
DOT_PRODUCT	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^  DOT_PRODUCT,$/;"	e	enum:DBoW2::ScoringType
DO_EVERY	./Thirdparty/g2o/g2o/stuff/timeutil.h	65;"	d
DO_EVERY_TS	./Thirdparty/g2o/g2o/stuff/timeutil.h	49;"	d
DST_CHAN	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	55;"	d
DST_CTRL	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	56;"	d
DUtils	./Thirdparty/DBoW2/DUtils/Random.h	/^namespace DUtils {$/;"	n
DUtils	./Thirdparty/DBoW2/DUtils/Timestamp.h	/^namespace DUtils {$/;"	n
Data	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::Data::Data(){$/;"	f	class:g2o::OptimizableGraph::Data
Data	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    class  Data : public HyperGraph::HyperGraphElement$/;"	c	struct:g2o::OptimizableGraph
DataRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^      DataRowsAtCompileTime = ((Supers!=Dynamic) && (Subs!=Dynamic))$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon11
DataRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    DataRowsAtCompileTime = ((Supers!=Dynamic) && (Subs!=Dynamic)) ? 1 + Supers + Subs : Dynamic$/;"	e	enum:Eigen::internal::traits::__anon13
DataRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    DataRowsAtCompileTime = ((Supers!=Dynamic) && (Subs!=Dynamic)) ? 1 + Supers + Subs : Dynamic$/;"	e	enum:Eigen::internal::traits::__anon14
DeactivateLocalizationMode	./src/System.cc	/^void System::DeactivateLocalizationMode()$/;"	f	class:ORB_SLAM2::System
Dec	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^  typedef CholmodBase<_MatrixType,_UpLo,Derived> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^  typedef CholmodBase<_MatrixType,_UpLo,Derived> Dec;$/;"	t	struct:Eigen::internal::sparse_solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^  typedef DiagonalPreconditioner<_MatrixType> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef BiCGSTAB<_MatrixType, _Preconditioner> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef ConjugateGradient<_MatrixType,_UpLo,_Preconditioner> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^  typedef IncompleteLUT<_MatrixType> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef IterativeSolverBase<Derived> Dec;$/;"	t	struct:Eigen::internal::sparse_solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  typedef PastixBase<_MatrixType> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  typedef PastixBase<_MatrixType> Dec;$/;"	t	struct:Eigen::internal::sparse_solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^  typedef PardisoImpl<Derived> Dec;$/;"	t	struct:Eigen::internal::sparse_solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^  typedef PardisoImpl<_Derived> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  typedef SPQR<_MatrixType> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SimplicialCholeskyBase<Derived> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SimplicialCholeskyBase<Derived> Dec;$/;"	t	struct:Eigen::internal::sparse_solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  typedef SparseLU<_MatrixType,Derived> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  typedef SparseLU<_MatrixType,Derived> Dec;$/;"	t	struct:Eigen::internal::sparse_solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  typedef SparseQR<_MatrixType, OrderingType> Dec;$/;"	t	struct:Eigen::internal::sparse_solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  typedef SparseQR<_MatrixType,OrderingType> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  typedef SuperLUBase<_MatrixType,Derived> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  typedef SuperLUBase<_MatrixType,Derived> Dec;$/;"	t	struct:Eigen::internal::sparse_solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^  typedef UmfPackLU<_MatrixType> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^  typedef UmfPackLU<_MatrixType> Dec;$/;"	t	struct:Eigen::internal::sparse_solve_retval
DecomposeE	./src/Initializer.cc	/^void Initializer::DecomposeE(const cv::Mat &E, cv::Mat &R1, cv::Mat &R2, cv::Mat &t)$/;"	f	class:ORB_SLAM2::Initializer
DecompositionOptions	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum DecompositionOptions {$/;"	g	namespace:Eigen
DecompositionType	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^  typedef _DecompositionType DecompositionType;$/;"	t	struct:Eigen::internal::image_retval_base
DecompositionType	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^  typedef _DecompositionType DecompositionType;$/;"	t	struct:Eigen::internal::kernel_retval_base
DecompositionType	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^  typedef _DecompositionType DecompositionType;$/;"	t	struct:Eigen::internal::solve_retval_base
DecompositionType	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^  typedef _DecompositionType DecompositionType;$/;"	t	struct:Eigen::internal::sparse_solve_retval_base
Default	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum Default_t    { Default };$/;"	e	enum:Eigen::Default_t
DefaultTraversal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  DefaultTraversal,$/;"	e	enum:Eigen::__anon72
Default_t	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum Default_t    { Default };$/;"	g	namespace:Eigen
Defined	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^    Defined = 1$/;"	e	enum:Eigen::scalar_product_traits::__anon132
Defined	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^    Defined = 1$/;"	e	enum:Eigen::scalar_product_traits::__anon133
Defined	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^    Defined = 1$/;"	e	enum:Eigen::scalar_product_traits::__anon134
Defined	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^  enum { Defined = 0 };$/;"	e	enum:Eigen::scalar_product_traits::__anon131
Dense	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^struct Dense {};$/;"	s	namespace:Eigen
DenseBase	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    DenseBase()$/;"	f	class:Eigen::DenseBase
DenseBase	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^template<typename Derived> class DenseBase$/;"	c	namespace:Eigen
DenseCoeffsBase	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived, DirectAccessors> : public DenseCoeffsBase<Derived, ReadOnlyAccessors>$/;"	c	namespace:Eigen
DenseCoeffsBase	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived, DirectWriteAccessors>$/;"	c	namespace:Eigen
DenseCoeffsBase	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived, WriteAccessors> : public DenseCoeffsBase<Derived, ReadOnlyAccessors>$/;"	c	namespace:Eigen
DenseCoeffsBase	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived,ReadOnlyAccessors> : public EigenBase<Derived>$/;"	c	namespace:Eigen
DenseIndex	./Thirdparty/sparseicp/include/Eigen/src/Core/util/XprHelper.h	/^typedef EIGEN_DEFAULT_DENSE_INDEX_TYPE DenseIndex;$/;"	t	namespace:Eigen
DenseMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  typedef Matrix<Scalar,Dynamic,Dynamic> DenseMatrix;$/;"	t	struct:Eigen::SparseQRMatrixQReturnType
DenseMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    typedef Matrix<Scalar,RowsAtCompileTime,ColsAtCompileTime> DenseMatrixType;$/;"	t	class:Eigen::internal::BandMatrixBase
DenseMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, ColsAtCompileTime, 0, MaxRowsAtCompileTime, MaxColsAtCompileTime> DenseMatrixType;$/;"	t	class:Eigen::DiagonalBase
DenseMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^            DenseMatrixType;$/;"	t	class:Eigen::PermutationBase
DenseMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Derived::DenseMatrixType DenseMatrixType;$/;"	t	class:Eigen::Transpose
DenseMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename MatrixType::PlainObject DenseMatrixType;$/;"	t	struct:Eigen::internal::traits
DenseMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^      typedef typename TriangularView<MatrixType,Mode>::DenseMatrixType DenseMatrixType;$/;"	t	struct:Eigen::TriangularView::eigen2_product_return_type
DenseMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::DenseMatrixType DenseMatrixType;$/;"	t	class:Eigen::TriangularBase
DenseMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::DenseMatrixType DenseMatrixType;$/;"	t	class:Eigen::TriangularView
DenseMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename MatrixType::PlainObject DenseMatrixType;$/;"	t	struct:Eigen::internal::traits
DenseSparseProductReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^template<typename Lhs, typename Rhs, int InnerSize> struct DenseSparseProductReturnType$/;"	s	namespace:Eigen
DenseSparseProductReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^template<typename Lhs, typename Rhs> struct DenseSparseProductReturnType<Lhs,Rhs,1>$/;"	s	namespace:Eigen
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage() : m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage() : m_data(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage() : m_data(0), m_rows(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage() : m_data(0), m_rows(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage() : m_rows(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage() : m_rows(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage() {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(DenseIndex size, DenseIndex nbRows, DenseIndex nbCols)$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(DenseIndex size, DenseIndex nbRows, DenseIndex) : m_data(internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size)), m_rows(nbRows)$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(DenseIndex size, DenseIndex, DenseIndex nbCols) : m_data(internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size)), m_cols(nbCols)$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(DenseIndex, DenseIndex nbRows, DenseIndex nbCols) : m_rows(nbRows), m_cols(nbCols) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(DenseIndex, DenseIndex nbRows, DenseIndex) : m_rows(nbRows) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(DenseIndex, DenseIndex, DenseIndex nbCols) : m_cols(nbCols) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(DenseIndex,DenseIndex,DenseIndex) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(internal::constructor_without_unaligned_array_assert) : m_data(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(internal::constructor_without_unaligned_array_assert) : m_data(0), m_rows(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(internal::constructor_without_unaligned_array_assert) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::DenseStorage
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Cols, int _Options> class DenseStorage<T, Size, Dynamic, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Options> class DenseStorage<T, Size, Dynamic, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Rows, int _Cols, int _Options> class DenseStorage$/;"	c	namespace:Eigen
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Rows, int _Options> class DenseStorage<T, Size, _Rows, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Cols, int _Options> class DenseStorage<T, 0, Dynamic, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Cols, int _Options> class DenseStorage<T, Dynamic, Dynamic, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Options> class DenseStorage<T, 0, Dynamic, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Options> class DenseStorage<T, Dynamic, Dynamic, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Rows, int _Cols, int _Options> class DenseStorage<T, 0, _Rows, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Rows, int _Options> class DenseStorage<T, 0, _Rows, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Rows, int _Options> class DenseStorage<T, Dynamic, _Rows, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseTimeSparseProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    DenseTimeSparseProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs)$/;"	f	class:Eigen::DenseTimeSparseProduct
DenseTimeSparseProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^class DenseTimeSparseProduct$/;"	c	namespace:Eigen
DenseTimeSparseSelfAdjointProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    DenseTimeSparseSelfAdjointProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs)$/;"	f	class:Eigen::DenseTimeSparseSelfAdjointProduct
DenseTimeSparseSelfAdjointProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^class DenseTimeSparseSelfAdjointProduct$/;"	c	namespace:Eigen
DenseType	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    typedef DenseMatrixType DenseType;$/;"	t	class:Eigen::DiagonalBase
DenseType	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    typedef Derived DenseType;$/;"	t	class:Eigen::PlainObjectBase
DenseType	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    typedef DenseMatrixType DenseType;$/;"	t	class:Eigen::TriangularBase
Depth	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    Depth = EIGEN_SIZE_MIN_PREFER_FIXED(_Lhs::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon145
Derived	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> Derived;$/;"	t	class:Eigen::CwiseBinaryOpImpl
Derived	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^    typedef CwiseUnaryOp<UnaryOp, XprType> Derived;$/;"	t	class:Eigen::CwiseUnaryOpImpl
Derived	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    typedef CwiseUnaryView<ViewOp, MatrixType> Derived;$/;"	t	class:Eigen::CwiseUnaryViewImpl
Derived	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> Derived;$/;"	t	class:Eigen::CwiseBinaryOpImpl
Derived	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef CwiseUnaryOp<UnaryOp, MatrixType> Derived;$/;"	t	class:Eigen::CwiseUnaryOpImpl
Derived	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef CwiseUnaryView<ViewOp, MatrixType> Derived;$/;"	t	class:Eigen::CwiseUnaryViewImpl
DescriptorDistance	./src/ORBmatcher.cc	/^int ORBmatcher::DescriptorDistance(const cv::Mat &a, const cv::Mat &b)$/;"	f	class:ORB_SLAM2::ORBmatcher
DetectLoop	./src/LoopClosing.cc	/^bool LoopClosing::DetectLoop()$/;"	f	class:ORB_SLAM2::LoopClosing
DetectLoopCandidates	./src/KeyFrameDatabase.cc	/^vector<KeyFrame*> KeyFrameDatabase::DetectLoopCandidates(KeyFrame* pKF, float minScore)$/;"	f	class:ORB_SLAM2::KeyFrameDatabase
DetectRelocalizationCandidates	./src/KeyFrameDatabase.cc	/^vector<KeyFrame*> KeyFrameDatabase::DetectRelocalizationCandidates(Frame *F)$/;"	f	class:ORB_SLAM2::KeyFrameDatabase
Di	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      static const int Di = VertexXiType::Dimension;$/;"	m	class:g2o::BaseBinaryEdge
DiagIndex	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    enum { DiagIndex = _DiagIndex };$/;"	e	enum:Eigen::Diagonal::__anon234
DiagSizeAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^      DiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(RowsAtCompileTime,ColsAtCompileTime),$/;"	e	enum:Eigen::JacobiSVD::__anon359
DiagVectorType	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1> DiagVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
Diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    inline Diagonal(MatrixType& matrix, Index a_index = DiagIndex) : m_matrix(matrix), m_index(a_index) {}$/;"	f	class:Eigen::Diagonal
Diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^template<typename MatrixType, int _DiagIndex> class Diagonal$/;"	c	namespace:Eigen
DiagonalBase	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^class DiagonalBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
DiagonalIndexReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct DiagonalIndexReturnType { typedef Diagonal<Derived,Index> Type; };$/;"	s	class:Eigen::MatrixBase
DiagonalIntReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    template<int Index> struct DiagonalIntReturnType {$/;"	s	class:Eigen::internal::BandMatrixBase
DiagonalMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    explicit inline DiagonalMatrix(const MatrixBase<OtherDerived>& other) : m_diagonal(other)$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix() {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(Index dim) : m_diagonal(dim) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const DiagonalBase<OtherDerived>& other) : m_diagonal(other.diagonal()) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const DiagonalMatrix& other) : m_diagonal(other.diagonal()) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const Scalar& x, const Scalar& y) : m_diagonal(x,y) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const Scalar& x, const Scalar& y, const Scalar& z) : m_diagonal(x,y,z) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^class DiagonalMatrix$/;"	c	namespace:Eigen
DiagonalPreconditioner	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner() : m_isInitialized(false) {}$/;"	f	class:Eigen::DiagonalPreconditioner
DiagonalPreconditioner	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner(const MatType& mat) : m_invdiag(mat.cols())$/;"	f	class:Eigen::DiagonalPreconditioner
DiagonalPreconditioner	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^class DiagonalPreconditioner$/;"	c	namespace:Eigen
DiagonalProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    inline DiagonalProduct(const MatrixType& matrix, const DiagonalType& diagonal)$/;"	f	class:Eigen::DiagonalProduct
DiagonalProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^class DiagonalProduct : internal::no_assignment_operator,$/;"	c	namespace:Eigen
DiagonalReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    typedef Diagonal<Derived> DiagonalReturnType;$/;"	t	class:Eigen::MatrixBase
DiagonalReturnType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^            >::type DiagonalReturnType;$/;"	t	class:Eigen::Tridiagonalization
DiagonalSize	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^        DiagonalSize = (RowsAtCompileTime==Dynamic || ColsAtCompileTime==Dynamic)$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon12
DiagonalType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename internal::plain_col_type<MatrixType, RealScalar>::type DiagonalType;$/;"	t	class:Eigen::Tridiagonalization
DiagonalVector	./Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      typedef std::vector<MatrixType, Eigen::aligned_allocator<MatrixType> >      DiagonalVector;$/;"	t	class:g2o::SparseBlockMatrixDiagonal
DiagonalVectorType	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    typedef _DiagonalVectorType DiagonalVectorType;$/;"	t	class:Eigen::DiagonalWrapper
DiagonalVectorType	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<Derived>::DiagonalVectorType DiagonalVectorType;$/;"	t	class:Eigen::DiagonalBase
DiagonalVectorType	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<DiagonalMatrix>::DiagonalVectorType DiagonalVectorType;$/;"	t	class:Eigen::DiagonalMatrix
DiagonalVectorType	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^  typedef Matrix<_Scalar,SizeAtCompileTime,1,0,MaxSizeAtCompileTime,1> DiagonalVectorType;$/;"	t	struct:Eigen::internal::traits
DiagonalVectorType	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^  typedef _DiagonalVectorType DiagonalVectorType;$/;"	t	struct:Eigen::internal::traits
DiagonalWrapper	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalWrapper(DiagonalVectorType& a_diagonal) : m_diagonal(a_diagonal) {}$/;"	f	class:Eigen::DiagonalWrapper
DiagonalWrapper	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^class DiagonalWrapper$/;"	c	namespace:Eigen
Dim	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  enum { Dim = 3 };$/;"	e	enum:Eigen::AngleAxis::__anon387
Dim	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  enum { Dim = 2 };$/;"	e	enum:Eigen::Rotation2D::__anon380
Dim	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    enum { Dim = _Dim };$/;"	e	enum:Eigen::RotationBase::__anon384
Dim	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  enum { Dim = _Dim };$/;"	e	enum:Eigen::Scaling::__anon383
Dim	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^    Dim = _Dim,     \/\/\/< space dimension in which the transformation holds$/;"	e	enum:Eigen::Transform::__anon381
Dim	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  enum { Dim = _Dim };$/;"	e	enum:Eigen::Translation::__anon386
Dim	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  enum { Dim = 3 };$/;"	e	enum:Eigen::AngleAxis::__anon450
Dim	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  enum { Dim = 2 };$/;"	e	enum:Eigen::Rotation2D::__anon432
Dim	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^    enum { Dim = _Dim };$/;"	e	enum:Eigen::RotationBase::__anon441
Dim	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^  enum { Dim = RotationDerived::Dim };$/;"	e	enum:Eigen::internal::rotation_base_generic_product_selector::__anon442
Dim	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^  enum { Dim = RotationDerived::Dim };$/;"	e	enum:Eigen::internal::rotation_base_generic_product_selector::__anon443
Dim	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    Dim = Transform::Dim,$/;"	e	enum:Eigen::internal::transform_traits::__anon433
Dim	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    Dim = TransformType::Dim, $/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon437
Dim	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    Dim = TransformType::Dim, $/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon438
Dim	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    Dim = _Dim,     \/\/\/< space dimension in which the transformation holds$/;"	e	enum:Eigen::Transform::__anon434
Dim	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  enum { Dim = _Dim };$/;"	e	enum:Eigen::Translation::__anon449
Dimension	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      static const int Dimension = BaseEdge<D, E>::Dimension;$/;"	m	class:g2o::BaseBinaryEdge
Dimension	./Thirdparty/g2o/g2o/core/base_edge.h	/^      static const int Dimension = D;$/;"	m	class:g2o::BaseEdge
Dimension	./Thirdparty/g2o/g2o/core/base_multi_edge.h	/^      static const int Dimension = BaseEdge<D,E>::Dimension;$/;"	m	class:g2o::BaseMultiEdge
Dimension	./Thirdparty/g2o/g2o/core/base_unary_edge.h	/^      static const int Dimension = BaseEdge<D, E>::Dimension;$/;"	m	class:g2o::BaseUnaryEdge
Dimension	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    static const int Dimension = D;           \/\/\/< dimension of the estimate (minimal) in the manifold space$/;"	m	class:g2o::BaseVertex
DirectAccessBit	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^const unsigned int DirectAccessBit = 0x40;$/;"	m	namespace:Eigen
DirectAccessors	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  DirectAccessors, $/;"	e	enum:Eigen::AccessorLevels
DirectLinearAccessType	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^    >::type DirectLinearAccessType;$/;"	t	struct:Eigen::internal::blas_traits
DirectWriteAccessors	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  DirectWriteAccessors$/;"	e	enum:Eigen::AccessorLevels
Direction	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    enum { Direction = _Direction };$/;"	e	enum:Eigen::Homogeneous::__anon430
DirectionType	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum DirectionType { $/;"	g	namespace:Eigen
DistanceType	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		typedef _DistanceType DistanceType;$/;"	t	struct:nanoflann::L1_Adaptor
DistanceType	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		typedef _DistanceType DistanceType;$/;"	t	struct:nanoflann::L2_Adaptor
DistanceType	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		typedef _DistanceType DistanceType;$/;"	t	struct:nanoflann::L2_Simple_Adaptor
DistanceType	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		typedef typename Distance::DistanceType DistanceType;$/;"	t	class:nanoflann::KDTreeSingleIndexAdaptor
DistributeOctTree	./src/ORBextractor.cc	/^vector<cv::KeyPoint> ORBextractor::DistributeOctTree(const vector<cv::KeyPoint>& vToDistributeKeys, const int &minX,$/;"	f	class:ORB_SLAM2::ORBextractor
DivideNode	./src/ORBextractor.cc	/^void ExtractorNode::DivideNode(ExtractorNode &n1, ExtractorNode &n2, ExtractorNode &n3, ExtractorNode &n4)$/;"	f	class:ORB_SLAM2::ExtractorNode
Dj	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      static const int Dj = VertexXjType::Dimension;$/;"	m	class:g2o::BaseBinaryEdge
DontAlign	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  DontAlign = 0x2$/;"	e	enum:Eigen::__anon75
DontAlignCols	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^enum { DontAlignCols = 1 };$/;"	e	enum:Eigen::__anon244
DoublePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  struct DoublePacket$/;"	s	class:Eigen::internal::gebp_traits
DoubleProperty	./Thirdparty/g2o/g2o/stuff/property.h	/^  typedef Property<double> DoubleProperty;$/;"	t	namespace:g2o
DrawAction	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  DrawAction::DrawAction(const std::string& typeName_) $/;"	f	class:g2o::DrawAction
DrawAction	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^  class  DrawAction : public HyperGraphElementAction{$/;"	c	namespace:g2o
DrawCurrentCamera	./src/MapDrawer.cc	/^void MapDrawer::DrawCurrentCamera(pangolin::OpenGlMatrix &Twc)$/;"	f	class:ORB_SLAM2::MapDrawer
DrawFrame	./src/FrameDrawer.cc	/^cv::Mat FrameDrawer::DrawFrame()$/;"	f	class:ORB_SLAM2::FrameDrawer
DrawFrames	./src/MapDrawer.cc	/^void MapDrawer::DrawFrames() {$/;"	f	class:ORB_SLAM2::MapDrawer
DrawKeyFrames	./src/MapDrawer.cc	/^void MapDrawer::DrawKeyFrames(const bool bDrawKF, const bool bDrawGraph)$/;"	f	class:ORB_SLAM2::MapDrawer
DrawMapPoints	./src/MapDrawer.cc	/^void MapDrawer::DrawMapPoints()$/;"	f	class:ORB_SLAM2::MapDrawer
DrawTextInfo	./src/FrameDrawer.cc	/^void FrameDrawer::DrawTextInfo(cv::Mat &im, int nState, cv::Mat &imText)$/;"	f	class:ORB_SLAM2::FrameDrawer
DstHasDirectAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    DstHasDirectAccess = Derived::Flags & DirectAccessBit,$/;"	e	enum:Eigen::internal::assign_traits::__anon247
DstHasDirectAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^      DstHasDirectAccess = Dst::Flags & DirectAccessBit,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon67
DstIsAligned	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    DstIsAligned = Derived::Flags & AlignedBit,$/;"	e	enum:Eigen::internal::assign_traits::__anon247
Dynamic	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^const int Dynamic = -1;$/;"	m	namespace:Eigen
DynamicIndex	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^const int DynamicIndex = 0xffffff;$/;"	m	namespace:Eigen
EDGE_THRESHOLD	./src/ORBextractor.cc	/^const int EDGE_THRESHOLD = 19;$/;"	m	namespace:ORB_SLAM2	file:
EIGEN2_GEOMETRY_MODULE_H	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	2;"	d
EIGEN2_LEASTSQUARES_H	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LeastSquares.h	11;"	d
EIGEN2_LU_H	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	11;"	d
EIGEN2_MACROS_H	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Macros.h	11;"	d
EIGEN2_MATH_FUNCTIONS_H	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	11;"	d
EIGEN2_MEMORY_H	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Memory.h	11;"	d
EIGEN2_META_H	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	11;"	d
EIGEN2_QR_H	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/QR.h	12;"	d
EIGEN2_SVD_H	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	11;"	d
EIGEN2_VECTORBLOCK_H	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/VectorBlock.h	12;"	d
EIGEN_ALIGN	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	73;"	d
EIGEN_ALIGN	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	75;"	d
EIGEN_ALIGN16	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	274;"	d
EIGEN_ALIGNEDBOX_H	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	11;"	d
EIGEN_ALIGNED_ALLOCA	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	582;"	d
EIGEN_ALIGNED_ALLOCATOR	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	15;"	d
EIGEN_ALIGN_128	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Macros.h	16;"	d
EIGEN_ALIGN_STATICALLY	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	81;"	d
EIGEN_ALIGN_STATICALLY	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	83;"	d
EIGEN_ALIGN_TO_BOUNDARY	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	264;"	d
EIGEN_ALLANDANY_H	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	11;"	d
EIGEN_ALLOCA	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	526;"	d
EIGEN_ALLOCA	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	528;"	d
EIGEN_ALWAYS_INLINE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	135;"	d
EIGEN_ALWAYS_INLINE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	137;"	d
EIGEN_AMBIVECTOR_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	11;"	d
EIGEN_ANGLEAXIS_H	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	11;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	27;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/Default/Settings.h	46;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	26;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	22;"	d
EIGEN_ARCH_WANTS_ALIGNMENT	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Macros.h	18;"	d
EIGEN_ARCH_WANTS_STACK_ALIGNMENT	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	64;"	d
EIGEN_ARCH_WANTS_STACK_ALIGNMENT	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	66;"	d
EIGEN_ARRAYBASE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	11;"	d
EIGEN_ARRAYWRAPPER_H	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	11;"	d
EIGEN_ARRAY_CWISE_OPERATORS_H	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	11;"	d
EIGEN_ARRAY_DECLARE_GLOBAL_EIGEN_UNARY	./Thirdparty/sparseicp/include/Eigen/src/Core/GlobalFunctions.h	21;"	d
EIGEN_ARRAY_DECLARE_GLOBAL_UNARY	./Thirdparty/sparseicp/include/Eigen/src/Core/GlobalFunctions.h	14;"	d
EIGEN_ARRAY_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	11;"	d
EIGEN_ASM_COMMENT	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	250;"	d
EIGEN_ASSIGN_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	13;"	d
EIGEN_ASSIGN_VML_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	34;"	d
EIGEN_AVOID_CUSTOM_UNALIGNED_LOADS	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	250;"	d
EIGEN_AVOID_CUSTOM_UNALIGNED_LOADS	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	253;"	d
EIGEN_AVOID_CUSTOM_UNALIGNED_LOADS	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	255;"	d
EIGEN_BANDMATRIX_H	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	11;"	d
EIGEN_BASIC_PRECONDITIONERS_H	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	11;"	d
EIGEN_BICGSTAB_H	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	12;"	d
EIGEN_BIDIAGONALIZATION_H	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	11;"	d
EIGEN_BLASUTIL_H	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	11;"	d
EIGEN_BLOCK2_H	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Block.h	12;"	d
EIGEN_BLOCK_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	12;"	d
EIGEN_BLOCK_HOUSEHOLDER_H	./Thirdparty/sparseicp/include/Eigen/src/Householder/BlockHouseholder.h	12;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	18;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/Default/Settings.h	31;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	20;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	18;"	d
EIGEN_CAT	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	112;"	d
EIGEN_CAT2	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	111;"	d
EIGEN_CHECK_BINARY_COMPATIBILIY	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	96;"	d
EIGEN_CHOLMODSUPPORT_H	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	11;"	d
EIGEN_COEFFBASED_PRODUCT_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	12;"	d
EIGEN_COLAMD_H	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	52;"	d
EIGEN_COLPIVOTINGHOUSEHOLDERQR_H	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	12;"	d
EIGEN_COLPIVOTINGHOUSEHOLDERQR_MKL_H	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR_MKL.h	35;"	d
EIGEN_COMMAINITIALIZER_H	./Thirdparty/sparseicp/include/Eigen/src/Core/CommaInitializer.h	12;"	d
EIGEN_COMPLEX_ALTIVEC_H	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	11;"	d
EIGEN_COMPLEX_EIGEN_SOLVER_H	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	13;"	d
EIGEN_COMPLEX_NEON_H	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	11;"	d
EIGEN_COMPLEX_SCHUR_H	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	13;"	d
EIGEN_COMPLEX_SCHUR_MKL_H	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur_MKL.h	34;"	d
EIGEN_COMPLEX_SSE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	11;"	d
EIGEN_COMPRESSED_STORAGE_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	11;"	d
EIGEN_CONJUGATE_GRADIENT_H	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	11;"	d
EIGEN_CONSERVATIVESPARSESPARSEPRODUCT_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	11;"	d
EIGEN_CONSTANTS_H	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	12;"	d
EIGEN_COREITERATORS_H	./Thirdparty/sparseicp/include/Eigen/src/Core/CoreIterators.h	11;"	d
EIGEN_CPUID	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	757;"	d
EIGEN_CPUID	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	762;"	d
EIGEN_CPUID	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	766;"	d
EIGEN_CPUID	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	771;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	106;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	116;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	474;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	479;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	135;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	143;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	137;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	146;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	147;"	d
EIGEN_CWISE_BINARY_OP_H	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	12;"	d
EIGEN_CWISE_BINOP_RETURN_TYPE	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Cwise.h	18;"	d
EIGEN_CWISE_COMP_TO_SCALAR_RETURN_TYPE	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Cwise.h	28;"	d
EIGEN_CWISE_H	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Cwise.h	12;"	d
EIGEN_CWISE_NULLARY_OP_H	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	11;"	d
EIGEN_CWISE_PRODUCT_RETURN_TYPE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	413;"	d
EIGEN_CWISE_UNARY_OP_H	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	12;"	d
EIGEN_CWISE_UNARY_VIEW_H	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	11;"	d
EIGEN_CWISE_UNOP_RETURN_TYPE	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Cwise.h	23;"	d
EIGEN_DBG_SPARSE	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	16;"	d
EIGEN_DEBUG_ALIGNED_LOAD	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	27;"	d
EIGEN_DEBUG_ALIGNED_STORE	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	35;"	d
EIGEN_DEBUG_UNALIGNED_LOAD	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	31;"	d
EIGEN_DEBUG_UNALIGNED_STORE	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	39;"	d
EIGEN_DEBUG_VAR	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	108;"	d
EIGEN_DECLARE_FUNCTION_ALLOWING_MULTIPLE_DEFINITIONS	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	158;"	d
EIGEN_DEFAULT_DENSE_INDEX_TYPE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	96;"	d
EIGEN_DEFAULT_IO_FORMAT	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	299;"	d
EIGEN_DEFAULT_MATRIX_STORAGE_ORDER_OPTION	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	90;"	d
EIGEN_DEFAULT_MATRIX_STORAGE_ORDER_OPTION	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	92;"	d
EIGEN_DEFAULT_SETTINGS_H	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/Default/Settings.h	17;"	d
EIGEN_DEFINE_FUNCTION_ALLOWING_MULTIPLE_DEFINITIONS	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	159;"	d
EIGEN_DEFINE_STL_DEQUE_SPECIALIZATION	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdDeque.h	28;"	d
EIGEN_DEFINE_STL_LIST_SPECIALIZATION	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdList.h	27;"	d
EIGEN_DEFINE_STL_VECTOR_SPECIALIZATION	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdVector.h	21;"	d
EIGEN_DENSEBASE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	12;"	d
EIGEN_DENSECOEFFSBASE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	11;"	d
EIGEN_DENSESTORAGEBASE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	12;"	d
EIGEN_DENSE_PUBLIC_INTERFACE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	354;"	d
EIGEN_DEPRECATED	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	224;"	d
EIGEN_DETERMINANT_H	./Thirdparty/sparseicp/include/Eigen/src/LU/Determinant.h	11;"	d
EIGEN_DIAGONALMATRIX_H	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	12;"	d
EIGEN_DIAGONALPRODUCT_H	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	12;"	d
EIGEN_DIAGONAL_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	12;"	d
EIGEN_DISABLE_UNALIGNED_ARRAY_ASSERT	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	85;"	d
EIGEN_DONT_ALIGN_STATICALLY	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	71;"	d
EIGEN_DONT_INLINE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	141;"	d
EIGEN_DONT_INLINE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	143;"	d
EIGEN_DONT_INLINE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	145;"	d
EIGEN_DOT_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	11;"	d
EIGEN_EIGENBASE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	12;"	d
EIGEN_EIGENSOLVER_H	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	12;"	d
EIGEN_EMPTY	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	306;"	d
EIGEN_EMPTY_STRUCT_CTOR	./Thirdparty/sparseicp/include/Eigen/src/Core/util/XprHelper.h	18;"	d
EIGEN_EMPTY_STRUCT_CTOR	./Thirdparty/sparseicp/include/Eigen/src/Core/util/XprHelper.h	22;"	d
EIGEN_EULERANGLES_H	./Thirdparty/sparseicp/include/Eigen/src/Geometry/EulerAngles.h	11;"	d
EIGEN_EXPLICIT_STL_DEQUE_INSTANTIATION	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdDeque.h	18;"	d
EIGEN_EXPLICIT_STL_DEQUE_INSTANTIATION	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdDeque.h	20;"	d
EIGEN_EXPLICIT_STL_LIST_INSTANTIATION	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdList.h	17;"	d
EIGEN_EXPLICIT_STL_LIST_INSTANTIATION	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdList.h	19;"	d
EIGEN_FAST_MATH	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	105;"	d
EIGEN_FLAGGED_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	11;"	d
EIGEN_FORCEALIGNEDACCESS_H	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	11;"	d
EIGEN_FORWARDDECLARATIONS_H	./Thirdparty/sparseicp/include/Eigen/src/Core/util/ForwardDeclarations.h	12;"	d
EIGEN_FREEBSD_MALLOC_ALREADY_ALIGNED	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	45;"	d
EIGEN_FREEBSD_MALLOC_ALREADY_ALIGNED	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	47;"	d
EIGEN_FULLPIVOTINGHOUSEHOLDERQR_H	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	12;"	d
EIGEN_FUNCTORS_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	11;"	d
EIGEN_FUZZY_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Fuzzy.h	12;"	d
EIGEN_GCC3_OR_OLDER	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	41;"	d
EIGEN_GCC3_OR_OLDER	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	43;"	d
EIGEN_GCC_AND_ARCH_DOESNT_WANT_STACK_ALIGNMENT	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	54;"	d
EIGEN_GCC_AND_ARCH_DOESNT_WANT_STACK_ALIGNMENT	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	56;"	d
EIGEN_GENERALIZEDEIGENSOLVER_H	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	12;"	d
EIGEN_GENERALIZEDSELFADJOINTEIGENSOLVER_H	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	12;"	d
EIGEN_GENERAL_BLOCK_PANEL_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	11;"	d
EIGEN_GENERAL_MATRIX_MATRIX_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	11;"	d
EIGEN_GENERAL_MATRIX_MATRIX_MKL_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix_MKL.h	34;"	d
EIGEN_GENERAL_MATRIX_MATRIX_TRIANGULAR_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	11;"	d
EIGEN_GENERAL_MATRIX_MATRIX_TRIANGULAR_MKL_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	34;"	d
EIGEN_GENERAL_MATRIX_VECTOR_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	11;"	d
EIGEN_GENERAL_MATRIX_VECTOR_MKL_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector_MKL.h	34;"	d
EIGEN_GENERAL_PRODUCT_H	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	12;"	d
EIGEN_GENERIC_PACKET_MATH_H	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	12;"	d
EIGEN_GENERIC_PUBLIC_INTERFACE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	338;"	d
EIGEN_GEOMETRY_SSE_H	./Thirdparty/sparseicp/include/Eigen/src/Geometry/arch/Geometry_SSE.h	12;"	d
EIGEN_GLIBC_MALLOC_ALREADY_ALIGNED	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	35;"	d
EIGEN_GLIBC_MALLOC_ALREADY_ALIGNED	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	37;"	d
EIGEN_GLOBAL_FUNCTIONS_H	./Thirdparty/sparseicp/include/Eigen/src/Core/GlobalFunctions.h	12;"	d
EIGEN_GNUC_AT_LEAST	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	22;"	d
EIGEN_GNUC_AT_LEAST	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	24;"	d
EIGEN_GNUC_AT_MOST	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	28;"	d
EIGEN_GNUC_AT_MOST	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	30;"	d
EIGEN_HAS_FUSE_CJMADD	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	22;"	d
EIGEN_HAS_MM_MALLOC	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	76;"	d
EIGEN_HAS_MM_MALLOC	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	78;"	d
EIGEN_HAS_POSIX_MEMALIGN	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	67;"	d
EIGEN_HAS_POSIX_MEMALIGN	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	72;"	d
EIGEN_HESSENBERGDECOMPOSITION_H	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	12;"	d
EIGEN_HOMOGENEOUS_H	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	11;"	d
EIGEN_HOUSEHOLDER_H	./Thirdparty/sparseicp/include/Eigen/src/Householder/Householder.h	12;"	d
EIGEN_HOUSEHOLDER_SEQUENCE_H	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	12;"	d
EIGEN_HYPERPLANE_H	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	12;"	d
EIGEN_IMPLIES	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	402;"	d
EIGEN_INCOMPLETE_LUT_H	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	11;"	d
EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	309;"	d
EIGEN_INHERIT_ASSIGNMENT_OPERATORS	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	327;"	d
EIGEN_INITIALIZE_COEFFS	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	15;"	d
EIGEN_INITIALIZE_COEFFS	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	18;"	d
EIGEN_INITIALIZE_COEFFS	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	21;"	d
EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	16;"	d
EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	19;"	d
EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	22;"	d
EIGEN_INIT_NEON_PACKET2	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	44;"	d
EIGEN_INIT_NEON_PACKET2	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	48;"	d
EIGEN_INIT_NEON_PACKET4	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	45;"	d
EIGEN_INIT_NEON_PACKET4	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	49;"	d
EIGEN_INTERNAL_COMPILATION_ERROR_OR_YOU_MADE_A_PROGRAMMING_MISTAKE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        EIGEN_INTERNAL_COMPILATION_ERROR_OR_YOU_MADE_A_PROGRAMMING_MISTAKE,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	16;"	d
EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	18;"	d
EIGEN_INTERNAL_ERROR_PLEASE_FILE_A_BUG_REPORT	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        EIGEN_INTERNAL_ERROR_PLEASE_FILE_A_BUG_REPORT,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
EIGEN_INVERSE_H	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	11;"	d
EIGEN_INVERSE_SSE_H	./Thirdparty/sparseicp/include/Eigen/src/LU/arch/Inverse_SSE.h	28;"	d
EIGEN_IO_H	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	12;"	d
EIGEN_ITERATIVE_SOLVER_BASE_H	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	11;"	d
EIGEN_JACOBISVD_H	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	11;"	d
EIGEN_JACOBISVD_MKL_H	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD_MKL.h	34;"	d
EIGEN_JACOBI_H	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	12;"	d
EIGEN_LAZY_H	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Lazy.h	11;"	d
EIGEN_LDLT_H	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	14;"	d
EIGEN_LLT_H	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	11;"	d
EIGEN_LLT_MKL_H	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT_MKL.h	34;"	d
EIGEN_LOGICAL_XOR	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	400;"	d
EIGEN_LU_H	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	11;"	d
EIGEN_LU_STRUCTS	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	70;"	d
EIGEN_MACROS_H	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	12;"	d
EIGEN_MAJOR_VERSION	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	15;"	d
EIGEN_MAKESTRING	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	116;"	d
EIGEN_MAKESTRING2	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	115;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	./Thirdparty/g2o/g2o/types/se3quat.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::SE3Quat
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	650;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW_IF	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	624;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW_IF_VECTORIZABLE_FIXED_SIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	651;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW_NOTHROW	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	611;"	d
EIGEN_MAKE_ARRAY_FIXED_TYPEDEFS	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	262;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	256;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	284;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS_ALL_SIZES	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	268;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS_ALL_SIZES	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	283;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS_LARGE	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	286;"	d
EIGEN_MAKE_CWISE_BINARY_OP	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	404;"	d
EIGEN_MAKE_FIXED_TYPEDEFS	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	378;"	d
EIGEN_MAKE_FIXED_TYPEDEFS	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	401;"	d
EIGEN_MAKE_IMAGE_HELPERS	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	68;"	d
EIGEN_MAKE_KERNEL_HELPERS	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	67;"	d
EIGEN_MAKE_SCALAR_CWISE_UNARY_OP	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h	189;"	d
EIGEN_MAKE_SOLVE_HELPERS	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	61;"	d
EIGEN_MAKE_SPARSE_SOLVE_HELPERS	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	71;"	d
EIGEN_MAKE_TYPEDEFS	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	370;"	d
EIGEN_MAKE_TYPEDEFS	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	400;"	d
EIGEN_MAKE_TYPEDEFS	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	355;"	d
EIGEN_MAKE_TYPEDEFS	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	371;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	384;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	399;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	359;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	370;"	d
EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	51;"	d
EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	58;"	d
EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	64;"	d
EIGEN_MALLOC_ALREADY_ALIGNED	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	54;"	d
EIGEN_MALLOC_ALREADY_ALIGNED	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	56;"	d
EIGEN_MAPBASE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	12;"	d
EIGEN_MAPPED_SPARSEMATRIX_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	11;"	d
EIGEN_MAP_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	12;"	d
EIGEN_MATHFUNCTIONS_H	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	11;"	d
EIGEN_MATHFUNC_IMPL	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	54;"	d
EIGEN_MATHFUNC_RETVAL	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	55;"	d
EIGEN_MATH_FUNCTIONS_SSE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/MathFunctions.h	16;"	d
EIGEN_MATRIXBASEEIGENVALUES_H	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	12;"	d
EIGEN_MATRIXBASE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	12;"	d
EIGEN_MATRIXSTORAGE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	13;"	d
EIGEN_MATRIX_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	12;"	d
EIGEN_MEMBER_FUNCTOR	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	105;"	d
EIGEN_MEMORY_H	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	20;"	d
EIGEN_META_H	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	12;"	d
EIGEN_MINOR_H	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	11;"	d
EIGEN_MINOR_VERSION	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	16;"	d
EIGEN_MISC_IMAGE_H	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	11;"	d
EIGEN_MISC_KERNEL_H	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	11;"	d
EIGEN_MISC_SOLVE_H	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	11;"	d
EIGEN_MKL_EIG_SELFADJ	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_MKL.h	42;"	d
EIGEN_MKL_GEMV_SPECIALIZATION	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector_MKL.h	89;"	d
EIGEN_MKL_GEMV_SPECIALIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector_MKL.h	53;"	d
EIGEN_MKL_HEMM_L	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	95;"	d
EIGEN_MKL_HEMM_R	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	221;"	d
EIGEN_MKL_LLT	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT_MKL.h	45;"	d
EIGEN_MKL_LU_PARTPIV	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU_MKL.h	44;"	d
EIGEN_MKL_QR_COLPIV	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR_MKL.h	43;"	d
EIGEN_MKL_QR_NOPIV	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR_MKL.h	45;"	d
EIGEN_MKL_RANKUPDATE_C	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	99;"	d
EIGEN_MKL_RANKUPDATE_R	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	74;"	d
EIGEN_MKL_RANKUPDATE_SPECIALIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	47;"	d
EIGEN_MKL_SCHUR_COMPLEX	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur_MKL.h	42;"	d
EIGEN_MKL_SCHUR_REAL	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur_MKL.h	42;"	d
EIGEN_MKL_SUPPORT_H	./Thirdparty/sparseicp/include/Eigen/src/Core/util/MKL_support.h	34;"	d
EIGEN_MKL_SVD	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD_MKL.h	42;"	d
EIGEN_MKL_SYMM_L	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	43;"	d
EIGEN_MKL_SYMM_R	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	170;"	d
EIGEN_MKL_SYMV_SPECIALIZATION	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	74;"	d
EIGEN_MKL_SYMV_SPECIALIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	50;"	d
EIGEN_MKL_TRMM_L	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	78;"	d
EIGEN_MKL_TRMM_R	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	192;"	d
EIGEN_MKL_TRMM_SPECIALIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	53;"	d
EIGEN_MKL_TRMV_CM	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	74;"	d
EIGEN_MKL_TRMV_RM	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	159;"	d
EIGEN_MKL_TRMV_SPECIALIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	50;"	d
EIGEN_MKL_TRSM_L	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h	41;"	d
EIGEN_MKL_TRSM_R	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h	96;"	d
EIGEN_MKL_VML_DECLARE_POW_CALL	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	162;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALL	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	143;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	182;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS_COMPLEX	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	178;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS_COMPLEX_LA	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	191;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS_LA	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	195;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS_REAL	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	174;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS_REAL_LA	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	187;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALL_LA	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	152;"	d
EIGEN_MKL_VML_MODE	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	138;"	d
EIGEN_MKL_VML_SPECIALIZE_ASSIGN	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	116;"	d
EIGEN_MKL_VML_THRESHOLD	./Thirdparty/sparseicp/include/Eigen/src/Core/util/MKL_support.h	60;"	d
EIGEN_NESTBYVALUE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	12;"	d
EIGEN_NOALIAS_H	./Thirdparty/sparseicp/include/Eigen/src/Core/NoAlias.h	11;"	d
EIGEN_NO_DEBUG	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	163;"	d
EIGEN_NUMTRAITS_H	./Thirdparty/sparseicp/include/Eigen/src/Core/NumTraits.h	11;"	d
EIGEN_ONLY_USED_FOR_DEBUG	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	217;"	d
EIGEN_ORDERING_H	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Ordering.h	12;"	d
EIGEN_ORTHOMETHODS_H	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	12;"	d
EIGEN_PACKET_MATH_ALTIVEC_H	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	11;"	d
EIGEN_PACKET_MATH_NEON_H	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	13;"	d
EIGEN_PACKET_MATH_SSE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	11;"	d
EIGEN_PARALLELIZER_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/Parallelizer.h	11;"	d
EIGEN_PARAMETRIZEDLINE_H	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	12;"	d
EIGEN_PARDISOSUPPORT_H	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	33;"	d
EIGEN_PARTIALLU_H	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	12;"	d
EIGEN_PARTIALLU_LAPACK_H	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU_MKL.h	34;"	d
EIGEN_PARTIAL_REDUX_H	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	12;"	d
EIGEN_PASTIXSUPPORT_H	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	11;"	d
EIGEN_PERMISSIVE_EXPR	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	149;"	d
EIGEN_PERMISSIVE_EXPR	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	151;"	d
EIGEN_PERMUTATIONMATRIX_H	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	12;"	d
EIGEN_PLAIN_ENUM_MAX	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	376;"	d
EIGEN_PLAIN_ENUM_MIN	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	375;"	d
EIGEN_PREDICATE_SAME_MATRIX_SIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	158;"	d
EIGEN_PRODUCTBASE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	11;"	d
EIGEN_PRODUCT_PUBLIC_INTERFACE	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	46;"	d
EIGEN_QR_H	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	13;"	d
EIGEN_QR_MKL_H	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR_MKL.h	35;"	d
EIGEN_QUATERNION_H	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	12;"	d
EIGEN_RANDOM_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Random.h	11;"	d
EIGEN_REAL_QZ_H	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	11;"	d
EIGEN_REAL_SCHUR_H	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	12;"	d
EIGEN_REAL_SCHUR_MKL_H	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur_MKL.h	34;"	d
EIGEN_REDUX_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	12;"	d
EIGEN_REF_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	11;"	d
EIGEN_REPLICATE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	11;"	d
EIGEN_RESTRICT	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	285;"	d
EIGEN_RESTRICT	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	288;"	d
EIGEN_RETURNBYVALUE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	12;"	d
EIGEN_REVERSE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	13;"	d
EIGEN_ROTATION2D_H	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	11;"	d
EIGEN_ROTATIONBASE_H	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	11;"	d
EIGEN_SAEIGENSOLVER_MKL_H	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_MKL.h	34;"	d
EIGEN_SAFE_TO_USE_STANDARD_ASSERT_MACRO	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	35;"	d
EIGEN_SAFE_TO_USE_STANDARD_ASSERT_MACRO	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	37;"	d
EIGEN_SCALING_H	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	11;"	d
EIGEN_SELECT_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	11;"	d
EIGEN_SELFADJOINTEIGENSOLVER_H	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	12;"	d
EIGEN_SELFADJOINTMATRIX_H	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	11;"	d
EIGEN_SELFADJOINTRANK2UPTADE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointRank2Update.h	11;"	d
EIGEN_SELFADJOINT_MATRIX_MATRIX_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	11;"	d
EIGEN_SELFADJOINT_MATRIX_MATRIX_MKL_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	34;"	d
EIGEN_SELFADJOINT_MATRIX_VECTOR_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector.h	11;"	d
EIGEN_SELFADJOINT_MATRIX_VECTOR_MKL_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	34;"	d
EIGEN_SELFADJOINT_PRODUCT_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointProduct.h	11;"	d
EIGEN_SELFCWISEBINARYOP_H	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	11;"	d
EIGEN_SIMPLICIAL_CHOLESKY_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	11;"	d
EIGEN_SIMPLICIAL_CHOLESKY_IMPL_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h	46;"	d
EIGEN_SIZE_MAX	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	397;"	d
EIGEN_SIZE_MIN_PREFER_DYNAMIC	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	381;"	d
EIGEN_SIZE_MIN_PREFER_FIXED	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	389;"	d
EIGEN_SOLVETRIANGULAR_H	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	11;"	d
EIGEN_SPARSEDENSEPRODUCT_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	11;"	d
EIGEN_SPARSELU_GEMM_KERNEL_H	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	11;"	d
EIGEN_SPARSELU_MEMORY	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Memory.h	32;"	d
EIGEN_SPARSELU_SUPERNODAL_MATRIX_H	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	12;"	d
EIGEN_SPARSELU_UTILS_H	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Utils.h	12;"	d
EIGEN_SPARSEMATRIXBASE_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	11;"	d
EIGEN_SPARSEMATRIX_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	11;"	d
EIGEN_SPARSEPRODUCT_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	11;"	d
EIGEN_SPARSEREDUX_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseRedux.h	11;"	d
EIGEN_SPARSESPARSEPRODUCTWITHPRUNING_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	11;"	d
EIGEN_SPARSETRANSPOSE_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTranspose.h	11;"	d
EIGEN_SPARSETRIANGULARSOLVER_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	11;"	d
EIGEN_SPARSEUTIL_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	11;"	d
EIGEN_SPARSEVECTOR_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	11;"	d
EIGEN_SPARSEVIEW_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	12;"	d
EIGEN_SPARSE_AMD_H	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Amd.h	32;"	d
EIGEN_SPARSE_BLOCK_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	11;"	d
EIGEN_SPARSE_CWISE_BINARY_OP_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	11;"	d
EIGEN_SPARSE_CWISE_PRODUCT_RETURN_TYPE	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	320;"	d
EIGEN_SPARSE_CWISE_UNARY_OP_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	11;"	d
EIGEN_SPARSE_DIAGONAL_PRODUCT_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	11;"	d
EIGEN_SPARSE_DOT_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDot.h	11;"	d
EIGEN_SPARSE_FUZZY_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseFuzzy.h	11;"	d
EIGEN_SPARSE_INHERIT_ASSIGNMENT_OPERATOR	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	21;"	d
EIGEN_SPARSE_INHERIT_ASSIGNMENT_OPERATORS	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	39;"	d
EIGEN_SPARSE_INHERIT_SCALAR_ASSIGNMENT_OPERATOR	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	32;"	d
EIGEN_SPARSE_LU_H	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	13;"	d
EIGEN_SPARSE_PERMUTATION_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	11;"	d
EIGEN_SPARSE_PUBLIC_INTERFACE	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	62;"	d
EIGEN_SPARSE_QR_H	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	12;"	d
EIGEN_SPARSE_SELFADJOINTVIEW_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	11;"	d
EIGEN_SPARSE_SOLVE_H	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	11;"	d
EIGEN_SPARSE_TRIANGULARVIEW_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	12;"	d
EIGEN_STABLENORM_H	./Thirdparty/sparseicp/include/Eigen/src/Core/StableNorm.h	11;"	d
EIGEN_STACK_ALLOCATION_LIMIT	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	292;"	d
EIGEN_STATIC_ASSERT	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	106;"	d
EIGEN_STATIC_ASSERT	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	32;"	d
EIGEN_STATIC_ASSERT_ARRAYXPR	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	195;"	d
EIGEN_STATIC_ASSERT_DYNAMIC_SIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	136;"	d
EIGEN_STATIC_ASSERT_FIXED_SIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	131;"	d
EIGEN_STATIC_ASSERT_H	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	12;"	d
EIGEN_STATIC_ASSERT_INDEX_BASED_ACCESS	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	14;"	d
EIGEN_STATIC_ASSERT_LVALUE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	191;"	d
EIGEN_STATIC_ASSERT_MATRIX_SPECIFIC_SIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	146;"	d
EIGEN_STATIC_ASSERT_NON_INTEGER	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	172;"	d
EIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	181;"	d
EIGEN_STATIC_ASSERT_SAME_VECTOR_SIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	151;"	d
EIGEN_STATIC_ASSERT_SAME_XPR_KIND	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	199;"	d
EIGEN_STATIC_ASSERT_SIZE_1x1	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	186;"	d
EIGEN_STATIC_ASSERT_VECTOR_ONLY	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	126;"	d
EIGEN_STATIC_ASSERT_VECTOR_SPECIFIC_SIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	141;"	d
EIGEN_STDDEQUE_H	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdDeque.h	12;"	d
EIGEN_STDLIST_H	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdList.h	11;"	d
EIGEN_STDVECTOR_H	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdVector.h	12;"	d
EIGEN_STD_DEQUE_SPECIALIZATION_BODY	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdDeque.h	60;"	d
EIGEN_STD_LIST_SPECIALIZATION_BODY	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdList.h	60;"	d
EIGEN_STD_VECTOR_SPECIALIZATION_BODY	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdVector.h	49;"	d
EIGEN_STL_DETAILS_H	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	12;"	d
EIGEN_STRIDE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	11;"	d
EIGEN_STRONG_INLINE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	122;"	d
EIGEN_STRONG_INLINE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	124;"	d
EIGEN_SUITESPARSEQRSUPPORT_H	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	11;"	d
EIGEN_SUPERLUSUPPORT_H	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	11;"	d
EIGEN_SUPERLU_HAS_ILU	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	45;"	d
EIGEN_SUPERLU_HAS_ILU	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	801;"	d
EIGEN_SWAP_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	11;"	d
EIGEN_TRANSFORM_H	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	13;"	d
EIGEN_TRANSLATION_H	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	11;"	d
EIGEN_TRANSPOSE_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	12;"	d
EIGEN_TRANSPOSITIONS_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	11;"	d
EIGEN_TRIANGULARMATRIXVECTOR_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	11;"	d
EIGEN_TRIANGULARMATRIX_H	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	12;"	d
EIGEN_TRIANGULAR_MATRIX_MATRIX_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	11;"	d
EIGEN_TRIANGULAR_MATRIX_MATRIX_MKL_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	34;"	d
EIGEN_TRIANGULAR_MATRIX_VECTOR_MKL_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	34;"	d
EIGEN_TRIANGULAR_SOLVER2_H	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/TriangularSolver.h	11;"	d
EIGEN_TRIANGULAR_SOLVER_MATRIX_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverMatrix.h	11;"	d
EIGEN_TRIANGULAR_SOLVER_MATRIX_MKL_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h	34;"	d
EIGEN_TRIANGULAR_SOLVER_VECTOR_H	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverVector.h	11;"	d
EIGEN_TRIDIAGONALIZATION_H	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	12;"	d
EIGEN_TUNE_TRIANGULAR_PANEL_WIDTH	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/Default/Settings.h	38;"	d
EIGEN_UMEYAMA_H	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Umeyama.h	11;"	d
EIGEN_UMFPACKSUPPORT_H	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	11;"	d
EIGEN_UNROLLING_LIMIT	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/Default/Settings.h	24;"	d
EIGEN_UNUSED	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	235;"	d
EIGEN_UNUSED_VARIABLE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	246;"	d
EIGEN_USER_ALIGN16	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	278;"	d
EIGEN_USER_ALIGN_TO_BOUNDARY	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	277;"	d
EIGEN_USE_BLAS	./Thirdparty/sparseicp/include/Eigen/src/Core/util/MKL_support.h	38;"	d
EIGEN_USE_LAPACKE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/MKL_support.h	41;"	d
EIGEN_USE_LAPACKE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/MKL_support.h	49;"	d
EIGEN_USE_MKL	./Thirdparty/sparseicp/include/Eigen/src/Core/util/MKL_support.h	53;"	d
EIGEN_USE_MKL_VML	./Thirdparty/sparseicp/include/Eigen/src/Core/util/MKL_support.h	44;"	d
EIGEN_USING_ARRAY_TYPEDEFS	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	299;"	d
EIGEN_USING_ARRAY_TYPEDEFS_FOR_TYPE	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	293;"	d
EIGEN_USING_ARRAY_TYPEDEFS_FOR_TYPE_AND_SIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	288;"	d
EIGEN_VECTORBLOCK_H	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorBlock.h	12;"	d
EIGEN_VERSION_AT_LEAST	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	18;"	d
EIGEN_VISITOR_H	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	11;"	d
EIGEN_WARNINGS_DISABLED	./Thirdparty/sparseicp/include/Eigen/src/Core/util/DisableStupidWarnings.h	2;"	d
EIGEN_WARNINGS_DISABLED	./Thirdparty/sparseicp/include/Eigen/src/Core/util/ReenableStupidWarnings.h	2;"	d
EIGEN_WORKAROUND_MSVC_STL_SUPPORT	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	54;"	d
EIGEN_WORLD_VERSION	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	14;"	d
EIGEN_XPRHELPER_H	./Thirdparty/sparseicp/include/Eigen/src/Core/util/XprHelper.h	12;"	d
EQUALS	./Thirdparty/DBoW2/build/Makefile	/^EQUALS = =$/;"	m
EQUALS	./Thirdparty/g2o/build/Makefile	/^EQUALS = =$/;"	m
EQUALS	./build/Makefile	/^EQUALS = =$/;"	m
EQUALS	./cmake-build-debug/Makefile	/^EQUALS = =$/;"	m
Edge	./Thirdparty/g2o/g2o/core/hyper_graph.cpp	/^  HyperGraph::Edge::Edge(int id) : _id(id)$/;"	f	class:g2o::HyperGraph::Edge
Edge	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^      class  Edge : public HyperGraphElement {$/;"	c	class:g2o::HyperGraph
Edge	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::Edge::Edge() :$/;"	f	class:g2o::OptimizableGraph::Edge
Edge	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    class  Edge: public HyperGraph::Edge {$/;"	c	struct:g2o::OptimizableGraph
EdgeContainer	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    typedef std::vector<OptimizableGraph::Edge*>        EdgeContainer;$/;"	t	struct:g2o::OptimizableGraph
EdgeIDCompare	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    struct  EdgeIDCompare {$/;"	s	struct:g2o::OptimizableGraph
EdgeInverseSim3ProjectXYZ	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp	/^  EdgeInverseSim3ProjectXYZ::EdgeInverseSim3ProjectXYZ() :$/;"	f	class:g2o::EdgeInverseSim3ProjectXYZ
EdgeInverseSim3ProjectXYZ	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^class EdgeInverseSim3ProjectXYZ : public  BaseBinaryEdge<2, Vector2d,  VertexSBAPointXYZ, VertexSim3Expmap>$/;"	c	namespace:g2o
EdgeSE3ProjectXYZ	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^EdgeSE3ProjectXYZ::EdgeSE3ProjectXYZ() : BaseBinaryEdge<2, Vector2d, VertexSBAPointXYZ, VertexSE3Expmap>() {$/;"	f	class:g2o::EdgeSE3ProjectXYZ
EdgeSE3ProjectXYZ	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^class  EdgeSE3ProjectXYZ: public  BaseBinaryEdge<2, Vector2d, VertexSBAPointXYZ, VertexSE3Expmap>{$/;"	c	namespace:g2o
EdgeSE3ProjectXYZOnlyPose	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  EdgeSE3ProjectXYZOnlyPose(){}$/;"	f	class:g2o::EdgeSE3ProjectXYZOnlyPose
EdgeSE3ProjectXYZOnlyPose	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^class  EdgeSE3ProjectXYZOnlyPose: public  BaseUnaryEdge<2, Vector2d, VertexSE3Expmap>{$/;"	c	namespace:g2o
EdgeSet	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^      typedef std::set<Edge*>                           EdgeSet;$/;"	t	class:g2o::HyperGraph
EdgeSim3	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp	/^  EdgeSim3::EdgeSim3() :$/;"	f	class:g2o::EdgeSim3
EdgeSim3	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^  class EdgeSim3 : public BaseBinaryEdge<7, Sim3, VertexSim3Expmap, VertexSim3Expmap>$/;"	c	namespace:g2o
EdgeSim3ProjectXYZ	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp	/^  EdgeSim3ProjectXYZ::EdgeSim3ProjectXYZ() :$/;"	f	class:g2o::EdgeSim3ProjectXYZ
EdgeSim3ProjectXYZ	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^class EdgeSim3ProjectXYZ : public  BaseBinaryEdge<2, Vector2d,  VertexSBAPointXYZ, VertexSim3Expmap>$/;"	c	namespace:g2o
EdgeStereoSE3ProjectXYZ	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^EdgeStereoSE3ProjectXYZ::EdgeStereoSE3ProjectXYZ() : BaseBinaryEdge<3, Vector3d, VertexSBAPointXYZ, VertexSE3Expmap>() {$/;"	f	class:g2o::EdgeStereoSE3ProjectXYZ
EdgeStereoSE3ProjectXYZ	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^class  EdgeStereoSE3ProjectXYZ: public  BaseBinaryEdge<3, Vector3d, VertexSBAPointXYZ, VertexSE3Expmap>{$/;"	c	namespace:g2o
EdgeStereoSE3ProjectXYZOnlyPose	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  EdgeStereoSE3ProjectXYZOnlyPose(){}$/;"	f	class:g2o::EdgeStereoSE3ProjectXYZOnlyPose
EdgeStereoSE3ProjectXYZOnlyPose	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^class  EdgeStereoSE3ProjectXYZOnlyPose: public  BaseUnaryEdge<3, Vector3d, VertexSE3Expmap>{$/;"	c	namespace:g2o
EigVecMask	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  EigVecMask = EigenvaluesOnly | ComputeEigenvectors,$/;"	e	enum:Eigen::DecompositionOptions
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT_MKL.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/CommaInitializer.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/CoreIterators.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Fuzzy.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/GlobalFunctions.h	/^namespace Eigen$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/NoAlias.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/NumTraits.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Random.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/StableNorm.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorBlock.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix_MKL.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector_MKL.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/Parallelizer.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointProduct.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointRank2Update.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverMatrix.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverVector.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/util/ForwardDeclarations.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/util/MKL_support.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	/^    namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^    namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Core/util/XprHelper.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Block.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Cwise.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Lazy.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LeastSquares.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Memory.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/QR.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/TriangularSolver.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/VectorBlock.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur_MKL.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur_MKL.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_MKL.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Geometry/EulerAngles.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Umeyama.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Geometry/arch/Geometry_SSE.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Householder/BlockHouseholder.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Householder/Householder.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/LU/Determinant.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU_MKL.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/LU/arch/Inverse_SSE.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/MetisSupport/MetisSupport.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Amd.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Ordering.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR_MKL.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR_MKL.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD_MKL.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseColEtree.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDot.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseRedux.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTranspose.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLUImpl.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Memory.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Utils.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_bmod.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_panel_bmod.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_pivotL.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_pruneL.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_relax_snode.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^namespace Eigen {$/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^namespace Eigen { $/;"	n
Eigen	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^namespace Eigen { $/;"	n
EigenBase	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^template<typename Derived> struct EigenBase$/;"	s	namespace:Eigen
EigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    EigenSolver(Index size)$/;"	f	class:Eigen::EigenSolver
EigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    EigenSolver(const MatrixType& matrix, bool computeEigenvectors = true)$/;"	f	class:Eigen::EigenSolver
EigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^ EigenSolver() : m_eivec(), m_eivalues(), m_isInitialized(false), m_realSchur(), m_matT(), m_tmp() {}$/;"	f	class:Eigen::EigenSolver
EigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^template<typename _MatrixType> class EigenSolver$/;"	c	namespace:Eigen
Eigen_BaseClassForSpecializationOfGlobalMathFuncImpl	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    typedef ArrayBase Eigen_BaseClassForSpecializationOfGlobalMathFuncImpl;$/;"	t	class:Eigen::ArrayBase
EigenvalueType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options&(~RowMajor), MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::ComplexEigenSolver
EigenvalueType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::EigenSolver
EigenvalueType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef CwiseBinaryOp<internal::scalar_quotient_op<ComplexScalar,Scalar>,ComplexVectorType,VectorType> EigenvalueType;$/;"	t	class:Eigen::GeneralizedEigenSolver
EigenvalueType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::RealQZ
EigenvalueType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::RealSchur
EigenvaluesOnly	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  EigenvaluesOnly     = 0x40,$/;"	e	enum:Eigen::DecompositionOptions
EigenvaluesReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef Matrix<typename NumTraits<typename internal::traits<Derived>::Scalar>::Real, internal::traits<Derived>::ColsAtCompileTime, 1> EigenvaluesReturnType;$/;"	t	class:Eigen::DenseBase
EigenvaluesReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    typedef Matrix<std::complex<RealScalar>, internal::traits<Derived>::ColsAtCompileTime, 1, ColMajor> EigenvaluesReturnType;$/;"	t	class:Eigen::MatrixBase
EigenvaluesReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    typedef Matrix<RealScalar, internal::traits<MatrixType>::ColsAtCompileTime, 1> EigenvaluesReturnType;$/;"	t	class:Eigen::SelfAdjointView
EigenvectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> EigenvectorType;$/;"	t	class:Eigen::ComplexEigenSolver
EigenvectorsType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> EigenvectorsType;$/;"	t	class:Eigen::EigenSolver
EigenvectorsType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> EigenvectorsType;$/;"	t	class:Eigen::GeneralizedEigenSolver
ElementType	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		typedef T ElementType;$/;"	t	struct:nanoflann::L1_Adaptor
ElementType	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		typedef T ElementType;$/;"	t	struct:nanoflann::L2_Adaptor
ElementType	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		typedef T ElementType;$/;"	t	struct:nanoflann::L2_Simple_Adaptor
ElementType	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		typedef typename Distance::ElementType  ElementType;$/;"	t	class:nanoflann::KDTreeSingleIndexAdaptor
ElseMatrixNested	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^  typedef typename ElseMatrixType::Nested ElseMatrixNested;$/;"	t	struct:Eigen::internal::traits
EraseChild	./src/KeyFrame.cc	/^void KeyFrame::EraseChild(KeyFrame *pKF)$/;"	f	class:ORB_SLAM2::KeyFrame
EraseConnection	./src/KeyFrame.cc	/^void KeyFrame::EraseConnection(KeyFrame* pKF)$/;"	f	class:ORB_SLAM2::KeyFrame
EraseKeyFrame	./src/Map.cc	/^void Map::EraseKeyFrame(KeyFrame *pKF)$/;"	f	class:ORB_SLAM2::Map
EraseMapPoint	./src/Map.cc	/^void Map::EraseMapPoint(MapPoint *pMP)$/;"	f	class:ORB_SLAM2::Map
EraseMapPointMatch	./src/KeyFrame.cc	/^void KeyFrame::EraseMapPointMatch(MapPoint* pMP)$/;"	f	class:ORB_SLAM2::KeyFrame
EraseMapPointMatch	./src/KeyFrame.cc	/^void KeyFrame::EraseMapPointMatch(const size_t &idx)$/;"	f	class:ORB_SLAM2::KeyFrame
EraseObservation	./src/MapPoint.cc	/^void MapPoint::EraseObservation(KeyFrame* pKF)$/;"	f	class:ORB_SLAM2::MapPoint
ErrorVector	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      typedef typename BaseEdge<D,E>::ErrorVector ErrorVector;$/;"	t	class:g2o::BaseBinaryEdge
ErrorVector	./Thirdparty/g2o/g2o/core/base_edge.h	/^      typedef Matrix<double, D, 1> ErrorVector;$/;"	t	class:g2o::BaseEdge
ErrorVector	./Thirdparty/g2o/g2o/core/base_multi_edge.h	/^      typedef typename BaseEdge<D,E>::ErrorVector ErrorVector;$/;"	t	class:g2o::BaseMultiEdge
ErrorVector	./Thirdparty/g2o/g2o/core/base_unary_edge.h	/^      typedef typename BaseEdge<D,E>::ErrorVector ErrorVector;$/;"	t	class:g2o::BaseUnaryEdge
EssentialVectorType	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    typedef typename internal::hseq_side_dependent_impl<VectorsType,CoeffsType,Side>::EssentialVectorType EssentialVectorType;$/;"	t	class:Eigen::HouseholderSequence
EssentialVectorType	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^  typedef Block<const VectorsType, Dynamic, 1> EssentialVectorType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
EssentialVectorType	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^  typedef Transpose<Block<const VectorsType, 1, Dynamic> > EssentialVectorType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
EstimatePropagator	./Thirdparty/g2o/g2o/core/estimate_propagator.cpp	/^  EstimatePropagator::EstimatePropagator(OptimizableGraph* g): _graph(g)$/;"	f	class:g2o::EstimatePropagator
EstimatePropagator	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^  class  EstimatePropagator {$/;"	c	namespace:g2o
EstimatePropagatorCost	./Thirdparty/g2o/g2o/core/estimate_propagator.cpp	/^  EstimatePropagatorCost::EstimatePropagatorCost (SparseOptimizer* graph) :$/;"	f	class:g2o::EstimatePropagatorCost
EstimatePropagatorCost	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^  class  EstimatePropagatorCost {$/;"	c	namespace:g2o
EstimatePropagatorCostOdometry	./Thirdparty/g2o/g2o/core/estimate_propagator.cpp	/^  EstimatePropagatorCostOdometry::EstimatePropagatorCostOdometry(SparseOptimizer* graph) :$/;"	f	class:g2o::EstimatePropagatorCostOdometry
EstimatePropagatorCostOdometry	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^  class  EstimatePropagatorCostOdometry : public EstimatePropagatorCost {$/;"	c	namespace:g2o
EstimateType	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    typedef T EstimateType;$/;"	t	class:g2o::BaseVertex
EvalBeforeAssigningBit	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^const unsigned int EvalBeforeAssigningBit = 0x4;$/;"	m	namespace:Eigen
EvalBeforeNestingBit	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^const unsigned int EvalBeforeNestingBit = 0x2;$/;"	m	namespace:Eigen
EvalReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::add_const_on_value_type<typename internal::eval<Derived>::type>::type EvalReturnType;$/;"	t	class:Eigen::DenseBase
EvalToRowMajor	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      EvalToRowMajor = (MaxRowsAtCompileTime==1&&MaxColsAtCompileTime!=1) ? 1$/;"	e	enum:Eigen::internal::traits::__anon46
EvalToRowMajor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    EvalToRowMajor = (RhsFlags & LhsFlags & RowMajorBit),$/;"	e	enum:Eigen::internal::traits::__anon421
ExpandMem	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  enum { ExpandMem = true };$/;"	e	enum:Eigen::internal::column_dfs_traits::__anon393
ExpandMem	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  enum { ExpandMem = false };$/;"	e	enum:Eigen::internal::panel_dfs_traits::__anon392
ExpressionType	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^  typedef MatrixType ExpressionType;$/;"	t	struct:Eigen::internal::traits
ExpressionType	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^  typedef MatrixType ExpressionType;$/;"	t	struct:Eigen::internal::traits
ExpressionTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^        ExpressionType, const ExpressionType&>::type ExpressionTypeNested;$/;"	t	class:Eigen::Flagged
ExpressionTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^        ExpressionType, ExpressionType&>::type ExpressionTypeNested;$/;"	t	class:Eigen::VectorwiseOp
ExpressionTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Cwise.h	/^        ExpressionType, const ExpressionType&>::type ExpressionTypeNested;$/;"	t	class:Eigen::Cwise
ExpressionTypeNestedCleaned	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::remove_all<ExpressionTypeNested>::type ExpressionTypeNestedCleaned;$/;"	t	class:Eigen::VectorwiseOp
ExtendedType	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    template<typename OtherDerived> struct ExtendedType {$/;"	s	class:Eigen::VectorwiseOp
ExtractORB	./src/Frame.cc	/^void Frame::ExtractORB(int flag, const cv::Mat &im)$/;"	f	class:ORB_SLAM2::Frame
ExtractType	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  typedef Transpose<const typename Base::_ExtractType>  ExtractType; \/\/ const to get rid of a compile error; anyway blas traits are only used on the RHS$/;"	t	struct:Eigen::internal::blas_traits
ExtractType	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  typedef const XprType& ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
ExtractType	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename Base::ExtractType ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
ExtractorNode	./include/ORBextractor.h	/^    ExtractorNode():bNoMore(false){}$/;"	f	class:ORB_SLAM2::ExtractorNode
ExtractorNode	./include/ORBextractor.h	/^class ExtractorNode$/;"	c	namespace:ORB_SLAM2
FAIR	./Thirdparty/sparseicp/ICP.h	/^        FAIR,$/;"	e	enum:ICP::Function
FAST_SCORE	./include/ORBextractor.h	/^    enum {HARRIS_SCORE=0, FAST_SCORE=1 };$/;"	e	enum:ORB_SLAM2::ORBextractor::__anon1
FClass	./Thirdparty/DBoW2/DBoW2/FClass.h	/^class FClass$/;"	c	namespace:DBoW2
FG_BLACK	./Thirdparty/g2o/g2o/stuff/color_macros.h	54;"	d
FG_BLUE	./Thirdparty/g2o/g2o/stuff/color_macros.h	60;"	d
FG_GREEN	./Thirdparty/g2o/g2o/stuff/color_macros.h	56;"	d
FG_LIGHTBLUE	./Thirdparty/g2o/g2o/stuff/color_macros.h	58;"	d
FG_MAGENTA	./Thirdparty/g2o/g2o/stuff/color_macros.h	59;"	d
FG_NORM	./Thirdparty/g2o/g2o/stuff/color_macros.h	63;"	d
FG_RED	./Thirdparty/g2o/g2o/stuff/color_macros.h	55;"	d
FG_WHITE	./Thirdparty/g2o/g2o/stuff/color_macros.h	61;"	d
FG_YELLOW	./Thirdparty/g2o/g2o/stuff/color_macros.h	57;"	d
FIXED	./Thirdparty/g2o/g2o/stuff/macros.h	128;"	d
FLOATING_POINT_ARGUMENT_PASSED__INTEGER_WAS_EXPECTED	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        FLOATING_POINT_ARGUMENT_PASSED__INTEGER_WAS_EXPECTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
FORB	./Thirdparty/DBoW2/DBoW2/FORB.h	/^class FORB: protected FClass$/;"	c	namespace:DBoW2
FPCS	./4pcs/Registration.cc	/^    namespace FPCS {$/;"	n	namespace:pcl	file:
FPCS	./4pcs/Registration.h	/^    namespace FPCS {$/;"	n	namespace:pcl
FPCSRegistration	./4pcs/Registration.h	/^            FPCSRegistration() : iterations_(5),$/;"	f	class:pcl::FPCS::FPCSRegistration
FPCSRegistration	./4pcs/Registration.h	/^        class FPCSRegistration {$/;"	c	namespace:pcl::FPCS
FRAMEDRAWER_H	./include/FrameDrawer.h	22;"	d
FRAME_GRID_COLS	./include/Frame.h	38;"	d
FRAME_GRID_ROWS	./include/Frame.h	37;"	d
FRAME_H	./include/Frame.h	22;"	d
FT_BOLD	./Thirdparty/g2o/g2o/stuff/color_macros.h	31;"	d
FT_UNDERLINE	./Thirdparty/g2o/g2o/stuff/color_macros.h	32;"	d
Factor	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    Factor = (RowFactor==Dynamic || ColFactor==Dynamic) ? Dynamic : RowFactor*ColFactor$/;"	e	enum:Eigen::internal::traits::__anon336
FactorType	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef SparseMatrix<Scalar,RowMajor> FactorType;$/;"	t	class:Eigen::IncompleteLUT
Factory	./Thirdparty/g2o/g2o/core/factory.cpp	/^Factory::Factory()$/;"	f	class:g2o::Factory
Factory	./Thirdparty/g2o/g2o/core/factory.h	/^  class  Factory$/;"	c	namespace:g2o
Fail	./Thirdparty/g2o/g2o/core/optimization_algorithm.h	/^      enum  SolverResult {Terminate=2, OK=1, Fail=-1};$/;"	e	enum:g2o::OptimizationAlgorithm::SolverResult
FeatureVector	./Thirdparty/DBoW2/DBoW2/FeatureVector.cpp	/^FeatureVector::FeatureVector(void)$/;"	f	class:DBoW2::FeatureVector
FeatureVector	./Thirdparty/DBoW2/DBoW2/FeatureVector.h	/^class FeatureVector: $/;"	c	namespace:DBoW2
FindFundamental	./src/Initializer.cc	/^void Initializer::FindFundamental(vector<bool> &vbMatchesInliers, float &score, cv::Mat &F21)$/;"	f	class:ORB_SLAM2::Initializer
FindHomography	./src/Initializer.cc	/^void Initializer::FindHomography(vector<bool> &vbMatchesInliers, float &score, cv::Mat &H21)$/;"	f	class:ORB_SLAM2::Initializer
FixPointInitialization	./src/Tracking.cc	/^void Tracking::FixPointInitialization() {$/;"	f	class:ORB_SLAM2::Tracking
FixedSegmentReturnType	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^template<int Size> struct FixedSegmentReturnType { typedef VectorBlock<Derived, Size> Type; };$/;"	s
Flagged	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    inline Flagged(const ExpressionType& matrix) : m_matrix(matrix) {}$/;"	f	class:Eigen::Flagged
Flagged	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^template<typename ExpressionType, unsigned int Added, unsigned int Removed> class Flagged$/;"	c	namespace:Eigen
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^      Flags = internal::traits<Derived>::Flags,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon10
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    Flags = LvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon13
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    Flags = LvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon14
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    Flags = Flags0 | FlagsLinearAccessBit | FlagsLvalueBit | FlagsRowMajorBit$/;"	e	enum:Eigen::internal::traits::__anon184
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    Flags = (Flags0 & ~RowMajorBit) | (LhsFlags & RowMajorBit),$/;"	e	enum:Eigen::internal::traits::__anon179
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^    Flags = (traits<PlainObjectType>::Flags$/;"	e	enum:Eigen::internal::traits::__anon329
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^    Flags = _XprTypeNested::Flags & ($/;"	e	enum:Eigen::internal::traits::__anon69
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    Flags = (traits<_MatrixTypeNested>::Flags & (HereditaryBits | LvalueBit | LinearAccessBit | DirectAccessBit)),$/;"	e	enum:Eigen::internal::traits::__anon139
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^      Flags = internal::traits<Derived>::Flags,$/;"	e	enum:Eigen::DenseBase::__anon255
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    Flags = (unsigned int)_MatrixTypeNested::Flags & (HereditaryBits | LinearAccessBit | MaskLvalueBit | DirectAccessBit) & ~RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon233
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^      Flags = 0$/;"	e	enum:Eigen::DiagonalBase::__anon197
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    Flags =  traits<DiagonalVectorType>::Flags & LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon199
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    Flags = LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon198
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    Flags = ((HereditaryBits|_LinearAccessMask) & (unsigned int)(MatrixType::Flags)) | (_Vectorizable ? PacketAccessBit : 0) | AlignedBit,\/\/(int(MatrixType::Flags)&int(DiagonalType::DiagonalVectorType::Flags)&AlignedBit),$/;"	e	enum:Eigen::internal::traits::__anon171
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^  enum { Flags = (ExpressionType::Flags | Added) & ~Removed };$/;"	e	enum:Eigen::internal::traits::__anon246
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    Flags = KeepsPacketAccess ? int(Flags3) : (int(Flags3) & ~PacketAccessBit)$/;"	e	enum:Eigen::internal::traits::__anon330
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    Flags = compute_matrix_flags<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::ret,$/;"	e	enum:Eigen::internal::traits::__anon15
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^      Flags = Traits::Flags,$/;"	e	enum:Eigen::PermutationBase::__anon27
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^      Flags = Traits::Flags,$/;"	e	enum:Eigen::Transpose::__anon29
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    Flags = 0,$/;"	e	enum:Eigen::internal::traits::__anon28
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    Flags = (MaxRowsAtCompileTime==1 ? RowMajorBit : 0)$/;"	e	enum:Eigen::internal::traits::__anon65
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^    Flags = traits<Map<_PlainObjectType, _Options, _StrideType> >::Flags | NestByRefBit$/;"	e	enum:Eigen::internal::traits::__anon185
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    Flags = (_MatrixTypeNested::Flags & HereditaryBits & ~RowMajorBit) | (IsRowMajor ? RowMajorBit : 0),$/;"	e	enum:Eigen::internal::traits::__anon337
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^    Flags = (traits<typename traits<Derived>::ReturnType>::Flags$/;"	e	enum:Eigen::internal::traits::__anon177
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    Flags = int(_MatrixTypeNested::Flags) & (HereditaryBits | LvalueBit | PacketAccessBit | LinearAccess),$/;"	e	enum:Eigen::internal::traits::__anon241
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    Flags = (unsigned int)ThenMatrixType::Flags & ElseMatrixType::Flags & HereditaryBits,$/;"	e	enum:Eigen::internal::traits::__anon32
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    Flags =  MatrixTypeNestedCleaned::Flags & (HereditaryBits)$/;"	e	enum:Eigen::internal::traits::__anon332
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    Flags = traits<CwiseBinaryOp<BinaryOp,Lhs,Rhs> >::Flags | (Lhs::Flags&DirectAccessBit) | (Lhs::Flags&LvalueBit),$/;"	e	enum:Eigen::internal::traits::__anon26
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    Flags = Flags1 ^ RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon62
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    Flags = (MatrixTypeNestedCleaned::Flags & (HereditaryBits) & (~(PacketAccessBit | DirectAccessBit | LinearAccessBit))) | Mode,$/;"	e	enum:Eigen::internal::traits::__anon230
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    Flags = (Flags0 & ~RowMajorBit) | (RowsAtCompileTime == 1 ? RowMajorBit : 0),$/;"	e	enum:Eigen::internal::traits::__anon21
Flags	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      Flags = ((unsigned int)(LhsFlags | RhsFlags) & HereditaryBits & ~RowMajorBit)$/;"	e	enum:Eigen::internal::traits::__anon46
Flags	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^    Flags = _MatrixTypeNested::Flags & (HereditaryBits | LvalueBit),$/;"	e	enum:Eigen::internal::traits::__anon388
Flags	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    Flags = ColsAtCompileTime==1 ? (TmpFlags & ~RowMajorBit)$/;"	e	enum:Eigen::internal::traits::__anon429
Flags	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^      Flags = TraitsBase::Flags & ~LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon448
Flags	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    Flags = Eigen::internal::traits<Derived>::Flags$/;"	e	enum:Eigen::QuaternionBase::__anon445
Flags	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    Flags = IsAligned ? (AlignedBit | LvalueBit) : LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon446
Flags	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    Flags = 0$/;"	e	enum:Eigen::internal::traits::__anon3
Flags	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    Flags = Tr ? RowMajorBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon406
Flags	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    Flags = (SparseFlags&RowMajorBit),$/;"	e	enum:Eigen::internal::traits::__anon407
Flags	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    Flags = 0,$/;"	e	enum:Eigen::internal::traits::__anon411
Flags	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    Flags = _Options | NestByRefBit | LvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon410
Flags	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^      Flags = internal::traits<Derived>::Flags,$/;"	e	enum:Eigen::SparseMatrixBase::__anon419
Flags	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    Flags = (int(LhsFlags | RhsFlags) & HereditaryBits & RemovedBits)$/;"	e	enum:Eigen::internal::traits::__anon421
Flags	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    Flags = _Options | NestByRefBit | LvalueBit | (IsColVector ? 0 : RowMajorBit),$/;"	e	enum:Eigen::internal::traits::__anon396
Flags	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^    Flags = int(traits<MatrixType>::Flags) & (RowMajorBit)$/;"	e	enum:Eigen::internal::traits::__anon400
Flags0	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    Flags0 = traits<XprType>::Flags & ( (HereditaryBits & ~RowMajorBit) |$/;"	e	enum:Eigen::internal::traits::__anon184
Flags0	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    Flags0 = (int(LhsFlags) | int(RhsFlags)) & ($/;"	e	enum:Eigen::internal::traits::__anon179
Flags0	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    Flags0 = TraitsBase::Flags & (~NestByRefBit),$/;"	e	enum:Eigen::internal::traits::__anon330
Flags0	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    Flags0 = MatrixTypeNestedPlain::Flags & ~(LvalueBit | NestByRefBit),$/;"	e	enum:Eigen::internal::traits::__anon62
Flags0	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    Flags0 = (unsigned int)_MatrixTypeNested::Flags & HereditaryBits,$/;"	e	enum:Eigen::internal::traits::__anon21
Flags1	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    Flags1 = IsAligned ? (int(Flags0) | AlignedBit) : (int(Flags0) & ~AlignedBit),$/;"	e	enum:Eigen::internal::traits::__anon330
Flags1	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    Flags1 = Flags0 | FlagsLvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon62
Flags2	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    Flags2 = (bool(HasNoStride) || bool(PlainObjectType::IsVectorAtCompileTime))$/;"	e	enum:Eigen::internal::traits::__anon330
Flags3	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    Flags3 = is_lvalue<PlainObjectType>::value ? int(Flags2) : (int(Flags2) & ~LvalueBit),$/;"	e	enum:Eigen::internal::traits::__anon330
FlagsLinearAccessBit	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    FlagsLinearAccessBit = (RowsAtCompileTime == 1 || ColsAtCompileTime == 1) ? LinearAccessBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon184
FlagsLvalueBit	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    FlagsLvalueBit = is_lvalue<XprType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon184
FlagsLvalueBit	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    FlagsLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon62
FlagsRowMajorBit	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    FlagsRowMajorBit = IsRowMajor ? RowMajorBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon184
FloatProperty	./Thirdparty/g2o/g2o/stuff/property.h	/^  typedef Property<float> FloatProperty;$/;"	t	namespace:g2o
ForceAlignedAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^    inline ForceAlignedAccess(const ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::ForceAlignedAccess
ForceAlignedAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^template<typename ExpressionType> class ForceAlignedAccess$/;"	c	namespace:Eigen
ForceLinkFunction	./Thirdparty/g2o/g2o/stuff/misc.h	/^    typedef void (* ForceLinkFunction) (void);$/;"	t
ForceLinker	./Thirdparty/g2o/g2o/stuff/misc.h	/^    ForceLinker(ForceLinkFunction function) { (function)(); }$/;"	f	struct:g2o::ForceLinker
ForceLinker	./Thirdparty/g2o/g2o/stuff/misc.h	/^struct ForceLinker$/;"	s	namespace:g2o
Format	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^string Timestamp::Format(bool machine_friendly) const $/;"	f	class:Timestamp
Format	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^string Timestamp::Format(double s) {$/;"	f	class:Timestamp
Frame	./include/Frame.h	/^class Frame$/;"	c	namespace:ORB_SLAM2
Frame	./src/Frame.cc	/^Frame::Frame()$/;"	f	class:ORB_SLAM2::Frame
Frame	./src/Frame.cc	/^Frame::Frame(const Frame &frame)$/;"	f	class:ORB_SLAM2::Frame
Frame	./src/Frame.cc	/^Frame::Frame(const cv::Mat &imGray, const cv::Mat &imDepth, const double &timeStamp, ORBextractor* extractor,ORBVocabulary* voc, cv::Mat &K, cv::Mat &distCoef, const float &bf, const float &thDepth)$/;"	f	class:ORB_SLAM2::Frame
Frame	./src/Frame.cc	/^Frame::Frame(const cv::Mat &imGray, const double &timeStamp, ORBextractor* extractor,ORBVocabulary* voc, cv::Mat &K, cv::Mat &distCoef, const float &bf, const float &thDepth)$/;"	f	class:ORB_SLAM2::Frame
Frame	./src/Frame.cc	/^Frame::Frame(const cv::Mat &imLeft, const cv::Mat &imRight, const double &timeStamp, ORBextractor* extractorLeft, ORBextractor* extractorRight, ORBVocabulary* voc, cv::Mat &K, cv::Mat &distCoef, const float &bf, const float &thDepth)$/;"	f	class:ORB_SLAM2::Frame
FrameDrawer	./include/FrameDrawer.h	/^class FrameDrawer$/;"	c	namespace:ORB_SLAM2
FrameDrawer	./src/FrameDrawer.cc	/^FrameDrawer::FrameDrawer(Map* pMap):mpMap(pMap)$/;"	f	class:ORB_SLAM2::FrameDrawer
FromCameraToImage	./src/Sim3Solver.cc	/^void Sim3Solver::FromCameraToImage(const vector<cv::Mat> &vP3Dc, vector<cv::Mat> &vP2D, cv::Mat K)$/;"	f	class:ORB_SLAM2::Sim3Solver
FromTwoVectors	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^Quaternion<Scalar,Options> Quaternion<Scalar,Options>::FromTwoVectors(const MatrixBase<Derived1>& a, const MatrixBase<Derived2>& b)$/;"	f	class:Eigen::Quaternion
FrontierLevelCmp	./Thirdparty/g2o/g2o/core/estimate_propagator.cpp	/^  struct FrontierLevelCmp {$/;"	s	namespace:g2o	file:
FullPivHouseholderQR	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR()$/;"	f	class:Eigen::FullPivHouseholderQR
FullPivHouseholderQR	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR(Index rows, Index cols)$/;"	f	class:Eigen::FullPivHouseholderQR
FullPivHouseholderQR	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR(const MatrixType& matrix)$/;"	f	class:Eigen::FullPivHouseholderQR
FullPivHouseholderQR	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^template<typename _MatrixType> class FullPivHouseholderQR$/;"	c	namespace:Eigen
FullPivHouseholderQRMatrixQReturnType	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^  FullPivHouseholderQRMatrixQReturnType(const MatrixType&       qr,$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
FullPivHouseholderQRMatrixQReturnType	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^template<typename MatrixType> struct FullPivHouseholderQRMatrixQReturnType$/;"	s	namespace:Eigen::internal
FullPivHouseholderQRPreconditioner	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  FullPivHouseholderQRPreconditioner$/;"	e	enum:Eigen::QRPreconditioners
FullPivLU	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>::FullPivLU()$/;"	f	class:Eigen::FullPivLU
FullPivLU	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>::FullPivLU(Index rows, Index cols)$/;"	f	class:Eigen::FullPivLU
FullPivLU	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>::FullPivLU(const MatrixType& matrix)$/;"	f	class:Eigen::FullPivLU
FullPivLU	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^template<typename _MatrixType> class FullPivLU$/;"	c	namespace:Eigen
FullPrecision	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^       FullPrecision = -2 };$/;"	e	enum:Eigen::__anon245
FullyLazyCoeffBaseProductType	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typedef CoeffBasedProduct<LhsNested, RhsNested, 0> FullyLazyCoeffBaseProductType;$/;"	t	class:Eigen::ProductBase
Function	./Thirdparty/sparseicp/ICP.h	/^    enum Function {$/;"	g	namespace:ICP
FunctorType	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^    enum {FunctorType = sizeof(testFunctor(static_cast<Func*>(0)))};$/;"	e	enum:Eigen::internal::result_of::__anon127
FunctorType	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^    enum {FunctorType = sizeof(testFunctor(static_cast<Func*>(0)))};$/;"	e	enum:Eigen::internal::result_of::__anon128
Fuse	./src/ORBmatcher.cc	/^int ORBmatcher::Fuse(KeyFrame *pKF, const vector<MapPoint *> &vpMapPoints, const float th)$/;"	f	class:ORB_SLAM2::ORBmatcher
Fuse	./src/ORBmatcher.cc	/^int ORBmatcher::Fuse(KeyFrame *pKF, cv::Mat Scw, const vector<MapPoint *> &vpPoints, float th, vector<MapPoint *> &vpReplacePoint)$/;"	f	class:ORB_SLAM2::ORBmatcher
G2OBatchStatistics	./Thirdparty/g2o/g2o/core/batch_stats.cpp	/^  G2OBatchStatistics::G2OBatchStatistics(){$/;"	f	class:g2o::G2OBatchStatistics
G2OBatchStatistics	./Thirdparty/g2o/g2o/core/batch_stats.h	/^  struct  G2OBatchStatistics {$/;"	s	namespace:g2o
G2O_AIS_GENERAL_DIJKSTRA_HH	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	28;"	d
G2O_AIS_HYPER_GRAPH_HH	./Thirdparty/g2o/g2o/core/hyper_graph.h	28;"	d
G2O_AIS_OPTIMIZABLE_GRAPH_HH_	./Thirdparty/g2o/g2o/core/optimizable_graph.h	28;"	d
G2O_ATTRIBUTE_CONSTRUCTOR	./Thirdparty/g2o/g2o/stuff/macros.h	40;"	d
G2O_ATTRIBUTE_CONSTRUCTOR	./Thirdparty/g2o/g2o/stuff/macros.h	74;"	d
G2O_ATTRIBUTE_CONSTRUCTOR	./Thirdparty/g2o/g2o/stuff/macros.h	97;"	d
G2O_ATTRIBUTE_DEPRECATED	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    G2O_ATTRIBUTE_DEPRECATED(void linearizeSystem())$/;"	f	class:g2o::SparseOptimizer
G2O_ATTRIBUTE_DEPRECATED	./Thirdparty/g2o/g2o/stuff/macros.h	102;"	d
G2O_ATTRIBUTE_DEPRECATED	./Thirdparty/g2o/g2o/stuff/macros.h	48;"	d
G2O_ATTRIBUTE_DEPRECATED	./Thirdparty/g2o/g2o/stuff/macros.h	84;"	d
G2O_ATTRIBUTE_FORMAT12	./Thirdparty/g2o/g2o/stuff/macros.h	45;"	d
G2O_ATTRIBUTE_FORMAT12	./Thirdparty/g2o/g2o/stuff/macros.h	81;"	d
G2O_ATTRIBUTE_FORMAT12	./Thirdparty/g2o/g2o/stuff/macros.h	99;"	d
G2O_ATTRIBUTE_FORMAT12	./Thirdparty/g2o/g2o/stuff/string_tools.h	/^ std::string formatString(const char* fmt, ...) G2O_ATTRIBUTE_FORMAT12;$/;"	m	namespace:g2o
G2O_ATTRIBUTE_FORMAT23	./Thirdparty/g2o/g2o/stuff/macros.h	100;"	d
G2O_ATTRIBUTE_FORMAT23	./Thirdparty/g2o/g2o/stuff/macros.h	46;"	d
G2O_ATTRIBUTE_FORMAT23	./Thirdparty/g2o/g2o/stuff/macros.h	82;"	d
G2O_ATTRIBUTE_FORMAT23	./Thirdparty/g2o/g2o/stuff/string_tools.h	/^ int strPrintf(std::string& str, const char* fmt, ...) G2O_ATTRIBUTE_FORMAT23;$/;"	m	namespace:g2o
G2O_ATTRIBUTE_UNUSED	./Thirdparty/g2o/g2o/stuff/macros.h	44;"	d
G2O_ATTRIBUTE_UNUSED	./Thirdparty/g2o/g2o/stuff/macros.h	80;"	d
G2O_ATTRIBUTE_UNUSED	./Thirdparty/g2o/g2o/stuff/macros.h	98;"	d
G2O_ATTRIBUTE_WARNING	./Thirdparty/g2o/g2o/stuff/macros.h	101;"	d
G2O_ATTRIBUTE_WARNING	./Thirdparty/g2o/g2o/stuff/macros.h	47;"	d
G2O_ATTRIBUTE_WARNING	./Thirdparty/g2o/g2o/stuff/macros.h	83;"	d
G2O_BASE_BINARY_EDGE_H	./Thirdparty/g2o/g2o/core/base_binary_edge.h	28;"	d
G2O_BASE_EDGE_H	./Thirdparty/g2o/g2o/core/base_edge.h	28;"	d
G2O_BASE_MULTI_EDGE_H	./Thirdparty/g2o/g2o/core/base_multi_edge.h	28;"	d
G2O_BASE_UNARY_EDGE_H	./Thirdparty/g2o/g2o/core/base_unary_edge.h	28;"	d
G2O_BASE_VERTEX_H	./Thirdparty/g2o/g2o/core/base_vertex.h	28;"	d
G2O_BATCH_STATS_H_	./Thirdparty/g2o/g2o/core/batch_stats.h	28;"	d
G2O_BLOCK_SOLVER_H	./Thirdparty/g2o/g2o/core/block_solver.h	28;"	d
G2O_CACHE_HH_	./Thirdparty/g2o/g2o/core/cache.h	28;"	d
G2O_COLOR_MACROS_H	./Thirdparty/g2o/g2o/stuff/color_macros.h	28;"	d
G2O_CONFIG_H	./Thirdparty/g2o/config.h	2;"	d
G2O_CORE_MATRIX_OPERATIONS_H	./Thirdparty/g2o/g2o/core/matrix_operations.h	28;"	d
G2O_CREATORS_H	./Thirdparty/g2o/g2o/core/creators.h	28;"	d
G2O_EIGEN_TYPES_H	./Thirdparty/g2o/g2o/core/eigen_types.h	28;"	d
G2O_ESTIMATE_PROPAGATOR_H	./Thirdparty/g2o/g2o/core/estimate_propagator.h	28;"	d
G2O_FACTORY_EXPORT	./Thirdparty/g2o/g2o/core/factory.h	155;"	d
G2O_FACTORY_EXPORT	./Thirdparty/g2o/g2o/core/factory.h	158;"	d
G2O_FACTORY_H	./Thirdparty/g2o/g2o/core/factory.h	28;"	d
G2O_FACTORY_IMPORT	./Thirdparty/g2o/g2o/core/factory.h	156;"	d
G2O_FACTORY_IMPORT	./Thirdparty/g2o/g2o/core/factory.h	159;"	d
G2O_FSKIP_LINE	./Thirdparty/g2o/g2o/stuff/macros.h	114;"	d
G2O_GRAPH_OPTIMIZER_CHOL_H_	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	28;"	d
G2O_GRAPH_PARAMETER_CONTAINER_HH_	./Thirdparty/g2o/g2o/core/parameter_container.h	28;"	d
G2O_GRAPH_PARAMETER_HH_	./Thirdparty/g2o/g2o/core/parameter.h	28;"	d
G2O_HYPER_GRAPH_ACTION_H	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	28;"	d
G2O_LINEAR_SOLVER_DENSE_H	./Thirdparty/g2o/g2o/solvers/linear_solver_dense.h	29;"	d
G2O_LINEAR_SOLVER_EIGEN_H	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	28;"	d
G2O_LINEAR_SOLVER_H	./Thirdparty/g2o/g2o/core/linear_solver.h	28;"	d
G2O_MACROS_H	./Thirdparty/g2o/g2o/stuff/macros.h	28;"	d
G2O_MARGINAL_COVARIANCE_CHOLESKY_H	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h	28;"	d
G2O_MATH_STUFF	./Thirdparty/g2o/g2o/types/se3_ops.h	28;"	d
G2O_MATRIX_STRUCTURE_H	./Thirdparty/g2o/g2o/core/matrix_structure.h	28;"	d
G2O_OAF_EXPORT	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	145;"	d
G2O_OAF_IMPORT	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	146;"	d
G2O_OPENMP_MUTEX	./Thirdparty/g2o/g2o/core/openmp_mutex.h	28;"	d
G2O_OPTIMIZATION_ALGORITHM_DOGLEG_H	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	28;"	d
G2O_OPTIMIZATION_ALGORITHM_GAUSS_NEWTON_H	./Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h	28;"	d
G2O_OPTIMIZATION_ALGORITHM_H	./Thirdparty/g2o/g2o/core/optimization_algorithm.h	28;"	d
G2O_OPTIMIZATION_ALGORITHM_PROPERTY_H	./Thirdparty/g2o/g2o/core/optimization_algorithm_property.h	28;"	d
G2O_OPTIMIZATION_ALGORITHM_WITH_HESSIAN_H	./Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h	28;"	d
G2O_OPTMIZATION_ALGORITHM_PROPERTY_H	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	28;"	d
G2O_OS_SPECIFIC_HH_	./Thirdparty/g2o/g2o/stuff/os_specific.h	28;"	d
G2O_PROPERTY_H_	./Thirdparty/g2o/g2o/stuff/property.h	28;"	d
G2O_REGISTER_ACTION	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	217;"	d
G2O_REGISTER_OPTIMIZATION_ALGORITHM	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	159;"	d
G2O_REGISTER_OPTIMIZATION_LIBRARY	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	152;"	d
G2O_REGISTER_ROBUST_KERNEL	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	141;"	d
G2O_REGISTER_TYPE	./Thirdparty/g2o/g2o/core/factory.h	163;"	d
G2O_REGISTER_TYPE_GROUP	./Thirdparty/g2o/g2o/core/factory.h	171;"	d
G2O_ROBUST_KERNEL_FACTORY_EXPORT	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	133;"	d
G2O_ROBUST_KERNEL_FACTORY_EXPORT	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	136;"	d
G2O_ROBUST_KERNEL_FACTORY_H	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	28;"	d
G2O_ROBUST_KERNEL_FACTORY_IMPORT	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	134;"	d
G2O_ROBUST_KERNEL_FACTORY_IMPORT	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	137;"	d
G2O_ROBUST_KERNEL_H	./Thirdparty/g2o/g2o/core/robust_kernel.h	28;"	d
G2O_ROBUST_KERNEL_IMPL_H	./Thirdparty/g2o/g2o/core/robust_kernel_impl.h	28;"	d
G2O_SBA_TYPES	./Thirdparty/g2o/g2o/types/types_sba.h	28;"	d
G2O_SE3QUAT_H_	./Thirdparty/g2o/g2o/types/se3quat.h	28;"	d
G2O_SEVEN_DOF_EXPMAP_TYPES	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	32;"	d
G2O_SIM_3	./Thirdparty/g2o/g2o/types/sim3.h	28;"	d
G2O_SIX_DOF_TYPES_EXPMAP	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	35;"	d
G2O_SOLVER_H	./Thirdparty/g2o/g2o/core/solver.h	28;"	d
G2O_SOLVER_LEVENBERG_H	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h	28;"	d
G2O_SPARSE_BLOCK_MATRIX_	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	28;"	d
G2O_SPARSE_BLOCK_MATRIX_CCS_H	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	28;"	d
G2O_SPARSE_BLOCK_MATRIX_DIAGONAL_H	./Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h	28;"	d
G2O_STRING_TOOLS_H	./Thirdparty/g2o/g2o/stuff/string_tools.h	28;"	d
G2O_STUFF_MISC_H	./Thirdparty/g2o/g2o/stuff/misc.h	28;"	d
G2O_TIMEUTIL_H	./Thirdparty/g2o/g2o/stuff/timeutil.h	28;"	d
G2O_USE_OPTIMIZATION_ALGORITHM	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	163;"	d
G2O_USE_OPTIMIZATION_LIBRARY	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	155;"	d
G2O_USE_ROBUST_KERNEL	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	145;"	d
G2O_USE_TYPE_BY_CLASS_NAME	./Thirdparty/g2o/g2o/core/factory.h	167;"	d
G2O_USE_TYPE_GROUP	./Thirdparty/g2o/g2o/core/factory.h	174;"	d
GEMM_SPECIALIZATION	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix_MKL.h	49;"	d
GET_VALUE	./src/ORBextractor.cc	118;"	d	file:
GET_VALUE	./src/ORBextractor.cc	146;"	d	file:
GemmParallelInfo	./Thirdparty/sparseicp/include/Eigen/src/Core/products/Parallelizer.h	/^  GemmParallelInfo() : sync(-1), users(0), rhs_start(0), rhs_length(0) {}$/;"	f	struct:Eigen::internal::GemmParallelInfo
GemmParallelInfo	./Thirdparty/sparseicp/include/Eigen/src/Core/products/Parallelizer.h	/^template<typename Index> struct GemmParallelInfo$/;"	s	namespace:Eigen::internal
GemmProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum { CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon78
GemvProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum { CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon78
GenEigMask	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  GenEigMask = Ax_lBx | ABx_lx | BAx_lx$/;"	e	enum:Eigen::DecompositionOptions
GeneralProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    GeneralProduct(const Lhs& a_lhs, const Rhs& a_rhs) : Base(a_lhs,a_rhs)$/;"	f	class:Eigen::GeneralProduct
GeneralProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    GeneralProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs)$/;"	f	class:Eigen::GeneralProduct
GeneralProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    GeneralProduct(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::GeneralProduct
GeneralProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^class GeneralProduct<Lhs, Rhs, GemvProduct>$/;"	c	namespace:Eigen
GeneralProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^class GeneralProduct<Lhs, Rhs, InnerProduct>$/;"	c	namespace:Eigen
GeneralProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^class GeneralProduct<Lhs, Rhs, OuterProduct>$/;"	c	namespace:Eigen
GeneralProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    GeneralProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs)$/;"	f	class:Eigen::GeneralProduct
GeneralProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^class GeneralProduct<Lhs, Rhs, GemmProduct>$/;"	c	namespace:Eigen
GeneralScoring	./Thirdparty/DBoW2/DBoW2/ScoringObject.h	/^class GeneralScoring$/;"	c	namespace:DBoW2
GeneralizedEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    GeneralizedEigenSolver() : m_eivec(), m_alphas(), m_betas(), m_isInitialized(false), m_realQZ(), m_matS(), m_tmp() {}$/;"	f	class:Eigen::GeneralizedEigenSolver
GeneralizedEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    GeneralizedEigenSolver(Index size)$/;"	f	class:Eigen::GeneralizedEigenSolver
GeneralizedEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    GeneralizedEigenSolver(const MatrixType& A, const MatrixType& B, bool computeEigenvectors = true)$/;"	f	class:Eigen::GeneralizedEigenSolver
GeneralizedEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^template<typename _MatrixType> class GeneralizedEigenSolver$/;"	c	namespace:Eigen
GeneralizedSelfAdjointEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    GeneralizedSelfAdjointEigenSolver() : Base() {}$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
GeneralizedSelfAdjointEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    GeneralizedSelfAdjointEigenSolver(Index size)$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
GeneralizedSelfAdjointEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    GeneralizedSelfAdjointEigenSolver(const MatrixType& matA, const MatrixType& matB,$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
GeneralizedSelfAdjointEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^class GeneralizedSelfAdjointEigenSolver : public SelfAdjointEigenSolver<_MatrixType>$/;"	c	namespace:Eigen
Generic	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^    Generic = 0x0,$/;"	e	enum:Eigen::Architecture::Type
GenericNumTraits	./Thirdparty/sparseicp/include/Eigen/src/Core/NumTraits.h	/^template<typename T> struct GenericNumTraits$/;"	s	namespace:Eigen
GetAction	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum Action {GetAction, SetAction};$/;"	e	enum:Eigen::Action
GetAllKeyFrames	./src/Map.cc	/^vector<KeyFrame*> Map::GetAllKeyFrames()$/;"	f	class:ORB_SLAM2::Map
GetAllMapPoints	./src/Map.cc	/^vector<MapPoint*> Map::GetAllMapPoints()$/;"	f	class:ORB_SLAM2::Map
GetBestCovisibilityKeyFrames	./src/KeyFrame.cc	/^vector<KeyFrame*> KeyFrame::GetBestCovisibilityKeyFrames(const int &N)$/;"	f	class:ORB_SLAM2::KeyFrame
GetCameraCenter	./include/Frame.h	/^    inline cv::Mat GetCameraCenter(){$/;"	f	class:ORB_SLAM2::Frame
GetCameraCenter	./src/KeyFrame.cc	/^cv::Mat KeyFrame::GetCameraCenter()$/;"	f	class:ORB_SLAM2::KeyFrame
GetChilds	./src/KeyFrame.cc	/^set<KeyFrame*> KeyFrame::GetChilds()$/;"	f	class:ORB_SLAM2::KeyFrame
GetConnectedKeyFrames	./src/KeyFrame.cc	/^set<KeyFrame*> KeyFrame::GetConnectedKeyFrames()$/;"	f	class:ORB_SLAM2::KeyFrame
GetCovisiblesByWeight	./src/KeyFrame.cc	/^vector<KeyFrame*> KeyFrame::GetCovisiblesByWeight(const int &w)$/;"	f	class:ORB_SLAM2::KeyFrame
GetCurrentOpenGLCameraMatrix	./src/MapDrawer.cc	/^void MapDrawer::GetCurrentOpenGLCameraMatrix(pangolin::OpenGlMatrix &M)$/;"	f	class:ORB_SLAM2::MapDrawer
GetDelta	./4pcs/Registration.h	/^            float GetDelta() { return delta_; }$/;"	f	class:pcl::FPCS::FPCSRegistration
GetDescriptor	./src/MapPoint.cc	/^cv::Mat MapPoint::GetDescriptor()$/;"	f	class:ORB_SLAM2::MapPoint
GetEstimatedRotation	./src/Sim3Solver.cc	/^cv::Mat Sim3Solver::GetEstimatedRotation()$/;"	f	class:ORB_SLAM2::Sim3Solver
GetEstimatedScale	./src/Sim3Solver.cc	/^float Sim3Solver::GetEstimatedScale()$/;"	f	class:ORB_SLAM2::Sim3Solver
GetEstimatedTranslation	./src/Sim3Solver.cc	/^cv::Mat Sim3Solver::GetEstimatedTranslation()$/;"	f	class:ORB_SLAM2::Sim3Solver
GetFeaturesInArea	./src/Frame.cc	/^vector<size_t> Frame::GetFeaturesInArea(const float &x, const float  &y, const float  &r, const int minLevel, const int maxLevel) const$/;"	f	class:ORB_SLAM2::Frame
GetFeaturesInArea	./src/KeyFrame.cc	/^vector<size_t> KeyFrame::GetFeaturesInArea(const float &x, const float &y, const float &r) const$/;"	f	class:ORB_SLAM2::KeyFrame
GetFound	./include/MapPoint.h	/^    inline int GetFound(){$/;"	f	class:ORB_SLAM2::MapPoint
GetFoundRatio	./src/MapPoint.cc	/^float MapPoint::GetFoundRatio()$/;"	f	class:ORB_SLAM2::MapPoint
GetIndexInKeyFrame	./src/MapPoint.cc	/^int MapPoint::GetIndexInKeyFrame(KeyFrame *pKF)$/;"	f	class:ORB_SLAM2::MapPoint
GetInverseScaleFactors	./include/ORBextractor.h	/^    std::vector<float> inline GetInverseScaleFactors(){$/;"	f	class:ORB_SLAM2::ORBextractor::std
GetInverseScaleSigmaSquares	./include/ORBextractor.h	/^    std::vector<float> inline GetInverseScaleSigmaSquares(){$/;"	f	class:ORB_SLAM2::ORBextractor::std
GetLastBigChangeIdx	./src/Map.cc	/^int Map::GetLastBigChangeIdx()$/;"	f	class:ORB_SLAM2::Map
GetLevels	./include/ORBextractor.h	/^    int inline GetLevels(){$/;"	f	class:ORB_SLAM2::ORBextractor
GetLoopEdges	./src/KeyFrame.cc	/^set<KeyFrame*> KeyFrame::GetLoopEdges()$/;"	f	class:ORB_SLAM2::KeyFrame
GetMapPoint	./src/KeyFrame.cc	/^MapPoint* KeyFrame::GetMapPoint(const size_t &idx)$/;"	f	class:ORB_SLAM2::KeyFrame
GetMapPointMatches	./src/KeyFrame.cc	/^vector<MapPoint*> KeyFrame::GetMapPointMatches()$/;"	f	class:ORB_SLAM2::KeyFrame
GetMapPoints	./src/KeyFrame.cc	/^set<MapPoint*> KeyFrame::GetMapPoints()$/;"	f	class:ORB_SLAM2::KeyFrame
GetMaxDistanceInvariance	./src/MapPoint.cc	/^float MapPoint::GetMaxDistanceInvariance()$/;"	f	class:ORB_SLAM2::MapPoint
GetMaxKFid	./src/Map.cc	/^long unsigned int Map::GetMaxKFid()$/;"	f	class:ORB_SLAM2::Map
GetMinDistanceInvariance	./src/MapPoint.cc	/^float MapPoint::GetMinDistanceInvariance()$/;"	f	class:ORB_SLAM2::MapPoint
GetNormal	./src/MapPoint.cc	/^cv::Mat MapPoint::GetNormal()$/;"	f	class:ORB_SLAM2::MapPoint
GetObservations	./src/MapPoint.cc	/^map<KeyFrame*, size_t> MapPoint::GetObservations()$/;"	f	class:ORB_SLAM2::MapPoint
GetOffset	./4pcs/Registration.h	/^            Eigen::Vector3f GetOffset() { return offset_; }$/;"	f	class:pcl::FPCS::FPCSRegistration
GetOverlap	./4pcs/Registration.h	/^            float GetOverlap() { return overlap_; }$/;"	f	class:pcl::FPCS::FPCSRegistration
GetParent	./src/KeyFrame.cc	/^KeyFrame* KeyFrame::GetParent()$/;"	f	class:ORB_SLAM2::KeyFrame
GetPose	./src/KeyFrame.cc	/^cv::Mat KeyFrame::GetPose()$/;"	f	class:ORB_SLAM2::KeyFrame
GetPoseInverse	./src/KeyFrame.cc	/^cv::Mat KeyFrame::GetPoseInverse()$/;"	f	class:ORB_SLAM2::KeyFrame
GetReferenceKeyFrame	./src/MapPoint.cc	/^KeyFrame* MapPoint::GetReferenceKeyFrame()$/;"	f	class:ORB_SLAM2::MapPoint
GetReferenceMapPoints	./src/Map.cc	/^vector<MapPoint*> Map::GetReferenceMapPoints()$/;"	f	class:ORB_SLAM2::Map
GetReplaced	./src/MapPoint.cc	/^MapPoint* MapPoint::GetReplaced()$/;"	f	class:ORB_SLAM2::MapPoint
GetRotation	./4pcs/Registration.h	/^            Eigen::Matrix3f GetRotation() { return rotation_; }$/;"	f	class:pcl::FPCS::FPCSRegistration
GetRotation	./src/KeyFrame.cc	/^cv::Mat KeyFrame::GetRotation()$/;"	f	class:ORB_SLAM2::KeyFrame
GetRotationInverse	./include/Frame.h	/^    inline cv::Mat GetRotationInverse(){$/;"	f	class:ORB_SLAM2::Frame
GetScale	./4pcs/Registration.h	/^            float GetScale() { return scale_; }$/;"	f	class:pcl::FPCS::FPCSRegistration
GetScaleFactor	./include/ORBextractor.h	/^    float inline GetScaleFactor(){$/;"	f	class:ORB_SLAM2::ORBextractor
GetScaleFactors	./include/ORBextractor.h	/^    std::vector<float> inline GetScaleFactors(){$/;"	f	class:ORB_SLAM2::ORBextractor::std
GetScaleSigmaSquares	./include/ORBextractor.h	/^    std::vector<float> inline GetScaleSigmaSquares(){$/;"	f	class:ORB_SLAM2::ORBextractor::std
GetStereoCenter	./src/KeyFrame.cc	/^cv::Mat KeyFrame::GetStereoCenter()$/;"	f	class:ORB_SLAM2::KeyFrame
GetTrackedKeyPointsUn	./src/System.cc	/^vector<cv::KeyPoint> System::GetTrackedKeyPointsUn()$/;"	f	class:ORB_SLAM2::System
GetTrackedMapPoints	./src/System.cc	/^vector<MapPoint*> System::GetTrackedMapPoints()$/;"	f	class:ORB_SLAM2::System
GetTrackingState	./src/System.cc	/^int System::GetTrackingState()$/;"	f	class:ORB_SLAM2::System
GetTransform	./4pcs/Registration.h	/^            Eigen::Matrix4f GetTransform() { return transform_; }$/;"	f	class:pcl::FPCS::FPCSRegistration
GetTranslation	./src/KeyFrame.cc	/^cv::Mat KeyFrame::GetTranslation()$/;"	f	class:ORB_SLAM2::KeyFrame
GetVectorCovisibleKeyFrames	./src/KeyFrame.cc	/^vector<KeyFrame*> KeyFrame::GetVectorCovisibleKeyFrames()$/;"	f	class:ORB_SLAM2::KeyFrame
GetWeight	./src/KeyFrame.cc	/^int KeyFrame::GetWeight(KeyFrame *pKF)$/;"	f	class:ORB_SLAM2::KeyFrame
GetWorldPos	./src/MapPoint.cc	/^cv::Mat MapPoint::GetWorldPos()$/;"	f	class:ORB_SLAM2::MapPoint
GlobalBundleAdjustemnt	./src/Optimizer.cc	/^void Optimizer::GlobalBundleAdjustemnt(Map* pMap, int nIterations, bool* pbStopFlag, const unsigned long nLoopKF, const bool bRobust)$/;"	f	class:ORB_SLAM2::Optimizer
GlobalLU_t	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef LU_GlobalLU_t<IndexVector, ScalarVector> GlobalLU_t; $/;"	t	class:Eigen::internal::SparseLUImpl
GrabImageMonocular	./src/Tracking.cc	/^cv::Mat Tracking::GrabImageMonocular(const cv::Mat &im, const double &timestamp)$/;"	f	class:ORB_SLAM2::Tracking
GrabImageRGBD	./src/Tracking.cc	/^cv::Mat Tracking::GrabImageRGBD(const cv::Mat &imRGB,const cv::Mat &imD, const double &timestamp)$/;"	f	class:ORB_SLAM2::Tracking
GrabImageStereo	./src/Tracking.cc	/^cv::Mat Tracking::GrabImageStereo(const cv::Mat &imRectLeft, const cv::Mat &imRectRight, const double &timestamp)$/;"	f	class:ORB_SLAM2::Tracking
GraphElemBitset	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^      typedef std::bitset<HyperGraph::HGET_NUM_ELEMS> GraphElemBitset;$/;"	t	class:g2o::HyperGraph
HALF_PATCH_SIZE	./src/ORBextractor.cc	/^const int HALF_PATCH_SIZE = 15;$/;"	m	namespace:ORB_SLAM2	file:
HARRIS_SCORE	./include/ORBextractor.h	/^    enum {HARRIS_SCORE=0, FAST_SCORE=1 };$/;"	e	enum:ORB_SLAM2::ORBextractor::__anon1
HCoeffsType	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	class:Eigen::ColPivHouseholderQR
HCoeffsType	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	class:Eigen::FullPivHouseholderQR
HCoeffsType	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
HCoeffsType	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	class:Eigen::HouseholderQR
HDim	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^    HDim = _Dim+1   \/\/\/< size of a respective homogeneous vector$/;"	e	enum:Eigen::Transform::__anon381
HDim	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    HDim = Transform::HDim,$/;"	e	enum:Eigen::internal::transform_traits::__anon433
HDim	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    HDim = TransformType::HDim,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon437
HDim	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    HDim = TransformType::HDim,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon438
HDim	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    HDim = _Dim+1,  \/\/\/< size of a respective homogeneous vector$/;"	e	enum:Eigen::Transform::__anon434
HEX	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	450;"	d	file:
HEX	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	445;"	d	file:
HEX	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	450;"	d	file:
HEX	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	445;"	d	file:
HEX	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	450;"	d	file:
HEX	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	445;"	d	file:
HEX	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	483;"	d	file:
HEX	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	468;"	d	file:
HEX	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	450;"	d	file:
HEX	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	445;"	d	file:
HGET_CACHE	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^        HGET_CACHE,$/;"	e	enum:g2o::HyperGraph::HyperGraphElementType
HGET_DATA	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^        HGET_DATA,$/;"	e	enum:g2o::HyperGraph::HyperGraphElementType
HGET_EDGE	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^        HGET_EDGE,$/;"	e	enum:g2o::HyperGraph::HyperGraphElementType
HGET_NUM_ELEMS	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^        HGET_NUM_ELEMS \/\/ keep as last elem$/;"	e	enum:g2o::HyperGraph::HyperGraphElementType
HGET_PARAMETER	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^        HGET_PARAMETER,$/;"	e	enum:g2o::HyperGraph::HyperGraphElementType
HGET_VERTEX	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^        HGET_VERTEX,$/;"	e	enum:g2o::HyperGraph::HyperGraphElementType
HISTO_LENGTH	./include/ORBmatcher.h	/^    static const int HISTO_LENGTH;$/;"	m	class:ORB_SLAM2::ORBmatcher
HISTO_LENGTH	./src/ORBmatcher.cc	/^const int ORBmatcher::HISTO_LENGTH = 30;$/;"	m	class:ORB_SLAM2::ORBmatcher	file:
HKmeansStep	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::HKmeansStep(NodeId parent_id, $/;"	f	class:DBoW2::TemplatedVocabulary
HNormalizedReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^                const ConstStartMinusOne > HNormalizedReturnType;$/;"	t	class:Eigen::MatrixBase
HNormalizedReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^            HNormalizedReturnType;$/;"	t	class:Eigen::VectorwiseOp
HNormalized_Block	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^            HNormalized_Block;$/;"	t	class:Eigen::VectorwiseOp
HNormalized_Factors	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^            HNormalized_Factors;$/;"	t	class:Eigen::VectorwiseOp
HNormalized_Size	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^      HNormalized_Size = Direction==Vertical ? internal::traits<ExpressionType>::RowsAtCompileTime$/;"	e	enum:Eigen::VectorwiseOp::__anon25
HNormalized_SizeMinusOne	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^      HNormalized_SizeMinusOne = HNormalized_Size==Dynamic ? Dynamic : HNormalized_Size-1$/;"	e	enum:Eigen::VectorwiseOp::__anon25
HalfLength	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    HalfLength = Length\/2$/;"	e	enum:Eigen::internal::redux_novec_unroller::__anon192
HalfLength	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    HalfLength = Length\/2$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon194
HasACos	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasACos   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasASin	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasASin   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasATan	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasATan   = 0$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasAbs	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasAbs	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasAbs    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasAbs	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
HasAbs	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon204
HasAbs	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
HasAbs	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon218
HasAbs2	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasAbs2	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasAbs2   = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasAbs2	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
HasAbs2	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon204
HasAbs2	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
HasAbs2	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon218
HasAdd	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasAdd    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasAdd	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasAdd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
HasAdd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon204
HasAdd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
HasAdd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon218
HasConj	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasConj   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasConj	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasConj   = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasCos	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasCos    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasCos	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon212
HasCos	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon206
HasCos	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasCos  = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon223
HasDirectAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^      HasDirectAccess = internal::has_direct_access<Derived>::ret,$/;"	e	enum:Eigen::internal::traits::match::__anon186
HasDiv	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasDiv    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasDiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
HasDiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon204
HasDiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon206
HasDiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
HasDiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon218
HasDiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon223
HasDiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon224
HasExp	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasExp    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasExp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasExp  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon212
HasExp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasExp  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon206
HasExp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon223
HasExp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon224
HasLog	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasLog    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasLog	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasLog  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon212
HasLog	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasLog  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon206
HasLog	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasLog  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon223
HasMax	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasMax	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasMax    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasMax	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
HasMax	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon204
HasMax	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
HasMax	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon218
HasMin	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasMin	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasMin    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasMin	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
HasMin	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon204
HasMin	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
HasMin	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon218
HasMul	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasMul    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasMul	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasMul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
HasMul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon204
HasMul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
HasMul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon218
HasNegate	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasNegate = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasNegate	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasNegate	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
HasNegate	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon204
HasNegate	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
HasNegate	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon218
HasNoInnerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    HasNoInnerStride = InnerStrideAtCompileTime == 1,$/;"	e	enum:Eigen::internal::traits::__anon330
HasNoOuterStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    HasNoOuterStride = StrideType::OuterStrideAtCompileTime == 0,$/;"	e	enum:Eigen::internal::traits::__anon330
HasNoStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    HasNoStride = HasNoInnerStride && HasNoOuterStride,$/;"	e	enum:Eigen::internal::traits::__anon330
HasPow	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasPow    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasSameStorageOrderAsXprType	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    HasSameStorageOrderAsXprType = (IsRowMajor == XprTypeIsRowMajor),$/;"	e	enum:Eigen::internal::traits::__anon184
HasSetLinear	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasSetLinear	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasSetLinear = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasSetLinear	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon210
HasSetLinear	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon204
HasSetLinear	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon216
HasSetLinear	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon218
HasSin	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasSin    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasSin	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon212
HasSin	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon206
HasSin	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasSin  = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon223
HasSqrt	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasSqrt   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasSqrt	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSqrt = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon212
HasSqrt	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasSqrt = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon206
HasSqrt	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasSqrt = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon223
HasSqrt	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasSqrt = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon224
HasSub	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasSub    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasSub	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasSub	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
HasSub	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon204
HasSub	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
HasSub	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon218
HasTan	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    HasTan    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasUnitDiag	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasUnitDiag = (Mode & UnitDiag)==UnitDiag,$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon42
HasUnitDiag	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasUnitDiag = (Mode & UnitDiag)==UnitDiag,$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon43
HasUnitDiag	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^           HasUnitDiag = (Mode&UnitDiag) ? 1 : 0$/;"	e	enum:Eigen::SparseTriangularView::__anon418
HasUsableDirectAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^    HasUsableDirectAccess = (    (int(XprType::Flags)&DirectAccessBit)$/;"	e	enum:Eigen::internal::blas_traits::__anon79
HasZeroDiag	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasZeroDiag = (Mode & ZeroDiag)==ZeroDiag$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon42
HasZeroDiag	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasZeroDiag = (Mode & ZeroDiag)==ZeroDiag$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon43
HereditaryBits	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^const unsigned int HereditaryBits = RowMajorBit$/;"	m	namespace:Eigen
HessenbergDecomposition	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HessenbergDecomposition(Index size = Size==Dynamic ? 2 : Size)$/;"	f	class:Eigen::HessenbergDecomposition
HessenbergDecomposition	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HessenbergDecomposition(const MatrixType& matrix)$/;"	f	class:Eigen::HessenbergDecomposition
HessenbergDecomposition	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^template<typename _MatrixType> class HessenbergDecomposition$/;"	c	namespace:Eigen
HessenbergDecompositionMatrixHReturnType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HessenbergDecompositionMatrixHReturnType(const HessenbergDecomposition<MatrixType>& hess) : m_hess(hess) { }$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
HessenbergDecompositionMatrixHReturnType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^template<typename MatrixType> struct HessenbergDecompositionMatrixHReturnType$/;"	s	namespace:Eigen::internal
HessianBlockTransposedType	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      typedef Eigen::Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;$/;"	t	class:g2o::BaseBinaryEdge
HessianBlockType	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      typedef Eigen::Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;$/;"	t	class:g2o::BaseBinaryEdge
HessianBlockType	./Thirdparty/g2o/g2o/core/base_multi_edge.h	/^      typedef Eigen::Map<MatrixXd, MatrixXd::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;$/;"	t	class:g2o::BaseMultiEdge
HessianBlockType	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    typedef Eigen::Map<Matrix<double, D, D>, Matrix<double,D,D>::Flags & AlignedBit ? Aligned : Unaligned >  HessianBlockType;$/;"	t	class:g2o::BaseVertex
HessianHelper	./Thirdparty/g2o/g2o/core/base_multi_edge.h	/^        HessianHelper() : matrix(0, 0, 0), transposed(false) {}$/;"	f	struct:g2o::BaseMultiEdge::HessianHelper
HessianHelper	./Thirdparty/g2o/g2o/core/base_multi_edge.h	/^      struct HessianHelper {$/;"	s	class:g2o::BaseMultiEdge
Homogeneous	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    inline Homogeneous(const MatrixType& matrix)$/;"	f	class:Eigen::Homogeneous
Homogeneous	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^template<typename MatrixType,int _Direction> class Homogeneous$/;"	c	namespace:Eigen
HomogeneousDimension	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Umeyama.h	/^    HomogeneousDimension = int(MinRowsAtCompileTime) == Dynamic ? Dynamic : int(MinRowsAtCompileTime)+1$/;"	e	enum:Eigen::internal::umeyama_transform_matrix_type::__anon431
HomogeneousReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    typedef Homogeneous<Derived, HomogeneousReturnTypeDirection> HomogeneousReturnType;$/;"	t	class:Eigen::MatrixBase
HomogeneousReturnTypeDirection	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    enum { HomogeneousReturnTypeDirection = ColsAtCompileTime==1?Vertical:Horizontal };$/;"	e	enum:Eigen::MatrixBase::__anon8
Horizontal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  Horizontal, $/;"	e	enum:Eigen::DirectionType
HouseholderQR	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    HouseholderQR() : m_qr(), m_hCoeffs(), m_temp(), m_isInitialized(false) {}$/;"	f	class:Eigen::HouseholderQR
HouseholderQR	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    HouseholderQR(Index rows, Index cols)$/;"	f	class:Eigen::HouseholderQR
HouseholderQR	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    HouseholderQR(const MatrixType& matrix)$/;"	f	class:Eigen::HouseholderQR
HouseholderQR	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^template<typename _MatrixType> class HouseholderQR$/;"	c	namespace:Eigen
HouseholderQRPreconditioner	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  HouseholderQRPreconditioner,$/;"	e	enum:Eigen::QRPreconditioners
HouseholderSequence	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence(const HouseholderSequence& other)$/;"	f	class:Eigen::HouseholderSequence
HouseholderSequence	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence(const VectorsType& v, const CoeffsType& h)$/;"	f	class:Eigen::HouseholderSequence
HouseholderSequence	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^template<typename VectorsType, typename CoeffsType, int Side> class HouseholderSequence$/;"	c	namespace:Eigen
HouseholderSequenceType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef HouseholderSequence<MatrixType,typename internal::remove_all<typename CoeffVectorType::ConjugateReturnType>::type> HouseholderSequenceType;$/;"	t	class:Eigen::HessenbergDecomposition
HouseholderSequenceType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef HouseholderSequence<MatrixType,typename internal::remove_all<typename CoeffVectorType::ConjugateReturnType>::type> HouseholderSequenceType;$/;"	t	class:Eigen::Tridiagonalization
HouseholderSequenceType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename Tridiagonalization<MatrixType>::HouseholderSequenceType HouseholderSequenceType;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
HouseholderSequenceType	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^  typedef HouseholderSequence<VectorsType, CoeffsType, OnTheLeft> HouseholderSequenceType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
HouseholderSequenceType	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^  typedef HouseholderSequence<VectorsType, CoeffsType, OnTheRight> HouseholderSequenceType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
HouseholderSequenceType	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef HouseholderSequence<MatrixType,typename internal::remove_all<typename HCoeffsType::ConjugateReturnType>::type> HouseholderSequenceType;$/;"	t	class:Eigen::ColPivHouseholderQR
HouseholderSequenceType	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    typedef HouseholderSequence<MatrixType,typename internal::remove_all<typename HCoeffsType::ConjugateReturnType>::type> HouseholderSequenceType;$/;"	t	class:Eigen::HouseholderQR
HouseholderUSequenceType	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^            > HouseholderUSequenceType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
HouseholderVSequenceType	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^            > HouseholderVSequenceType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
HyperDijkstra	./Thirdparty/g2o/g2o/core/hyper_dijkstra.cpp	/^  HyperDijkstra::HyperDijkstra(HyperGraph* g): _graph(g)$/;"	f	class:g2o::HyperDijkstra
HyperDijkstra	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^  struct  HyperDijkstra{$/;"	s	namespace:g2o
HyperGraph	./Thirdparty/g2o/g2o/core/hyper_graph.cpp	/^  HyperGraph::HyperGraph()$/;"	f	class:g2o::HyperGraph
HyperGraph	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^      HyperGraph(const HyperGraph&) { }$/;"	f	class:g2o::HyperGraph
HyperGraph	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^  class  HyperGraph$/;"	c	namespace:g2o
HyperGraphAction	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^  class  HyperGraphAction {$/;"	c	namespace:g2o
HyperGraphActionLibrary	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphActionLibrary::HyperGraphActionLibrary()$/;"	f	class:g2o::HyperGraphActionLibrary
HyperGraphActionLibrary	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^  class  HyperGraphActionLibrary{$/;"	c	namespace:g2o
HyperGraphActionSet	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    typedef std::set<HyperGraphAction*>    HyperGraphActionSet;$/;"	t	struct:g2o::OptimizableGraph
HyperGraphElement	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^      struct  HyperGraphElement {$/;"	s	class:g2o::HyperGraph
HyperGraphElementAction	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementAction::HyperGraphElementAction(const std::string& typeName_)$/;"	f	class:g2o::HyperGraphElementAction
HyperGraphElementAction	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^  class  HyperGraphElementAction{$/;"	c	namespace:g2o
HyperGraphElementActionCollection	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementActionCollection::HyperGraphElementActionCollection(const std::string& name_)$/;"	f	class:g2o::HyperGraphElementActionCollection
HyperGraphElementActionCollection	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^  class  HyperGraphElementActionCollection: public HyperGraphElementAction{$/;"	c	namespace:g2o
HyperGraphElementCreator	./Thirdparty/g2o/g2o/core/creators.h	/^      HyperGraphElementCreator() : _name(typeid(T).name()) {}$/;"	f	class:g2o::HyperGraphElementCreator
HyperGraphElementCreator	./Thirdparty/g2o/g2o/core/creators.h	/^  class HyperGraphElementCreator : public AbstractHyperGraphElementCreator$/;"	c	namespace:g2o
HyperGraphElementType	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^      enum  HyperGraphElementType {$/;"	g	class:g2o::HyperGraph
Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	112;"	d
Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	57;"	d
Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  explicit Hyperplane(const ParametrizedLine<Scalar, AmbientDimAtCompileTime>& parametrized)$/;"	f	class:Eigen::Hyperplane
Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline Hyperplane() {}$/;"	f	class:Eigen::Hyperplane
Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline Hyperplane(const VectorType& n, Scalar d)$/;"	f	class:Eigen::Hyperplane
Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline Hyperplane(const VectorType& n, const VectorType& e)$/;"	f	class:Eigen::Hyperplane
Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline explicit Hyperplane(const Hyperplane<OtherScalarType,AmbientDimAtCompileTime>& other)$/;"	f	class:Eigen::Hyperplane
Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline explicit Hyperplane(int _dim) : m_coeffs(_dim+1) {}$/;"	f	class:Eigen::Hyperplane
Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^class Hyperplane$/;"	c	namespace:Eigen
Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  Hyperplane(const Hyperplane<Scalar,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::Hyperplane
Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  explicit Hyperplane(const ParametrizedLine<Scalar, AmbientDimAtCompileTime>& parametrized)$/;"	f	class:Eigen::Hyperplane
Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  inline Hyperplane() {}$/;"	f	class:Eigen::Hyperplane
Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  inline Hyperplane(const VectorType& n, const Scalar& d)$/;"	f	class:Eigen::Hyperplane
Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  inline Hyperplane(const VectorType& n, const VectorType& e)$/;"	f	class:Eigen::Hyperplane
Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  inline explicit Hyperplane(Index _dim) : m_coeffs(_dim+1) {}$/;"	f	class:Eigen::Hyperplane
Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  inline explicit Hyperplane(const Hyperplane<OtherScalarType,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::Hyperplane
Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^class Hyperplane$/;"	c	namespace:Eigen
I	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^    I = IsLower ? Index : Size - Index - 1,$/;"	e	enum:Eigen::internal::triangular_solver_unroller::__anon240
ICP	./Thirdparty/sparseicp/ICP.h	/^namespace ICP {$/;"	n
ICP	./src/Registrating.cc	/^	void Registrating::ICP() {$/;"	f	class:ORB_SLAM2::Registrating
ICP_H	./Thirdparty/sparseicp/ICP.h	18;"	d
IC_Angle	./src/ORBextractor.cc	/^static float IC_Angle(const Mat& image, Point2f pt,  const vector<int> & u_max)$/;"	f	namespace:ORB_SLAM2
IDF	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^  IDF,$/;"	e	enum:DBoW2::WeightingType
ID_VOID_MAIN	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
ID_VOID_MAIN	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
ID_VOID_MAIN	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
ID_VOID_MAIN	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
ID_VOID_MAIN	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
INITIALIZER_H	./include/Initializer.h	21;"	d
INVALID_MATRIXBASE_TEMPLATE_PARAMETERS	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIXBASE_TEMPLATE_PARAMETERS,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
INVALID_MATRIX_PRODUCT	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIX_PRODUCT,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
INVALID_MATRIX_PRODUCT__IF_YOU_WANTED_A_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTION	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIX_PRODUCT__IF_YOU_WANTED_A_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTION,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
INVALID_MATRIX_TEMPLATE_PARAMETERS	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIX_TEMPLATE_PARAMETERS,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
INVALID_STORAGE_ORDER_FOR_THIS_VECTOR_EXPRESSION	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_STORAGE_ORDER_FOR_THIS_VECTOR_EXPRESSION,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
INVALID_VECTOR_VECTOR_PRODUCT__IF_YOU_WANTED_A_DOT_OR_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTIONS	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_VECTOR_VECTOR_PRODUCT__IF_YOU_WANTED_A_DOT_OR_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTIONS,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
IOFormat	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^  IOFormat(int _precision = StreamPrecision, int _flags = 0,$/;"	f	struct:Eigen::IOFormat
IOFormat	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^struct IOFormat$/;"	s	namespace:Eigen
Identity	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^MatrixBase<Derived>::Identity()$/;"	f	class:Eigen::MatrixBase
Identity	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^MatrixBase<Derived>::Identity(Index nbRows, Index nbCols)$/;"	f	class:Eigen::MatrixBase
Identity	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  static inline Quaternion Identity() { return Quaternion(1, 0, 0, 0); }$/;"	f	class:Eigen::Quaternion
Identity	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  static const typename MatrixType::IdentityReturnType Identity()$/;"	f	class:Eigen::Transform
Identity	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  static inline const AngleAxis Identity() { return AngleAxis(0, Vector3::UnitX()); }$/;"	f	class:Eigen::AngleAxis
Identity	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  static inline Quaternion<Scalar> Identity() { return Quaternion<Scalar>(1, 0, 0, 0); }$/;"	f	class:Eigen::QuaternionBase
Identity	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  static inline Rotation2D Identity() { return Rotation2D(0); }$/;"	f	class:Eigen::Rotation2D
Identity	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  static const Transform Identity()$/;"	f	class:Eigen::Transform
Identity	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  static const Translation Identity() { return Translation(VectorType::Zero()); }$/;"	f	class:Eigen::Translation
IdentityPreconditioner	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner() {}$/;"	f	class:Eigen::IdentityPreconditioner
IdentityPreconditioner	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner(const MatrixType& ) {}$/;"	f	class:Eigen::IdentityPreconditioner
IdentityPreconditioner	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^class IdentityPreconditioner$/;"	c	namespace:Eigen
IdentityReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    typedef CwiseNullaryOp<internal::scalar_identity_op<Scalar>,Derived> IdentityReturnType;$/;"	t	class:Eigen::MatrixBase
ImagReturnType	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_imag_op<Scalar>, const Derived> ImagReturnType;$/;"	t
ImageResultType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^    > ImageResultType;$/;"	t	class:Eigen::LU
Impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    typedef BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, typename internal::traits<XprType>::StorageKind> Impl;$/;"	t	class:Eigen::Block
Impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    typedef internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel> Impl;$/;"	t	class:Eigen::BlockImpl
IncompleteLUT	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    IncompleteLUT()$/;"	f	class:Eigen::IncompleteLUT
IncompleteLUT	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    IncompleteLUT(const MatrixType& mat, const RealScalar& droptol=NumTraits<Scalar>::dummy_precision(), int fillfactor = 10)$/;"	f	class:Eigen::IncompleteLUT
IncompleteLUT	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^class IncompleteLUT : internal::noncopyable$/;"	c	namespace:Eigen
IncreaseFound	./src/MapPoint.cc	/^void MapPoint::IncreaseFound(int n)$/;"	f	class:ORB_SLAM2::MapPoint
IncreaseVisible	./src/MapPoint.cc	/^void MapPoint::IncreaseVisible(int n)$/;"	f	class:ORB_SLAM2::MapPoint
Indefinite	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	e	enum:Eigen::internal::SignMatrix
Index	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::LDLT
Index	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::LLT
Index	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::CholmodBase
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    typedef typename internal::traits<Derived>::Index Index;$/;"	t	class:Eigen::ArrayBase
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  typedef typename Derived1::Index Index;$/;"	t	struct:Eigen::internal::assign_impl
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^  typedef typename Derived1::Index Index;$/;"	t	struct:Eigen::internal::vml_assign_impl
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    typedef typename Base::Index Index;$/;"	t	class:Eigen::internal::TridiagonalMatrix
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    typedef typename DenseMatrixType::Index Index;$/;"	t	class:Eigen::internal::BandMatrixBase
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrix>::Index Index;$/;"	t	class:Eigen::internal::BandMatrix
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrixWrapper>::Index Index;$/;"	t	class:Eigen::internal::BandMatrixWrapper
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^  typedef DenseIndex Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^  typedef typename _CoefficientsType::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    typedef typename XprType::Index Index;$/;"	t	class:Eigen::BlockImpl
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/CommaInitializer.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::CommaInitializer
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/CoreIterators.h	/^    typedef typename Derived::Index Index;$/;"	t	class:Eigen::DenseBase::InnerIterator
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^                                         typename traits<Rhs>::Index>::type Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::internal::setIdentity_impl
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::traits<Derived>::Index Index; $/;"	t	class:Eigen::DenseBase
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename internal::traits<Derived>::Index Index;$/;"	t	class:Eigen::DenseCoeffsBase
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<Derived>::Index Index;$/;"	t	class:Eigen::DiagonalBase
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<DiagonalMatrix>::Index Index;$/;"	t	class:Eigen::DiagonalMatrix
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^  typedef DenseIndex Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^  typedef typename DiagonalVectorType::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^  typedef typename internal::traits<Derived>::Index Index;$/;"	t	struct:Eigen::EigenBase
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^  typedef typename PlainObjectType::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    typedef typename Base::Index Index;$/;"	t	class:Eigen::MapBase
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    typedef typename internal::traits<Derived>::Index Index;$/;"	t	class:Eigen::MapBase
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^  typedef DenseIndex Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::traits<Derived>::Index Index;$/;"	t	class:Eigen::MatrixBase
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename IndicesType::Scalar Index;$/;"	t	class:Eigen::Map
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::permut_matrix_product_retval
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::Index Index;$/;"	t	class:Eigen::PermutationBase
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^  typedef IndexType Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^  typedef typename _IndicesType::Scalar Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::traits<Derived>::Index Index;$/;"	t	class:Eigen::PlainObjectBase
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::internal::conservative_resize_like_impl
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^                                         typename traits<Rhs>::Index>::type Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::internal::redux_impl
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SelfAdjointView
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Derived1::Index Index;$/;"	t	struct:Eigen::internal::triangular_assignment_selector
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  typedef typename Base::Index Index;$/;"	t	struct:Eigen::internal::triangular_solve_retval
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  typedef typename Rhs::Index Index;$/;"	t	struct:Eigen::internal::triangular_solver_selector
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^    typedef DenseIndex Index;$/;"	t	class:Eigen::InnerStride
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^    typedef DenseIndex Index;$/;"	t	class:Eigen::OuterStride
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^    typedef DenseIndex Index;$/;"	t	class:Eigen::Stride
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar Index;$/;"	t	class:Eigen::Map
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar Index;$/;"	t	class:Eigen::Transpositions
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar Index;$/;"	t	class:Eigen::TranspositionsBase
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar Index;$/;"	t	class:Eigen::TranspositionsWrapper
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef typename TranspositionType::Index Index;$/;"	t	struct:Eigen::internal::transposition_matrix_product_retval
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^  typedef IndexType Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^  typedef typename _IndicesType::Scalar Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::Index Index;$/;"	t	class:Eigen::TriangularBase
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::Index Index;$/;"	t	class:Eigen::TriangularView
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Derived1::Index Index;$/;"	t	struct:Eigen::internal::triangular_assignment_selector
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ExpressionType::Index Index;$/;"	t	class:Eigen::VectorwiseOp
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::internal::coeff_visitor
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::internal::max_coeff_visitor
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::internal::min_coeff_visitor
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::internal::visitor_impl
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^                                         typename traits<_RhsNested>::Index>::type Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef typename Lhs::Index Index;$/;"	t	struct:Eigen::internal::product_coeff_impl
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef typename Lhs::Index Index;$/;"	t	struct:Eigen::internal::product_coeff_vectorized_dyn_selector
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef typename Lhs::Index Index;$/;"	t	struct:Eigen::internal::product_coeff_vectorized_unroller
Index	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef typename Lhs::Index Index;$/;"	t	struct:Eigen::internal::product_packet_impl
Index	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::ComplexEigenSolver
Index	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::ComplexSchur
Index	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::EigenSolver
Index	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::GeneralizedEigenSolver
Index	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    typedef typename Base::Index Index;$/;"	t	class:Eigen::GeneralizedSelfAdjointEigenSolver
Index	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::HessenbergDecomposition
Index	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
Index	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::RealQZ
Index	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::RealSchur
Index	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SelfAdjointEigenSolver
Index	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::Tridiagonalization
Index	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
Index	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
Index	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  typedef DenseIndex                                Index;$/;"	t	class:Eigen::AlignedBox
Index	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::homogeneous_left_product_impl
Index	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::homogeneous_right_product_impl
Index	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  typedef DenseIndex Index;$/;"	t	class:Eigen::Hyperplane
Index	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
Index	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  typedef DenseIndex Index;$/;"	t	class:Eigen::ParametrizedLine
Index	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  typedef DenseIndex Index;$/;"	t	struct:Eigen::internal::quaternionbase_assign_impl
Index	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef DenseIndex Index;$/;"	t	class:Eigen::Transform
Index	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    typedef typename VectorsType::Index Index;$/;"	t	class:Eigen::HouseholderSequence
Index	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^  typedef typename VectorsType::Index Index;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
Index	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^  typedef typename VectorsType::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef typename Vector::Index Index;$/;"	t	class:Eigen::DiagonalPreconditioner
Index	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::BiCGSTAB
Index	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::ConjugateGradient
Index	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef typename FactorType::Index Index;$/;"	t	class:Eigen::IncompleteLUT
Index	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::IterativeSolverBase
Index	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::FullPivLU
Index	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^  typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::inverse_impl
Index	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::PartialPivLU
Index	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^  typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::partial_lu_impl
Index	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::PastixBase
Index	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::PastixLU
Index	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename _MatrixType::Index Index;$/;"	t	struct:Eigen::internal::pastix_traits
Index	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef long long int Index;$/;"	t	struct:Eigen::internal::pardiso_run_selector
Index	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Index Index;$/;"	t	class:Eigen::PardisoLDLT
Index	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Index Index;$/;"	t	class:Eigen::PardisoLLT
Index	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::Index Index;$/;"	t	class:Eigen::PardisoImpl
Index	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::Index Index;    $/;"	t	struct:Eigen::internal::pardiso_traits
Index	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::Index Index;$/;"	t	struct:Eigen::internal::pardiso_traits
Index	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::ColPivHouseholderQR
Index	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::FullPivHouseholderQR
Index	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
Index	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::HouseholderQR
Index	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef UF_long Index ; $/;"	t	class:Eigen::SPQR
Index	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  typedef typename SPQRType::Index Index;$/;"	t	struct:Eigen::SPQR_QProduct
Index	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::JacobiSVD
Index	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
Index	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  typedef typename SVD::Index Index;$/;"	t	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
Index	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::internal::UpperBidiagonalization
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SimplicialCholesky
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SimplicialCholeskyBase
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SimplicialLDLT
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SimplicialLLT
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::Index                              Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::Index                          Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    typedef _Index Index;$/;"	t	class:Eigen::internal::AmbiVector
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    typedef _Index Index;$/;"	t	class:Eigen::internal::CompressedStorage
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^        typedef typename BlockImpl::Index Index;$/;"	t	class:Eigen::BlockImpl::InnerIterator
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^        typedef typename BlockImpl::Index Index;$/;"	t	class:Eigen::BlockImpl::ReverseInnerIterator
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename Lhs::Index Index;$/;"	t	class:Eigen::CwiseBinaryOpImpl::InnerIterator
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename Lhs::Index Index;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    typedef typename SparseDenseOuterProduct::Index Index;$/;"	t	class:Eigen::SparseDenseOuterProduct::InnerIterator
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename Lhs::Index Index;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename Lhs::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^                                         typename traits<Rhs>::Index>::type Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typedef typename Lhs::Index Index;$/;"	t	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef _Index Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::traits<Derived>::Index Index;$/;"	t	class:Eigen::SparseMatrixBase
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^    typedef typename MatrixTypeNestedCleaned::Index Index;$/;"	t	struct:Eigen::internal::permut_sparsematrix_product_retval
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^  typedef typename MatrixTypeNestedCleaned::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^                                         typename traits<_RhsNested>::Index>::type Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^  typedef typename internal::traits<Lhs>::Index Index;$/;"	t	struct:Eigen::SparseSparseProductReturnType
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SparseSelfAdjointView
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename TransposeImpl::Index Index;$/;"	t	class:Eigen::TransposeImpl::InnerIterator
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename TransposeImpl::Index Index;$/;"	t	class:Eigen::TransposeImpl::ReverseInnerIterator
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename SparseTriangularView::Index Index;$/;"	t	class:Eigen::SparseTriangularView::InnerIterator
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename SparseTriangularView::Index Index;$/;"	t	class:Eigen::SparseTriangularView::ReverseInnerIterator
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^  typedef _Index Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  typedef typename SparseView::Index Index;$/;"	t	class:Eigen::SparseView::InnerIterator
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	/^                                         typename traits<Rhs>::Index>::type Index;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_sparse_selector
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    typedef typename MatrixType::Index Index; $/;"	t	class:Eigen::SparseLU
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  typedef typename MappedSupernodalType::Index Index;$/;"	t	struct:Eigen::SparseLUMatrixLReturnType
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  typedef typename MatrixLType::Index Index;$/;"	t	struct:Eigen::SparseLUMatrixUReturnType
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  typedef typename IndexVector::Scalar Index; $/;"	t	struct:Eigen::internal::LU_GlobalLU_t
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    typedef _Index Index;$/;"	t	class:Eigen::internal::MappedSuperNodalMatrix
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  typedef typename IndexVector::Scalar Index;$/;"	t	struct:Eigen::internal::column_dfs_traits
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  typedef typename IndexVector::Scalar Index;$/;"	t	struct:Eigen::internal::panel_dfs_traits
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SparseQR
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename ReturnType::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename SparseQRType::Index Index;$/;"	t	struct:Eigen::SparseQRMatrixQReturnType
Index	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename SparseQRType::Index Index;$/;"	t	struct:Eigen::SparseQR_QProduct
Index	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::Index Index;$/;"	t	class:Eigen::SuperILU
Index	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::Index Index;$/;"	t	class:Eigen::SuperLU
Index	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SuperLUBase
Index	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::UmfPackLU
Index	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^  typedef typename Base::Index Index;$/;"	t	struct:Eigen::internal::image_retval_base
Index	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^  typedef typename Base::Index Index;$/;"	t	struct:Eigen::internal::kernel_retval_base
Index	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^  typedef typename Base::Index Index;$/;"	t	struct:Eigen::internal::solve_retval_base
Index	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^  typedef typename Base::Index Index;$/;"	t	struct:Eigen::internal::sparse_solve_retval_base
Index	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^  typedef typename DecompositionType::Index Index;$/;"	t	struct:Eigen::internal::solve_retval_with_guess
IndexDist_Sorter	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	struct IndexDist_Sorter$/;"	s	namespace:nanoflann
IndexVector	./Thirdparty/sparseicp/include/Eigen/src/MetisSupport/MetisSupport.h	/^  typedef Matrix<Index,Dynamic,1> IndexVector; $/;"	t	class:Eigen::MetisOrdering
IndexVector	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Ordering.h	/^    typedef Matrix<Index, Dynamic, 1> IndexVector;$/;"	t	class:Eigen::COLAMDOrdering
IndexVector	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    typedef Matrix<Index,Dynamic,1> IndexVector;$/;"	t	class:Eigen::SparseLU
IndexVector	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Matrix<Index,Dynamic,1> IndexVector; $/;"	t	class:Eigen::internal::SparseLUImpl
IndexVector	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    typedef Matrix<Index,Dynamic,1> IndexVector; $/;"	t	class:Eigen::internal::MappedSuperNodalMatrix
IndexVector	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    typedef Matrix<Index, Dynamic, 1> IndexVector;$/;"	t	class:Eigen::SparseQR
IndicesType	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename PermutationType::IndicesType IndicesType;$/;"	t	class:Eigen::Transpose
IndicesType	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::Map
IndicesType	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::PermutationBase
IndicesType	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::PermutationMatrix
IndicesType	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::PermutationWrapper
IndicesType	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^  typedef Map<const Matrix<IndexType, SizeAtCompileTime, 1, 0, MaxSizeAtCompileTime, 1>, _PacketAccess> IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^  typedef Matrix<IndexType, SizeAtCompileTime, 1, 0, MaxSizeAtCompileTime, 1> IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^  typedef _IndicesType IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::Map
IndicesType	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::Transpositions
IndicesType	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::TranspositionsBase
IndicesType	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::TranspositionsWrapper
IndicesType	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef typename TranspositionType::IndicesType IndicesType;$/;"	t	class:Eigen::Transpose
IndicesType	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^  typedef Map<const Matrix<Index,SizeAtCompileTime,1,0,MaxSizeAtCompileTime,1>, _PacketAccess> IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^  typedef Matrix<Index, SizeAtCompileTime, 1, 0, MaxSizeAtCompileTime, 1> IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^  typedef _IndicesType IndicesType;$/;"	t	struct:Eigen::internal::traits
Infinity	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^const int Infinity = -1;$/;"	m	namespace:Eigen
InformNewBigChange	./src/Map.cc	/^void Map::InformNewBigChange()$/;"	f	class:ORB_SLAM2::Map
InformOnlyTracking	./src/Tracking.cc	/^void Tracking::InformOnlyTracking(const bool &flag)$/;"	f	class:ORB_SLAM2::Tracking
InformationType	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      typedef typename BaseEdge<D,E>::InformationType InformationType;$/;"	t	class:g2o::BaseBinaryEdge
InformationType	./Thirdparty/g2o/g2o/core/base_edge.h	/^      typedef Matrix<double, D, D> InformationType;$/;"	t	class:g2o::BaseEdge
InformationType	./Thirdparty/g2o/g2o/core/base_multi_edge.h	/^      typedef typename BaseEdge<D,E>::InformationType InformationType;$/;"	t	class:g2o::BaseMultiEdge
InformationType	./Thirdparty/g2o/g2o/core/base_unary_edge.h	/^      typedef typename BaseEdge<D,E>::InformationType InformationType;$/;"	t	class:g2o::BaseUnaryEdge
Initialize	./src/Initializer.cc	/^bool Initializer::Initialize(const Frame &CurrentFrame, const vector<int> &vMatches12, cv::Mat &R21, cv::Mat &t21,$/;"	f	class:ORB_SLAM2::Initializer
InitializeFirstFrame	./src/Initializer.cc	/^bool Initializer::InitializeFirstFrame(Frame &frame) {$/;"	f	class:ORB_SLAM2::Initializer
InitializeWithMap	./src/Initializer.cc	/^bool Initializer::InitializeWithMap(Frame &CurrentFrame, vector<int> &vMatches12,$/;"	f	class:ORB_SLAM2::Initializer
Initializer	./include/Initializer.h	/^class Initializer$/;"	c	namespace:ORB_SLAM2
Initializer	./src/Initializer.cc	/^Initializer::Initializer(Map *pLastMap, cv::Mat &K, float sigma, int iterations) {$/;"	f	class:ORB_SLAM2::Initializer
Initializer	./src/Initializer.cc	/^Initializer::Initializer(const Frame &ReferenceFrame, float sigma, int iterations)$/;"	f	class:ORB_SLAM2::Initializer
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/Core/CoreIterators.h	/^    EIGEN_STRONG_INLINE InnerIterator(const Derived& expr, Index outer)$/;"	f	class:Eigen::DenseBase::InnerIterator
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/Core/CoreIterators.h	/^template<typename Derived> class DenseBase<Derived>::InnerIterator$/;"	c	class:Eigen::DenseBase
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    typedef typename ExpressionType::InnerIterator InnerIterator;$/;"	t	class:Eigen::Flagged
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    InnerIterator(const MappedSparseMatrix& mat, Index outer)$/;"	f	class:Eigen::MappedSparseMatrix::InnerIterator
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^class MappedSparseMatrix<Scalar,_Flags,_Index>::InnerIterator$/;"	c	class:Eigen::MappedSparseMatrix
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^        inline InnerIterator(const BlockType& xpr, Index outer)$/;"	f	class:Eigen::BlockImpl::InnerIterator
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      EIGEN_STRONG_INLINE InnerIterator(const BlockType& block, Index outer)$/;"	f	class:Eigen::BlockImpl::InnerIterator
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    class InnerIterator : public _MatrixTypeNested::InnerIterator$/;"	c	class:Eigen::BlockImpl
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    class InnerIterator: public SparseMatrixType::InnerIterator$/;"	c	class:Eigen::BlockImpl
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    class InnerIterator: public XprType::InnerIterator$/;"	c	class:Eigen::BlockImpl
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator(const CwiseBinaryOpImpl& binOp, Index outer)$/;"	f	class:Eigen::CwiseBinaryOpImpl::InnerIterator
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^class CwiseBinaryOpImpl<BinaryOp,Lhs,Rhs,Sparse>::InnerIterator$/;"	c	class:Eigen::CwiseBinaryOpImpl
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator(const CwiseUnaryOpImpl& unaryOp, typename CwiseUnaryOpImpl::Index outer)$/;"	f	class:Eigen::CwiseUnaryOpImpl::InnerIterator
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator(const CwiseUnaryViewImpl& unaryOp, typename CwiseUnaryViewImpl::Index outer)$/;"	f	class:Eigen::CwiseUnaryViewImpl::InnerIterator
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class CwiseUnaryOpImpl<UnaryOp,MatrixType,Sparse>::InnerIterator$/;"	c	class:Eigen::CwiseUnaryOpImpl
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class CwiseUnaryViewImpl<ViewOp,MatrixType,Sparse>::InnerIterator$/;"	c	class:Eigen::CwiseUnaryViewImpl
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE InnerIterator(const SparseDenseOuterProduct& prod, Index outer)$/;"	f	class:Eigen::SparseDenseOuterProduct::InnerIterator
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^class SparseDenseOuterProduct<Lhs,Rhs,Transpose>::InnerIterator : public _LhsNested::InnerIterator$/;"	c	class:Eigen::SparseDenseOuterProduct
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^                      <_LhsNested,_RhsNested,SparseDiagonalProduct,LhsMode,RhsMode> InnerIterator;$/;"	t	class:Eigen::SparseDiagonalProduct
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    InnerIterator(const SparseMatrix& mat, Index outer)$/;"	f	class:Eigen::SparseMatrix::InnerIterator
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^class SparseMatrix<Scalar,_Options,_Index>::InnerIterator$/;"	c	class:Eigen::SparseMatrix
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTranspose.h	/^    EIGEN_STRONG_INLINE InnerIterator(const TransposeImpl& trans, typename TransposeImpl<MatrixType,Sparse>::Index outer)$/;"	f	class:Eigen::TransposeImpl::InnerIterator
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTranspose.h	/^template<typename MatrixType> class TransposeImpl<MatrixType,Sparse>::InnerIterator$/;"	c	class:Eigen::TransposeImpl
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE InnerIterator(const SparseTriangularView& view, Index outer)$/;"	f	class:Eigen::SparseTriangularView::InnerIterator
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^class SparseTriangularView<MatrixType,Mode>::InnerIterator : public MatrixTypeNestedCleaned::InnerIterator$/;"	c	class:Eigen::SparseTriangularView
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    InnerIterator(const SparseVector& vec, Index outer=0)$/;"	f	class:Eigen::SparseVector::InnerIterator
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    InnerIterator(const internal::CompressedStorage<Scalar,Index>& data)$/;"	f	class:Eigen::SparseVector::InnerIterator
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^class SparseVector<Scalar,_Options,_Index>::InnerIterator$/;"	c	class:Eigen::SparseVector
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  InnerIterator(const SparseView& view, Index outer) :$/;"	f	class:Eigen::SparseView::InnerIterator
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^class SparseView<MatrixType>::InnerIterator : public _MatrixTypeNested::InnerIterator$/;"	c	class:Eigen::SparseView
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^     InnerIterator(const MappedSuperNodalMatrix& mat, Index outer)$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
InnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^class MappedSuperNodalMatrix<Scalar,Index>::InnerIterator$/;"	c	class:Eigen::internal::MappedSuperNodalMatrix
InnerMaxSize	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    InnerMaxSize = int(Derived::IsVectorAtCompileTime) ? int(Derived::MaxSizeAtCompileTime)$/;"	e	enum:Eigen::internal::assign_traits::__anon248
InnerMaxSize	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^      InnerMaxSize  = int(Dst::IsVectorAtCompileTime) ? int(Dst::MaxSizeAtCompileTime)$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon67
InnerMaxSize	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    InnerMaxSize = int(Derived::IsRowMajor)$/;"	e	enum:Eigen::internal::redux_traits::__anon187
InnerProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum { CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon78
InnerRandomAccessPattern	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^const int InnerRandomAccessPattern  = 0x2 | CoherentAccessPattern;$/;"	m	namespace:Eigen
InnerSize	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    InnerSize = int(Derived::IsVectorAtCompileTime) ? int(Derived::SizeAtCompileTime)$/;"	e	enum:Eigen::internal::assign_traits::__anon248
InnerSize	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^      InnerSize = int(Dst::IsVectorAtCompileTime) ? int(Dst::SizeAtCompileTime)$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon67
InnerSize	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    InnerSize = IsRowMajor ? int(ColsAtCompileTime) : int(RowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon184
InnerSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      InnerSize  = internal::traits<CoeffBasedProduct>::InnerSize,$/;"	e	enum:Eigen::CoeffBasedProduct::__anon47
InnerSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      InnerSize = EIGEN_SIZE_MIN_PREFER_FIXED(_LhsNested::ColsAtCompileTime, _RhsNested::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon46
InnerSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    InnerSize = EIGEN_SIZE_MIN_PREFER_FIXED(_LhsNested::ColsAtCompileTime, _RhsNested::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon421
InnerSizeAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^      InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? int(SizeAtCompileTime)$/;"	e	enum:Eigen::DenseBase::__anon255
InnerSizeAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^      InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? int(SizeAtCompileTime)$/;"	e	enum:Eigen::SparseMatrixBase::__anon419
InnerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^    InnerStride() : Base() {}$/;"	f	class:Eigen::InnerStride
InnerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^    InnerStride(Index v) : Base(0, v) {}$/;"	f	class:Eigen::InnerStride
InnerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^class InnerStride : public Stride<0, Value>$/;"	c	namespace:Eigen
InnerStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    InnerStrideAtCompileTime = HasSameStorageOrderAsXprType$/;"	e	enum:Eigen::internal::traits::__anon184
InnerStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    InnerStrideAtCompileTime = MatrixTypeInnerStride == Dynamic$/;"	e	enum:Eigen::internal::traits::__anon139
InnerStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^      InnerStrideAtCompileTime = internal::inner_stride_at_compile_time<Derived>::ret,$/;"	e	enum:Eigen::DenseBase::__anon255
InnerStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    InnerStrideAtCompileTime = MatrixTypeOuterStride == Dynamic ? Dynamic : MatrixTypeOuterStride+1,$/;"	e	enum:Eigen::internal::traits::__anon233
InnerStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    InnerStrideAtCompileTime = StrideType::InnerStrideAtCompileTime == 0$/;"	e	enum:Eigen::internal::traits::__anon330
InnerStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    InnerStrideAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon15
InnerStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    InnerStrideAtCompileTime = Lhs::InnerStrideAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon26
InnerStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^      InnerStrideAtCompileTime = _InnerStrideAtCompileTime,$/;"	e	enum:Eigen::Stride::__anon33
InnerStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    InnerStrideAtCompileTime = inner_stride_at_compile_time<MatrixType>::ret,$/;"	e	enum:Eigen::internal::traits::__anon62
InnerStrideMatch	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^      InnerStrideMatch = int(StrideType::InnerStrideAtCompileTime)==int(Dynamic)$/;"	e	enum:Eigen::internal::traits::match::__anon186
InnerUnrolling	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  InnerUnrolling,$/;"	e	enum:Eigen::__anon73
InnerVectorReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Block<Derived,IsRowMajor?1:Dynamic,IsRowMajor?Dynamic:1,true>       InnerVectorReturnType;$/;"	t	class:Eigen::SparseMatrixBase
InnerVectorizedTraversal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  InnerVectorizedTraversal,$/;"	e	enum:Eigen::__anon72
Input	./main.cc	/^} Input;$/;"	t	typeref:struct:__anon469	file:
InputScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename MatrixType::Scalar InputScalar;$/;"	t	struct:Eigen::internal::traits
InsertInCurrentMap	./src/Registrating.cc	/^	void Registrating::InsertInCurrentMap(MapPoint *mp) {$/;"	f	class:ORB_SLAM2::Registrating
InsertKeyFrame	./src/LocalMapping.cc	/^void LocalMapping::InsertKeyFrame(KeyFrame *pKF)$/;"	f	class:ORB_SLAM2::LocalMapping
InsertKeyFrame	./src/LoopClosing.cc	/^void LoopClosing::InsertKeyFrame(KeyFrame *pKF)$/;"	f	class:ORB_SLAM2::LoopClosing
IntBlockMap	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    typedef std::map<int, SparseMatrixBlock*> IntBlockMap;$/;"	t	class:g2o::SparseBlockMatrix
IntColVectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^    typedef Matrix<int, MatrixType::RowsAtCompileTime, 1, MatrixType::Options, MatrixType::MaxRowsAtCompileTime, 1> IntColVectorType;$/;"	t	class:Eigen::LU
IntColVectorType	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    typedef typename internal::plain_col_type<MatrixType, Index>::type IntColVectorType;$/;"	t	class:Eigen::FullPivLU
IntColVectorType	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Matrix<Index, MatrixType::RowsAtCompileTime, 1> IntColVectorType;$/;"	t	class:Eigen::PardisoImpl
IntColVectorType	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Matrix<int, MatrixType::RowsAtCompileTime, 1> IntColVectorType;    $/;"	t	class:Eigen::SuperLUBase
IntColVectorType	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::IntColVectorType IntColVectorType;    $/;"	t	class:Eigen::SuperLU
IntColVectorType	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Matrix<int, MatrixType::RowsAtCompileTime, 1> IntColVectorType;$/;"	t	class:Eigen::UmfPackLU
IntDiagSizeVectorType	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^                   EIGEN_SIZE_MIN_PREFER_FIXED(MaxColsAtCompileTime,MaxRowsAtCompileTime)> IntDiagSizeVectorType;$/;"	t	class:Eigen::FullPivHouseholderQR
IntDiagSizeVectorType	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef typename FullPivHouseholderQR<MatrixType>::IntDiagSizeVectorType IntDiagSizeVectorType;$/;"	t	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
IntProperty	./Thirdparty/g2o/g2o/stuff/property.h	/^  typedef Property<int> IntProperty;$/;"	t	namespace:g2o
IntRowVectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^    typedef Matrix<int, 1, MatrixType::ColsAtCompileTime, MatrixType::Options, 1, MatrixType::MaxColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::LU
IntRowVectorType	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    typedef typename internal::plain_row_type<MatrixType, Index>::type IntRowVectorType;$/;"	t	class:Eigen::FullPivLU
IntRowVectorType	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Matrix<Index, 1, MatrixType::ColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::PardisoImpl
IntRowVectorType	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType, Index>::type IntRowVectorType;$/;"	t	class:Eigen::ColPivHouseholderQR
IntRowVectorType	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Matrix<int, 1, MatrixType::ColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::SuperLUBase
IntRowVectorType	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::IntRowVectorType IntRowVectorType;$/;"	t	class:Eigen::SuperLU
IntRowVectorType	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Matrix<int, 1, MatrixType::ColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::UmfPackLU
InterruptBA	./src/LocalMapping.cc	/^void LocalMapping::InterruptBA()$/;"	f	class:ORB_SLAM2::LocalMapping
Interval	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		struct Interval$/;"	s	class:nanoflann::KDTreeSingleIndexAdaptor
InvalidInput	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  InvalidInput = 3$/;"	e	enum:Eigen::ComputationInfo
InvalidTraversal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  InvalidTraversal,$/;"	e	enum:Eigen::__anon72
IsAligned	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    IsAligned = bool(EIGEN_ALIGN) && ((int(MapOptions)&Aligned)==Aligned),$/;"	e	enum:Eigen::internal::traits::__anon330
IsAligned	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    IsAligned = internal::traits<Coefficients>::Flags & AlignedBit,$/;"	e	enum:Eigen::internal::traits::__anon446
IsAligned	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  enum { IsAligned = internal::traits<Quaternion>::IsAligned };$/;"	e	enum:Eigen::Quaternion::__anon447
IsColMajor	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^      IsColMajor = !IsRowMajor,$/;"	e	enum:Eigen::Reverse::__anon242
IsColVector	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorBlock.h	/^      IsColVector = !(internal::traits<VectorType>::Flags & RowMajorBit)$/;"	e	enum:Eigen::VectorBlock::__anon243
IsColVector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    IsColVector = (_Options & RowMajorBit) ? 0 : 1,$/;"	e	enum:Eigen::internal::traits::__anon396
IsColVector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    enum { IsColVector = internal::traits<SparseVector>::IsColVector };$/;"	e	enum:Eigen::SparseVector::__anon398
IsComplex	./Thirdparty/sparseicp/include/Eigen/src/Core/NumTraits.h	/^    IsComplex = 0,$/;"	e	enum:Eigen::GenericNumTraits::__anon30
IsComplex	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^    IsComplex = NumTraits<Scalar>::IsComplex,$/;"	e	enum:Eigen::internal::blas_traits::__anon79
IsComplex	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^    IsComplex = NumTraits<Scalar>::IsComplex,$/;"	e	enum:Eigen::internal::blas_traits::__anon80
IsDense	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  IsDense         = 0,$/;"	e	enum:Eigen::__anon77
IsDynamicSize	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    IsDynamicSize = PlainObjectType::SizeAtCompileTime==Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon330
IsHorizontal	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^      IsHorizontal = (Direction==Horizontal) ? 1 : 0$/;"	e	enum:Eigen::VectorwiseOp::__anon24
IsInImage	./src/KeyFrame.cc	/^bool KeyFrame::IsInImage(const float &x, const float &y) const$/;"	f	class:ORB_SLAM2::KeyFrame
IsInKeyFrame	./src/MapPoint.cc	/^bool MapPoint::IsInKeyFrame(KeyFrame *pKF)$/;"	f	class:ORB_SLAM2::MapPoint
IsInteger	./Thirdparty/sparseicp/include/Eigen/src/Core/NumTraits.h	/^    IsInteger = std::numeric_limits<T>::is_integer,$/;"	e	enum:Eigen::GenericNumTraits::__anon30
IsLower	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^    IsLower = ((Mode&Lower)==Lower),$/;"	e	enum:Eigen::internal::triangular_solver_unroller::__anon240
IsLower	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    IsLower = (Mode&Lower) == Lower,$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon58
IsLower	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    IsLower = (Mode&Lower) == Lower,$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon59
IsLower	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^    IsLower = ((Mode&Lower)==Lower),$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon42
IsLower	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^    IsLower = ((Mode&Lower)==Lower),$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon43
IsLower	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverVector.h	/^    IsLower = ((Mode&Lower)==Lower)$/;"	e	enum:Eigen::internal::triangular_solve_vector::__anon40
IsLower	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverVector.h	/^    IsLower = ((Mode&Lower)==Lower)$/;"	e	enum:Eigen::internal::triangular_solve_vector::__anon41
IsProjective	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    IsProjective = (int(Mode)==int(Projective))$/;"	e	enum:Eigen::internal::transform_traits::__anon433
IsRepeatable	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::HasSetLinear, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon287
IsRepeatable	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::Vectorizable, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon285
IsRepeatable	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = false, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon286
IsRepeatable	./Thirdparty/sparseicp/include/Eigen/src/Core/Random.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false, IsRepeatable = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon203
IsRowMajor	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    IsRowMajor = (MaxRowsAtCompileTime==1&&MaxColsAtCompileTime!=1) ? 1$/;"	e	enum:Eigen::internal::traits::__anon184
IsRowMajor	./Thirdparty/sparseicp/include/Eigen/src/Core/CoreIterators.h	/^    enum { IsRowMajor = (Derived::Flags&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::DenseBase::InnerIterator::__anon17
IsRowMajor	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^      IsRowMajor = int(Flags) & RowMajorBit, \/**< True if this expression has row-major storage order. *\/$/;"	e	enum:Eigen::DenseBase::__anon255
IsRowMajor	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    template<typename T> struct IsRowMajor : internal::conditional<(int(T::Flags)&RowMajorBit), internal::true_type, internal::false_type>::type {};$/;"	s	class:Eigen::GeneralProduct
IsRowMajor	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    IsRowMajor = MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1 ? 1$/;"	e	enum:Eigen::internal::traits::__anon337
IsRowMajor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    enum { IsRowMajor = Base::IsRowMajor };$/;"	e	enum:Eigen::MappedSparseMatrix::__anon403
IsRowMajor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    enum { IsRowMajor = internal::traits<BlockType>::IsRowMajor };$/;"	e	enum:Eigen::BlockImpl::__anon413
IsRowMajor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    enum { IsRowMajor = internal::traits<BlockType>::IsRowMajor };$/;"	e	enum:Eigen::BlockImpl::__anon415
IsRowMajor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    enum { IsRowMajor = internal::traits<BlockType>::IsRowMajor };$/;"	e	enum:Eigen::BlockImpl::__anon417
IsRowMajor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    enum { IsRowMajor = (int(Lhs::Flags)&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector::__anon394
IsRowMajor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    enum { IsRowMajor = (int(Rhs::Flags)&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector::__anon395
IsRowMajor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^      IsRowMajor = Flags&RowMajorBit ? 1 : 0,$/;"	e	enum:Eigen::SparseMatrixBase::__anon419
IsSigned	./Thirdparty/sparseicp/include/Eigen/src/Core/NumTraits.h	/^    IsSigned = std::numeric_limits<T>::is_signed,$/;"	e	enum:Eigen::GenericNumTraits::__anon30
IsSparse	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  IsSparse$/;"	e	enum:Eigen::__anon77
IsStopped	./src/Registrating.cc	/^	bool Registrating::IsStopped() {$/;"	f	class:ORB_SLAM2::Registrating
IsSupported	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^{ enum { IsSupported = 0 }; };$/;"	e	enum:Eigen::internal::vml_call::__anon66
IsTransposed	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^    IsTransposed = Base::IsTransposed ? 0 : 1$/;"	e	enum:Eigen::internal::blas_traits::__anon81
IsTransposed	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^    IsTransposed = false,$/;"	e	enum:Eigen::internal::blas_traits::__anon79
IsVectorAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^      IsVectorAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime == 1$/;"	e	enum:Eigen::DenseBase::__anon255
IsVectorAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^      IsVectorAtCompileTime = 0,$/;"	e	enum:Eigen::DiagonalBase::__anon197
IsVectorAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^      IsVectorAtCompileTime = RowsAtCompileTime == 1 || ColsAtCompileTime == 1,$/;"	e	enum:Eigen::SparseMatrixBase::__anon419
IsVertical	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^      IsVertical   = (Direction==Vertical) ? 1 : 0,$/;"	e	enum:Eigen::VectorwiseOp::__anon24
Isometry	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  Isometry      = 0x1,$/;"	e	enum:Eigen::TransformTraits
Isometry2D	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Transform<double,2,Eigen::Isometry,Eigen::ColMajor>              Isometry2D;$/;"	t	namespace:g2o
Isometry2d	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,Isometry> Isometry2d;$/;"	t	namespace:Eigen
Isometry2f	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,Isometry> Isometry2f;$/;"	t	namespace:Eigen
Isometry3D	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Transform<double,3,Eigen::Isometry,Eigen::ColMajor>              Isometry3D;$/;"	t	namespace:g2o
Isometry3d	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,Isometry> Isometry3d;$/;"	t	namespace:Eigen
Isometry3f	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,Isometry> Isometry3f;$/;"	t	namespace:Eigen
IsometryTransformType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  typedef Transform<Scalar,Dim,Isometry> IsometryTransformType;$/;"	t	class:Eigen::Translation
IterBase	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  typedef typename _MatrixTypeNested::InnerIterator IterBase;$/;"	t	class:Eigen::SparseView::InnerIterator
IterativeSolverBase	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  IterativeSolverBase()$/;"	f	class:Eigen::IterativeSolverBase
IterativeSolverBase	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  IterativeSolverBase(const MatrixType& A)$/;"	f	class:Eigen::IterativeSolverBase
IterativeSolverBase	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^class IterativeSolverBase : internal::noncopyable$/;"	c	namespace:Eigen
Iterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Iterator(const AmbiVector& vec, const RealScalar& epsilon = 0)$/;"	f	class:Eigen::internal::AmbiVector::Iterator
Iterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^class AmbiVector<_Scalar,_Index>::Iterator$/;"	c	class:Eigen::internal::AmbiVector
JACOBIAN_WORKSPACE_H	./Thirdparty/g2o/g2o/core/jacobian_workspace.h	28;"	d
JRs	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef JacobiRotation<Scalar> JRs;$/;"	t	class:Eigen::RealQZ
JacobiRotation	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation() {}$/;"	f	class:Eigen::JacobiRotation
JacobiRotation	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation(const Scalar& c, const Scalar& s) : m_c(c), m_s(s) {}$/;"	f	class:Eigen::JacobiRotation
JacobiRotation	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^template<typename Scalar> class JacobiRotation$/;"	c	namespace:Eigen
JacobiSVD	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    JacobiSVD()$/;"	f	class:Eigen::JacobiSVD
JacobiSVD	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    JacobiSVD(Index rows, Index cols, unsigned int computationOptions = 0)$/;"	f	class:Eigen::JacobiSVD
JacobiSVD	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    JacobiSVD(const MatrixType& matrix, unsigned int computationOptions = 0)$/;"	f	class:Eigen::JacobiSVD
JacobiSVD	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^template<typename _MatrixType, int QRPreconditioner> class JacobiSVD$/;"	c	namespace:Eigen
JacobiSVDType	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  typedef JacobiSVD<_MatrixType, QRPreconditioner> JacobiSVDType;$/;"	t	struct:Eigen::internal::solve_retval
JacobianType	./Thirdparty/g2o/g2o/core/base_multi_edge.h	/^      typedef MatrixXd::MapType JacobianType;$/;"	t	class:g2o::BaseMultiEdge
JacobianWorkspace	./Thirdparty/g2o/g2o/core/jacobian_workspace.cpp	/^JacobianWorkspace::JacobianWorkspace() :$/;"	f	class:g2o::JacobianWorkspace
JacobianWorkspace	./Thirdparty/g2o/g2o/core/jacobian_workspace.h	/^  class  JacobianWorkspace$/;"	c	namespace:g2o
JacobianXiOplusType	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      typedef typename Matrix<double, D, Di>::AlignedMapType JacobianXiOplusType;$/;"	t	class:g2o::BaseBinaryEdge
JacobianXiOplusType	./Thirdparty/g2o/g2o/core/base_unary_edge.h	/^      typedef typename Matrix<double, D, VertexXiType::Dimension>::AlignedMapType JacobianXiOplusType;$/;"	t	class:g2o::BaseUnaryEdge
JacobianXjOplusType	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      typedef typename Matrix<double, D, Dj>::AlignedMapType JacobianXjOplusType;$/;"	t	class:g2o::BaseBinaryEdge
JointAlignment	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    JointAlignment = assign_traits<Derived1,Derived2>::JointAlignment$/;"	e	enum:Eigen::internal::assign_innervec_CompleteUnrolling::__anon254
JointAlignment	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    JointAlignment = bool(DstIsAligned) && bool(SrcIsAligned) ? Aligned : Unaligned$/;"	e	enum:Eigen::internal::assign_traits::__anon247
KDTreeAdaptor	./Thirdparty/sparseicp/ICP.h	/^        KDTreeAdaptor(const MatrixType &mat, const int leaf_max_size = 10) : m_data_matrix(mat) {$/;"	f	struct:nanoflann::KDTreeAdaptor
KDTreeAdaptor	./Thirdparty/sparseicp/ICP.h	/^    struct KDTreeAdaptor {$/;"	s	namespace:nanoflann
KDTreeEigenMatrixAdaptor	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		KDTreeEigenMatrixAdaptor(const int dimensionality, const MatrixType &mat, const int leaf_max_size = 10) : m_data_matrix(mat)$/;"	f	struct:nanoflann::KDTreeEigenMatrixAdaptor
KDTreeEigenMatrixAdaptor	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	struct KDTreeEigenMatrixAdaptor$/;"	s	namespace:nanoflann
KDTreeSingleIndexAdaptor	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		KDTreeSingleIndexAdaptor(const int dimensionality, const DatasetAdaptor& inputData, const KDTreeSingleIndexAdaptorParams& params = KDTreeSingleIndexAdaptorParams() ) :$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
KDTreeSingleIndexAdaptor	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	class KDTreeSingleIndexAdaptor$/;"	c	namespace:nanoflann
KDTreeSingleIndexAdaptorParams	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		KDTreeSingleIndexAdaptorParams(size_t _leaf_max_size = 10, int dim_ = -1) :$/;"	f	struct:nanoflann::KDTreeSingleIndexAdaptorParams
KDTreeSingleIndexAdaptorParams	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	struct KDTreeSingleIndexAdaptorParams$/;"	s	namespace:nanoflann
KEYFRAMEDATABASE_H	./include/KeyFrameDatabase.h	22;"	d
KEYFRAME_H	./include/KeyFrame.h	22;"	d
KILL_NON_PRINCIPAL_COL	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	131;"	d
KILL_PRINCIPAL_COL	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	130;"	d
KILL_ROW	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	129;"	d
KL	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^  KL,$/;"	e	enum:DBoW2::ScoringType
KMADD	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	107;"	d
KMADD	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	273;"	d
KNNResultSet	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline KNNResultSet(CountType capacity_) : capacity(capacity_), count(0)$/;"	f	class:nanoflann::KNNResultSet
KNNResultSet	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	class KNNResultSet$/;"	c	namespace:nanoflann
KeepsPacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    KeepsPacketAccess = bool(HasNoInnerStride)$/;"	e	enum:Eigen::internal::traits::__anon330
KernelResultType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^    > KernelResultType;$/;"	t	class:Eigen::LU
KeyFrame	./include/KeyFrame.h	/^class KeyFrame$/;"	c	namespace:ORB_SLAM2
KeyFrame	./src/KeyFrame.cc	/^KeyFrame::KeyFrame(Frame &F, Map *pMap, KeyFrameDatabase *pKFDB):$/;"	f	class:ORB_SLAM2::KeyFrame
KeyFrameAndPose	./include/LoopClosing.h	/^        Eigen::aligned_allocator<std::pair<const KeyFrame*, g2o::Sim3> > > KeyFrameAndPose;$/;"	t	class:ORB_SLAM2::LoopClosing
KeyFrameCulling	./src/LocalMapping.cc	/^void LocalMapping::KeyFrameCulling()$/;"	f	class:ORB_SLAM2::LocalMapping
KeyFrameDatabase	./include/KeyFrameDatabase.h	/^class KeyFrameDatabase$/;"	c	namespace:ORB_SLAM2
KeyFrameDatabase	./src/KeyFrameDatabase.cc	/^KeyFrameDatabase::KeyFrameDatabase (const ORBVocabulary &voc):$/;"	f	class:ORB_SLAM2::KeyFrameDatabase
KeyFramesInMap	./src/Map.cc	/^long unsigned int Map::KeyFramesInMap()$/;"	f	class:ORB_SLAM2::Map
KeyframesInQueue	./include/LocalMapping.h	/^    int KeyframesInQueue(){$/;"	f	class:ORB_SLAM2::LocalMapping
L	./Thirdparty/DBoW2/DBoW2/FORB.cpp	/^const int FORB::L=32;$/;"	m	class:DBoW2::FORB	file:
L	./Thirdparty/DBoW2/DBoW2/FORB.h	/^  static const int L;$/;"	m	class:DBoW2::FORB
L1	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^  L1,$/;"	e	enum:DBoW2::LNorm
L1_Adaptor	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		L1_Adaptor(const DataSource &_data_source) : data_source(_data_source) { }$/;"	f	struct:nanoflann::L1_Adaptor
L1_Adaptor	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	struct L1_Adaptor$/;"	s	namespace:nanoflann
L1_NORM	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^  L1_NORM,$/;"	e	enum:DBoW2::ScoringType
L2	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^  L2$/;"	e	enum:DBoW2::LNorm
L2_Adaptor	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		L2_Adaptor(const DataSource &_data_source) : data_source(_data_source) { }$/;"	f	struct:nanoflann::L2_Adaptor
L2_Adaptor	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	struct L2_Adaptor$/;"	s	namespace:nanoflann
L2_NORM	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^  L2_NORM,$/;"	e	enum:DBoW2::ScoringType
L2_Simple_Adaptor	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		L2_Simple_Adaptor(const DataSource &_data_source) : data_source(_data_source) { }$/;"	f	struct:nanoflann::L2_Simple_Adaptor
L2_Simple_Adaptor	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	struct L2_Simple_Adaptor$/;"	s	namespace:nanoflann
LDLT	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    LDLT() $/;"	f	class:Eigen::LDLT
LDLT	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    LDLT(Index size)$/;"	f	class:Eigen::LDLT
LDLT	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    LDLT(const MatrixType& matrix)$/;"	f	class:Eigen::LDLT
LDLT	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^template<typename _MatrixType, int _UpLo> class LDLT$/;"	c	namespace:Eigen
LDLTTraits	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLDLT<MatrixType,UpLo> > LDLTTraits;$/;"	t	class:Eigen::SimplicialCholesky
LDLTType	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  typedef LDLT<_MatrixType,_UpLo> LDLTType;$/;"	t	struct:Eigen::internal::solve_retval
LDLT_Traits	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^template<typename MatrixType> struct LDLT_Traits<MatrixType,Lower>$/;"	s	namespace:Eigen::internal
LDLT_Traits	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^template<typename MatrixType> struct LDLT_Traits<MatrixType,Upper>$/;"	s	namespace:Eigen::internal
LLT	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    LLT() : m_matrix(), m_isInitialized(false) {}$/;"	f	class:Eigen::LLT
LLT	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    LLT(Index size) : m_matrix(size, size),$/;"	f	class:Eigen::LLT
LLT	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    LLT(const MatrixType& matrix)$/;"	f	class:Eigen::LLT
LLT	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^template<typename _MatrixType, int _UpLo> class LLT$/;"	c	namespace:Eigen
LLTTraits	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLLT<MatrixType,UpLo>  > LLTTraits;$/;"	t	class:Eigen::SimplicialCholesky
LLTType	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^  typedef LLT<_MatrixType,UpLo> LLTType;$/;"	t	struct:Eigen::internal::solve_retval
LLT_Traits	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^template<typename MatrixType> struct LLT_Traits<MatrixType,Lower>$/;"	s	namespace:Eigen::internal
LLT_Traits	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^template<typename MatrixType> struct LLT_Traits<MatrixType,Upper>$/;"	s	namespace:Eigen::internal
LLVL	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon389
LMatrixType	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef TriangularView<LUMatrixType, Lower|UnitDiag>  LMatrixType;$/;"	t	class:Eigen::SuperLU
LNorm	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^enum LNorm$/;"	g	namespace:DBoW2
LOCALMAPPING_H	./include/LocalMapping.h	22;"	d
LOGISTIC	./Thirdparty/sparseicp/ICP.h	/^        LOGISTIC,$/;"	e	enum:ICP::Function
LOG_EPS	./Thirdparty/DBoW2/DBoW2/ScoringObject.cpp	/^const double GeneralScoring::LOG_EPS = log(DBL_EPSILON); \/\/ FLT_EPSILON$/;"	m	class:GeneralScoring	file:
LOG_EPS	./Thirdparty/DBoW2/DBoW2/ScoringObject.h	/^	static const double LOG_EPS; $/;"	m	class:DBoW2::GeneralScoring
LOOPCLOSING_H	./include/LoopClosing.h	22;"	d
LOST	./include/Tracking.h	/^        LOST=3$/;"	e	enum:ORB_SLAM2::Tracking::eTrackingState
LSUB	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon389
LU	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^    explicit LU(const T& t) : Base(t), m_originalMatrix(t) {}$/;"	f	class:Eigen::LU
LU	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^class LU : public FullPivLU<MatrixType>$/;"	c	namespace:Eigen
LUMatrixType	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SparseMatrix<Scalar> LUMatrixType;$/;"	t	class:Eigen::SuperLUBase
LUMatrixType	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::LUMatrixType LUMatrixType;$/;"	t	class:Eigen::SuperLU
LUMatrixType	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef SparseMatrix<Scalar> LUMatrixType;$/;"	t	class:Eigen::UmfPackLU
LUNoMarker	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Memory.h	/^enum { LUNoMarker = 3 };$/;"	e	enum:Eigen::internal::__anon390
LUSUP	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon389
LUTempSpace	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Memory.h	/^inline Index LUTempSpace(Index&m, Index& w)$/;"	f	namespace:Eigen::internal
LU_GlobalLU_t	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^struct LU_GlobalLU_t {$/;"	s	namespace:Eigen::internal
LU_kernel_bmod	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^template <> struct LU_kernel_bmod<1>$/;"	s	namespace:Eigen::internal
LU_kernel_bmod	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^template <int SegSizeAtCompileTime> struct LU_kernel_bmod$/;"	s	namespace:Eigen::internal
LUnumTempV	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Memory.h	/^inline Index LUnumTempV(Index& m, Index& w, Index& t, Index& b)$/;"	f	namespace:Eigen::internal
LandmarkDim	./Thirdparty/g2o/g2o/core/block_solver.h	/^      static const int LandmarkDim = Traits::LandmarkDim;$/;"	m	class:g2o::BlockSolver
LandmarkDim	./Thirdparty/g2o/g2o/core/block_solver.h	/^    static const int LandmarkDim = Eigen::Dynamic;$/;"	m	struct:g2o::BlockSolverTraits
LandmarkDim	./Thirdparty/g2o/g2o/core/block_solver.h	/^    static const int LandmarkDim = _LandmarkDim;$/;"	m	struct:g2o::BlockSolverTraits
LandmarkHessianType	./Thirdparty/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::LandmarkHessianType LandmarkHessianType;$/;"	t	class:g2o::BlockSolver
LandmarkHessianType	./Thirdparty/g2o/g2o/core/block_solver.h	/^    typedef SparseBlockMatrix<LandmarkMatrixType> LandmarkHessianType;$/;"	t	struct:g2o::BlockSolverTraits
LandmarkMatrixType	./Thirdparty/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::LandmarkMatrixType LandmarkMatrixType; $/;"	t	class:g2o::BlockSolver
LandmarkMatrixType	./Thirdparty/g2o/g2o/core/block_solver.h	/^    typedef Matrix<double, LandmarkDim, LandmarkDim> LandmarkMatrixType;$/;"	t	struct:g2o::BlockSolverTraits
LandmarkMatrixType	./Thirdparty/g2o/g2o/core/block_solver.h	/^    typedef MatrixXd LandmarkMatrixType;$/;"	t	struct:g2o::BlockSolverTraits
LandmarkVectorType	./Thirdparty/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::LandmarkVectorType LandmarkVectorType;$/;"	t	class:g2o::BlockSolver
LandmarkVectorType	./Thirdparty/g2o/g2o/core/block_solver.h	/^    typedef Matrix<double, LandmarkDim, 1> LandmarkVectorType;$/;"	t	struct:g2o::BlockSolverTraits
LandmarkVectorType	./Thirdparty/g2o/g2o/core/block_solver.h	/^    typedef VectorXd LandmarkVectorType;$/;"	t	struct:g2o::BlockSolverTraits
Large	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  Large = 2,$/;"	e	enum:Eigen::__anon143
LargeEnough	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^      LargeEnough = VmlSize==Dynamic || VmlSize>=EIGEN_MKL_VML_THRESHOLD,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon67
LargeThreshold	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    LargeThreshold = EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD$/;"	e	enum:Eigen::internal::product_type::__anon145
LazyCoeffBasedProductMode	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum { CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon78
LazyCoeffBasedProductType	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    typedef CoeffBasedProduct<LhsNested,RhsNested,NestByRefBit> LazyCoeffBasedProductType;$/;"	t	class:Eigen::CoeffBasedProduct
LazyProductReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^struct LazyProductReturnType : public ProductReturnType<Lhs,Rhs,LazyCoeffBasedProductMode>$/;"	s	namespace:Eigen
Lhs	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^  typedef typename remove_all<_Lhs>::type Lhs;$/;"	t	struct:Eigen::internal::traits
Lhs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,AffineCompact,LhsOptions> Lhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Lhs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,LhsMode,LhsOptions> Lhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Lhs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,Projective,LhsOptions> Lhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Lhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename internal::remove_all<SparseLhsType>::type Lhs;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
LhsBlasTraits	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typedef internal::blas_traits<_LhsNested> LhsBlasTraits;$/;"	t	class:Eigen::ProductBase
LhsCleaned	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  typedef typename remove_all<Lhs>::type LhsCleaned;$/;"	t	struct:Eigen::internal::conservative_sparse_sparse_product_selector
LhsCoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    LhsCoeffReadCost = _LhsNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon179
LhsCoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      LhsCoeffReadCost = _LhsNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon46
LhsCoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    LhsCoeffReadCost = traits<_LhsNested>::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon406
LhsCoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    LhsCoeffReadCost = _LhsNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon421
LhsFlags	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    LhsFlags = _LhsNested::Flags,$/;"	e	enum:Eigen::internal::traits::__anon179
LhsFlags	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      LhsFlags = _LhsNested::Flags,$/;"	e	enum:Eigen::internal::traits::__anon46
LhsFlags	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    LhsFlags = _LhsNested::Flags,$/;"	e	enum:Eigen::internal::traits::__anon421
LhsInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename Lhs::InnerIterator LhsInnerIterator;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
LhsIsSelfAdjoint	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    LhsIsSelfAdjoint = (LhsMode&SelfAdjoint)==SelfAdjoint,$/;"	e	enum:Eigen::SelfadjointProductMatrix::__anon61
LhsIsUpper	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    LhsIsUpper = (LhsMode&(Upper|Lower))==Upper,$/;"	e	enum:Eigen::SelfadjointProductMatrix::__anon61
LhsIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename _LhsNested::InnerIterator LhsIterator;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
LhsMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename take_matrix_for_product<Lhs>::type LhsMatrixType;$/;"	t	struct:Eigen::internal::traits
LhsMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename traits<homogeneous_left_product_impl>::LhsMatrixType LhsMatrixType;$/;"	t	struct:Eigen::internal::homogeneous_left_product_impl
LhsMatrixTypeCleaned	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<LhsMatrixType>::type LhsMatrixTypeCleaned;$/;"	t	struct:Eigen::internal::homogeneous_left_product_impl
LhsMatrixTypeCleaned	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<LhsMatrixType>::type LhsMatrixTypeCleaned;$/;"	t	struct:Eigen::internal::traits
LhsMatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<typename LhsMatrixTypeCleaned::Nested>::type LhsMatrixTypeNested;$/;"	t	struct:Eigen::internal::homogeneous_left_product_impl
LhsMode	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^      LhsMode = internal::is_diagonal<_LhsNested>::ret ? internal::SDP_IsDiagonal$/;"	e	enum:Eigen::SparseDiagonalProduct::__anon409
LhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::nested<Lhs>::type LhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
LhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename Lhs::Nested LhsNested;$/;"	t	struct:Eigen::internal::traits
LhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  typedef typename internal::nested<Lhs, Rhs::ColsAtCompileTime, typename internal::plain_matrix_type<Lhs>::type >::type LhsNested;$/;"	t	struct:Eigen::ProductReturnType
LhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typedef typename Lhs::Nested LhsNested;$/;"	t	class:Eigen::ProductBase
LhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    typedef typename Traits::LhsNested LhsNested;$/;"	t	class:Eigen::SparseDenseOuterProduct
LhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename Lhs::Nested LhsNested;$/;"	t	struct:Eigen::internal::traits
LhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typedef typename Lhs::Nested LhsNested;$/;"	t	class:Eigen::SparseDiagonalProduct
LhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    typename internal::nested<Lhs,Rhs::RowsAtCompileTime>::type>::type LhsNested;$/;"	t	struct:Eigen::SparseSparseProductReturnType
LhsPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::LhsPacket LhsPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
LhsPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,RealPacket,  Scalar>::type LhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
LhsPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,_LhsPacket,LhsScalar>::type LhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
LhsPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename conditional<Vectorizable,_LhsPacket,LhsScalar>::type LhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
LhsPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon51
LhsPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon52
LhsPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon54
LhsPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^  LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon34
LhsPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^  LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon35
LhsProductTraits	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  typedef blas_traits<Lhs> LhsProductTraits;$/;"	t	struct:Eigen::internal::triangular_solver_selector
LhsProgress	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress   = Traits::LhsProgress,$/;"	e	enum:Eigen::internal::gebp_kernel::__anon55
LhsProgress	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon51
LhsProgress	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon52
LhsProgress	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon53
LhsProgress	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon54
LhsRowMajor	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      LhsRowMajor = LhsFlags & RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon46
LhsRowMajor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    LhsRowMajor = internal::traits<Lhs>::Flags & RowMajorBit,$/;"	e	enum:Eigen::SparseSparseProductReturnType::__anon420
LhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    typedef typename Lhs::Scalar LhsScalar;$/;"	t	class:Eigen::GeneralProduct
LhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typedef typename internal::traits<Lhs>::Scalar LhsScalar;$/;"	t	class:Eigen::ProductBase
LhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  typedef typename Lhs::Scalar LhsScalar;$/;"	t	struct:Eigen::internal::triangular_solver_selector
LhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef RealScalar  LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef _LhsScalar LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar> LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef _LhsScalar LhsScalar;$/;"	t	class:Eigen::internal::level3_blocking
LhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef typename  Lhs::Scalar LhsScalar;$/;"	t	class:Eigen::GeneralProduct
LhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef typename conditional<Transpose,_RhsScalar,_LhsScalar>::type LhsScalar;$/;"	t	class:Eigen::internal::gemm_blocking_space
LhsUpLo	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^    LhsUpLo = LhsMode&(Upper|Lower)$/;"	e	enum:Eigen::SelfadjointProductMatrix::__anon44
LinSpaced	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(Index size, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinSpaced	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(Sequential_t, Index size, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinSpaced	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(Sequential_t, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinSpaced	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinearAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    LinearAccess = ( (Direction==BothDirections) && (int(_MatrixTypeNested::Flags)&PacketAccessBit) )$/;"	e	enum:Eigen::internal::traits::__anon241
LinearAccessBit	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^const unsigned int LinearAccessBit = 0x10;$/;"	m	namespace:Eigen
LinearMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  typedef Matrix<Scalar,Dim,Dim> LinearMatrixType;$/;"	t	class:Eigen::Scaling
LinearMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Matrix<Scalar,Dim,Dim> LinearMatrixType;$/;"	t	class:Eigen::Transform
LinearMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  typedef Matrix<Scalar,Dim,Dim> LinearMatrixType;$/;"	t	class:Eigen::Translation
LinearMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef Matrix<Scalar,Dim,Dim,Options> LinearMatrixType;$/;"	t	class:Eigen::Transform
LinearMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  typedef Matrix<Scalar,Dim,Dim> LinearMatrixType;$/;"	t	class:Eigen::Translation
LinearPart	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Block<MatrixType,Dim,Dim> LinearPart;$/;"	t	class:Eigen::Transform
LinearPart	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef Block<MatrixType,Dim,Dim,int(Mode)==(AffineCompact)> LinearPart;$/;"	t	class:Eigen::Transform
LinearSolver	./Thirdparty/g2o/g2o/core/linear_solver.h	/^    LinearSolver() {};$/;"	f	class:g2o::LinearSolver
LinearSolver	./Thirdparty/g2o/g2o/core/linear_solver.h	/^class LinearSolver$/;"	c	namespace:g2o
LinearSolverCCS	./Thirdparty/g2o/g2o/core/linear_solver.h	/^    LinearSolverCCS() : LinearSolver<MatrixType>(), _ccsMatrix(0) {}$/;"	f	class:g2o::LinearSolverCCS
LinearSolverCCS	./Thirdparty/g2o/g2o/core/linear_solver.h	/^class LinearSolverCCS : public LinearSolver<MatrixType>$/;"	c	namespace:g2o
LinearSolverDense	./Thirdparty/g2o/g2o/solvers/linear_solver_dense.h	/^      LinearSolverDense() :$/;"	f	class:g2o::LinearSolverDense
LinearSolverDense	./Thirdparty/g2o/g2o/solvers/linear_solver_dense.h	/^  class LinearSolverDense : public LinearSolver<MatrixType>$/;"	c	namespace:g2o
LinearSolverEigen	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    LinearSolverEigen() :$/;"	f	class:g2o::LinearSolverEigen
LinearSolverEigen	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^class LinearSolverEigen: public LinearSolver<MatrixType>$/;"	c	namespace:g2o
LinearSolverType	./Thirdparty/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::LinearSolverType LinearSolverType;$/;"	t	class:g2o::BlockSolver
LinearSolverType	./Thirdparty/g2o/g2o/core/block_solver.h	/^    typedef LinearSolver<PoseMatrixType> LinearSolverType;$/;"	t	struct:g2o::BlockSolverTraits
LinearTraversal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  LinearTraversal,$/;"	e	enum:Eigen::__anon72
LinearVectorizedTraversal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  LinearVectorizedTraversal,$/;"	e	enum:Eigen::__anon72
ListEl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    struct ListEl$/;"	s	class:Eigen::internal::AmbiVector
LoadImages	./main.cc	/^void LoadImages(const std::string &strFile, std::vector<std::string> &vstrImageFilenames, std::vector<double> &vTimestamps)$/;"	f
LocalBundleAdjustment	./src/Optimizer.cc	/^void Optimizer::LocalBundleAdjustment(KeyFrame *pKF, bool* pbStopFlag, Map* pMap)$/;"	f	class:ORB_SLAM2::Optimizer
LocalMapping	./include/LocalMapping.h	/^class LocalMapping$/;"	c	namespace:ORB_SLAM2
LocalMapping	./src/LocalMapping.cc	/^LocalMapping::LocalMapping(Map *pMap, const float bMonocular):$/;"	f	class:ORB_SLAM2::LocalMapping
LookupMap	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h	/^      typedef std::tr1::unordered_map<int, double>     LookupMap;$/;"	t	class:g2o::MarginalCovarianceCholesky
LoopClosing	./include/LoopClosing.h	/^class LoopClosing$/;"	c	namespace:ORB_SLAM2
LoopClosing	./src/LoopClosing.cc	/^LoopClosing::LoopClosing(Map *pMap, KeyFrameDatabase *pDB, ORBVocabulary *pVoc, const bool bFixScale):$/;"	f	class:ORB_SLAM2::LoopClosing
Lower	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  Lower=0x1,                      $/;"	e	enum:Eigen::__anon70
LowerTriangular	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/TriangularSolver.h	/^const unsigned int LowerTriangular = Lower;$/;"	m	namespace:Eigen
LowerTriangularBit	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/TriangularSolver.h	/^const unsigned int LowerTriangularBit = Lower;$/;"	m	namespace:Eigen
LvalueBit	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^const unsigned int LvalueBit = 0x20;$/;"	m	namespace:Eigen
MADD	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	106;"	d
MADD	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	131;"	d
MAPDRAWER_H	./include/MapDrawer.h	22;"	d
MAPPOINT_H	./include/MapPoint.h	22;"	d
MAP_H	./include/Map.h	22;"	d
MAX_DELTA	./4pcs/Registration.h	15;"	d
MAX_LEN	./main.cc	/^const int MAX_LEN = 200;$/;"	v
MAX_POINT_NUM	./include/Registrating.h	/^	const int MAX_POINT_NUM = 10010;$/;"	m	namespace:ORB_SLAM2
MEASURE_FUNCTION_TIME	./Thirdparty/g2o/g2o/stuff/timeutil.h	126;"	d
MEASURE_TIME	./Thirdparty/g2o/g2o/stuff/timeutil.h	69;"	d
METIS_SUPPORT_H	./Thirdparty/sparseicp/include/Eigen/src/MetisSupport/MetisSupport.h	10;"	d
MIN_DELTA	./4pcs/Registration.h	14;"	d
MONOCULAR	./include/System.h	/^        MONOCULAR=0,$/;"	e	enum:ORB_SLAM2::System::eSensor
M_PI	./Thirdparty/g2o/g2o/stuff/misc.h	34;"	d
M_PI	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	7;"	d
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    inline Map(PointerArgType dataPtr, Index a_size, const StrideType& a_stride = StrideType())$/;"	f	class:Eigen::Map
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    inline Map(PointerArgType dataPtr, Index nbRows, Index nbCols, const StrideType& a_stride = StrideType())$/;"	f	class:Eigen::Map
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    inline Map(PointerArgType dataPtr, const StrideType& a_stride = StrideType())$/;"	f	class:Eigen::Map
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^template<typename PlainObjectType, int MapOptions, typename StrideType> class Map$/;"	c	namespace:Eigen
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline Map(const Index* indicesPtr)$/;"	f	class:Eigen::Map
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline Map(const Index* indicesPtr, Index size)$/;"	f	class:Eigen::Map
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^class Map<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, IndexType>,_PacketAccess>$/;"	c	namespace:Eigen
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstMapType Map(const Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstMapType Map(const Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstMapType Map(const Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline MapType Map(Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline MapType Map(Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline MapType Map(Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstMapType<Stride<Outer, Inner> >::type Map(const Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstMapType<Stride<Outer, Inner> >::type Map(const Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstMapType<Stride<Outer, Inner> >::type Map(const Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedMapType<Stride<Outer, Inner> >::type Map(Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedMapType<Stride<Outer, Inner> >::type Map(Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedMapType<Stride<Outer, Inner> >::type Map(Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline Map(const Index* indicesPtr)$/;"	f	class:Eigen::Map
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline Map(const Index* indicesPtr, Index size)$/;"	f	class:Eigen::Map
Map	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^class Map<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,IndexType>,PacketAccess>$/;"	c	namespace:Eigen
Map	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    EIGEN_STRONG_INLINE Map(Scalar* coeffs) : m_coeffs(coeffs) {}$/;"	f	class:Eigen::Map
Map	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    EIGEN_STRONG_INLINE Map(const Scalar* coeffs) : m_coeffs(coeffs) {}$/;"	f	class:Eigen::Map
Map	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^class Map<Quaternion<_Scalar>, _Options >$/;"	c	namespace:Eigen
Map	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^class Map<const Quaternion<_Scalar>, _Options >$/;"	c	namespace:Eigen
Map	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    static CompressedStorage Map(Index* indices, Scalar* values, size_t size)$/;"	f	class:Eigen::internal::CompressedStorage
Map	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef MappedSparseMatrix<Scalar,Flags> Map;$/;"	t	class:Eigen::SparseMatrix
Map	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  static SluMatrix Map(MatrixBase<MatrixType>& _mat)$/;"	f	struct:Eigen::SluMatrix
Map	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  static SluMatrix Map(SparseMatrixBase<MatrixType>& mat)$/;"	f	struct:Eigen::SluMatrix
Map	./include/Map.h	/^class Map$/;"	c	namespace:ORB_SLAM2
Map	./src/Map.cc	/^Map::Map():mnMaxKFid(0),mnBigChangeIdx(0)$/;"	f	class:ORB_SLAM2::Map
MapAligned	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline AlignedMapType MapAligned(Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline AlignedMapType MapAligned(Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline AlignedMapType MapAligned(Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstAlignedMapType MapAligned(const Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstAlignedMapType MapAligned(const Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstAlignedMapType MapAligned(const Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedAlignedMapType<Stride<Outer, Inner> >::type MapAligned(Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedAlignedMapType<Stride<Outer, Inner> >::type MapAligned(Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedAlignedMapType<Stride<Outer, Inner> >::type MapAligned(Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstAlignedMapType<Stride<Outer, Inner> >::type MapAligned(const Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstAlignedMapType<Stride<Outer, Inner> >::type MapAligned(const Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstAlignedMapType<Stride<Outer, Inner> >::type MapAligned(const Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapBase	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    explicit inline MapBase(PointerType dataPtr) : Base(dataPtr) {}$/;"	f	class:Eigen::MapBase
MapBase	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline MapBase(PointerType dataPtr) : m_data(dataPtr), m_rows(RowsAtCompileTime), m_cols(ColsAtCompileTime)$/;"	f	class:Eigen::MapBase
MapBase	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline MapBase(PointerType dataPtr, Index nbRows, Index nbCols) : Base(dataPtr, nbRows, nbCols) {}$/;"	f	class:Eigen::MapBase
MapBase	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline MapBase(PointerType dataPtr, Index nbRows, Index nbCols)$/;"	f	class:Eigen::MapBase
MapBase	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline MapBase(PointerType dataPtr, Index vecSize) : Base(dataPtr, vecSize) {}$/;"	f	class:Eigen::MapBase
MapBase	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline MapBase(PointerType dataPtr, Index vecSize)$/;"	f	class:Eigen::MapBase
MapBase	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^template<typename Derived> class MapBase<Derived, ReadOnlyAccessors>$/;"	c	namespace:Eigen
MapBase	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^template<typename Derived> class MapBase<Derived, WriteAccessors>$/;"	c	namespace:Eigen
MapChanged	./src/System.cc	/^bool System::MapChanged()$/;"	f	class:ORB_SLAM2::System
MapDrawer	./include/MapDrawer.h	/^class MapDrawer$/;"	c	namespace:ORB_SLAM2
MapDrawer	./src/MapDrawer.cc	/^MapDrawer::MapDrawer(Map* pMap, const string &strSettingPath):mpMap(pMap)$/;"	f	class:ORB_SLAM2::MapDrawer
MapDrawer	./src/MapDrawer.cc	/^MapDrawer::MapDrawer(ORB_SLAM2::Map *pMap, ORB_SLAM2::Map *pLastMap, const string &strSettingPath) :$/;"	f	class:ORB_SLAM2::MapDrawer
MapLU	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^  typedef Map<Matrix<Scalar, Dynamic, Dynamic, StorageOrder> > MapLU;$/;"	t	struct:Eigen::internal::partial_lu_impl
MapPoint	./include/MapPoint.h	/^class MapPoint$/;"	c	namespace:ORB_SLAM2
MapPoint	./src/MapPoint.cc	/^MapPoint::MapPoint(const cv::Mat &Pos, KeyFrame *pRefKF, Map* pMap):$/;"	f	class:ORB_SLAM2::MapPoint
MapPoint	./src/MapPoint.cc	/^MapPoint::MapPoint(const cv::Mat &Pos, Map* pMap, Frame* pFrame, const int &idxF):$/;"	f	class:ORB_SLAM2::MapPoint
MapPoint	./src/MapPoint.cc	/^MapPoint::MapPoint(const cv::Mat &Pos, const cv::Mat &Des, Map* pMap) :$/;"	f	class:ORB_SLAM2::MapPoint
MapPointCulling	./src/LocalMapping.cc	/^void LocalMapping::MapPointCulling()$/;"	f	class:ORB_SLAM2::LocalMapping
MapPointsInMap	./src/Map.cc	/^long unsigned int Map::MapPointsInMap()$/;"	f	class:ORB_SLAM2::Map
MapType	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    typedef Eigen::Map<Derived, Unaligned>  MapType;$/;"	t	class:Eigen::PlainObjectBase
MappedRhs	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  typedef Map<Matrix<RhsScalar,Dynamic,1>, Aligned> MappedRhs;$/;"	t	struct:Eigen::internal::triangular_solver_selector
MappedSparseMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline MappedSparseMatrix(Index rows, Index cols, Index nnz, Index* outerIndexPtr, Index* innerIndexPtr, Scalar* valuePtr)$/;"	f	class:Eigen::MappedSparseMatrix
MappedSparseMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^class MappedSparseMatrix$/;"	c	namespace:Eigen
MappedSuperNodalMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    MappedSuperNodalMatrix()$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
MappedSuperNodalMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    MappedSuperNodalMatrix(Index m, Index n,  ScalarVector& nzval, IndexVector& nzval_colptr, IndexVector& rowind, $/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
MappedSuperNodalMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^class MappedSuperNodalMatrix$/;"	c	namespace:Eigen::internal
MarginalCovarianceCholesky	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^MarginalCovarianceCholesky::MarginalCovarianceCholesky() :$/;"	f	class:g2o::MarginalCovarianceCholesky
MarginalCovarianceCholesky	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h	/^  class  MarginalCovarianceCholesky {$/;"	c	namespace:g2o
MaskAlignedBit	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    MaskAlignedBit = (InnerPanel && (OuterStrideAtCompileTime!=Dynamic) && (((OuterStrideAtCompileTime * int(sizeof(Scalar))) % 16) == 0)) ? AlignedBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon184
MaskLvalueBit	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    MaskLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon233
MaskPacketAccessBit	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    MaskPacketAccessBit = (InnerSize == Dynamic || (InnerSize % packet_traits<Scalar>::size) == 0)$/;"	e	enum:Eigen::internal::traits::__anon184
Match	./include/Initializer.h	/^    typedef pair<int,int> Match;$/;"	t	class:ORB_SLAM2::Initializer
MatchAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^      MatchAtCompileTime = HasDirectAccess && StorageOrderMatch && InnerStrideMatch && OuterStrideMatch && AlignmentMatch$/;"	e	enum:Eigen::internal::traits::match::__anon186
Matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^  ::Matrix(const Scalar *data)$/;"	f	class:Eigen::Matrix
Matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix() : Base()$/;"	f	class:Eigen::Matrix
Matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Matrix
Matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const Matrix& other)$/;"	f	class:Eigen::Matrix
Matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::Matrix
Matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::Matrix
Matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const Scalar& x, const Scalar& y, const Scalar& z)$/;"	f	class:Eigen::Matrix
Matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const Scalar& x, const Scalar& y, const Scalar& z, const Scalar& w)$/;"	f	class:Eigen::Matrix
Matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const T0& x, const T1& y)$/;"	f	class:Eigen::Matrix
Matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE explicit Matrix(Index dim)$/;"	f	class:Eigen::Matrix
Matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    Matrix(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::Matrix
Matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^class Matrix$/;"	c	namespace:Eigen
Matrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^::Matrix(const RotationBase<OtherDerived,ColsAtCompileTime>& r)$/;"	f	class:Eigen::Matrix
Matrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^::Matrix(const RotationBase<OtherDerived,ColsAtCompileTime>& r)$/;"	f	class:Eigen::Matrix
Matrix2	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  typedef Matrix<Scalar,2,2> Matrix2;$/;"	t	class:Eigen::Rotation2D
Matrix2	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  typedef Matrix<Scalar,2,2> Matrix2;$/;"	t	class:Eigen::Rotation2D
Matrix2D	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<double,2,2,Eigen::ColMajor>                               Matrix2D;$/;"	t	namespace:g2o
Matrix2F	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<float,2,2,Eigen::ColMajor>                                Matrix2F;$/;"	t	namespace:g2o
Matrix2I	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<int,2,2,Eigen::ColMajor>                                  Matrix2I;$/;"	t	namespace:g2o
Matrix2s	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<Scalar,2,2> Matrix2s;$/;"	t	class:Eigen::RealQZ
Matrix3	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  typedef Matrix<Scalar,3,3> Matrix3;$/;"	t	class:Eigen::AngleAxis
Matrix3	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  typedef Matrix<Scalar,3,3> Matrix3;$/;"	t	class:Eigen::Quaternion
Matrix3	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  typedef Matrix<Scalar,3,3> Matrix3;$/;"	t	class:Eigen::AngleAxis
Matrix3	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  typedef Matrix<Scalar,3,3> Matrix3;$/;"	t	class:Eigen::QuaternionBase
Matrix3D	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<double,3,3,Eigen::ColMajor>                               Matrix3D;$/;"	t	namespace:g2o
Matrix3F	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<float,3,3,Eigen::ColMajor>                                Matrix3F;$/;"	t	namespace:g2o
Matrix3I	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<int,3,3,Eigen::ColMajor>                                  Matrix3I;$/;"	t	namespace:g2o
Matrix4D	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<double,4,4,Eigen::ColMajor>                               Matrix4D;$/;"	t	namespace:g2o
Matrix4F	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<float,4,4,Eigen::ColMajor>                                Matrix4F;$/;"	t	namespace:g2o
Matrix4I	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<int,4,4,Eigen::ColMajor>                                  Matrix4I;$/;"	t	namespace:g2o
Matrix6d	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^typedef Matrix<double, 6, 6> Matrix6d;$/;"	t	namespace:g2o
Matrix7d	./Thirdparty/g2o/g2o/types/sim3.h	/^  typedef  Matrix <double, 7, 7> Matrix7d;$/;"	t	namespace:g2o
MatrixAlignment	./Thirdparty/sparseicp/include/Eigen/src/LU/arch/Inverse_SSE.h	/^    MatrixAlignment     = bool(MatrixType::Flags&AlignedBit),$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon339
MatrixAlignment	./Thirdparty/sparseicp/include/Eigen/src/LU/arch/Inverse_SSE.h	/^    MatrixAlignment = bool(MatrixType::Flags&AlignedBit),$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon340
MatrixBase	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    MatrixBase() : Base() {}$/;"	f	class:Eigen::MatrixBase
MatrixBase	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^template<typename Derived> class MatrixBase$/;"	c	namespace:Eigen
MatrixCols	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    MatrixCols = traits<XprType>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon184
MatrixConjugateReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::remove_all<typename MatrixType::ConjugateReturnType>::type MatrixConjugateReturnType;$/;"	t	class:Eigen::TriangularView
MatrixElem	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^  MatrixElem(int r_, int c_) : r(r_), c(c_) {}$/;"	f	struct:g2o::MatrixElem
MatrixElem	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^struct MatrixElem$/;"	s	namespace:g2o	file:
MatrixHReturnType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef internal::HessenbergDecompositionMatrixHReturnType<MatrixType> MatrixHReturnType;$/;"	t	class:Eigen::HessenbergDecomposition
MatrixL	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const MatrixType, UnitLower> MatrixL;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixL	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, UnitLower> MatrixL;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixL	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const MatrixType, Lower> MatrixL;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixL	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, Lower> MatrixL;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixL	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixL  MatrixL;$/;"	t	class:Eigen::SimplicialLDLT
MatrixL	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixL  MatrixL;$/;"	t	class:Eigen::SimplicialLLT
MatrixL	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseTriangularView<CholMatrixType, Eigen::Lower>  MatrixL;$/;"	t	struct:Eigen::internal::traits
MatrixL	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseTriangularView<CholMatrixType, Eigen::UnitLower>  MatrixL;$/;"	t	struct:Eigen::internal::traits
MatrixOptions	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^      MatrixOptions = MatrixType::Options$/;"	e	enum:Eigen::JacobiSVD::__anon359
MatrixQReturnType	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef internal::FullPivHouseholderQRMatrixQReturnType<MatrixType> MatrixQReturnType;$/;"	t	class:Eigen::FullPivHouseholderQR
MatrixQType	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, RowsAtCompileTime, Options, MaxRowsAtCompileTime, MaxRowsAtCompileTime> MatrixQType;$/;"	t	class:Eigen::ColPivHouseholderQR
MatrixQType	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, RowsAtCompileTime, (MatrixType::Flags&RowMajorBit) ? RowMajor : ColMajor, MaxRowsAtCompileTime, MaxRowsAtCompileTime> MatrixQType;$/;"	t	class:Eigen::HouseholderQR
MatrixRBlockType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/QR.h	/^    typedef Block<const MatrixType, MatrixType::ColsAtCompileTime, MatrixType::ColsAtCompileTime> MatrixRBlockType;$/;"	t	class:Eigen::QR
MatrixRows	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    MatrixRows = traits<XprType>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon184
MatrixStructure	./Thirdparty/g2o/g2o/core/matrix_structure.cpp	/^MatrixStructure::MatrixStructure() :$/;"	f	class:g2o::MatrixStructure
MatrixStructure	./Thirdparty/g2o/g2o/core/matrix_structure.h	/^class MatrixStructure$/;"	c	namespace:g2o
MatrixTReturnType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef internal::TridiagonalizationMatrixTReturnType<MatrixTypeRealView> MatrixTReturnType;$/;"	t	class:Eigen::Tridiagonalization
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::LDLT
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::LLT
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodBase
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodDecomposition
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodSimplicialLDLT
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodSimplicialLLT
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodSupernodalLLT
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    typedef typename internal::conditional<int(Side)==OnTheRight,_LhsNested,_RhsNested>::type MatrixType;$/;"	t	class:Eigen::GeneralProduct
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::TriangularView
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Matrix<Scalar,HDim,HDim> MatrixType;$/;"	t	class:Eigen::Transform
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef typename TransformType::MatrixType MatrixType;$/;"	t	struct:Eigen::ei_transform_product_impl
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ComplexEigenSolver
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ComplexSchur
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::EigenSolver
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::GeneralizedEigenSolver
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::GeneralizedSelfAdjointEigenSolver
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::HessenbergDecomposition
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef _MatrixType MatrixType;$/;"	t	class:Eigen::RealQZ
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::RealSchur
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::Tridiagonalization
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef typename Transform<Scalar,Dim,AffineCompact,Options>::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::transform_take_affine_part
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::transform_take_affine_part
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef typename internal::make_proper_matrix_type<Scalar,Rows,HDim,Options>::type MatrixType;$/;"	t	class:Eigen::Transform
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef Matrix<Scalar,Dynamic,Dynamic> MatrixType;$/;"	t	class:Eigen::DiagonalPreconditioner
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::BiCGSTAB
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ConjugateGradient
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef Matrix<Scalar,Dynamic,Dynamic> MatrixType;$/;"	t	class:Eigen::IncompleteLUT
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename internal::traits<Derived>::MatrixType MatrixType;$/;"	t	class:Eigen::IterativeSolverBase
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::FullPivLU
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PartialPivLU
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^  typedef Block<MapLU, Dynamic, Dynamic> MatrixType;$/;"	t	struct:Eigen::internal::partial_lu_impl
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixBase
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixLDLT
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixLLT
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixLU
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::pastix_traits
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::pardiso_traits
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::MatrixType MatrixType;$/;"	t	class:Eigen::PardisoImpl
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ColPivHouseholderQR
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::FullPivHouseholderQR
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::HouseholderQR
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef SparseMatrix<Scalar, ColMajor, Index> MatrixType;$/;"	t	class:Eigen::SPQR
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::JacobiSVD
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialCholesky
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialLDLT
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialLLT
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename internal::traits<Derived>::MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialCholeskyBase
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef SparseMatrix<_Scalar, _Options, _Index> MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    typedef _MatrixType MatrixType; $/;"	t	class:Eigen::SparseLU
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef SparseMatrix<Scalar,ColMajor,Index> MatrixType; $/;"	t	class:Eigen::internal::SparseLUImpl
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SparseQR
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename SparseQRType::QRMatrixType MatrixType;$/;"	t	struct:Eigen::SparseQR_QProduct
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SuperILU
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SuperLU
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SuperLUBase
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  typedef Derived MatrixType;$/;"	t	struct:Eigen::SluMatrixMapHelper
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  typedef Matrix<Scalar,Rows,Cols,Options,MRows,MCols> MatrixType;$/;"	t	struct:Eigen::SluMatrixMapHelper
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::UmfPackLU
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::image_retval_base
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixTypeCleaned	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<MatrixType>::type MatrixTypeCleaned;$/;"	t	struct:Eigen::internal::traits
MatrixTypeInnerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    MatrixTypeInnerStride =  inner_stride_at_compile_time<MatrixType>::ret,$/;"	e	enum:Eigen::internal::traits::__anon139
MatrixTypeIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename _MatrixTypeNested::InnerIterator MatrixTypeIterator;$/;"	t	class:Eigen::CwiseUnaryOpImpl
MatrixTypeIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename _MatrixTypeNested::InnerIterator MatrixTypeIterator;$/;"	t	class:Eigen::CwiseUnaryViewImpl
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^  typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    typedef typename internal::traits<Replicate>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::Replicate
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^  typedef typename nested<MatrixType,Factor>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename internal::traits<SelfAdjointView>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::SelfAdjointView
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::TriangularView
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::traits<PartialReduxExpr>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::PartialReduxExpr
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^  typedef typename internal::eval<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::inverse_impl
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::SparseSelfAdjointView
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::SparseTriangularView
MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::SparseView
MatrixTypeNestedCleaned	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename remove_all<typename MatrixType::Nested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::permut_matrix_product_retval
MatrixTypeNestedCleaned	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename internal::traits<SelfAdjointView>::MatrixTypeNestedCleaned MatrixTypeNestedCleaned;$/;"	t	class:Eigen::SelfAdjointView
MatrixTypeNestedCleaned	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename remove_all<MatrixTypeNested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNestedCleaned	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef typename remove_all<typename MatrixType::Nested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::transposition_matrix_product_retval
MatrixTypeNestedCleaned	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::MatrixTypeNestedCleaned MatrixTypeNestedCleaned;$/;"	t	class:Eigen::TriangularView
MatrixTypeNestedCleaned	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename remove_all<MatrixTypeNested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNestedCleaned	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^  typedef typename remove_all<MatrixTypeNested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::inverse_impl
MatrixTypeNestedCleaned	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^    typedef typename remove_all<typename MatrixType::Nested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::permut_sparsematrix_product_retval
MatrixTypeNestedCleaned	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^  typedef typename remove_all<typename MatrixType::Nested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNestedCleaned	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename internal::remove_all<MatrixTypeNested>::type MatrixTypeNestedCleaned;$/;"	t	class:Eigen::SparseTriangularView
MatrixTypeNestedNonRef	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::MatrixTypeNestedNonRef MatrixTypeNestedNonRef;$/;"	t	class:Eigen::TriangularView
MatrixTypeNestedNonRef	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename remove_reference<MatrixTypeNested>::type MatrixTypeNestedNonRef;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNestedNonRef	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename internal::remove_reference<MatrixTypeNested>::type MatrixTypeNestedNonRef;$/;"	t	class:Eigen::SparseTriangularView
MatrixTypeNestedPlain	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^  typedef typename remove_reference<MatrixTypeNested>::type MatrixTypeNestedPlain;$/;"	t	struct:Eigen::internal::traits
MatrixTypeOuterStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    MatrixTypeOuterStride = outer_stride_at_compile_time<MatrixType>::ret,$/;"	e	enum:Eigen::internal::traits::__anon233
MatrixTypeRealView	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename internal::remove_all<typename MatrixType::RealReturnType>::type MatrixTypeRealView;$/;"	t	class:Eigen::Tridiagonalization
MatrixTypeReverseIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename _MatrixTypeNested::ReverseInnerIterator MatrixTypeReverseIterator;$/;"	t	class:Eigen::CwiseUnaryOpImpl
MatrixTypeReverseIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename _MatrixTypeNested::ReverseInnerIterator MatrixTypeReverseIterator;$/;"	t	class:Eigen::CwiseUnaryViewImpl
MatrixU	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const MatrixType, UnitUpper> MatrixU;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixU	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, UnitUpper> MatrixU;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixU	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const MatrixType, Upper> MatrixU;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixU	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, Upper> MatrixU;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixU	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixU  MatrixU;$/;"	t	class:Eigen::SimplicialLDLT
MatrixU	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixU  MatrixU;$/;"	t	class:Eigen::SimplicialLLT
MatrixU	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseTriangularView<typename CholMatrixType::AdjointReturnType, Eigen::UnitUpper> MatrixU;$/;"	t	struct:Eigen::internal::traits
MatrixU	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseTriangularView<typename CholMatrixType::AdjointReturnType, Eigen::Upper>   MatrixU;$/;"	t	struct:Eigen::internal::traits
MatrixUType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^    typedef Matrix<Scalar, MatrixType::RowsAtCompileTime, MinSize> MatrixUType;$/;"	t	class:Eigen::SVD
MatrixUType	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^            MatrixUType;$/;"	t	class:Eigen::JacobiSVD
MatrixVType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^    typedef Matrix<Scalar, MatrixType::ColsAtCompileTime, MatrixType::ColsAtCompileTime> MatrixVType;$/;"	t	class:Eigen::SVD
MatrixVType	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^            MatrixVType;$/;"	t	class:Eigen::JacobiSVD
MatrixWrapper	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline MatrixWrapper(ExpressionType& a_matrix) : m_expression(a_matrix) {}$/;"	f	class:Eigen::MatrixWrapper
MatrixWrapper	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^class MatrixWrapper : public MatrixBase<MatrixWrapper<ExpressionType> >$/;"	c	namespace:Eigen
MatrixXD	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<double,Eigen::Dynamic,Eigen::Dynamic,Eigen::ColMajor>     MatrixXD;$/;"	t	namespace:g2o
MatrixXF	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<float,Eigen::Dynamic,Eigen::Dynamic,Eigen::ColMajor>      MatrixXF;$/;"	t	namespace:g2o
MatrixXI	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<int,Eigen::Dynamic,Eigen::Dynamic,Eigen::ColMajor>        MatrixXI;$/;"	t	namespace:g2o
MatrixXpr	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^struct MatrixXpr {};$/;"	s	namespace:Eigen
Max	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^    Min=0, Max=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
MaxCols	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    MaxCols  = _Rhs::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon145
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon427
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::LLT::__anon425
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^      MaxColsAtCompileTime = internal::traits<Derived>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon10
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    MaxColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon13
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    MaxColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon14
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    MaxColsAtCompileTime = BlockCols==0 ? 0$/;"	e	enum:Eigen::internal::traits::__anon184
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    MaxColsAtCompileTime = traits<Ancestor>::MaxColsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon178
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^      MaxColsAtCompileTime = internal::traits<Derived>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon255
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    MaxColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon233
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^      MaxColsAtCompileTime = DiagonalVectorType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon197
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    MaxColsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon199
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon171
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    MaxColsAtCompileTime = _MaxCols,$/;"	e	enum:Eigen::internal::traits::__anon15
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^      MaxColsAtCompileTime = Traits::MaxColsAtCompileTime$/;"	e	enum:Eigen::PermutationBase::__anon27
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^      MaxColsAtCompileTime = Traits::MaxColsAtCompileTime$/;"	e	enum:Eigen::Transpose::__anon29
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    MaxColsAtCompileTime = IndicesType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon28
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    MaxColsAtCompileTime = traits<Rhs>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon65
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon337
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon241
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    MaxColsAtCompileTime = ConditionMatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon32
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    MaxColsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon62
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^      MaxColsAtCompileTime = internal::traits<Derived>::MaxColsAtCompileTime$/;"	e	enum:Eigen::TriangularBase::__anon229
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    MaxColsAtCompileTime = Direction==Horizontal ? 1 : MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon21
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      MaxColsAtCompileTime = _RhsNested::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon46
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^    MaxColsAtCompileTime = (MatrixType::MaxColsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon388
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::ComplexEigenSolver::__anon453
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::ComplexSchur::__anon458
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::EigenSolver::__anon454
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon459
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^        MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::RealQZ::__anon452
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::RealSchur::__anon456
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon455
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon429
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^      MaxColsAtCompileTime = internal::traits<HouseholderSequence>::MaxColsAtCompileTime$/;"	e	enum:Eigen::HouseholderSequence::__anon4
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    MaxColsAtCompileTime = MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon3
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::FullPivLU::__anon341
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::PartialPivLU::__anon338
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon7
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon6
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::HouseholderQR::__anon5
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon359
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon356
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon357
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon358
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    MaxColsAtCompileTime = Tr ? int(traits<Lhs>::MaxColsAtCompileTime)  : int(traits<Rhs>::MaxColsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon406
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    MaxColsAtCompileTime = _Rhs::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon407
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    MaxColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon411
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    MaxColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon410
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^      MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon419
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    MaxColsAtCompileTime = _RhsNested::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon421
MaxColsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon396
MaxDepth	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    MaxDepth = EIGEN_SIZE_MIN_PREFER_FIXED(_Lhs::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon145
MaxDepthAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      MaxDepthAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED(Lhs::MaxColsAtCompileTime,Rhs::MaxRowsAtCompileTime)$/;"	e	enum:Eigen::GeneralProduct::__anon39
MaxDiagSizeAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^      MaxDiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED(MaxRowsAtCompileTime,MaxColsAtCompileTime),$/;"	e	enum:Eigen::JacobiSVD::__anon359
MaxRows	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    MaxRows  = _Lhs::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon145
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon427
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^      MaxRowsAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon10
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    MaxRowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon13
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    MaxRowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon14
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    MaxRowsAtCompileTime = BlockRows==0 ? 0$/;"	e	enum:Eigen::internal::traits::__anon184
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    MaxRowsAtCompileTime = traits<Ancestor>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon178
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^      MaxRowsAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon255
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    MaxRowsAtCompileTime = int(MatrixType::MaxSizeAtCompileTime) == Dynamic ? Dynamic$/;"	e	enum:Eigen::internal::traits::__anon233
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^      MaxRowsAtCompileTime = DiagonalVectorType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon197
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    MaxRowsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon199
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon171
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    MaxRowsAtCompileTime = _MaxRows,$/;"	e	enum:Eigen::internal::traits::__anon15
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^      MaxRowsAtCompileTime = Traits::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::PermutationBase::__anon27
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^      MaxRowsAtCompileTime = Traits::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::Transpose::__anon29
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    MaxRowsAtCompileTime = IndicesType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon28
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    MaxRowsAtCompileTime = traits<Lhs>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon65
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon337
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon241
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    MaxRowsAtCompileTime = ConditionMatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon32
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    MaxRowsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon62
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^      MaxRowsAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon229
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    MaxRowsAtCompileTime = Direction==Vertical   ? 1 : MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon21
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      MaxRowsAtCompileTime = _LhsNested::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon46
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^    MaxRowsAtCompileTime = (MatrixType::MaxRowsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon388
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon453
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::ComplexSchur::__anon458
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::EigenSolver::__anon454
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon459
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^        MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::RealQZ::__anon452
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::RealSchur::__anon456
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon429
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^      MaxRowsAtCompileTime = internal::traits<HouseholderSequence>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderSequence::__anon4
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    MaxRowsAtCompileTime = Side==OnTheLeft ? traits<VectorsType>::MaxRowsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon3
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::FullPivLU::__anon341
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::PartialPivLU::__anon338
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon7
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon6
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderQR::__anon5
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon359
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon355
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon356
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon357
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon358
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    MaxRowsAtCompileTime = Tr ? int(traits<Rhs>::MaxRowsAtCompileTime)  : int(traits<Lhs>::MaxRowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon406
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    MaxRowsAtCompileTime = _Lhs::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon407
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    MaxRowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon410
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    MaxRowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon411
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^      MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon419
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    MaxRowsAtCompileTime = _LhsNested::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon421
MaxRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon396
MaxSize	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      MaxSize = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon451
MaxSize	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      MaxSize = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::Tridiagonalization::__anon457
MaxSizeAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    MaxSizeAtCompileTime = Derived::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::assign_traits::__anon248
MaxSizeAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^      MaxSizeAtCompileTime = Dst::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon67
MaxSizeAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^      MaxSizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon255
MaxSizeAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^      MaxSizeAtCompileTime = (internal::size_at_compile_time<MaxRowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon419
MaxSizeMinusOne	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      MaxSizeMinusOne = MaxSize == Dynamic ? Dynamic : MaxSize - 1$/;"	e	enum:Eigen::HessenbergDecomposition::__anon451
MaxSizeMinusOne	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      MaxSizeMinusOne = MaxSize == Dynamic ? Dynamic : (MaxSize > 1 ? MaxSize - 1 : 1)$/;"	e	enum:Eigen::Tridiagonalization::__anon457
MaxSmallDimAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^  enum { MaxSmallDimAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED($/;"	e	enum:Eigen::internal::image_retval::__anon343
MaxSmallDimAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^  enum { MaxSmallDimAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED($/;"	e	enum:Eigen::internal::kernel_retval::__anon342
MayEnableVml	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^      MayEnableVml = MightEnableVml && LargeEnough,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon67
MayInnerVectorize	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0$/;"	e	enum:Eigen::internal::assign_traits::__anon249
MayLinearVectorize	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess$/;"	e	enum:Eigen::internal::assign_traits::__anon249
MayLinearVectorize	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    MayLinearVectorize = MightVectorize && (int(Derived::Flags)&LinearAccessBit),$/;"	e	enum:Eigen::internal::redux_traits::__anon188
MayLinearize	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    MayLinearize = StorageOrdersAgree && (int(Derived::Flags) & int(OtherDerived::Flags) & LinearAccessBit),$/;"	e	enum:Eigen::internal::assign_traits::__anon249
MayLinearize	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^      MayLinearize = MayEnableVml && MightLinearize$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon67
MaySliceVectorize	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    MaySliceVectorize  = MightVectorize && DstHasDirectAccess$/;"	e	enum:Eigen::internal::assign_traits::__anon249
MaySliceVectorize	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    MaySliceVectorize  = MightVectorize && int(InnerMaxSize)>=3*PacketSize$/;"	e	enum:Eigen::internal::redux_traits::__anon188
MayUnrollCompletely	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    MayUnrollCompletely = int(Derived::SizeAtCompileTime) != Dynamic$/;"	e	enum:Eigen::internal::assign_traits::__anon251
MayUnrollInner	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    MayUnrollInner      = int(InnerSize) != Dynamic$/;"	e	enum:Eigen::internal::assign_traits::__anon251
Measurement	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      typedef typename BaseEdge<D,E>::Measurement Measurement;$/;"	t	class:g2o::BaseBinaryEdge
Measurement	./Thirdparty/g2o/g2o/core/base_edge.h	/^      typedef E Measurement;$/;"	t	class:g2o::BaseEdge
Measurement	./Thirdparty/g2o/g2o/core/base_multi_edge.h	/^      typedef typename BaseEdge<D,E>::Measurement Measurement;$/;"	t	class:g2o::BaseMultiEdge
Measurement	./Thirdparty/g2o/g2o/core/base_unary_edge.h	/^      typedef typename BaseEdge<D,E>::Measurement Measurement;$/;"	t	class:g2o::BaseUnaryEdge
MemType	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	t	namespace:Eigen::internal	typeref:enum:Eigen::internal::__anon389
MetisOrdering	./Thirdparty/sparseicp/include/Eigen/src/MetisSupport/MetisSupport.h	/^class MetisOrdering$/;"	c	namespace:Eigen
MightEnableVml	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^      MightEnableVml =  vml_call<UnaryOp>::IsSupported && StorageOrdersAgree && DstHasDirectAccess && SrcHasDirectAccess$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon67
MightLinearize	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^      MightLinearize = MightEnableVml && (int(Dst::Flags) & int(Src::Flags) & LinearAccessBit),$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon67
MightVectorize	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    MightVectorize = StorageOrdersAgree$/;"	e	enum:Eigen::internal::assign_traits::__anon249
MightVectorize	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    MightVectorize = (int(Derived::Flags)&ActualPacketAccessBit)$/;"	e	enum:Eigen::internal::redux_traits::__anon188
Min	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^    Min=0, Max=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
MinRowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Umeyama.h	/^    MinRowsAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(MatrixType::RowsAtCompileTime, OtherMatrixType::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::umeyama_transform_matrix_type::__anon431
MinSize	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^      MinSize = EIGEN_SIZE_MIN_PREFER_DYNAMIC(MatrixType::RowsAtCompileTime, MatrixType::ColsAtCompileTime)$/;"	e	enum:Eigen::SVD::__anon378
Minor	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^    inline Minor(const MatrixType& matrix,$/;"	f	class:Eigen::Minor
Minor	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^template<typename MatrixType> class Minor$/;"	c	namespace:Eigen
Mode	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^      Mode = internal::traits<SelfAdjointView>::Mode$/;"	e	enum:Eigen::SelfAdjointView::__anon333
Mode	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    Mode = UpLo | SelfAdjoint,$/;"	e	enum:Eigen::internal::traits::__anon332
Mode	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^      Mode = _Mode,$/;"	e	enum:Eigen::TriangularView::__anon231
Mode	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^      Mode = internal::traits<Derived>::Mode,$/;"	e	enum:Eigen::TriangularBase::__anon229
Mode	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    Mode = _Mode,$/;"	e	enum:Eigen::internal::traits::__anon230
Mode	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    Mode = Transform::Mode,$/;"	e	enum:Eigen::internal::transform_traits::__anon433
Mode	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    Mode = _Mode,$/;"	e	enum:Eigen::Transform::__anon434
Mode	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    Mode =$/;"	e	enum:Eigen::internal::transform_product_result::__anon436
MonocularInitialization	./src/Tracking.cc	/^void Tracking::MonocularInitialization()$/;"	f	class:ORB_SLAM2::Tracking
MoveOuter	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^      MoveOuter = SrcStorageOrder==RowMajor ? Side==OnTheLeft : Side==OnTheRight$/;"	e	enum:Eigen::internal::permut_sparsematrix_product_retval::__anon405
MoveOuter	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^    MoveOuter = SrcStorageOrder==RowMajor ? Side==OnTheLeft : Side==OnTheRight$/;"	e	enum:Eigen::internal::traits::__anon404
MulCost	./Thirdparty/sparseicp/include/Eigen/src/Core/NumTraits.h	/^    MulCost = 1$/;"	e	enum:Eigen::GenericNumTraits::__anon30
N	./include/Frame.h	/^    int N;$/;"	m	class:ORB_SLAM2::Frame
N	./include/FrameDrawer.h	/^    int N;$/;"	m	class:ORB_SLAM2::FrameDrawer
N	./include/KeyFrame.h	/^    const int N;$/;"	m	class:ORB_SLAM2::KeyFrame
N	./include/PnPsolver.h	/^  int N;$/;"	m	class:ORB_SLAM2::PnPsolver
N	./include/PoseSolver.h	/^  int N;$/;"	m	class:ORB_SLAM2::PoseSolver
N	./include/Sim3Solver.h	/^    int N;$/;"	m	class:ORB_SLAM2::Sim3Solver
NANOFLANN_HPP_	./Thirdparty/sparseicp/include/nanoflann.hpp	34;"	d
NANOFLANN_VERSION	./Thirdparty/sparseicp/include/nanoflann.hpp	59;"	d
NCMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    typedef SparseMatrix<Scalar,ColMajor,Index> NCMatrix;$/;"	t	class:Eigen::SparseLU
NColsBlockXpr	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NColsBlockXpr { typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	s
NOMINMAX	./Thirdparty/sparseicp/include/nanoflann.hpp	46;"	d
NONE	./Thirdparty/DBoW2/DUtils/Timestamp.h	/^    NONE = 0,$/;"	e	enum:DUtils::Timestamp::tOptions
NONE	./Thirdparty/sparseicp/ICP.h	/^        NONE$/;"	e	enum:ICP::Function
NOT_INITIALIZED	./include/Tracking.h	/^        NOT_INITIALIZED=1,$/;"	e	enum:ORB_SLAM2::Tracking::eTrackingState
NO_IMAGES_YET	./include/Tracking.h	/^        NO_IMAGES_YET=0,$/;"	e	enum:ORB_SLAM2::Tracking::eTrackingState
NRowsBlockXpr	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NRowsBlockXpr { typedef Block<Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	s
NUMERIC_TYPE_MUST_BE_REAL	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        NUMERIC_TYPE_MUST_BE_REAL,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
NaturalOrdering	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Ordering.h	/^class NaturalOrdering$/;"	c	namespace:Eigen
NeedNewKeyFrame	./src/Tracking.cc	/^bool Tracking::NeedNewKeyFrame()$/;"	f	class:ORB_SLAM2::Tracking
NeedToConjugate	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^    NeedToConjugate = Base::NeedToConjugate ? 0 : IsComplex$/;"	e	enum:Eigen::internal::blas_traits::__anon80
NeedToConjugate	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^    NeedToConjugate = false,$/;"	e	enum:Eigen::internal::blas_traits::__anon79
NeedsToAlign	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    enum { NeedsToAlign = SizeAtCompileTime != Dynamic && (internal::traits<Derived>::Flags & AlignedBit) != 0 };$/;"	e	enum:Eigen::PlainObjectBase::__anon19
NegativeSemiDef	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	e	enum:Eigen::internal::SignMatrix
NestByRefBit	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^const unsigned int NestByRefBit = 0x100;$/;"	m	namespace:Eigen
NestByValue	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^    inline NestByValue(const ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::NestByValue
NestByValue	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^template<typename ExpressionType> class NestByValue$/;"	c	namespace:Eigen
Nested	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    typedef DiagonalWrapper Nested;$/;"	t	class:Eigen::DiagonalWrapper
Nested	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    typedef const DiagonalMatrix& Nested;$/;"	t	class:Eigen::DiagonalMatrix
NestedExpressionType	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    typedef typename internal::nested<ExpressionType>::type NestedExpressionType;$/;"	t	class:Eigen::ArrayWrapper
NestedExpressionType	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    typedef typename internal::nested<ExpressionType>::type NestedExpressionType;$/;"	t	class:Eigen::MatrixWrapper
NewInf	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^      NewInf = int(TakeInf) ? InfX : int(MidX),$/;"	m	namespace:Eigen::internal
NewInf	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^      NewInf = int(TakeInf) ? InfX : int(MidX),$/;"	m	namespace:Eigen
NewSup	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^      NewSup = int(TakeInf) ? int(MidX) : SupX$/;"	m	namespace:Eigen::internal
NewSup	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^      NewSup = int(TakeInf) ? int(MidX) : SupX$/;"	m	namespace:Eigen
NoAlias	./Thirdparty/sparseicp/include/Eigen/src/Core/NoAlias.h	/^    NoAlias(ExpressionType& expression) : m_expression(expression) {}$/;"	f	class:Eigen::NoAlias
NoAlias	./Thirdparty/sparseicp/include/Eigen/src/Core/NoAlias.h	/^class NoAlias$/;"	c	namespace:Eigen
NoChange	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum NoChange_t   { NoChange };$/;"	e	enum:Eigen::NoChange_t
NoChange_t	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum NoChange_t   { NoChange };$/;"	g	namespace:Eigen
NoConvergence	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  NoConvergence = 2,$/;"	e	enum:Eigen::ComputationInfo
NoPivoting	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  NoPivoting          = 0x02, $/;"	e	enum:Eigen::DecompositionOptions
NoQRPreconditioner	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  NoQRPreconditioner,$/;"	e	enum:Eigen::QRPreconditioners
NoUnrolling	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  NoUnrolling,$/;"	e	enum:Eigen::__anon73
Node	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^    Node(): id(0), weight(0), parent(0), word_id(0){}$/;"	f	struct:DBoW2::TemplatedVocabulary::Node
Node	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^    Node(NodeId _id): id(_id), weight(0), parent(0), word_id(0){}$/;"	f	struct:DBoW2::TemplatedVocabulary::Node
Node	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^  struct Node $/;"	s	class:DBoW2::TemplatedVocabulary
Node	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		struct Node$/;"	s	class:nanoflann::KDTreeSingleIndexAdaptor
NodeId	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^typedef unsigned int NodeId;$/;"	t	namespace:DBoW2
NodePtr	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		typedef Node* NodePtr;$/;"	t	class:nanoflann::KDTreeSingleIndexAdaptor
NonConstImagReturnType	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryView<internal::scalar_imag_ref_op<Scalar>, Derived> NonConstImagReturnType;$/;"	t
NonConstRealReturnType	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^                  >::type NonConstRealReturnType;$/;"	t
NonInteger	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::NonInteger NonInteger;$/;"	t	struct:Eigen::internal::random_default_impl
NonInteger	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  typedef typename ScalarTraits::NonInteger      NonInteger;$/;"	t	class:Eigen::AlignedBox
NormalReturnType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  typedef Block<Coefficients,AmbientDimAtCompileTime,1> NormalReturnType;$/;"	t	class:Eigen::Hyperplane
NormalReturnType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  typedef Block<Coefficients,AmbientDimAtCompileTime,1> NormalReturnType;$/;"	t	class:Eigen::Hyperplane
Normalize	./src/Initializer.cc	/^void Initializer::Normalize(const vector<cv::KeyPoint> &vKeys, vector<cv::Point2f> &vNormalizedPoints, cv::Mat &T)$/;"	f	class:ORB_SLAM2::Initializer
NullaryExpr	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::NullaryExpr(Index rows, Index cols, const CustomNullaryOp& func)$/;"	f	class:Eigen::DenseBase
NullaryExpr	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::NullaryExpr(Index size, const CustomNullaryOp& func)$/;"	f	class:Eigen::DenseBase
NullaryExpr	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::NullaryExpr(const CustomNullaryOp& func)$/;"	f	class:Eigen::DenseBase
NumberOfRegisters	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    NumberOfRegisters = EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS,$/;"	e	enum:Eigen::internal::gebp_traits::__anon51
NumberOfRegisters	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    NumberOfRegisters = EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS,$/;"	e	enum:Eigen::internal::gebp_traits::__anon52
NumberOfRegisters	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    NumberOfRegisters = EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS,$/;"	e	enum:Eigen::internal::gebp_traits::__anon54
NumericalIssue	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  NumericalIssue = 1, $/;"	e	enum:Eigen::ComputationInfo
OBJECT_ALLOCATED_ON_STACK_IS_TOO_BIG	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        OBJECT_ALLOCATED_ON_STACK_IS_TOO_BIG$/;"	e	enum:Eigen::internal::static_assertion::__anon82
OK	./Thirdparty/g2o/g2o/core/optimization_algorithm.h	/^      enum  SolverResult {Terminate=2, OK=1, Fail=-1};$/;"	e	enum:g2o::OptimizationAlgorithm::SolverResult
OK	./include/Tracking.h	/^        OK=2,$/;"	e	enum:ORB_SLAM2::Tracking::eTrackingState
ONES_COMPLEMENT	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	108;"	d
OPTIMIZER_H	./include/Optimizer.h	22;"	d
ORBEXTRACTOR_H	./include/ORBextractor.h	22;"	d
ORBMATCHER_H	./include/ORBmatcher.h	23;"	d
ORBVOCABULARY_H	./include/ORBVocabulary.h	23;"	d
ORBVocabulary	./include/ORBVocabulary.h	/^  ORBVocabulary;$/;"	t	namespace:ORB_SLAM2
ORB_SLAM2	./include/Converter.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/Frame.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/FrameDrawer.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/Initializer.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/KeyFrame.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/KeyFrameDatabase.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/LocalMapping.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/LoopClosing.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/Map.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/MapDrawer.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/MapPoint.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/ORBVocabulary.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/ORBextractor.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/ORBmatcher.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/Optimizer.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/PnPsolver.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/PoseSolver.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/Registrating.h	/^namespace ORB_SLAM2 {$/;"	n
ORB_SLAM2	./include/Relocal.h	/^namespace ORB_SLAM2{$/;"	n
ORB_SLAM2	./include/Sim3Solver.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/System.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/Tracking.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./include/Viewer.h	/^namespace ORB_SLAM2$/;"	n
ORB_SLAM2	./src/Converter.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/Frame.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/FrameDrawer.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/Initializer.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/KeyFrame.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/KeyFrameDatabase.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/LocalMapping.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/LoopClosing.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/Map.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/MapDrawer.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/MapPoint.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/ORBextractor.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/ORBmatcher.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/Optimizer.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/PnPsolver.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/PoseSolver.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/Registrating.cc	/^namespace ORB_SLAM2 {$/;"	n	file:
ORB_SLAM2	./src/Sim3Solver.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/System.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/Tracking.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORB_SLAM2	./src/Viewer.cc	/^namespace ORB_SLAM2$/;"	n	file:
ORBextractor	./include/ORBextractor.h	/^class ORBextractor$/;"	c	namespace:ORB_SLAM2
ORBextractor	./src/ORBextractor.cc	/^ORBextractor::ORBextractor(int _nfeatures, float _scaleFactor, int _nlevels,$/;"	f	class:ORB_SLAM2::ORBextractor
ORBmatcher	./include/ORBmatcher.h	/^class ORBmatcher$/;"	c	namespace:ORB_SLAM2
ORBmatcher	./src/ORBmatcher.cc	/^ORBmatcher::ORBmatcher(float nnratio, bool checkOri): mfNNratio(nnratio), mbCheckOrientation(checkOri)$/;"	f	class:ORB_SLAM2::ORBmatcher
Observations	./src/MapPoint.cc	/^int MapPoint::Observations()$/;"	f	class:ORB_SLAM2::MapPoint
OffsetCol	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^      OffsetCol  = ReverseCol && IsRowMajor ? PacketSize : 1,$/;"	e	enum:Eigen::Reverse::__anon242
OffsetRow	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^      OffsetRow  = ReverseRow && IsColMajor ? PacketSize : 1,$/;"	e	enum:Eigen::Reverse::__anon242
OnTheLeft	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  OnTheLeft = 1,  $/;"	e	enum:Eigen::__anon76
OnTheRight	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  OnTheRight = 2  $/;"	e	enum:Eigen::__anon76
Ones	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Ones()$/;"	f	class:Eigen::DenseBase
Ones	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Ones(Index nbRows, Index nbCols)$/;"	f	class:Eigen::DenseBase
Ones	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Ones(Index newSize)$/;"	f	class:Eigen::DenseBase
OpenMPMutex	./Thirdparty/g2o/g2o/core/openmp_mutex.h	/^      OpenMPMutex() { omp_init_lock(&_lock); }$/;"	f	class:g2o::OpenMPMutex
OpenMPMutex	./Thirdparty/g2o/g2o/core/openmp_mutex.h	/^  class OpenMPMutex$/;"	c	namespace:g2o
OppositeExtendedType	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    template<typename OtherDerived> struct OppositeExtendedType {$/;"	s	class:Eigen::VectorwiseOp
OptimizableGraph	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::OptimizableGraph()$/;"	f	class:g2o::OptimizableGraph
OptimizableGraph	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^  struct  OptimizableGraph : public HyperGraph {$/;"	s	namespace:g2o
OptimizationAlgorithm	./Thirdparty/g2o/g2o/core/optimization_algorithm.cpp	/^OptimizationAlgorithm::OptimizationAlgorithm() :$/;"	f	class:g2o::OptimizationAlgorithm
OptimizationAlgorithm	./Thirdparty/g2o/g2o/core/optimization_algorithm.h	/^      OptimizationAlgorithm(const OptimizationAlgorithm&) { }$/;"	f	class:g2o::OptimizationAlgorithm
OptimizationAlgorithm	./Thirdparty/g2o/g2o/core/optimization_algorithm.h	/^  class  OptimizationAlgorithm$/;"	c	namespace:g2o
OptimizationAlgorithmDogleg	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.cpp	/^  OptimizationAlgorithmDogleg::OptimizationAlgorithmDogleg(BlockSolverBase* solver) :$/;"	f	class:g2o::OptimizationAlgorithmDogleg
OptimizationAlgorithmDogleg	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^  class  OptimizationAlgorithmDogleg : public OptimizationAlgorithmWithHessian$/;"	c	namespace:g2o
OptimizationAlgorithmFactory	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  OptimizationAlgorithmFactory::OptimizationAlgorithmFactory()$/;"	f	class:g2o::OptimizationAlgorithmFactory
OptimizationAlgorithmFactory	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	/^  class  OptimizationAlgorithmFactory$/;"	c	namespace:g2o
OptimizationAlgorithmGaussNewton	./Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp	/^  OptimizationAlgorithmGaussNewton::OptimizationAlgorithmGaussNewton(Solver* solver) :$/;"	f	class:g2o::OptimizationAlgorithmGaussNewton
OptimizationAlgorithmGaussNewton	./Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h	/^  class  OptimizationAlgorithmGaussNewton : public OptimizationAlgorithmWithHessian$/;"	c	namespace:g2o
OptimizationAlgorithmLevenberg	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^  OptimizationAlgorithmLevenberg::OptimizationAlgorithmLevenberg(Solver* solver) :$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
OptimizationAlgorithmLevenberg	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h	/^  class  OptimizationAlgorithmLevenberg : public OptimizationAlgorithmWithHessian$/;"	c	namespace:g2o
OptimizationAlgorithmProperty	./Thirdparty/g2o/g2o/core/optimization_algorithm_property.h	/^  OptimizationAlgorithmProperty() :$/;"	f	struct:g2o::OptimizationAlgorithmProperty
OptimizationAlgorithmProperty	./Thirdparty/g2o/g2o/core/optimization_algorithm_property.h	/^  OptimizationAlgorithmProperty(const std::string& name_, const std::string& desc_, const std::string& type_, bool requiresMarginalize_, int poseDim_, int landmarkDim_) :$/;"	f	struct:g2o::OptimizationAlgorithmProperty
OptimizationAlgorithmProperty	./Thirdparty/g2o/g2o/core/optimization_algorithm_property.h	/^struct  OptimizationAlgorithmProperty$/;"	s	namespace:g2o
OptimizationAlgorithmWithHessian	./Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^  OptimizationAlgorithmWithHessian::OptimizationAlgorithmWithHessian(Solver* solver) :$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
OptimizationAlgorithmWithHessian	./Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h	/^  class  OptimizationAlgorithmWithHessian : public OptimizationAlgorithm$/;"	c	namespace:g2o
OptimizeEssentialGraph	./src/Optimizer.cc	/^void Optimizer::OptimizeEssentialGraph(Map* pMap, KeyFrame* pLoopKF, KeyFrame* pCurKF,$/;"	f	class:ORB_SLAM2::Optimizer
OptimizeSim3	./src/Optimizer.cc	/^int Optimizer::OptimizeSim3(KeyFrame *pKF1, KeyFrame *pKF2, vector<MapPoint *> &vpMatches1, g2o::Sim3 &g2oS12, const float th2, const bool bFixScale)$/;"	f	class:ORB_SLAM2::Optimizer
Optimizer	./include/Optimizer.h	/^class Optimizer$/;"	c	namespace:ORB_SLAM2
Options	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^      Options = MatrixType::Options & ~RowMajorBit, \/\/ these are the options for the TmpMatrixType, we need a ColMajor matrix here!$/;"	e	enum:Eigen::LDLT::__anon427
Options	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::LLT::__anon425
Options	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    enum { Options = _Options };$/;"	e	enum:Eigen::Array::__anon31
Options	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^      Options = internal::traits<Derived>::Options$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon10
Options	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon13
Options	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon14
Options	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^  enum { Options }; \/\/ Expressions don't have Options$/;"	e	enum:Eigen::internal::traits::__anon331
Options	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon15
Options	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    enum { Options = _Options };$/;"	e	enum:Eigen::Matrix::__anon16
Options	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    enum { Options = internal::traits<Derived>::Options };$/;"	e	enum:Eigen::PlainObjectBase::__anon18
Options	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon185
Options	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon453
Options	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::ComplexSchur::__anon458
Options	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::EigenSolver::__anon454
Options	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon459
Options	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon451
Options	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^        Options = MatrixType::Options,$/;"	e	enum:Eigen::RealQZ::__anon452
Options	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::RealSchur::__anon456
Options	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon455
Options	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::Tridiagonalization::__anon457
Options	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^    Options = _Options$/;"	e	enum:Eigen::Hyperplane::__anon444
Options	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^    Options = _Options$/;"	e	enum:Eigen::ParametrizedLine::__anon440
Options	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    Options = _Options,$/;"	e	enum:Eigen::Transform::__anon434
Options	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::FullPivLU::__anon341
Options	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::PartialPivLU::__anon338
Options	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon7
Options	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon6
Options	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::HouseholderQR::__anon5
Options	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    Options = MatrixType::Options$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon356
Options	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    Options = MatrixType::Options$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon357
Options	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    Options = MatrixType::Options$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon358
Options	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^      Options = _Options$/;"	e	enum:Eigen::SparseMatrix::__anon412
Options	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^      Options = _Options$/;"	e	enum:Eigen::SparseVector::__anon399
OrderingType	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    typedef _OrderingType OrderingType;$/;"	t	class:Eigen::SparseLU
OrderingType	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    typedef _OrderingType OrderingType;$/;"	t	class:Eigen::SparseQR
OtherCols	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    OtherCols = MatrixType::ColsAtCompileTime$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon437
OtherCols	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    OtherCols = MatrixType::ColsAtCompileTime$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon438
OtherPlainObject	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^      typedef typename OtherDerived::PlainObject::DenseType OtherPlainObject;$/;"	t	struct:Eigen::TriangularView::eigen2_product_return_type
OtherRows	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    OtherRows = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon437
OtherRows	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    OtherRows = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon438
OuterProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum { CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon78
OuterRandomAccessPattern	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^const int OuterRandomAccessPattern  = 0x4 | CoherentAccessPattern;$/;"	m	namespace:Eigen
OuterSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    enum { OuterSize = IsRowMajor ? BlockRows : BlockCols };$/;"	e	enum:Eigen::BlockImpl::__anon414
OuterSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    enum { OuterSize = IsRowMajor ? BlockRows : BlockCols };$/;"	e	enum:Eigen::BlockImpl::__anon416
OuterStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^    OuterStride() : Base() {}$/;"	f	class:Eigen::OuterStride
OuterStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^    OuterStride(Index v) : Base(v,0) {}$/;"	f	class:Eigen::OuterStride
OuterStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^class OuterStride : public Stride<Value, 0>$/;"	c	namespace:Eigen
OuterStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    OuterStrideAtCompileTime = HasSameStorageOrderAsXprType$/;"	e	enum:Eigen::internal::traits::__anon184
OuterStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    OuterStrideAtCompileTime = outer_stride_at_compile_time<MatrixType>::ret == Dynamic$/;"	e	enum:Eigen::internal::traits::__anon139
OuterStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^      OuterStrideAtCompileTime = internal::outer_stride_at_compile_time<Derived>::ret$/;"	e	enum:Eigen::DenseBase::__anon255
OuterStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    OuterStrideAtCompileTime = 0$/;"	e	enum:Eigen::internal::traits::__anon233
OuterStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    OuterStrideAtCompileTime = StrideType::OuterStrideAtCompileTime == 0$/;"	e	enum:Eigen::internal::traits::__anon330
OuterStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    OuterStrideAtCompileTime = (Options&RowMajor) ? ColsAtCompileTime : RowsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon15
OuterStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    OuterStrideAtCompileTime = Lhs::OuterStrideAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon26
OuterStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^      OuterStrideAtCompileTime = _OuterStrideAtCompileTime$/;"	e	enum:Eigen::Stride::__anon33
OuterStrideAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    OuterStrideAtCompileTime = outer_stride_at_compile_time<MatrixType>::ret$/;"	e	enum:Eigen::internal::traits::__anon62
OuterStrideMatch	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^      OuterStrideMatch = Derived::IsVectorAtCompileTime$/;"	e	enum:Eigen::internal::traits::match::__anon186
Ow	./include/KeyFrame.h	/^    cv::Mat Ow;$/;"	m	class:ORB_SLAM2::KeyFrame
PACKET_ACCESS_REQUIRES_TO_HAVE_INNER_STRIDE_FIXED_TO_1	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        PACKET_ACCESS_REQUIRES_TO_HAVE_INNER_STRIDE_FIXED_TO_1,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
PALIGN_NEON	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	384;"	d
PALIGN_NEON	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	404;"	d
PATCH_SIZE	./src/ORBextractor.cc	/^const int PATCH_SIZE = 31;$/;"	m	namespace:ORB_SLAM2	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	293;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	296;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	299;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	302;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	305;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	308;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	311;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	314;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	317;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	320;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	323;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	326;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	329;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	332;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	338;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	341;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	344;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	347;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	350;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	353;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	356;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	359;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	362;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	365;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	369;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	372;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	375;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	378;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	381;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	385;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	288;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	303;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	306;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	312;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	315;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	318;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	321;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	324;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	327;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	330;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	333;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	336;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	339;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	342;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	345;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	348;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	351;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	354;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	357;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	360;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	367;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	370;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	373;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	376;"	d	file:
PLATFORM_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	380;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	293;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	296;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	299;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	302;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	305;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	308;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	311;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	314;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	317;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	320;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	323;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	326;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	329;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	332;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	338;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	341;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	344;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	347;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	350;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	353;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	356;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	359;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	362;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	365;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	369;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	372;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	375;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	378;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	381;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	385;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	288;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	303;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	306;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	312;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	315;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	318;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	321;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	324;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	327;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	330;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	333;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	336;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	339;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	342;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	345;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	348;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	351;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	354;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	357;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	360;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	367;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	370;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	373;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	376;"	d	file:
PLATFORM_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	380;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	293;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	296;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	299;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	302;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	305;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	308;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	311;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	314;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	317;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	320;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	323;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	326;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	329;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	332;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	338;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	341;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	344;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	347;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	350;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	353;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	356;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	359;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	362;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	365;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	369;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	372;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	375;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	378;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	381;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	385;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	288;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	303;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	306;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	312;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	315;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	318;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	321;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	324;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	327;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	330;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	333;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	336;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	339;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	342;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	345;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	348;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	351;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	354;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	357;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	360;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	367;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	370;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	373;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	376;"	d	file:
PLATFORM_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	380;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	313;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	316;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	319;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	322;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	325;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	328;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	331;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	334;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	337;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	340;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	343;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	346;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	349;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	352;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	355;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	358;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	361;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	364;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	367;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	370;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	373;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	376;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	379;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	382;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	385;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	389;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	392;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	395;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	398;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	401;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	405;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	298;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	301;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	304;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	307;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	310;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	313;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	316;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	319;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	322;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	325;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	331;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	334;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	337;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	340;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	343;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	346;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	349;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	352;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	355;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	358;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	361;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	367;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	370;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	374;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	377;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	380;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	383;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	386;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	390;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	293;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	296;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	299;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	302;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	305;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	308;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	311;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	314;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	317;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	320;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	323;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	326;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	329;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	332;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	338;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	341;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	344;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	347;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	350;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	353;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	356;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	359;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	362;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	365;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	369;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	372;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	375;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	378;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	381;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	385;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	288;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	303;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	306;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	312;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	315;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	318;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	321;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	324;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	327;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	330;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	333;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	336;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	339;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	342;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	345;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	348;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	351;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	354;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	357;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	360;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	367;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	370;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	373;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	376;"	d	file:
PLATFORM_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	380;"	d	file:
PNORM	./Thirdparty/sparseicp/ICP.h	/^        PNORM,$/;"	e	enum:ICP::Function
PNPSOLVER_H	./include/PnPsolver.h	52;"	d
POSESOLVER_H	./include/PoseSolver.h	52;"	d
PTHING	./Thirdparty/g2o/g2o/core/batch_stats.cpp	36;"	d	file:
PVAR	./Thirdparty/g2o/g2o/stuff/macros.h	118;"	d
PVARA	./Thirdparty/g2o/g2o/stuff/macros.h	123;"	d
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::linspaced_op
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::linspaced_op_impl
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_acos_op
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_add_op
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_asin_op
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_constant_op
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_cos_op
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_exp_op
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_log_op
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_multiple_op
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_quotient1_op
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_sin_op
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_sqrt_op
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_tan_op
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    typedef typename internal::packet_traits<Scalar>::type Packet;$/;"	t	class:Eigen::SelfCwiseBinaryOp
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    typedef typename internal::packet_traits<Scalar>::type Packet;$/;"	t	class:Eigen::SwapWrapper
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef typename Lhs::PacketScalar Packet;$/;"	t	struct:Eigen::internal::product_coeff_impl
Packet	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::gemm_pack_rhs
Packet16uc	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector unsigned char  Packet16uc;$/;"	t	namespace:Eigen::internal
Packet1cd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd() {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet1cd(const __m128d& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^struct Packet1cd$/;"	s	namespace:Eigen::internal
Packet2cf	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf() {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf(const Packet4f& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^struct Packet2cf$/;"	s	namespace:Eigen::internal
Packet2cf	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf() {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf(const Packet4f& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^struct Packet2cf$/;"	s	namespace:Eigen::internal
Packet2cf	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf() {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf(const __m128& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^struct Packet2cf$/;"	s	namespace:Eigen::internal
Packet2d	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^typedef __m128d Packet2d;$/;"	t	namespace:Eigen::internal
Packet4bi	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector __bool int     Packet4bi;$/;"	t	namespace:Eigen::internal
Packet4f	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector float          Packet4f;$/;"	t	namespace:Eigen::internal
Packet4f	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef float32x4_t Packet4f;$/;"	t	namespace:Eigen::internal
Packet4f	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^typedef __m128  Packet4f;$/;"	t	namespace:Eigen::internal
Packet4i	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector int            Packet4i;$/;"	t	namespace:Eigen::internal
Packet4i	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef int32x4_t   Packet4i;$/;"	t	namespace:Eigen::internal
Packet4i	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^typedef __m128i Packet4i;$/;"	t	namespace:Eigen::internal
Packet4ui	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector unsigned int   Packet4ui;$/;"	t	namespace:Eigen::internal
Packet4ui	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef uint32x4_t  Packet4ui;$/;"	t	namespace:Eigen::internal
Packet8i	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector short int      Packet8i;$/;"	t	namespace:Eigen::internal
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon269
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon270
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = internal::is_same<LhsScalar, RhsScalar>::value && packet_traits<LhsScalar>::HasMul$/;"	e	enum:Eigen::internal::functor_traits::__anon261
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasACos$/;"	e	enum:Eigen::internal::functor_traits::__anon299
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasASin$/;"	e	enum:Eigen::internal::functor_traits::__anon300
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasAbs$/;"	e	enum:Eigen::internal::functor_traits::__anon272
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasAdd$/;"	e	enum:Eigen::internal::functor_traits::__anon257
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasConj$/;"	e	enum:Eigen::internal::functor_traits::__anon274
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasCos$/;"	e	enum:Eigen::internal::functor_traits::__anon296
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasMax$/;"	e	enum:Eigen::internal::functor_traits::__anon263
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasMin$/;"	e	enum:Eigen::internal::functor_traits::__anon262
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasNegate };$/;"	e	enum:Eigen::internal::functor_traits::__anon271
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasSin$/;"	e	enum:Eigen::internal::functor_traits::__anon297
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasSqrt$/;"	e	enum:Eigen::internal::functor_traits::__anon295
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasSub$/;"	e	enum:Eigen::internal::functor_traits::__anon266
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasTan$/;"	e	enum:Eigen::internal::functor_traits::__anon298
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = scalar_product_op<LhsScalar,RhsScalar>::Vectorizable$/;"	e	enum:Eigen::internal::functor_traits::__anon259
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    PacketAccess = scalar_quotient_op<LhsScalar,RhsScalar>::Vectorizable$/;"	e	enum:Eigen::internal::functor_traits::__anon268
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false };$/;"	e	enum:Eigen::internal::functor_traits::__anon265
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess=0 };$/;"	e	enum:Eigen::internal::functor_traits::__anon264
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon276
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon277
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon278
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon279
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon323
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon324
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon325
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon326
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon321
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon322
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon310
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon311
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon312
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon313
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon314
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon315
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon316
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon317
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon318
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::HasSetLinear, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon287
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::Vectorizable, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon285
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 2 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon284
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 2*NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon304
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon301
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasExp }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon280
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasLog }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon281
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar1>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon283
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = false, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon286
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = packet_traits<Scalar>::HasAdd }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon294
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasAbs2 }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon273
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon302
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon282
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon303
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon307
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon308
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon309
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon305
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon306
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost + functor_traits<T2>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon328
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon327
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon319
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon320
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^{ enum { Cost = is_same<Scalar, NewType>::value ? 0 : NumTraits<NewType>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon275
PacketAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Random.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false, IsRepeatable = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon203
PacketAccessBit	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^const unsigned int PacketAccessBit = 0x8;$/;"	m	namespace:Eigen
PacketReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^                     >::type PacketReturnType;$/;"	t	class:Eigen::DenseCoeffsBase
PacketReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^                     >::type PacketReturnType;$/;"	t	class:Eigen::SparseMatrixBase
PacketScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::ArrayBase
PacketScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::DenseBase
PacketScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::DenseCoeffsBase
PacketScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    typedef typename Base::PacketScalar PacketScalar;$/;"	t	class:Eigen::MapBase
PacketScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::MapBase
PacketScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::MatrixBase
PacketScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::PlainObjectBase
PacketScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^  typedef typename packet_traits<Scalar>::type PacketScalar;$/;"	t	struct:Eigen::internal::redux_impl
PacketScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^  typedef typename packet_traits<Scalar>::type PacketScalar;$/;"	t	struct:Eigen::internal::redux_vec_unroller
PacketScalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::SparseMatrixBase
PacketSize	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^      PacketSize = internal::packet_traits<Scalar>::size,$/;"	e	enum:Eigen::LLT::__anon426
PacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    PacketSize = packet_traits<typename Derived::Scalar>::size$/;"	e	enum:Eigen::internal::assign_traits::__anon248
PacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    PacketSize = packet_traits<Scalar>::size,$/;"	e	enum:Eigen::internal::redux_impl::__anon196
PacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    PacketSize = packet_traits<typename Derived::Scalar>::size,$/;"	e	enum:Eigen::internal::redux_traits::__anon187
PacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    PacketSize = packet_traits<typename Derived::Scalar>::size,$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon194
PacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^      PacketSize = internal::packet_traits<Scalar>::size,$/;"	e	enum:Eigen::Reverse::__anon242
PacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      PacketSize = internal::packet_traits<Scalar>::size,$/;"	e	enum:Eigen::CoeffBasedProduct::__anon47
PacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  enum { PacketSize = packet_traits<typename Lhs::Scalar>::size };$/;"	e	enum:Eigen::internal::product_coeff_impl::__anon49
PacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  enum { PacketSize = packet_traits<typename Lhs::Scalar>::size };$/;"	e	enum:Eigen::internal::product_coeff_vectorized_unroller::__anon48
PacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  enum { PacketSize = packet_traits<Scalar>::size };$/;"	e	enum:Eigen::internal::gemm_pack_rhs::__anon56
PacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  enum { PacketSize = packet_traits<Scalar>::size };$/;"	e	enum:Eigen::internal::gemm_pack_rhs::__anon57
PacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  enum { PacketSize = packet_traits<Scalar>::size };$/;"	e	enum:Eigen::internal::symm_pack_rhs::__anon60
PacketSize	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^      PacketSize = internal::packet_traits<Scalar>::size,$/;"	e	enum:Eigen::SVD::__anon378
Parameter	./Thirdparty/g2o/g2o/core/parameter.cpp	/^  Parameter::Parameter() : _id(-1)$/;"	f	class:g2o::Parameter
Parameter	./Thirdparty/g2o/g2o/core/parameter.h	/^    class  Parameter : public HyperGraph::HyperGraphElement$/;"	c	namespace:g2o
ParameterContainer	./Thirdparty/g2o/g2o/core/parameter_container.cpp	/^  ParameterContainer::ParameterContainer(bool isMainStorage_) :$/;"	f	class:g2o::ParameterContainer
ParameterContainer	./Thirdparty/g2o/g2o/core/parameter_container.h	/^    class ParameterContainer : protected std::map<int, Parameter*> $/;"	c	namespace:g2o
ParameterType	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Array<Index,64,1,DontAlign> ParameterType;$/;"	t	class:Eigen::PardisoImpl
ParameterVector	./Thirdparty/g2o/g2o/core/parameter.h	/^    typedef std::vector<Parameter*> ParameterVector;$/;"	t	namespace:g2o
Parameters	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  DrawAction::Parameters::Parameters(){$/;"	f	class:g2o::DrawAction::Parameters
Parameters	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^      class  Parameters {$/;"	c	class:g2o::HyperGraphAction
Parameters	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^      struct  Parameters: public HyperGraphElementAction::Parameters{$/;"	s	class:g2o::WriteGnuplotAction
Parameters	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^      struct  Parameters{$/;"	s	class:g2o::HyperGraphElementAction
Parameters	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^    class  Parameters: public HyperGraphElementAction::Parameters,  public PropertyMap{$/;"	c	class:g2o::DrawAction
Parameters	./Thirdparty/sparseicp/ICP.h	/^        Parameters() : f(NONE),$/;"	f	class:ICP::Parameters
Parameters	./Thirdparty/sparseicp/ICP.h	/^    class Parameters {$/;"	c	namespace:ICP
Parameters	./Thirdparty/sparseicp/ICP.h	/^    struct Parameters {$/;"	s	namespace:SICP
ParametersIteration	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphAction::ParametersIteration::ParametersIteration(int iter) :$/;"	f	class:g2o::HyperGraphAction::ParametersIteration
ParametersIteration	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^      class  ParametersIteration : public Parameters {$/;"	c	class:g2o::HyperGraphAction
ParametrizedLine	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	113;"	d
ParametrizedLine	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	58;"	d
ParametrizedLine	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  ParametrizedLine(const VectorType& origin, const VectorType& direction)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  inline ParametrizedLine() {}$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  inline explicit ParametrizedLine(const ParametrizedLine<OtherScalarType,AmbientDimAtCompileTime>& other)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  inline explicit ParametrizedLine(int _dim) : m_origin(_dim), m_direction(_dim) {}$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^class ParametrizedLine$/;"	c	namespace:Eigen
ParametrizedLine	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^inline ParametrizedLine<_Scalar, _AmbientDim>::ParametrizedLine(const Hyperplane<_Scalar, _AmbientDim>& hyperplane)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  ParametrizedLine(const ParametrizedLine<Scalar,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  ParametrizedLine(const VectorType& origin, const VectorType& direction)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  inline ParametrizedLine() {}$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  inline explicit ParametrizedLine(Index _dim) : m_origin(_dim), m_direction(_dim) {}$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  inline explicit ParametrizedLine(const ParametrizedLine<OtherScalarType,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^class ParametrizedLine$/;"	c	namespace:Eigen
ParametrizedLine	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^inline ParametrizedLine<_Scalar, _AmbientDim,_Options>::ParametrizedLine(const Hyperplane<_Scalar, _AmbientDim,OtherOptions>& hyperplane)$/;"	f	class:Eigen::ParametrizedLine
PardisoImpl	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoImpl()$/;"	f	class:Eigen::PardisoImpl
PardisoImpl	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoImpl(PardisoImpl &) {}$/;"	f	class:Eigen::PardisoImpl
PardisoImpl	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoImpl$/;"	c	namespace:Eigen
PardisoLDLT	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLDLT()$/;"	f	class:Eigen::PardisoLDLT
PardisoLDLT	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLDLT(PardisoLDLT& ) {}$/;"	f	class:Eigen::PardisoLDLT
PardisoLDLT	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLDLT(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLDLT
PardisoLDLT	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoLDLT : public PardisoImpl< PardisoLDLT<MatrixType,Options> >$/;"	c	namespace:Eigen
PardisoLLT	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLLT()$/;"	f	class:Eigen::PardisoLLT
PardisoLLT	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLLT(PardisoLLT& ) {}$/;"	f	class:Eigen::PardisoLLT
PardisoLLT	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLLT(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLLT
PardisoLLT	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoLLT : public PardisoImpl< PardisoLLT<MatrixType,_UpLo> >$/;"	c	namespace:Eigen
PardisoLU	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLU()$/;"	f	class:Eigen::PardisoLU
PardisoLU	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLU(PardisoLU& ) {}$/;"	f	class:Eigen::PardisoLU
PardisoLU	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLU(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLU
PardisoLU	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoLU : public PardisoImpl< PardisoLU<MatrixType> >$/;"	c	namespace:Eigen
PartialPivLU	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>::PartialPivLU()$/;"	f	class:Eigen::PartialPivLU
PartialPivLU	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>::PartialPivLU(Index size)$/;"	f	class:Eigen::PartialPivLU
PartialPivLU	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>::PartialPivLU(const MatrixType& matrix)$/;"	f	class:Eigen::PartialPivLU
PartialPivLU	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^template<typename _MatrixType> class PartialPivLU$/;"	c	namespace:Eigen
PartialReduxExpr	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    PartialReduxExpr(const MatrixType& mat, const MemberOp& func = MemberOp())$/;"	f	class:Eigen::PartialReduxExpr
PartialReduxExpr	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^class PartialReduxExpr : internal::no_assignment_operator,$/;"	c	namespace:Eigen
PastixBase	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixBase() : m_initisOk(false), m_analysisIsOk(false), m_factorizationIsOk(false), m_isInitialized(false), m_pastixdata(0), m_size(0)$/;"	f	class:Eigen::PastixBase
PastixBase	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixBase : internal::noncopyable$/;"	c	namespace:Eigen
PastixLDLT	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLDLT():Base()$/;"	f	class:Eigen::PastixLDLT
PastixLDLT	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLDLT(const MatrixType& matrix):Base()$/;"	f	class:Eigen::PastixLDLT
PastixLDLT	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixLDLT : public PastixBase< PastixLDLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
PastixLLT	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLLT() : Base()$/;"	f	class:Eigen::PastixLLT
PastixLLT	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLLT(const MatrixType& matrix):Base()$/;"	f	class:Eigen::PastixLLT
PastixLLT	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixLLT : public PastixBase< PastixLLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
PastixLU	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLU() : Base()$/;"	f	class:Eigen::PastixLU
PastixLU	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLU(const MatrixType& matrix):Base()$/;"	f	class:Eigen::PastixLU
PastixLU	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixLU : public PastixBase< PastixLU<_MatrixType> >$/;"	c	namespace:Eigen
Perm	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef PermutationMatrix<Dynamic,Dynamic,Index> Perm;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
PermIndexType	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename PermutationType::Index PermIndexType;$/;"	t	class:Eigen::ColPivHouseholderQR
PermPermProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^enum PermPermProduct_t {PermPermProduct};$/;"	e	enum:Eigen::internal::PermPermProduct_t
PermPermProduct_t	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^enum PermPermProduct_t {PermPermProduct};$/;"	g	namespace:Eigen::internal
PermutType	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef SparseMatrix<Scalar,ColMajor> PermutType;$/;"	t	class:Eigen::IncompleteLUT
PermutationBase	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^class PermutationBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
PermutationMatrix	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    typedef Eigen::PermutationMatrix<Eigen::Dynamic, Eigen::Dynamic> PermutationMatrix;$/;"	t	class:g2o::LinearSolverEigen
PermutationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix(const Transpose<PermutationBase<Other> >& other)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix(internal::PermPermProduct_t, const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    explicit PermutationMatrix(const TranspositionsBase<Other>& tr)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    explicit inline PermutationMatrix(const MatrixBase<Other>& a_indices) : m_indices(a_indices)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationMatrix()$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationMatrix(const PermutationBase<OtherDerived>& other)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationMatrix(const PermutationMatrix& other) : m_indices(other.indices()) {}$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationMatrix(int size) : m_indices(size)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^class PermutationMatrix : public PermutationBase<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, IndexType> >$/;"	c	namespace:Eigen
PermutationPType	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    typedef PermutationMatrix<RowsAtCompileTime, MaxRowsAtCompileTime> PermutationPType;$/;"	t	class:Eigen::FullPivLU
PermutationQType	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    typedef PermutationMatrix<ColsAtCompileTime, MaxColsAtCompileTime> PermutationQType;$/;"	t	class:Eigen::FullPivLU
PermutationStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^struct PermutationStorage {};$/;"	s	namespace:Eigen
PermutationType	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    typedef PermutationMatrix<RowsAtCompileTime, MaxRowsAtCompileTime> PermutationType;$/;"	t	class:Eigen::LDLT
PermutationType	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef Derived PermutationType;$/;"	t	class:Eigen::Transpose
PermutationType	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    typedef PermutationMatrix<RowsAtCompileTime, MaxRowsAtCompileTime> PermutationType;$/;"	t	class:Eigen::PartialPivLU
PermutationType	./Thirdparty/sparseicp/include/Eigen/src/MetisSupport/MetisSupport.h	/^  typedef PermutationMatrix<Dynamic,Dynamic,Index> PermutationType;$/;"	t	class:Eigen::MetisOrdering
PermutationType	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Ordering.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, Index> PermutationType; $/;"	t	class:Eigen::COLAMDOrdering
PermutationType	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Ordering.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, Index> PermutationType;$/;"	t	class:Eigen::AMDOrdering
PermutationType	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Ordering.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, Index> PermutationType;$/;"	t	class:Eigen::NaturalOrdering
PermutationType	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef PermutationMatrix<ColsAtCompileTime, MaxColsAtCompileTime> PermutationType;$/;"	t	class:Eigen::ColPivHouseholderQR
PermutationType	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef PermutationMatrix<ColsAtCompileTime, MaxColsAtCompileTime> PermutationType;$/;"	t	class:Eigen::FullPivHouseholderQR
PermutationType	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef PermutationMatrix<Dynamic, Dynamic> PermutationType;$/;"	t	class:Eigen::SPQR
PermutationType	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, Index> PermutationType;$/;"	t	class:Eigen::SparseLU
PermutationType	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, Index> PermutationType;$/;"	t	class:Eigen::SparseQR
PermutationWrapper	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationWrapper(const IndicesType& a_indices)$/;"	f	class:Eigen::PermutationWrapper
PermutationWrapper	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^class PermutationWrapper : public PermutationBase<PermutationWrapper<_IndicesType> >$/;"	c	namespace:Eigen
Pivoting	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  Pivoting            = 0x01, $/;"	e	enum:Eigen::DecompositionOptions
PlainObject	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::Array
PlainObject	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^          > PlainObject;$/;"	t	class:Eigen::ArrayBase
PlainObject	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    typedef DiagonalMatrix<Scalar,DiagonalVectorType::SizeAtCompileTime,DiagonalVectorType::MaxSizeAtCompileTime> PlainObject;$/;"	t	class:Eigen::DiagonalBase
PlainObject	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::Matrix
PlainObject	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^          > PlainObject;$/;"	t	class:Eigen::MatrixBase
PlainObject	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::ProductBase
PlainObject	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::ScaledProduct
PlainObject	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::SelfAdjointView
PlainObject	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    typedef DenseMatrixType PlainObject;$/;"	t	class:Eigen::TriangularView
PlainObject	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::CoeffBasedProduct
PlainObject	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  typedef Quaternion<_Scalar,_Options> PlainObject;$/;"	t	struct:Eigen::internal::traits
PlainObject	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef SparseMatrix<Scalar, Flags&RowMajorBit ? RowMajor : ColMajor, Index> PlainObject;$/;"	t	class:Eigen::SparseMatrixBase
PlainObjectBase	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase() : m_storage()$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(Index a_size, Index nbRows, Index nbCols)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    PlainObjectBase(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^class PlainObjectBase : public internal::dense_xpr_base_dispatcher_for_doxygen<Derived>$/;"	c	namespace:Eigen
PlainObjectType	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^  typedef _PlainObjectType PlainObjectType;$/;"	t	struct:Eigen::internal::traits
PlainObjectType	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^  typedef typename internal::traits<Derived>::PlainObjectType PlainObjectType;$/;"	t	class:Eigen::RefBase
PlainPermutationType	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^            PlainPermutationType;$/;"	t	class:Eigen::PermutationBase
PlainPermutationType	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename PermutationType::PlainPermutationType PlainPermutationType;$/;"	t	class:Eigen::Transpose
PnPsolver	./include/PnPsolver.h	/^class PnPsolver {$/;"	c	namespace:ORB_SLAM2
PnPsolver	./src/PnPsolver.cc	/^PnPsolver::PnPsolver(const Frame &F, const vector<MapPoint*> &vpMapPointMatches):$/;"	f	class:ORB_SLAM2::PnPsolver
PointerArgType	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    typedef PointerType PointerArgType;$/;"	t	class:Eigen::Map
PointerArgType	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    typedef const Scalar* PointerArgType;$/;"	t	class:Eigen::Map
PointerType	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    typedef typename Base::PointerType PointerType;$/;"	t	class:Eigen::Map
PointerType	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^                     PointerType;$/;"	t	class:Eigen::MapBase
PointerType	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    typedef typename Base::PointerType PointerType;$/;"	t	class:Eigen::MapBase
PooledAllocator	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		PooledAllocator(const size_t blocksize = BLOCKSIZE)$/;"	f	class:nanoflann::PooledAllocator
PooledAllocator	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	class PooledAllocator$/;"	c	namespace:nanoflann
PosInGrid	./src/Frame.cc	/^bool Frame::PosInGrid(const cv::KeyPoint &kp, int &posX, int &posY)$/;"	f	class:ORB_SLAM2::Frame
PoseDim	./Thirdparty/g2o/g2o/core/block_solver.h	/^      static const int PoseDim = Traits::PoseDim;$/;"	m	class:g2o::BlockSolver
PoseDim	./Thirdparty/g2o/g2o/core/block_solver.h	/^    static const int PoseDim = Eigen::Dynamic;$/;"	m	struct:g2o::BlockSolverTraits
PoseDim	./Thirdparty/g2o/g2o/core/block_solver.h	/^    static const int PoseDim = _PoseDim;$/;"	m	struct:g2o::BlockSolverTraits
PoseHessianType	./Thirdparty/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::PoseHessianType PoseHessianType;$/;"	t	class:g2o::BlockSolver
PoseHessianType	./Thirdparty/g2o/g2o/core/block_solver.h	/^    typedef SparseBlockMatrix<PoseMatrixType> PoseHessianType;$/;"	t	struct:g2o::BlockSolverTraits
PoseLandmarkHessianType	./Thirdparty/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::PoseLandmarkHessianType PoseLandmarkHessianType;$/;"	t	class:g2o::BlockSolver
PoseLandmarkHessianType	./Thirdparty/g2o/g2o/core/block_solver.h	/^    typedef SparseBlockMatrix<PoseLandmarkMatrixType> PoseLandmarkHessianType;$/;"	t	struct:g2o::BlockSolverTraits
PoseLandmarkMatrixType	./Thirdparty/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::PoseLandmarkMatrixType PoseLandmarkMatrixType;$/;"	t	class:g2o::BlockSolver
PoseLandmarkMatrixType	./Thirdparty/g2o/g2o/core/block_solver.h	/^    typedef Matrix<double, PoseDim, LandmarkDim> PoseLandmarkMatrixType;$/;"	t	struct:g2o::BlockSolverTraits
PoseLandmarkMatrixType	./Thirdparty/g2o/g2o/core/block_solver.h	/^    typedef MatrixXd PoseLandmarkMatrixType;$/;"	t	struct:g2o::BlockSolverTraits
PoseMatrixType	./Thirdparty/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::PoseMatrixType PoseMatrixType;$/;"	t	class:g2o::BlockSolver
PoseMatrixType	./Thirdparty/g2o/g2o/core/block_solver.h	/^    typedef Matrix<double, PoseDim, PoseDim> PoseMatrixType;$/;"	t	struct:g2o::BlockSolverTraits
PoseMatrixType	./Thirdparty/g2o/g2o/core/block_solver.h	/^    typedef MatrixXd PoseMatrixType;$/;"	t	struct:g2o::BlockSolverTraits
PoseOptimization	./src/Optimizer.cc	/^int Optimizer::PoseOptimization(Frame *pFrame)$/;"	f	class:ORB_SLAM2::Optimizer
PoseSolver	./include/PoseSolver.h	/^class PoseSolver {$/;"	c	namespace:ORB_SLAM2
PoseSolver	./src/PoseSolver.cc	/^PoseSolver::PoseSolver(const Frame &F, const vector<MapPoint*> &vpMapPointMatches):$/;"	f	class:ORB_SLAM2::PoseSolver
PoseVectorType	./Thirdparty/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::PoseVectorType PoseVectorType;$/;"	t	class:g2o::BlockSolver
PoseVectorType	./Thirdparty/g2o/g2o/core/block_solver.h	/^    typedef Matrix<double, PoseDim, 1> PoseVectorType;$/;"	t	struct:g2o::BlockSolverTraits
PoseVectorType	./Thirdparty/g2o/g2o/core/block_solver.h	/^    typedef VectorXd PoseVectorType;$/;"	t	struct:g2o::BlockSolverTraits
PositiveSemiDef	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	e	enum:Eigen::internal::SignMatrix
PreconditionIfMoreColsThanRows	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^enum { PreconditionIfMoreColsThanRows, PreconditionIfMoreRowsThanCols };$/;"	e	enum:Eigen::internal::__anon353
PreconditionIfMoreRowsThanCols	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^enum { PreconditionIfMoreColsThanRows, PreconditionIfMoreRowsThanCols };$/;"	e	enum:Eigen::internal::__anon353
Preconditioner	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	class:Eigen::BiCGSTAB
Preconditioner	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	struct:Eigen::internal::traits
Preconditioner	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	class:Eigen::ConjugateGradient
Preconditioner	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	struct:Eigen::internal::traits
Preconditioner	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename internal::traits<Derived>::Preconditioner Preconditioner;$/;"	t	class:Eigen::IterativeSolverBase
PredictScale	./src/MapPoint.cc	/^int MapPoint::PredictScale(const float &currentDist, Frame* pF)$/;"	f	class:ORB_SLAM2::MapPoint
PredictScale	./src/MapPoint.cc	/^int MapPoint::PredictScale(const float &currentDist, KeyFrame* pKF)$/;"	f	class:ORB_SLAM2::MapPoint
PriorityQueue	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^      class PriorityQueue : public std::multimap<double, AdjacencyMapEntry*> {$/;"	c	class:g2o::EstimatePropagator
ProcessNewKeyFrame	./src/LocalMapping.cc	/^void LocalMapping::ProcessNewKeyFrame()$/;"	f	class:ORB_SLAM2::LocalMapping
ProdRetType	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^      typedef typename ProductReturnType<DenseMatrixType, OtherPlainObject>::Type ProdRetType;$/;"	t	struct:Eigen::TriangularView::eigen2_product_return_type
ProductBase	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    ProductBase(const Lhs& a_lhs, const Rhs& a_rhs)$/;"	f	class:Eigen::ProductBase
ProductBase	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^class ProductBase : public MatrixBase<Derived>$/;"	c	namespace:Eigen
ProductReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^struct ProductReturnType$/;"	s	namespace:Eigen
ProductReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^struct ProductReturnType<Lhs,Rhs,CoeffBasedProductMode>$/;"	s	namespace:Eigen
ProductReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^struct ProductReturnType<Lhs,Rhs,LazyCoeffBasedProductMode>$/;"	s	namespace:Eigen
ProductType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    typedef internal::transform_transform_product_impl<Transform,Transform<Scalar,Dim,OtherMode,OtherOptions> > ProductType;$/;"	t	struct:Eigen::Transform::icc_11_workaround
Project	./src/Sim3Solver.cc	/^void Sim3Solver::Project(const vector<cv::Mat> &vP3Dw, vector<cv::Mat> &vP2D, cv::Mat Tcw, cv::Mat K)$/;"	f	class:ORB_SLAM2::Sim3Solver
Projective	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  Projective    = 0x20$/;"	e	enum:Eigen::TransformTraits
Projective2d	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,Projective> Projective2d;$/;"	t	namespace:Eigen
Projective2f	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,Projective> Projective2f;$/;"	t	namespace:Eigen
Projective3d	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,Projective> Projective3d;$/;"	t	namespace:Eigen
Projective3f	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,Projective> Projective3f;$/;"	t	namespace:Eigen
PropagateAction	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^      struct PropagateAction {$/;"	s	class:g2o::EstimatePropagator
PropagateCost	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^      typedef EstimatePropagatorCost PropagateCost;$/;"	t	class:g2o::EstimatePropagator
Property	./Thirdparty/g2o/g2o/stuff/property.h	/^      Property(const std::string& name_): BaseProperty(name_){}$/;"	f	class:g2o::Property
Property	./Thirdparty/g2o/g2o/stuff/property.h	/^      Property(const std::string& name_, const T& v): BaseProperty(name_), _value(v){}$/;"	f	class:g2o::Property
Property	./Thirdparty/g2o/g2o/stuff/property.h	/^  class Property: public BaseProperty {$/;"	c	namespace:g2o
PropertyMap	./Thirdparty/g2o/g2o/stuff/property.h	/^  class  PropertyMap : protected std::map<std::string, BaseProperty*>$/;"	c	namespace:g2o
PropertyMapConstIterator	./Thirdparty/g2o/g2o/stuff/property.h	/^      typedef BaseClass::const_iterator                   PropertyMapConstIterator;$/;"	t	class:g2o::PropertyMap
PropertyMapIterator	./Thirdparty/g2o/g2o/stuff/property.h	/^      typedef BaseClass::iterator                         PropertyMapIterator;$/;"	t	class:g2o::PropertyMap
QR	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/QR.h	/^    QR() : Base() {}$/;"	f	class:Eigen::QR
QR	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/QR.h	/^    explicit QR(const T& t) : Base(t) {}$/;"	f	class:Eigen::QR
QR	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/QR.h	/^class QR : public HouseholderQR<MatrixType>$/;"	c	namespace:Eigen
QRMatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    typedef SparseMatrix<Scalar,ColMajor,Index> QRMatrixType;$/;"	t	class:Eigen::SparseQR
QRPreconditioners	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum QRPreconditioners {$/;"	g	namespace:Eigen
QRType	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  typedef ColPivHouseholderQR<MatrixType> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  typedef ColPivHouseholderQR<TransposeTypeWithSameStorageOrder> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  typedef FullPivHouseholderQR<MatrixType> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  typedef FullPivHouseholderQR<TransposeTypeWithSameStorageOrder> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  typedef HouseholderQR<MatrixType> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  typedef HouseholderQR<TransposeTypeWithSameStorageOrder> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
Quaternion	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	29;"	d
Quaternion	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	84;"	d
Quaternion	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  explicit inline Quaternion(const AngleAxisType& aa) { *this = aa; }$/;"	f	class:Eigen::Quaternion
Quaternion	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  explicit inline Quaternion(const MatrixBase<Derived>& other) { *this = other; }$/;"	f	class:Eigen::Quaternion
Quaternion	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Quaternion() {}$/;"	f	class:Eigen::Quaternion
Quaternion	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Quaternion(Scalar w, Scalar x, Scalar y, Scalar z)$/;"	f	class:Eigen::Quaternion
Quaternion	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Quaternion(const Quaternion& other) { m_coeffs = other.m_coeffs; }$/;"	f	class:Eigen::Quaternion
Quaternion	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline explicit Quaternion(const Quaternion<OtherScalarType>& other)$/;"	f	class:Eigen::Quaternion
Quaternion	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^class Quaternion : public RotationBase<Quaternion<_Scalar>,3>$/;"	c	namespace:Eigen
Quaternion	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  explicit inline Quaternion(const AngleAxisType& aa) { *this = aa; }$/;"	f	class:Eigen::Quaternion
Quaternion	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  explicit inline Quaternion(const MatrixBase<Derived>& other) { *this = other; }$/;"	f	class:Eigen::Quaternion
Quaternion	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  explicit inline Quaternion(const Quaternion<OtherScalar, OtherOptions>& other)$/;"	f	class:Eigen::Quaternion
Quaternion	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline Quaternion() {}$/;"	f	class:Eigen::Quaternion
Quaternion	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline Quaternion(const Scalar& w, const Scalar& x, const Scalar& y, const Scalar& z) : m_coeffs(x, y, z, w){}$/;"	f	class:Eigen::Quaternion
Quaternion	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline Quaternion(const Scalar* data) : m_coeffs(data) {}$/;"	f	class:Eigen::Quaternion
Quaternion	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  template<class Derived> EIGEN_STRONG_INLINE Quaternion(const QuaternionBase<Derived>& other) { this->Base::operator=(other); }$/;"	f	class:Eigen::Quaternion
Quaternion	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^class Quaternion : public QuaternionBase<Quaternion<_Scalar,_Options> >$/;"	c	namespace:Eigen
QuaternionBase	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^class QuaternionBase : public RotationBase<Derived, 3>$/;"	c	namespace:Eigen
QuaternionMapAlignedd	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<double>, Aligned>  QuaternionMapAlignedd;$/;"	t	namespace:Eigen
QuaternionMapAlignedf	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<float>, Aligned>   QuaternionMapAlignedf;$/;"	t	namespace:Eigen
QuaternionMapd	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<double>, 0>        QuaternionMapd;$/;"	t	namespace:Eigen
QuaternionMapf	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<float>, 0>         QuaternionMapf;$/;"	t	namespace:Eigen
QuaternionType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  typedef Quaternion<Scalar> QuaternionType;$/;"	t	class:Eigen::AngleAxis
QuaternionType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  typedef Quaternion<Scalar> QuaternionType;$/;"	t	class:Eigen::AngleAxis
Quaterniond	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	31;"	d
Quaterniond	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	86;"	d
Quaterniond	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^typedef Quaternion<double> Quaterniond;$/;"	t	namespace:Eigen
Quaterniond	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^typedef Quaternion<double> Quaterniond;$/;"	t	namespace:Eigen
Quaternionf	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	30;"	d
Quaternionf	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	85;"	d
Quaternionf	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^typedef Quaternion<float> Quaternionf;$/;"	t	namespace:Eigen
Quaternionf	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^typedef Quaternion<float> Quaternionf;$/;"	t	namespace:Eigen
QuickSplit	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^Index QuickSplit(VectorV &row, VectorI &ind, Index ncut)$/;"	f	namespace:Eigen::internal
R	./include/Registrating.h	/^		cv::Mat R, t;$/;"	m	class:ORB_SLAM2::Registrating
RAD2DEG	./Thirdparty/g2o/g2o/stuff/macros.h	35;"	d
RELOCAL_REGISTRATION_H	./4pcs/Registration.h	6;"	d
RELOCAL_RELOCAL_H	./include/Relocal.h	6;"	d
RGBD	./include/System.h	/^        RGBD=2$/;"	e	enum:ORB_SLAM2::System::eSensor
RM	./Thirdparty/DBoW2/build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	./Thirdparty/g2o/build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	./build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	./cmake-build-debug/Makefile	/^RM = \/home\/wu6shen\/Downloads\/clion-2018.1.4\/bin\/cmake\/bin\/cmake -E remove -f$/;"	m
ROW_IS_ALIVE	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	125;"	d
ROW_IS_DEAD	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	123;"	d
ROW_IS_MARKED_DEAD	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	124;"	d
RadiusByViewingCos	./src/ORBmatcher.cc	/^float ORBmatcher::RadiusByViewingCos(const float &viewCos)$/;"	f	class:ORB_SLAM2::ORBmatcher
RadiusResultSet	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline RadiusResultSet(DistanceType radius_, std::vector<std::pair<IndexType,DistanceType> >& indices_dists) : radius(radius_), m_indices_dists(indices_dists)$/;"	f	class:nanoflann::RadiusResultSet
RadiusResultSet	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	class RadiusResultSet$/;"	c	namespace:nanoflann
Random	./Thirdparty/DBoW2/DUtils/Random.h	/^class Random$/;"	c	namespace:DUtils
Random	./Thirdparty/sparseicp/include/Eigen/src/Core/Random.h	/^DenseBase<Derived>::Random()$/;"	f	class:Eigen::DenseBase
Random	./Thirdparty/sparseicp/include/Eigen/src/Core/Random.h	/^DenseBase<Derived>::Random(Index rows, Index cols)$/;"	f	class:Eigen::DenseBase
Random	./Thirdparty/sparseicp/include/Eigen/src/Core/Random.h	/^DenseBase<Derived>::Random(Index size)$/;"	f	class:Eigen::DenseBase
RandomAccessLinSpacedReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::linspaced_op<Scalar,true>,Derived> RandomAccessLinSpacedReturnType;$/;"	t	class:Eigen::DenseBase
RandomAccessPattern	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^const int RandomAccessPattern       = 0x8 | OuterRandomAccessPattern | InnerRandomAccessPattern;$/;"	m	namespace:Eigen
RandomGaussianValue	./Thirdparty/DBoW2/DUtils/Random.h	/^	static T RandomGaussianValue(T mean, T sigma)$/;"	f	class:DUtils::Random
RandomInt	./Thirdparty/DBoW2/DUtils/Random.cpp	/^int DUtils::Random::RandomInt(int min, int max){$/;"	f	class:DUtils::Random
RandomValue	./Thirdparty/DBoW2/DUtils/Random.h	/^	static T RandomValue(){$/;"	f	class:DUtils::Random
RandomValue	./Thirdparty/DBoW2/DUtils/Random.h	/^	static T RandomValue(T min, T max){$/;"	f	class:DUtils::Random
ReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/NumTraits.h	/^    ReadCost = 1,$/;"	e	enum:Eigen::GenericNumTraits::__anon30
ReadOnlyAccessors	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  ReadOnlyAccessors, $/;"	e	enum:Eigen::AccessorLevels
Real	./Thirdparty/sparseicp/include/Eigen/src/Core/NumTraits.h	/^  typedef T Real;$/;"	t	struct:Eigen::GenericNumTraits
RealPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<RealScalar>::type RealPacket;$/;"	t	class:Eigen::internal::gebp_traits
RealPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RealPacketSize  = Vectorizable ? packet_traits<RealScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon53
RealQZ	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      RealQZ(Index size = RowsAtCompileTime==Dynamic ? 1 : RowsAtCompileTime) : $/;"	f	class:Eigen::RealQZ
RealQZ	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      RealQZ(const MatrixType& A, const MatrixType& B, bool computeQZ = true) :$/;"	f	class:Eigen::RealQZ
RealQZ	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^  template<typename _MatrixType> class RealQZ$/;"	c	namespace:Eigen
RealReturnType	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^                  >::type RealReturnType;$/;"	t
RealRowVectorType	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType, RealScalar>::type RealRowVectorType;$/;"	t	class:Eigen::ColPivHouseholderQR
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::LDLT
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::LLT
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::llt_inplace
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::CholmodBase
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ArrayBase
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::DenseBase
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::DenseCoeffsBase
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename DiagonalVectorType::RealScalar RealScalar;$/;"	t	class:Eigen::DiagonalBase
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^  typedef typename NumTraits<typename traits<Derived>::Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::lpNorm_selector
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::significant_decimals_default_impl
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::MapBase
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef bool RealScalar;$/;"	t	struct:Eigen::internal::scalar_fuzzy_impl
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::abs2_impl
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::atanh2_default_impl
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::hypot_impl
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::imag_default_impl
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::imag_ref_default_impl
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::norm1_default_impl
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::real_default_impl
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::real_ref_impl
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::scalar_fuzzy_default_impl
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::MatrixBase
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::PlainObjectBase
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SelfAdjointView
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ExpressionType::RealScalar RealScalar;$/;"	t	class:Eigen::VectorwiseOp
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::AlignedBox
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::Hyperplane
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ParametrizedLine
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::LU
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::SVD
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ComplexEigenSolver
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ComplexSchur
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::EigenSolver
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::GeneralizedEigenSolver
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::HessenbergDecomposition
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SelfAdjointEigenSolver
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::Tridiagonalization
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  typedef typename ScalarTraits::Real               RealScalar;$/;"	t	class:Eigen::AlignedBox
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::Hyperplane
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ParametrizedLine
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::QuaternionBase
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::BiCGSTAB
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::ConjugateGradient
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::IncompleteLUT
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::IterativeSolverBase
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::JacobiRotation
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::FullPivLU
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::PartialPivLU
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::partial_lu_impl
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::PastixBase
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename _MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::pastix_traits
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoLDLT
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoLLT
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoLU
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoImpl
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::pardiso_traits
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::ColPivHouseholderQR
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::FullPivHouseholderQR
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::HouseholderQR
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef typename _MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SPQR
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::JacobiSVD
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::internal::UpperBidiagonalization
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialCholesky
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialCholeskyBase
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialLDLT
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialLLT
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::internal::AmbiVector
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::internal::AmbiVector::Iterator
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::internal::CompressedStorage
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SparseMatrixBase
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^  typedef typename ResultType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::sparse_sparse_product_with_pruning_selector
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    typedef typename MatrixType::RealScalar RealScalar; $/;"	t	class:Eigen::SparseLU
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef typename ScalarVector::RealScalar RealScalar; $/;"	t	class:Eigen::internal::SparseLUImpl
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SparseQR
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::SuperILU
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::SuperLU
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SuperLUBase
RealScalar	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::UmfPackLU
RealSchur	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    RealSchur(Index size = RowsAtCompileTime==Dynamic ? 1 : RowsAtCompileTime)$/;"	f	class:Eigen::RealSchur
RealSchur	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    RealSchur(const MatrixType& matrix, bool computeU = true)$/;"	f	class:Eigen::RealSchur
RealSchur	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^template<typename _MatrixType> class RealSchur$/;"	c	namespace:Eigen
RealVectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename internal::plain_col_type<MatrixType, RealScalar>::type RealVectorType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
ReconstructF	./src/Initializer.cc	/^bool Initializer::ReconstructF(vector<bool> &vbMatchesInliers, cv::Mat &F21, cv::Mat &K,$/;"	f	class:ORB_SLAM2::Initializer
ReconstructH	./src/Initializer.cc	/^bool Initializer::ReconstructH(vector<bool> &vbMatchesInliers, cv::Mat &H21, cv::Mat &K,$/;"	f	class:ORB_SLAM2::Initializer
ReduxReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    template<typename BinaryOp> struct ReduxReturnType$/;"	s	class:Eigen::VectorwiseOp
Ref	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^    inline Ref(PlainObjectBase<Derived>& expr,$/;"	f	class:Eigen::Ref
Ref	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^    inline Ref(const DenseBase<Derived>& expr)$/;"	f	class:Eigen::Ref
Ref	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^    inline Ref(const DenseBase<Derived>& expr,$/;"	f	class:Eigen::Ref
Ref	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^template<typename PlainObjectType, int Options, typename StrideType> class Ref$/;"	c	namespace:Eigen
Ref	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^template<typename TPlainObjectType, int Options, typename StrideType> class Ref<const TPlainObjectType, Options, StrideType>$/;"	c	namespace:Eigen
RefBase	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^  RefBase()$/;"	f	class:Eigen::RefBase
RefBase	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^template<typename Derived> class RefBase$/;"	c	namespace:Eigen
Refine	./src/PnPsolver.cc	/^bool PnPsolver::Refine()$/;"	f	class:ORB_SLAM2::PnPsolver
Refine	./src/PoseSolver.cc	/^bool PoseSolver::Refine()$/;"	f	class:ORB_SLAM2::PoseSolver
RegisterActionProxy	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^      RegisterActionProxy()$/;"	f	class:g2o::RegisterActionProxy
RegisterActionProxy	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^  template<typename T> class RegisterActionProxy$/;"	c	namespace:g2o
RegisterOptimizationAlgorithmProxy	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	/^      RegisterOptimizationAlgorithmProxy(AbstractOptimizationAlgorithmCreator* c)$/;"	f	class:g2o::RegisterOptimizationAlgorithmProxy
RegisterOptimizationAlgorithmProxy	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	/^  class RegisterOptimizationAlgorithmProxy$/;"	c	namespace:g2o
RegisterRobustKernelProxy	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	/^      RegisterRobustKernelProxy(const std::string& name) : _name(name)$/;"	f	class:g2o::RegisterRobustKernelProxy
RegisterRobustKernelProxy	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	/^  class RegisterRobustKernelProxy$/;"	c	namespace:g2o
RegisterTypeProxy	./Thirdparty/g2o/g2o/core/factory.h	/^      RegisterTypeProxy(const std::string& name) : _name(name)$/;"	f	class:g2o::RegisterTypeProxy
RegisterTypeProxy	./Thirdparty/g2o/g2o/core/factory.h	/^  class RegisterTypeProxy$/;"	c	namespace:g2o
Registrating	./include/Registrating.h	/^	class Registrating {$/;"	c	namespace:ORB_SLAM2
Registrating	./src/Registrating.cc	/^	Registrating::Registrating(int enoughTh) : mStop(false), mSetMap(false), mEnoughTh(enoughTh), mLastPointsNum(0), mCurrentPointsNum(0) {$/;"	f	class:ORB_SLAM2::Registrating
Release	./src/LocalMapping.cc	/^void LocalMapping::Release()$/;"	f	class:ORB_SLAM2::LocalMapping
Release	./src/Viewer.cc	/^void Viewer::Release()$/;"	f	class:ORB_SLAM2::Viewer
Relocal	./include/Relocal.h	/^    class Relocal {$/;"	c	namespace:ORB_SLAM2
Relocal	./src/System.cc	/^cv::Mat System::Relocal(const cv::Mat &im, int flag) {$/;"	f	class:ORB_SLAM2::System
RelocalInitialization	./src/Tracking.cc	/^void Tracking::RelocalInitialization() {$/;"	f	class:ORB_SLAM2::Tracking
RelocalUsePnP	./src/Tracking.cc	/^cv::Mat Tracking::RelocalUsePnP(const cv::Mat &im, int pnpFlag) {$/;"	f	class:ORB_SLAM2::Tracking
Relocalization	./src/Tracking.cc	/^bool Tracking::Relocalization()$/;"	f	class:ORB_SLAM2::Tracking
RemovedBits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    RemovedBits = ~(EvalToRowMajor ? 0 : RowMajorBit),$/;"	e	enum:Eigen::internal::traits::__anon421
Replace	./src/MapPoint.cc	/^void MapPoint::Replace(MapPoint* pMP)$/;"	f	class:ORB_SLAM2::MapPoint
ReplaceMapPointMatch	./src/KeyFrame.cc	/^void KeyFrame::ReplaceMapPointMatch(const size_t &idx, MapPoint* pMP)$/;"	f	class:ORB_SLAM2::KeyFrame
Replicate	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    inline Replicate(const OriginalMatrixType& a_matrix, Index rowFactor, Index colFactor)$/;"	f	class:Eigen::Replicate
Replicate	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    inline explicit Replicate(const OriginalMatrixType& a_matrix)$/;"	f	class:Eigen::Replicate
Replicate	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^template<typename MatrixType,int RowFactor,int ColFactor> class Replicate$/;"	c	namespace:Eigen
ReplicateReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    typedef Replicate<ExpressionType,Direction==Vertical?Dynamic:1,Direction==Horizontal?Dynamic:1> ReplicateReturnType;$/;"	t	class:Eigen::VectorwiseOp
RequestFinish	./src/LocalMapping.cc	/^void LocalMapping::RequestFinish()$/;"	f	class:ORB_SLAM2::LocalMapping
RequestFinish	./src/LoopClosing.cc	/^void LoopClosing::RequestFinish()$/;"	f	class:ORB_SLAM2::LoopClosing
RequestFinish	./src/Viewer.cc	/^void Viewer::RequestFinish()$/;"	f	class:ORB_SLAM2::Viewer
RequestReset	./src/LocalMapping.cc	/^void LocalMapping::RequestReset()$/;"	f	class:ORB_SLAM2::LocalMapping
RequestReset	./src/LoopClosing.cc	/^void LoopClosing::RequestReset()$/;"	f	class:ORB_SLAM2::LoopClosing
RequestStop	./src/LocalMapping.cc	/^void LocalMapping::RequestStop()$/;"	f	class:ORB_SLAM2::LocalMapping
RequestStop	./src/Viewer.cc	/^void Viewer::RequestStop()$/;"	f	class:ORB_SLAM2::Viewer
RequireInitialization	./Thirdparty/sparseicp/include/Eigen/src/Core/NumTraits.h	/^    RequireInitialization = internal::is_arithmetic<T>::value ? 0 : 1,$/;"	e	enum:Eigen::GenericNumTraits::__anon30
Res	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename internal::remove_all<DenseResType>::type Res;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
ResPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::ResPacket ResPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
ResPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,ScalarPacket,Scalar>::type ResPacket;$/;"	t	class:Eigen::internal::gebp_traits
ResPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,_ResPacket,ResScalar>::type ResPacket;$/;"	t	class:Eigen::internal::gebp_traits
ResPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename conditional<Vectorizable,_ResPacket,ResScalar>::type ResPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
ResPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize   = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon53
ResPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Traits::ResPacketSize$/;"	e	enum:Eigen::internal::gebp_kernel::__anon55
ResPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon51
ResPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon52
ResPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon54
ResPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^  ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon34
ResPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^  ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon35
ResScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^  typedef typename scalar_product_traits<typename traits<T>::Scalar,typename traits<U>::Scalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::dot_nocheck
ResScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef Scalar      ResScalar;$/;"	t	class:Eigen::internal::gebp_traits
ResScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  ResScalar;$/;"	t	class:Eigen::internal::gebp_traits
ResScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::ResScalar ResScalar;$/;"	t	struct:Eigen::internal::gebp_kernel
ResScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	class:Eigen::internal::gebp_traits
ResScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef           Scalar      ResScalar;$/;"	t	class:Eigen::GeneralProduct
ResScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_matrix_product
ResScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_matrix_product
ResScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  typedef typename Traits::ResScalar ResScalar;$/;"	t	struct:Eigen::internal::tribb_kernel
ResScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_matrix_triangular_product
ResScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
ResScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^  typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::triangular_matrix_vector_product
Reset	./src/System.cc	/^void System::Reset()$/;"	f	class:ORB_SLAM2::System
Reset	./src/Tracking.cc	/^void Tracking::Reset()$/;"	f	class:ORB_SLAM2::Tracking
ResetIfRequested	./src/LocalMapping.cc	/^void LocalMapping::ResetIfRequested()$/;"	f	class:ORB_SLAM2::LocalMapping
ResetIfRequested	./src/LoopClosing.cc	/^void LoopClosing::ResetIfRequested()$/;"	f	class:ORB_SLAM2::LoopClosing
ResultAlignment	./Thirdparty/sparseicp/include/Eigen/src/LU/arch/Inverse_SSE.h	/^    ResultAlignment     = bool(ResultType::Flags&AlignedBit),$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon339
ResultAlignment	./Thirdparty/sparseicp/include/Eigen/src/LU/arch/Inverse_SSE.h	/^    ResultAlignment = bool(ResultType::Flags&AlignedBit),$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon340
ResultMode	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  enum { ResultMode = transform_product_result<LhsMode,RhsMode>::Mode };$/;"	e	enum:Eigen::internal::transform_transform_product_impl::__anon439
ResultScalar	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    ResultScalar;$/;"	t	struct:Eigen::internal::matrix_type_times_scalar_type
ResultType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Matrix<Scalar,Dim,1> ResultType;$/;"	t	struct:Eigen::ei_transform_product_impl
ResultType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef TransformType ResultType;$/;"	t	struct:Eigen::ei_transform_product_impl
ResultType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef typename ProductReturnType<MatrixType,Other>::Type ResultType;$/;"	t	struct:Eigen::ei_transform_product_impl
ResultType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    typedef typename ProductType::ResultType ResultType;$/;"	t	struct:Eigen::Transform::icc_11_workaround
ResultType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,Projective> ResultType;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
ResultType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,ResultMode,LhsOptions> ResultType;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
ResultType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef Transform<typename Other::Scalar,Dim,Projective,Options> ResultType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
ResultType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef TransformType ResultType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
ResultType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef typename MatrixType::PlainObject ResultType;$/;"	t	struct:Eigen::internal::transform_right_product_impl
ReturnByValue	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^template<typename Derived> class ReturnByValue$/;"	c	namespace:Eigen
ReturnOpposite	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^        ReturnOpposite = (Options&SelfAdjoint) && (((Index)>0 && Supers==0) || ((Index)<0 && Subs==0)),$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon12
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^  typedef typename MatrixType::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^    typedef typename internal::traits<Derived>::ReturnType ReturnType;$/;"	t	class:Eigen::ReturnByValue
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  typedef typename internal::plain_matrix_type_column_major<Rhs>::type ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^  typedef typename MatrixType::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^                      typename Scalar=typename internal::traits<ExpressionType>::Scalar> struct ReturnType$/;"	s	class:Eigen::VectorwiseOp
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^  typedef T ReturnType;$/;"	t	struct:Eigen::scalar_product_traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^  typedef std::complex<T> ReturnType;$/;"	t	struct:Eigen::scalar_product_traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^  typedef MatrixType ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename MatrixType::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^                 MatrixTypeCleaned::MaxColsAtCompileTime>::type ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^                 Rhs::MaxColsAtCompileTime>::type ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^  typedef Matrix<typename RotationDerived::Scalar,Dim,1> ReturnType;$/;"	t	struct:Eigen::internal::rotation_base_generic_product_selector
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^  typedef Matrix<typename RotationDerived::Scalar,Dim,Dim> ReturnType;$/;"	t	struct:Eigen::internal::rotation_base_generic_product_selector
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^  typedef Transform<Scalar,Dim,Affine> ReturnType;$/;"	t	struct:Eigen::internal::rotation_base_generic_product_selector
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^  typedef typename MatrixType::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef typename MatrixType::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^      typedef typename Derived::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^      typedef typename SPQRType::MatrixType ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^        SparseMatrix<Scalar,int(SrcStorageOrder)==RowMajor?ColMajor:RowMajor,Index> >::type ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename Derived::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename SparseQRType::MatrixType ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^  > ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^  > ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^                 Rhs::MaxColsAtCompileTime> ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^                 Rhs::MaxColsAtCompileTime> ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^  typedef SparseMatrix<typename Rhs::Scalar, Rhs::Options, typename Rhs::Index> ReturnType;$/;"	t	struct:Eigen::internal::traits
Reverse	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    inline Reverse(const MatrixType& matrix) : m_matrix(matrix) { }$/;"	f	class:Eigen::Reverse
Reverse	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^template<typename MatrixType, int Direction> class Reverse$/;"	c	namespace:Eigen
ReverseCol	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^      ReverseCol = (Direction == Horizontal) || (Direction == BothDirections),$/;"	e	enum:Eigen::Reverse::__anon242
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    ReverseInnerIterator(const MappedSparseMatrix& mat, Index outer)$/;"	f	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^class MappedSparseMatrix<Scalar,_Flags,_Index>::ReverseInnerIterator$/;"	c	class:Eigen::MappedSparseMatrix
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^        inline ReverseInnerIterator(const BlockType& xpr, Index outer)$/;"	f	class:Eigen::BlockImpl::ReverseInnerIterator
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      EIGEN_STRONG_INLINE ReverseInnerIterator(const BlockType& block, Index outer)$/;"	f	class:Eigen::BlockImpl::ReverseInnerIterator
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    class ReverseInnerIterator : public _MatrixTypeNested::ReverseInnerIterator$/;"	c	class:Eigen::BlockImpl
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    class ReverseInnerIterator: public SparseMatrixType::ReverseInnerIterator$/;"	c	class:Eigen::BlockImpl
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    class ReverseInnerIterator: public XprType::ReverseInnerIterator$/;"	c	class:Eigen::BlockImpl
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE ReverseInnerIterator(const CwiseUnaryOpImpl& unaryOp, typename CwiseUnaryOpImpl::Index outer)$/;"	f	class:Eigen::CwiseUnaryOpImpl::ReverseInnerIterator
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE ReverseInnerIterator(const CwiseUnaryViewImpl& unaryOp, typename CwiseUnaryViewImpl::Index outer)$/;"	f	class:Eigen::CwiseUnaryViewImpl::ReverseInnerIterator
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class CwiseUnaryOpImpl<UnaryOp,MatrixType,Sparse>::ReverseInnerIterator$/;"	c	class:Eigen::CwiseUnaryOpImpl
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class CwiseUnaryViewImpl<ViewOp,MatrixType,Sparse>::ReverseInnerIterator$/;"	c	class:Eigen::CwiseUnaryViewImpl
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    ReverseInnerIterator(const SparseMatrix& mat, Index outer)$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^class SparseMatrix<Scalar,_Options,_Index>::ReverseInnerIterator$/;"	c	class:Eigen::SparseMatrix
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTranspose.h	/^    EIGEN_STRONG_INLINE ReverseInnerIterator(const TransposeImpl& xpr, typename TransposeImpl<MatrixType,Sparse>::Index outer)$/;"	f	class:Eigen::TransposeImpl::ReverseInnerIterator
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTranspose.h	/^template<typename MatrixType> class TransposeImpl<MatrixType,Sparse>::ReverseInnerIterator$/;"	c	class:Eigen::TransposeImpl
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE ReverseInnerIterator(const SparseTriangularView& view, Index outer)$/;"	f	class:Eigen::SparseTriangularView::ReverseInnerIterator
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^class SparseTriangularView<MatrixType,Mode>::ReverseInnerIterator : public MatrixTypeNestedCleaned::ReverseInnerIterator$/;"	c	class:Eigen::SparseTriangularView
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    ReverseInnerIterator(const SparseVector& vec, Index outer=0)$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    ReverseInnerIterator(const internal::CompressedStorage<Scalar,Index>& data)$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
ReverseInnerIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^class SparseVector<Scalar,_Options,_Index>::ReverseInnerIterator$/;"	c	class:Eigen::SparseVector
ReversePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^      ReversePacket = (Direction == BothDirections)$/;"	e	enum:Eigen::Reverse::__anon242
ReverseReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef Reverse<Derived, BothDirections> ReverseReturnType;$/;"	t	class:Eigen::DenseBase
ReverseRow	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^      ReverseRow = (Direction == Vertical)   || (Direction == BothDirections),$/;"	e	enum:Eigen::Reverse::__anon242
Rhs	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^  typedef typename remove_all<_Rhs>::type Rhs;$/;"	t	struct:Eigen::internal::traits
Rhs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,AffineCompact,RhsOptions> Rhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Rhs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,Projective,RhsOptions> Rhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Rhs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,RhsMode,RhsOptions> Rhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Rhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename internal::remove_all<DenseRhsType>::type Rhs;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
RhsBlasTraits	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typedef internal::blas_traits<_RhsNested> RhsBlasTraits;$/;"	t	class:Eigen::ProductBase
RhsCoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    RhsCoeffReadCost = _RhsNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon179
RhsCoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      RhsCoeffReadCost = _RhsNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon46
RhsCoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    RhsCoeffReadCost = traits<_RhsNested>::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon406
RhsCoeffReadCost	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    RhsCoeffReadCost = _RhsNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon421
RhsFlags	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    RhsFlags = _RhsNested::Flags,$/;"	e	enum:Eigen::internal::traits::__anon179
RhsFlags	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      RhsFlags = _RhsNested::Flags,$/;"	e	enum:Eigen::internal::traits::__anon46
RhsFlags	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    RhsFlags = _RhsNested::Flags,$/;"	e	enum:Eigen::internal::traits::__anon421
RhsIsSelfAdjoint	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    RhsIsSelfAdjoint = (RhsMode&SelfAdjoint)==SelfAdjoint$/;"	e	enum:Eigen::SelfadjointProductMatrix::__anon61
RhsIsUpper	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    RhsIsUpper = (RhsMode&(Upper|Lower))==Upper,$/;"	e	enum:Eigen::SelfadjointProductMatrix::__anon61
RhsIsVectorAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^      RhsIsVectorAtCompileTime = (Side==OnTheLeft ? Rhs::ColsAtCompileTime : Rhs::RowsAtCompileTime)==1$/;"	e	enum:Eigen::internal::trsolve_traits::__anon238
RhsIterator	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename _RhsNested::InnerIterator RhsIterator;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
RhsMode	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^      RhsMode = internal::is_diagonal<_RhsNested>::ret ? internal::SDP_IsDiagonal$/;"	e	enum:Eigen::SparseDiagonalProduct::__anon409
RhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::nested<Rhs>::type RhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
RhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename Rhs::Nested RhsNested;$/;"	t	struct:Eigen::internal::traits
RhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  typedef typename internal::nested<Rhs, Lhs::RowsAtCompileTime, typename internal::plain_matrix_type<Rhs>::type >::type RhsNested;$/;"	t	struct:Eigen::ProductReturnType
RhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typedef typename Rhs::Nested RhsNested;$/;"	t	class:Eigen::ProductBase
RhsNested	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<typename Rhs::Nested>::type RhsNested;$/;"	t	struct:Eigen::internal::homogeneous_right_product_impl
RhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename traits<CwiseBinaryXpr>::RhsNested RhsNested;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
RhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    typedef typename Traits::RhsNested RhsNested;$/;"	t	class:Eigen::SparseDenseOuterProduct
RhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename Rhs::Nested RhsNested;$/;"	t	struct:Eigen::internal::traits
RhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typedef typename Rhs::Nested RhsNested;$/;"	t	class:Eigen::SparseDiagonalProduct
RhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    typename internal::nested<Rhs,Lhs::RowsAtCompileTime>::type>::type RhsNested;$/;"	t	struct:Eigen::SparseSparseProductReturnType
RhsNestedCleaned	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  typedef typename remove_all<typename Rhs::Nested>::type RhsNestedCleaned;$/;"	t	struct:Eigen::internal::triangular_solve_retval
RhsNestedCleaned	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^  typedef typename remove_all<typename Rhs::Nested>::type RhsNestedCleaned;$/;"	t	struct:Eigen::internal::solve_retval_base
RhsNestedCleaned	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^  typedef typename remove_all<typename Rhs::Nested>::type RhsNestedCleaned;$/;"	t	struct:Eigen::internal::sparse_solve_retval_base
RhsPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::RhsPacket RhsPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
RhsPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,DoublePacket,Scalar>::type RhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
RhsPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,_RhsPacket,RhsScalar>::type RhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
RhsPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename conditional<Vectorizable,_RhsPacket,RhsScalar>::type RhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
RhsPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon51
RhsPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon52
RhsPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon54
RhsPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^  RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon34
RhsPacketSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^  RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon35
RhsProgress	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress   = Traits::RhsProgress,$/;"	e	enum:Eigen::internal::gebp_kernel::__anon55
RhsProgress	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = ResPacketSize$/;"	e	enum:Eigen::internal::gebp_traits::__anon54
RhsProgress	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = RhsPacketSize$/;"	e	enum:Eigen::internal::gebp_traits::__anon51
RhsProgress	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = RhsPacketSize$/;"	e	enum:Eigen::internal::gebp_traits::__anon52
RhsProgress	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = Vectorizable ? 2*ResPacketSize : 1$/;"	e	enum:Eigen::internal::gebp_traits::__anon53
RhsRowMajor	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      RhsRowMajor = RhsFlags & RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon46
RhsRowMajor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    RhsRowMajor = internal::traits<Rhs>::Flags & RowMajorBit,$/;"	e	enum:Eigen::SparseSparseProductReturnType::__anon420
RhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    typedef typename Rhs::Scalar RhsScalar;$/;"	t	class:Eigen::GeneralProduct
RhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typedef typename internal::traits<Rhs>::Scalar RhsScalar;$/;"	t	class:Eigen::ProductBase
RhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  typedef typename Rhs::Scalar RhsScalar;$/;"	t	struct:Eigen::internal::triangular_solver_selector
RhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef RealScalar RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef Scalar      RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef _RhsScalar RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef _RhsScalar RhsScalar;$/;"	t	class:Eigen::internal::level3_blocking
RhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef typename  Rhs::Scalar RhsScalar;$/;"	t	class:Eigen::GeneralProduct
RhsScalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef typename conditional<Transpose,_LhsScalar,_RhsScalar>::type RhsScalar;$/;"	t	class:Eigen::internal::gemm_blocking_space
RhsUpLo	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^    RhsUpLo = RhsMode&(Upper|Lower)$/;"	e	enum:Eigen::SelfadjointProductMatrix::__anon45
RhsVectors	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^      RhsVectors  = RhsIsVectorAtCompileTime ? 1 : Dynamic$/;"	e	enum:Eigen::internal::trsolve_traits::__anon239
RigidMotionEstimator	./Thirdparty/sparseicp/ICP.h	/^namespace RigidMotionEstimator {$/;"	n
RobustKernel	./Thirdparty/g2o/g2o/core/robust_kernel.cpp	/^RobustKernel::RobustKernel() :$/;"	f	class:g2o::RobustKernel
RobustKernel	./Thirdparty/g2o/g2o/core/robust_kernel.cpp	/^RobustKernel::RobustKernel(double delta) :$/;"	f	class:g2o::RobustKernel
RobustKernel	./Thirdparty/g2o/g2o/core/robust_kernel.h	/^  class  RobustKernel$/;"	c	namespace:g2o
RobustKernelCauchy	./Thirdparty/g2o/g2o/core/robust_kernel_impl.h	/^  class  RobustKernelCauchy : public RobustKernel$/;"	c	namespace:g2o
RobustKernelCreator	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	/^  class RobustKernelCreator : public AbstractRobustKernelCreator$/;"	c	namespace:g2o
RobustKernelDCS	./Thirdparty/g2o/g2o/core/robust_kernel_impl.h	/^  class  RobustKernelDCS : public RobustKernel$/;"	c	namespace:g2o
RobustKernelFactory	./Thirdparty/g2o/g2o/core/robust_kernel_factory.cpp	/^RobustKernelFactory::RobustKernelFactory()$/;"	f	class:g2o::RobustKernelFactory
RobustKernelFactory	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	/^  class  RobustKernelFactory$/;"	c	namespace:g2o
RobustKernelHuber	./Thirdparty/g2o/g2o/core/robust_kernel_impl.h	/^  class  RobustKernelHuber : public RobustKernel$/;"	c	namespace:g2o
RobustKernelPseudoHuber	./Thirdparty/g2o/g2o/core/robust_kernel_impl.h	/^  class  RobustKernelPseudoHuber : public RobustKernel$/;"	c	namespace:g2o
RobustKernelPtr	./Thirdparty/g2o/g2o/core/robust_kernel.h	/^  typedef std::tr1::shared_ptr<RobustKernel> RobustKernelPtr;$/;"	t	namespace:g2o
RobustKernelSaturated	./Thirdparty/g2o/g2o/core/robust_kernel_impl.h	/^  class  RobustKernelSaturated : public RobustKernel$/;"	c	namespace:g2o
RobustKernelScaleDelta	./Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp	/^RobustKernelScaleDelta::RobustKernelScaleDelta(const RobustKernelPtr& kernel, double delta) :$/;"	f	class:g2o::RobustKernelScaleDelta
RobustKernelScaleDelta	./Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp	/^RobustKernelScaleDelta::RobustKernelScaleDelta(double delta) :$/;"	f	class:g2o::RobustKernelScaleDelta
RobustKernelScaleDelta	./Thirdparty/g2o/g2o/core/robust_kernel_impl.h	/^  class  RobustKernelScaleDelta : public RobustKernel$/;"	c	namespace:g2o
RobustKernelTukey	./Thirdparty/g2o/g2o/core/robust_kernel_impl.h	/^  class  RobustKernelTukey : public RobustKernel$/;"	c	namespace:g2o
Rotation2D	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	25;"	d
Rotation2D	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	80;"	d
Rotation2D	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline Rotation2D(Scalar a) : m_angle(a) {}$/;"	f	class:Eigen::Rotation2D
Rotation2D	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline explicit Rotation2D(const Rotation2D<OtherScalarType>& other)$/;"	f	class:Eigen::Rotation2D
Rotation2D	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^class Rotation2D : public RotationBase<Rotation2D<_Scalar>,2>$/;"	c	namespace:Eigen
Rotation2D	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  inline Rotation2D(const Scalar& a) : m_angle(a) {}$/;"	f	class:Eigen::Rotation2D
Rotation2D	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  inline explicit Rotation2D(const Rotation2D<OtherScalarType>& other)$/;"	f	class:Eigen::Rotation2D
Rotation2D	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^class Rotation2D : public RotationBase<Rotation2D<_Scalar>,2>$/;"	c	namespace:Eigen
Rotation2Dd	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	27;"	d
Rotation2Dd	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	82;"	d
Rotation2Dd	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^typedef Rotation2D<double> Rotation2Dd;$/;"	t	namespace:Eigen
Rotation2Dd	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^typedef Rotation2D<double> Rotation2Dd;$/;"	t	namespace:Eigen
Rotation2Df	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	26;"	d
Rotation2Df	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	81;"	d
Rotation2Df	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^typedef Rotation2D<float> Rotation2Df;$/;"	t	namespace:Eigen
Rotation2Df	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^typedef Rotation2D<float> Rotation2Df;$/;"	t	namespace:Eigen
RotationBase	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	24;"	d
RotationBase	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	79;"	d
RotationBase	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^class RotationBase$/;"	c	namespace:Eigen
RotationBase	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^class RotationBase$/;"	c	namespace:Eigen
RotationMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    typedef Matrix<Scalar,Dim,Dim> RotationMatrixType;$/;"	t	class:Eigen::RotationBase
RotationMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^    typedef Matrix<Scalar,Dim,Dim> RotationMatrixType;$/;"	t	class:Eigen::RotationBase
RowBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^        RowBlock() : row(-1), block(0) {}$/;"	f	struct:g2o::SparseBlockMatrixCCS::RowBlock
RowBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^        RowBlock(int r, MatrixType* b) : row(r), block(b) {}$/;"	f	struct:g2o::SparseBlockMatrixCCS::RowBlock
RowBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      struct RowBlock$/;"	s	class:g2o::SparseBlockMatrixCCS
RowMajor	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  RowMajor = 0x1,  \/\/ it is only a coincidence that this is equal to RowMajorBit -- don't rely on that$/;"	e	enum:Eigen::__anon75
RowMajorBit	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^const unsigned int RowMajorBit = 0x1;$/;"	m	namespace:Eigen
RowType	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowType;$/;"	t	class:Eigen::JacobiSVD
RowVector	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^    typedef Matrix<Scalar, MatrixType::ColsAtCompileTime, 1> RowVector;$/;"	t	class:Eigen::SVD
RowVectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^    typedef Matrix<Scalar, 1, MatrixType::ColsAtCompileTime, MatrixType::Options, 1, MatrixType::MaxColsAtCompileTime> RowVectorType;$/;"	t	class:Eigen::LU
RowVectorType	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;$/;"	t	class:Eigen::ColPivHouseholderQR
RowVectorType	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;$/;"	t	class:Eigen::FullPivHouseholderQR
RowVectorType	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;$/;"	t	class:Eigen::HouseholderQR
RowVectorType	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, 1, ColsAtCompileTime> RowVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
RowXpr	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::RowXpr RowXpr;$/;"	t	class:Eigen::MatrixBase
RowXpr	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, 1, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> RowXpr;$/;"	t
Rows	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    Rows  = _Lhs::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon145
Rows	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    Rows = int(Mode)==(AffineCompact) ? Dim : HDim$/;"	e	enum:Eigen::Transform::__anon434
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon427
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::LLT::__anon425
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon10
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    RowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon13
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    RowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon14
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    RowsAtCompileTime = MatrixRows == 0 ? 0 : BlockRows,$/;"	e	enum:Eigen::internal::traits::__anon184
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    RowsAtCompileTime = traits<Ancestor>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon178
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon255
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    RowsAtCompileTime = (int(DiagIndex) == DynamicIndex || int(MatrixType::SizeAtCompileTime) == Dynamic) ? Dynamic$/;"	e	enum:Eigen::internal::traits::__anon233
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^      RowsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon197
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    RowsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon199
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon171
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::MapBase::__anon202
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    RowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon15
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^      RowsAtCompileTime = Traits::RowsAtCompileTime,$/;"	e	enum:Eigen::PermutationBase::__anon27
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^      RowsAtCompileTime = Traits::RowsAtCompileTime,$/;"	e	enum:Eigen::Transpose::__anon29
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    RowsAtCompileTime = _IndicesType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon28
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    RowsAtCompileTime = traits<Lhs>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon65
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    RowsAtCompileTime = RowFactor==Dynamic || int(MatrixType::RowsAtCompileTime)==Dynamic$/;"	e	enum:Eigen::internal::traits::__anon337
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon241
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    RowsAtCompileTime = ConditionMatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon32
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    RowsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon62
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon229
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    RowsAtCompileTime = Direction==Vertical   ? 1 : MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon21
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      RowsAtCompileTime = _LhsNested::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon46
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^    RowsAtCompileTime = (MatrixType::RowsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon388
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon453
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::ComplexSchur::__anon458
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::EigenSolver::__anon454
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon459
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^        RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::RealQZ::__anon452
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::RealSchur::__anon456
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    RowsAtCompileTime = Direction==Vertical  ?  RowsPlusOne : MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon429
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^      RowsAtCompileTime = internal::traits<HouseholderSequence>::RowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderSequence::__anon4
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    RowsAtCompileTime = Side==OnTheLeft ? traits<VectorsType>::RowsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon3
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::FullPivLU::__anon341
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::PartialPivLU::__anon338
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon7
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon6
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderQR::__anon5
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon359
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon355
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon356
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon357
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon358
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::UpperBidiagonalization::__anon360
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    RowsAtCompileTime    = Tr ? int(traits<Rhs>::RowsAtCompileTime)     : int(traits<Lhs>::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon406
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    RowsAtCompileTime = _Lhs::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon407
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon410
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon411
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon419
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    RowsAtCompileTime    = _LhsNested::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon421
RowsAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    RowsAtCompileTime = IsColVector ? Dynamic : 1,$/;"	e	enum:Eigen::internal::traits::__anon396
RowsBlockXpr	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, Dynamic, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> RowsBlockXpr;$/;"	t
RowsPlusOne	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    RowsPlusOne = (MatrixType::RowsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon429
RowwiseReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef VectorwiseOp<Derived, Horizontal> RowwiseReturnType;$/;"	t	class:Eigen::DenseBase
Run	./src/LocalMapping.cc	/^void LocalMapping::Run()$/;"	f	class:ORB_SLAM2::LocalMapping
Run	./src/LoopClosing.cc	/^void LoopClosing::Run()$/;"	f	class:ORB_SLAM2::LoopClosing
Run	./src/Registrating.cc	/^	void Registrating::Run() {$/;"	f	class:ORB_SLAM2::Registrating
Run	./src/Viewer.cc	/^void Viewer::Run()$/;"	f	class:ORB_SLAM2::Viewer
RunGlobalBundleAdjustment	./src/LoopClosing.cc	/^void LoopClosing::RunGlobalBundleAdjustment(unsigned long nLoopKF)$/;"	f	class:ORB_SLAM2::LoopClosing
RunRelocal	./main.cc	/^void RunRelocal() {$/;"	f
RunSlam	./main.cc	/^void RunSlam() {$/;"	f
RunSlamUseCamera	./main.cc	/^void RunSlamUseCamera() {$/;"	f
S	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^    S = IsLower ? 0     : I+1$/;"	e	enum:Eigen::internal::triangular_solver_unroller::__anon240
SCMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    typedef internal::MappedSuperNodalMatrix<Scalar, Index> SCMatrix; $/;"	t	class:Eigen::SparseLU
SDP_IsDiagonal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^enum {SDP_IsDiagonal, SDP_IsSparseRowMajor, SDP_IsSparseColMajor};$/;"	e	enum:Eigen::internal::__anon408
SDP_IsSparseColMajor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^enum {SDP_IsDiagonal, SDP_IsSparseRowMajor, SDP_IsSparseColMajor};$/;"	e	enum:Eigen::internal::__anon408
SDP_IsSparseRowMajor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^enum {SDP_IsDiagonal, SDP_IsSparseRowMajor, SDP_IsSparseColMajor};$/;"	e	enum:Eigen::internal::__anon408
SE3Quat	./Thirdparty/g2o/g2o/types/se3quat.h	/^        explicit SE3Quat(const MatrixBase<Derived>& v)$/;"	f	class:g2o::SE3Quat
SE3Quat	./Thirdparty/g2o/g2o/types/se3quat.h	/^      SE3Quat(){$/;"	f	class:g2o::SE3Quat
SE3Quat	./Thirdparty/g2o/g2o/types/se3quat.h	/^      SE3Quat(const Matrix3d& R, const Vector3d& t):_r(Quaterniond(R)),_t(t){ $/;"	f	class:g2o::SE3Quat
SE3Quat	./Thirdparty/g2o/g2o/types/se3quat.h	/^      SE3Quat(const Quaterniond& q, const Vector3d& t):_r(q),_t(t){$/;"	f	class:g2o::SE3Quat
SE3Quat	./Thirdparty/g2o/g2o/types/se3quat.h	/^  class SE3Quat {$/;"	c	namespace:g2o
SHELL	./Thirdparty/DBoW2/build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	./Thirdparty/g2o/build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	./build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	./cmake-build-debug/Makefile	/^SHELL = \/bin\/sh$/;"	m
SICP	./Thirdparty/sparseicp/ICP.h	/^namespace SICP {$/;"	n
SIM3SOLVER_H	./include/Sim3Solver.h	23;"	d
SIMULATE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
SIMULATE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
SIMULATE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
SIMULATE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
SIMULATE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
SIMULATE_ID	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
SIMULATE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
SIMULATE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
SIMULATE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
SIMULATE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
SIMULATE_ID	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
SIMULATE_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
SIMULATE_ID	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
SIMULATE_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
SIMULATE_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
SIMULATE_ID	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	21;"	d	file:
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
SIMULATE_ID	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	162;"	d	file:
SIMULATE_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
SIMULATE_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
SIMULATE_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
SIMULATE_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
SIMULATE_VERSION_MAJOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	162;"	d	file:
SIMULATE_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
SIMULATE_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
SIMULATE_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
SIMULATE_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
SIMULATE_VERSION_MAJOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	162;"	d	file:
SIMULATE_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
SIMULATE_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
SIMULATE_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
SIMULATE_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
SIMULATE_VERSION_MAJOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	162;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
SIMULATE_VERSION_MAJOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
SIMULATE_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
SIMULATE_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
SIMULATE_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
SIMULATE_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
SIMULATE_VERSION_MINOR	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
SIMULATE_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
SIMULATE_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
SIMULATE_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
SIMULATE_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
SIMULATE_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
SIMULATE_VERSION_MINOR	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
SIMULATE_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
SIMULATE_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
SIMULATE_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
SIMULATE_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
SIMULATE_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
SIMULATE_VERSION_MINOR	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	171;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
SIMULATE_VERSION_MINOR	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
SPARSELU_COLUMN_BMOD_H	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_bmod.h	32;"	d
SPARSELU_COLUMN_DFS_H	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h	31;"	d
SPARSELU_COPY_TO_UCOL_H	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h	30;"	d
SPARSELU_HEAP_RELAX_SNODE_H	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h	29;"	d
SPARSELU_IMPL_H	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLUImpl.h	10;"	d
SPARSELU_KERNEL_BMOD_H	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	12;"	d
SPARSELU_PANEL_BMOD_H	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_panel_bmod.h	32;"	d
SPARSELU_PANEL_DFS_H	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_panel_dfs.h	31;"	d
SPARSELU_PIVOTL_H	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_pivotL.h	31;"	d
SPARSELU_PRUNEL_H	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_pruneL.h	31;"	d
SPARSELU_RELAX_SNODE_H	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_relax_snode.h	29;"	d
SPARSE_COLETREE_H	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseColEtree.h	32;"	d
SPQR	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    SPQR() $/;"	f	class:Eigen::SPQR
SPQR	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    SPQR(const _MatrixType& matrix) $/;"	f	class:Eigen::SPQR
SPQR	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^class SPQR$/;"	c	namespace:Eigen
SPQRMatrixQReturnType	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQRMatrixQReturnType(const SPQRType& spqr) : m_spqr(spqr) {}$/;"	f	struct:Eigen::SPQRMatrixQReturnType
SPQRMatrixQReturnType	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^struct SPQRMatrixQReturnType{$/;"	s	namespace:Eigen
SPQRMatrixQTransposeReturnType	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQRMatrixQTransposeReturnType(const SPQRType& spqr) : m_spqr(spqr) {}$/;"	f	struct:Eigen::SPQRMatrixQTransposeReturnType
SPQRMatrixQTransposeReturnType	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^struct SPQRMatrixQTransposeReturnType{$/;"	s	namespace:Eigen
SPQR_QProduct	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQR_QProduct(const SPQRType& spqr, const Derived& other, bool transpose) : m_spqr(spqr),m_other(other),m_transpose(transpose) {}$/;"	f	struct:Eigen::SPQR_QProduct
SPQR_QProduct	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^struct SPQR_QProduct : ReturnByValue<SPQR_QProduct<SPQRType,Derived> >$/;"	s	namespace:Eigen
SPQR_free	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void SPQR_free()$/;"	f	class:Eigen::SPQR
SSE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^    SSE = 0x1,$/;"	e	enum:Eigen::Architecture::Type
STEP_DL	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^        STEP_SD, STEP_GN, STEP_DL$/;"	e	enum:g2o::OptimizationAlgorithmDogleg::__anon467
STEP_GN	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^        STEP_SD, STEP_GN, STEP_DL$/;"	e	enum:g2o::OptimizationAlgorithmDogleg::__anon467
STEP_SD	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^        STEP_SD, STEP_GN, STEP_DL$/;"	e	enum:g2o::OptimizationAlgorithmDogleg::__anon467
STEP_UNDEFINED	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^        STEP_UNDEFINED,$/;"	e	enum:g2o::OptimizationAlgorithmDogleg::__anon467
STEREO	./include/System.h	/^        STEREO=1,$/;"	e	enum:ORB_SLAM2::System::eSensor
STRINGIFY	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	289;"	d	file:
STRINGIFY	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	284;"	d	file:
STRINGIFY	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	289;"	d	file:
STRINGIFY	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	284;"	d	file:
STRINGIFY	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	289;"	d	file:
STRINGIFY	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	284;"	d	file:
STRINGIFY	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	309;"	d	file:
STRINGIFY	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
STRINGIFY	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	289;"	d	file:
STRINGIFY	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	284;"	d	file:
STRINGIFY_HELPER	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
STRINGIFY_HELPER	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	283;"	d	file:
STRINGIFY_HELPER	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
STRINGIFY_HELPER	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	283;"	d	file:
STRINGIFY_HELPER	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
STRINGIFY_HELPER	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	283;"	d	file:
STRINGIFY_HELPER	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	308;"	d	file:
STRINGIFY_HELPER	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	293;"	d	file:
STRINGIFY_HELPER	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
STRINGIFY_HELPER	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	283;"	d	file:
SUFFIXES	./Thirdparty/DBoW2/build/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	./Thirdparty/g2o/build/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	./build/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	./cmake-build-debug/Makefile	/^SUFFIXES =$/;"	m
SVA_Inner	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^  SVA_Inner,$/;"	e	enum:Eigen::internal::__anon397
SVA_Outer	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^  SVA_Outer$/;"	e	enum:Eigen::internal::__anon397
SVA_RuntimeSwitch	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^  SVA_RuntimeSwitch,$/;"	e	enum:Eigen::internal::__anon397
SVD	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^    SVD() {} \/\/ a user who relied on compiler-generated default compiler reported problems with MSVC in 2.0.7$/;"	f	class:Eigen::SVD
SVD	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^    SVD(const MatrixType& matrix)$/;"	f	class:Eigen::SVD
SVD	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^template<typename MatrixType> class SVD$/;"	c	namespace:Eigen
SVD	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  typedef JacobiSVD<MatrixType, QRPreconditioner> SVD;$/;"	t	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
SYSTEM_H	./include/System.h	23;"	d
SYSTEM_NOT_READY	./include/Tracking.h	/^        SYSTEM_NOT_READY=-1,$/;"	e	enum:ORB_SLAM2::Tracking::eTrackingState
SameType	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    SameType = is_same<typename _LhsNested::Scalar,typename _RhsNested::Scalar>::value,$/;"	e	enum:Eigen::internal::traits::__anon179
SameType	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      SameType = is_same<typename _LhsNested::Scalar,typename _RhsNested::Scalar>::value,$/;"	e	enum:Eigen::internal::traits::__anon46
Save	./src/System.cc	/^void System::Save(const string &filename) {$/;"	f	class:ORB_SLAM2::System
SaveKeyFrameTrajectoryTUM	./src/System.cc	/^void System::SaveKeyFrameTrajectoryTUM(const string &filename)$/;"	f	class:ORB_SLAM2::System
SaveTrajectoryKITTI	./src/System.cc	/^void System::SaveTrajectoryKITTI(const string &filename)$/;"	f	class:ORB_SLAM2::System
SaveTrajectoryTUM	./src/System.cc	/^void System::SaveTrajectoryTUM(const string &filename)$/;"	f	class:ORB_SLAM2::System
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::LDLT
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::LLT
Scalar	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::CholmodBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::ArrayBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^  typedef typename Derived1::Scalar Scalar;$/;"	t	struct:Eigen::internal::vml_assign_impl
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrix>::Scalar Scalar;$/;"	t	class:Eigen::internal::BandMatrix
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrixWrapper>::Scalar Scalar;$/;"	t	class:Eigen::internal::BandMatrixWrapper
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::internal::BandMatrixBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^  typedef typename _CoefficientsType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/CommaInitializer.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::CommaInitializer
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/CoreIterators.h	/^    typedef typename Derived::Scalar Scalar;$/;"	t	class:Eigen::DenseBase::InnerIterator
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^                   >::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^                   >::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^                   >::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::DenseBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::DenseCoeffsBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::DiagonalMatrix
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename DiagonalVectorType::Scalar Scalar;$/;"	t	class:Eigen::DiagonalBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^  typedef typename DiagonalVectorType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^  typedef typename scalar_product_traits<typename MatrixType::Scalar, typename DiagonalType::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^  typedef typename PlainObjectType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::MapBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::MapBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^      typedef typename internal::scalar_product_traits<typename internal::traits<Derived>::Scalar,typename internal::traits<OtherDerived>::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::MatrixBase::cross_product_return_type
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::MatrixBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/NoAlias.h	/^    typedef typename ExpressionType::Scalar Scalar;$/;"	t	class:Eigen::NoAlias
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::Scalar Scalar;$/;"	t	class:Eigen::PermutationBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::Scalar Scalar;$/;"	t	class:Eigen::Transpose
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^  typedef typename _IndicesType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::PlainObjectBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::ScaledProduct
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^  typedef typename scalar_product_traits<typename Lhs::Scalar, typename Rhs::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::redux_impl
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::redux_novec_unroller
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::redux_vec_unroller
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^  typedef typename traits<ThenMatrixType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename internal::traits<SelfAdjointView>::Scalar Scalar; $/;"	t	class:Eigen::SelfAdjointView
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  typedef typename Rhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::triangular_solver_selector
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::TriangularBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::Scalar Scalar;$/;"	t	class:Eigen::TriangularView
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Derived1::Scalar Scalar;$/;"	t	struct:Eigen::internal::triangular_assignment_selector
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ExpressionType::Scalar Scalar;$/;"	t	class:Eigen::VectorwiseOp
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename MemberOp::result_type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::coeff_visitor
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::max_coeff_visitor
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::min_coeff_visitor
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef typename scalar_product_traits<typename _LhsNested::Scalar, typename _RhsNested::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  Scalar;$/;"	t	class:Eigen::internal::gebp_traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  typedef std::complex<RealScalar> Scalar;$/;"	t	struct:Eigen::internal::conj_helper
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename NestedXpr::Scalar Scalar;$/;"	t	struct:Eigen::internal::blas_traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::blas_traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Cwise.h	/^    typedef typename internal::traits<ExpressionType>::Scalar Scalar;$/;"	t	class:Eigen::Cwise
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::AlignedBox
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::AngleAxis
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::ei_traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Hyperplane
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::ParametrizedLine
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Quaternion
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::ei_traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  typedef typename Other::Scalar Scalar;$/;"	t	struct:Eigen::ei_quaternion_assign_impl
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Rotation2D
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::ei_traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    typedef typename ei_traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::RotationBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Scaling
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Transform
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef typename Other::Scalar Scalar;$/;"	t	struct:Eigen::ei_transform_product_impl
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Translation
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::LU
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SVD
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ComplexEigenSolver
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ComplexSchur
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::EigenSolver
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::GeneralizedEigenSolver
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::HessenbergDecomposition
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::RealQZ
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::RealSchur
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SelfAdjointEigenSolver
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::Scalar Scalar;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::Tridiagonalization
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  typedef _Scalar                                   Scalar;$/;"	t	class:Eigen::AlignedBox
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::AngleAxis
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Hyperplane
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	/^  typedef typename traits<Derived>::Scalar Scalar;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::ParametrizedLine
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::Map
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Quaternion
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  typedef typename Other::Scalar Scalar;$/;"	t	struct:Eigen::internal::quaternionbase_assign_impl
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::QuaternionBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Rotation2D
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::RotationBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::UniformScaling
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Transform
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Translation
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    typedef typename internal::traits<HouseholderSequence>::Scalar Scalar;$/;"	t	class:Eigen::HouseholderSequence
Scalar	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^  typedef typename VectorsType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::DiagonalPreconditioner
Scalar	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::BiCGSTAB
Scalar	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ConjugateGradient
Scalar	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::IncompleteLUT
Scalar	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::IterativeSolverBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::FullPivLU
Scalar	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::PartialPivLU
Scalar	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::PastixBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename _MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::pastix_traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::PardisoLDLT
Scalar	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::PardisoLLT
Scalar	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::PardisoLU
Scalar	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::Scalar Scalar;$/;"	t	class:Eigen::PardisoImpl
Scalar	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::pardiso_traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ColPivHouseholderQR
Scalar	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::FullPivHouseholderQR
Scalar	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::HouseholderQR
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef typename _MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SPQR
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  typedef typename SPQRType::Scalar Scalar;$/;"	t	struct:Eigen::SPQR_QProduct
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::JacobiSVD
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::internal::UpperBidiagonalization
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialCholesky
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialCholeskyBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialLDLT
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialLLT
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::Scalar                             Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::Scalar                         Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::internal::AmbiVector
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::internal::AmbiVector::Iterator
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::internal::CompressedStorage
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  typedef typename LhsCleaned::Scalar Scalar;$/;"	t	struct:Eigen::internal::conservative_sparse_sparse_product_selector
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  typedef typename traits<typename remove_all<Lhs>::type>::Scalar Scalar;$/;"	t	struct:Eigen::internal::conservative_sparse_sparse_product_selector
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename CwiseBinaryXpr::Scalar Scalar;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename traits<CwiseBinaryXpr>::Scalar Scalar;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename CwiseUnaryOpImpl::Scalar Scalar;$/;"	t	class:Eigen::CwiseUnaryOpImpl::InnerIterator
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename CwiseUnaryOpImpl::Scalar Scalar;$/;"	t	class:Eigen::CwiseUnaryOpImpl::ReverseInnerIterator
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename CwiseUnaryViewImpl::Scalar Scalar;$/;"	t	class:Eigen::CwiseUnaryViewImpl::InnerIterator
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename CwiseUnaryViewImpl::Scalar Scalar;$/;"	t	class:Eigen::CwiseUnaryViewImpl::ReverseInnerIterator
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^                                         typename traits<Rhs>::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef typename _Lhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::SparseMatrixBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^    typedef typename MatrixTypeNestedCleaned::Scalar Scalar;$/;"	t	struct:Eigen::internal::permut_sparsematrix_product_retval
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^  typedef typename MatrixTypeNestedCleaned::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^  typedef typename _LhsNested::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^  typedef typename internal::traits<Lhs>::Scalar Scalar;$/;"	t	struct:Eigen::SparseSparseProductReturnType
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SparseSelfAdjointView
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^  typedef typename traits<typename remove_all<Lhs>::type>::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_sparse_product_with_pruning_selector
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	/^  typedef typename Rhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_selector
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	/^  typedef typename Rhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_sparse_selector
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    typedef typename MatrixType::Scalar Scalar; $/;"	t	class:Eigen::SparseLU
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  typedef typename MappedSupernodalType::Scalar Scalar;$/;"	t	struct:Eigen::SparseLUMatrixLReturnType
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  typedef typename MatrixLType::Scalar Scalar;$/;"	t	struct:Eigen::SparseLUMatrixUReturnType
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    typedef _Scalar Scalar; $/;"	t	class:Eigen::internal::MappedSuperNodalMatrix
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  typedef typename ScalarVector::Scalar Scalar;$/;"	t	struct:Eigen::internal::column_dfs_traits
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SparseQR
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename SparseQRType::Scalar Scalar;$/;"	t	struct:Eigen::SparseQRMatrixQReturnType
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename SparseQRType::Scalar Scalar;$/;"	t	struct:Eigen::SparseQR_QProduct
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::SuperILU
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::SuperLU
Scalar	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SuperLUBase
Scalar	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::UmfPackLU
ScalarAddReturnType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Cwise.h	/^    typedef CwiseUnaryOp<internal::scalar_add_op<Scalar>, ExpressionType> ScalarAddReturnType;$/;"	t	class:Eigen::Cwise
ScalarCoeffImpl	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^                                   _LhsNested, _RhsNested, Scalar> ScalarCoeffImpl;$/;"	t	class:Eigen::CoeffBasedProduct
ScalarIsComplex	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^      ScalarIsComplex = NumTraits<Scalar>::IsComplex$/;"	e	enum:Eigen::PardisoImpl::__anon422
ScalarMultipleReturnType	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_multiple_op<Scalar>, const Derived> ScalarMultipleReturnType;$/;"	t
ScalarPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<Scalar>::type     ScalarPacket;$/;"	t	class:Eigen::internal::gebp_traits
ScalarQuotient1ReturnType	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_quotient1_op<Scalar>, const Derived> ScalarQuotient1ReturnType;$/;"	t
ScalarTraits	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  typedef NumTraits<Scalar>                         ScalarTraits;$/;"	t	class:Eigen::AlignedBox
ScalarVector	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    typedef Matrix<Scalar,Dynamic,1> ScalarVector;$/;"	t	class:Eigen::SparseLU
ScalarVector	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Matrix<Scalar,Dynamic,1> ScalarVector;$/;"	t	class:Eigen::internal::SparseLUImpl
ScalarVector	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    typedef Matrix<Scalar,Dynamic,1> ScalarVector;$/;"	t	class:Eigen::internal::MappedSuperNodalMatrix
ScalarVector	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    typedef Matrix<Scalar, Dynamic, 1> ScalarVector;$/;"	t	class:Eigen::SparseQR
ScalarWithConstIfNotLvalue	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::ArrayWrapper
ScalarWithConstIfNotLvalue	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::MatrixWrapper
ScalarWithConstIfNotLvalue	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::Diagonal
ScalarWithConstIfNotLvalue	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^                  >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::MapBase
ScalarWithConstIfNotLvalue	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::SwapWrapper
ScalarWithConstIfNotLvalue	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::TransposeImpl
ScaledProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    ScaledProduct(const NestedProduct& prod, const Scalar& x)$/;"	f	class:Eigen::ScaledProduct
ScaledProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^class ScaledProduct$/;"	c	namespace:Eigen
Scaling	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	104;"	d
Scaling	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	49;"	d
Scaling	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  Scaling() {}$/;"	f	class:Eigen::Scaling
Scaling	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  explicit inline Scaling(const Scalar& s) { m_coeffs.setConstant(s); }$/;"	f	class:Eigen::Scaling
Scaling	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  explicit inline Scaling(const VectorType& coeffs) : m_coeffs(coeffs) {}$/;"	f	class:Eigen::Scaling
Scaling	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline Scaling(const Scalar& sx, const Scalar& sy)$/;"	f	class:Eigen::Scaling
Scaling	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline Scaling(const Scalar& sx, const Scalar& sy, const Scalar& sz)$/;"	f	class:Eigen::Scaling
Scaling	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline explicit Scaling(const Scaling<OtherScalarType,Dim>& other)$/;"	f	class:Eigen::Scaling
Scaling	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^class Scaling$/;"	c	namespace:Eigen
Scaling	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^static inline DiagonalMatrix<Scalar,2> Scaling(const Scalar& sx, const Scalar& sy)$/;"	f	namespace:Eigen
Scaling	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^static inline DiagonalMatrix<Scalar,3> Scaling(const Scalar& sx, const Scalar& sy, const Scalar& sz)$/;"	f	namespace:Eigen
Scaling	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^static inline UniformScaling<double> Scaling(double s) { return UniformScaling<double>(s); }$/;"	f	namespace:Eigen
Scaling	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^static inline UniformScaling<float> Scaling(float s) { return UniformScaling<float>(s); }$/;"	f	namespace:Eigen
Scaling	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^static inline UniformScaling<std::complex<RealScalar> > Scaling(const std::complex<RealScalar>& s)$/;"	f	namespace:Eigen
Scaling	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^static inline const DiagonalWrapper<const Derived> Scaling(const MatrixBase<Derived>& coeffs)$/;"	f	namespace:Eigen
Scaling2d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	106;"	d
Scaling2d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	51;"	d
Scaling2d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^typedef Scaling<double,2> Scaling2d;$/;"	t	namespace:Eigen
Scaling2f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	105;"	d
Scaling2f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	50;"	d
Scaling2f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^typedef Scaling<float, 2> Scaling2f;$/;"	t	namespace:Eigen
Scaling3d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	108;"	d
Scaling3d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	53;"	d
Scaling3d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^typedef Scaling<double,3> Scaling3d;$/;"	t	namespace:Eigen
Scaling3f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	107;"	d
Scaling3f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	52;"	d
Scaling3f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^typedef Scaling<float, 3> Scaling3f;$/;"	t	namespace:Eigen
ScalingType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Scaling<Scalar,Dim> ScalingType;$/;"	t	class:Eigen::Transform
ScalingType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  typedef Scaling<Scalar,Dim> ScalingType;$/;"	t	class:Eigen::Translation
ScopeTime	./Thirdparty/g2o/g2o/stuff/timeutil.cpp	/^ScopeTime::ScopeTime(const char* title) : _title(title), _startTime(get_monotonic_time()) {}$/;"	f	class:g2o::ScopeTime
ScopeTime	./Thirdparty/g2o/g2o/stuff/timeutil.h	/^class  ScopeTime {$/;"	c	namespace:g2o
ScopedOpenMPMutex	./Thirdparty/g2o/g2o/core/openmp_mutex.h	/^      explicit ScopedOpenMPMutex(OpenMPMutex* mutex) : _mutex(mutex) { _mutex->lock(); }$/;"	f	class:g2o::ScopedOpenMPMutex
ScopedOpenMPMutex	./Thirdparty/g2o/g2o/core/openmp_mutex.h	/^  class ScopedOpenMPMutex$/;"	c	namespace:g2o
ScoringType	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^enum ScoringType$/;"	g	namespace:DBoW2
SearchAndFuse	./src/LoopClosing.cc	/^void LoopClosing::SearchAndFuse(const KeyFrameAndPose &CorrectedPosesMap)$/;"	f	class:ORB_SLAM2::LoopClosing
SearchByBF	./src/ORBmatcher.cc	/^int ORBmatcher::SearchByBF(Frame &last, Frame &F, vector<cv::DMatch> &matches) {$/;"	f	class:ORB_SLAM2::ORBmatcher
SearchByBF	./src/ORBmatcher.cc	/^int ORBmatcher::SearchByBF(ORB_SLAM2::Frame &last, ORB_SLAM2::Frame &F, vector<ORB_SLAM2::MapPoint *> &vpMatches) {$/;"	f	class:ORB_SLAM2::ORBmatcher
SearchByBoW	./src/ORBmatcher.cc	/^int ORBmatcher::SearchByBoW(KeyFrame *pKF1, KeyFrame *pKF2, vector<MapPoint *> &vpMatches12)$/;"	f	class:ORB_SLAM2::ORBmatcher
SearchByBoW	./src/ORBmatcher.cc	/^int ORBmatcher::SearchByBoW(KeyFrame* pKF,Frame &F, vector<MapPoint*> &vpMapPointMatches)$/;"	f	class:ORB_SLAM2::ORBmatcher
SearchByBoW	./src/ORBmatcher.cc	/^int ORBmatcher::SearchByBoW(KeyFrame* pKF,Frame &F, vector<MapPoint*> &vpMapPointMatches, std::vector<cv::DMatch> &feature_matches)$/;"	f	class:ORB_SLAM2::ORBmatcher
SearchByBoW	./src/ORBmatcher.cc	/^int ORBmatcher::SearchByBoW(Map *pMap, Frame &F, vector<MapPoint*> &vpMatches) {$/;"	f	class:ORB_SLAM2::ORBmatcher
SearchByBoW	./src/ORBmatcher.cc	/^int ORBmatcher::SearchByBoW(ORB_SLAM2::Frame &last, ORB_SLAM2::Frame &F, vector<ORB_SLAM2::MapPoint *> &vpMatches) {$/;"	f	class:ORB_SLAM2::ORBmatcher
SearchByLastMap	./src/ORBmatcher.cc	/^int ORBmatcher::SearchByLastMap(ORB_SLAM2::Map *pMap, ORB_SLAM2::Frame &F, vector<ORB_SLAM2::MapPoint *> &vpMatches) {$/;"	f	class:ORB_SLAM2::ORBmatcher
SearchByLastMap	./src/ORBmatcher.cc	/^int ORBmatcher::SearchByLastMap(ORB_SLAM2::Map *pMap, ORB_SLAM2::Frame &F, vector<vector<pair<int, int>> > &matches) {$/;"	f	class:ORB_SLAM2::ORBmatcher
SearchByProjection	./src/ORBmatcher.cc	/^int ORBmatcher::SearchByProjection(Frame &CurrentFrame, KeyFrame *pKF, const set<MapPoint*> &sAlreadyFound, const float th , const int ORBdist)$/;"	f	class:ORB_SLAM2::ORBmatcher
SearchByProjection	./src/ORBmatcher.cc	/^int ORBmatcher::SearchByProjection(Frame &CurrentFrame, const Frame &LastFrame, const float th, const bool bMono)$/;"	f	class:ORB_SLAM2::ORBmatcher
SearchByProjection	./src/ORBmatcher.cc	/^int ORBmatcher::SearchByProjection(Frame &F, const vector<MapPoint*> &vpMapPoints, const float th)$/;"	f	class:ORB_SLAM2::ORBmatcher
SearchByProjection	./src/ORBmatcher.cc	/^int ORBmatcher::SearchByProjection(KeyFrame* pKF, cv::Mat Scw, const vector<MapPoint*> &vpPoints, vector<MapPoint*> &vpMatched, int th)$/;"	f	class:ORB_SLAM2::ORBmatcher
SearchByProjection	./src/ORBmatcher.cc	/^int ORBmatcher::SearchByProjection(ORB_SLAM2::Map *pMap, ORB_SLAM2::Frame &F, vector<ORB_SLAM2::MapPoint *> &vpMatches,$/;"	f	class:ORB_SLAM2::ORBmatcher
SearchBySim3	./src/ORBmatcher.cc	/^int ORBmatcher::SearchBySim3(KeyFrame *pKF1, KeyFrame *pKF2, vector<MapPoint*> &vpMatches12,$/;"	f	class:ORB_SLAM2::ORBmatcher
SearchForInitialization	./src/ORBmatcher.cc	/^int ORBmatcher::SearchForInitialization(Frame &F1, Frame &F2, vector<cv::Point2f> &vbPrevMatched, vector<int> &vnMatches12, int windowSize)$/;"	f	class:ORB_SLAM2::ORBmatcher
SearchForTriangulation	./src/ORBmatcher.cc	/^int ORBmatcher::SearchForTriangulation(KeyFrame *pKF1, KeyFrame *pKF2, cv::Mat F12,$/;"	f	class:ORB_SLAM2::ORBmatcher
SearchInNeighbors	./src/LocalMapping.cc	/^void LocalMapping::SearchInNeighbors()$/;"	f	class:ORB_SLAM2::LocalMapping
SearchLocalPoints	./src/Tracking.cc	/^void Tracking::SearchLocalPoints()$/;"	f	class:ORB_SLAM2::Tracking
SearchParams	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		SearchParams(int checks_IGNORED_ = 32, float eps_ = 0, bool sorted_ = true ) :$/;"	f	struct:nanoflann::SearchParams
SearchParams	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	struct SearchParams$/;"	s	namespace:nanoflann
SeedRand	./Thirdparty/DBoW2/DUtils/Random.cpp	/^void DUtils::Random::SeedRand(){$/;"	f	class:DUtils::Random
SeedRand	./Thirdparty/DBoW2/DUtils/Random.cpp	/^void DUtils::Random::SeedRand(int seed)$/;"	f	class:DUtils::Random
SeedRandOnce	./Thirdparty/DBoW2/DUtils/Random.cpp	/^void DUtils::Random::SeedRandOnce()$/;"	f	class:DUtils::Random
SeedRandOnce	./Thirdparty/DBoW2/DUtils/Random.cpp	/^void DUtils::Random::SeedRandOnce(int seed)$/;"	f	class:DUtils::Random
SegmentReturnType	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^typedef VectorBlock<Derived> SegmentReturnType;$/;"	t
Select	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    Select(const ConditionMatrixType& a_conditionMatrix,$/;"	f	class:Eigen::Select
Select	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^class Select : internal::no_assignment_operator,$/;"	c	namespace:Eigen
SelfAdjoint	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  SelfAdjoint=0x10,$/;"	e	enum:Eigen::__anon70
SelfAdjointBit	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/TriangularSolver.h	/^const unsigned int SelfAdjointBit = SelfAdjoint;$/;"	m	namespace:Eigen
SelfAdjointEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    SelfAdjointEigenSolver()$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    SelfAdjointEigenSolver(Index size)$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    SelfAdjointEigenSolver(const MatrixType& matA, const MatrixType& matB, bool computeEigenvectors = true)$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    SelfAdjointEigenSolver(const MatrixType& matrix, bool computeEigenvectors)$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    SelfAdjointEigenSolver(const MatrixType& matrix, int options = ComputeEigenvectors)$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^template<typename _MatrixType> class SelfAdjointEigenSolver$/;"	c	namespace:Eigen
SelfAdjointView	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    inline SelfAdjointView(MatrixType& matrix) : m_matrix(matrix)$/;"	f	class:Eigen::SelfAdjointView
SelfAdjointView	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^template<typename MatrixType, unsigned int UpLo> class SelfAdjointView$/;"	c	namespace:Eigen
SelfAdjointViewReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct SelfAdjointViewReturnType { typedef SelfAdjointView<Derived, UpLo> Type; };$/;"	s	class:Eigen::MatrixBase
SelfCwiseBinaryOp	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline SelfCwiseBinaryOp(Lhs& xpr, const BinaryOp& func = BinaryOp()) : m_matrix(xpr), m_functor(func) {}$/;"	f	class:Eigen::SelfCwiseBinaryOp
SelfCwiseBinaryOp	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^template<typename BinaryOp, typename Lhs, typename Rhs> class SelfCwiseBinaryOp$/;"	c	namespace:Eigen
SelfadjointProductMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  SelfadjointProductMatrix(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs) {}$/;"	f	struct:Eigen::SelfadjointProductMatrix
SelfadjointProductMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct SelfadjointProductMatrix<Lhs,LhsMode,false,Rhs,RhsMode,false>$/;"	s	namespace:Eigen
SelfadjointProductMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  SelfadjointProductMatrix(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs) {}$/;"	f	struct:Eigen::SelfadjointProductMatrix
SelfadjointProductMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct SelfadjointProductMatrix<Lhs,0,true,Rhs,RhsMode,false>$/;"	s	namespace:Eigen
SelfadjointProductMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct SelfadjointProductMatrix<Lhs,LhsMode,false,Rhs,0,true>$/;"	s	namespace:Eigen
Sequential	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum Sequential_t { Sequential };$/;"	e	enum:Eigen::Sequential_t
SequentialLinSpacedReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::linspaced_op<Scalar,false>,Derived> SequentialLinSpacedReturnType;$/;"	t	class:Eigen::DenseBase
Sequential_t	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum Sequential_t { Sequential };$/;"	g	namespace:Eigen
Set4	./4pcs/Registration.h	/^                Set4() {}$/;"	f	struct:pcl::FPCS::FPCSRegistration::Set4
Set4	./4pcs/Registration.h	/^                Set4(int p1, int p2, int p3, int p4) : p1_index_(p1), p2_index_(p2), p3_index_(p3), p4_index_(p4) {}$/;"	f	struct:pcl::FPCS::FPCSRegistration::Set4
Set4	./4pcs/Registration.h	/^            struct Set4 {$/;"	s	class:pcl::FPCS::FPCSRegistration
SetAcceptKeyFrames	./src/LocalMapping.cc	/^void LocalMapping::SetAcceptKeyFrames(bool flag)$/;"	f	class:ORB_SLAM2::LocalMapping
SetAction	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum Action {GetAction, SetAction};$/;"	e	enum:Eigen::Action
SetBadFlag	./src/KeyFrame.cc	/^void KeyFrame::SetBadFlag()$/;"	f	class:ORB_SLAM2::KeyFrame
SetBadFlag	./src/MapPoint.cc	/^void MapPoint::SetBadFlag()$/;"	f	class:ORB_SLAM2::MapPoint
SetCurrentCameraPose	./src/MapDrawer.cc	/^void MapDrawer::SetCurrentCameraPose(const cv::Mat &Tcw)$/;"	f	class:ORB_SLAM2::MapDrawer
SetCurrentMap	./src/Registrating.cc	/^	void Registrating::SetCurrentMap(Map *currentMap) {$/;"	f	class:ORB_SLAM2::Registrating
SetCurrentMap	./src/System.cc	/^void System::SetCurrentMap(const std::string &mapfile) {$/;"	f	class:ORB_SLAM2::System
SetDelta	./4pcs/Registration.h	/^            void SetDelta(const float delta) { delta_ = delta; }$/;"	f	class:pcl::FPCS::FPCSRegistration
SetDiag	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SetDiag = (Mode&(ZeroDiag|UnitDiag)) ? 0 : 1$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon58
SetDiag	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SetDiag = (Mode&(ZeroDiag|UnitDiag)) ? 0 : 1$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon59
SetErase	./src/KeyFrame.cc	/^void KeyFrame::SetErase()$/;"	f	class:ORB_SLAM2::KeyFrame
SetFinish	./src/LocalMapping.cc	/^void LocalMapping::SetFinish()$/;"	f	class:ORB_SLAM2::LocalMapping
SetFinish	./src/LoopClosing.cc	/^void LoopClosing::SetFinish()$/;"	f	class:ORB_SLAM2::LoopClosing
SetFinish	./src/Viewer.cc	/^void Viewer::SetFinish()$/;"	f	class:ORB_SLAM2::Viewer
SetGroudTruth	./src/System.cc	/^void System::SetGroudTruth(const std::string &filename) {$/;"	f	class:ORB_SLAM2::System
SetGth	./src/MapDrawer.cc	/^void MapDrawer::SetGth(const std::vector<cv::Mat> &T) {$/;"	f	class:ORB_SLAM2::MapDrawer
SetInputSourceCloud	./4pcs/Registration.h	/^            void SetInputSourceCloud(PointCloud<PointXYZ>::Ptr input) {$/;"	f	class:pcl::FPCS::FPCSRegistration
SetInputTargetCloud	./4pcs/Registration.h	/^            void SetInputTargetCloud(PointCloud<PointXYZ>::Ptr output) {$/;"	f	class:pcl::FPCS::FPCSRegistration
SetLastMap	./src/Registrating.cc	/^	void Registrating::SetLastMap(Map *lastMap) {$/;"	f	class:ORB_SLAM2::Registrating
SetLocalMapper	./src/LoopClosing.cc	/^void LoopClosing::SetLocalMapper(LocalMapping *pLocalMapper)$/;"	f	class:ORB_SLAM2::LoopClosing
SetLocalMapper	./src/Tracking.cc	/^void Tracking::SetLocalMapper(LocalMapping *pLocalMapper)$/;"	f	class:ORB_SLAM2::Tracking
SetLoopCloser	./src/LocalMapping.cc	/^void LocalMapping::SetLoopCloser(LoopClosing* pLoopCloser)$/;"	f	class:ORB_SLAM2::LocalMapping
SetLoopClosing	./src/Tracking.cc	/^void Tracking::SetLoopClosing(LoopClosing *pLoopClosing)$/;"	f	class:ORB_SLAM2::Tracking
SetNotErase	./src/KeyFrame.cc	/^void KeyFrame::SetNotErase()$/;"	f	class:ORB_SLAM2::KeyFrame
SetNotStop	./src/LocalMapping.cc	/^bool LocalMapping::SetNotStop(bool flag)$/;"	f	class:ORB_SLAM2::LocalMapping
SetNumOfIteration	./4pcs/Registration.h	/^            void SetNumOfIteration(const int num) { iterations_ = num; }$/;"	f	class:pcl::FPCS::FPCSRegistration
SetOffsetGT	./4pcs/Registration.h	/^            void SetOffsetGT(const Eigen::Vector3f &o) { offset_gt_ = o; }$/;"	f	class:pcl::FPCS::FPCSRegistration
SetOverlap	./4pcs/Registration.h	/^            void SetOverlap(const float overlap) { overlap_ = overlap; }$/;"	f	class:pcl::FPCS::FPCSRegistration
SetPose	./src/Frame.cc	/^void Frame::SetPose(cv::Mat Tcw)$/;"	f	class:ORB_SLAM2::Frame
SetPose	./src/KeyFrame.cc	/^void KeyFrame::SetPose(const cv::Mat &Tcw_)$/;"	f	class:ORB_SLAM2::KeyFrame
SetRansacParameters	./src/PnPsolver.cc	/^void PnPsolver::SetRansacParameters(double probability, int minInliers, int maxIterations, int minSet, float epsilon, float th2)$/;"	f	class:ORB_SLAM2::PnPsolver
SetRansacParameters	./src/PoseSolver.cc	/^void PoseSolver::SetRansacParameters(double probability, int minInliers, int maxIterations, int minSet, float epsilon, float th2)$/;"	f	class:ORB_SLAM2::PoseSolver
SetRansacParameters	./src/Sim3Solver.cc	/^void Sim3Solver::SetRansacParameters(double probability, int minInliers, int maxIterations)$/;"	f	class:ORB_SLAM2::Sim3Solver
SetReferenceMap	./src/System.cc	/^void System::SetReferenceMap(const std::string &mapfile) {$/;"	f	class:ORB_SLAM2::System
SetReferenceMapPoints	./src/Map.cc	/^void Map::SetReferenceMapPoints(const vector<MapPoint *> &vpMPs)$/;"	f	class:ORB_SLAM2::Map
SetRegistrator	./src/LocalMapping.cc	/^void LocalMapping::SetRegistrator(Registrating *pRegistrator) {$/;"	f	class:ORB_SLAM2::LocalMapping
SetRegistrator	./src/Tracking.cc	/^void Tracking::SetRegistrator(Registrating *pRegistrator) {$/;"	f	class:ORB_SLAM2::Tracking
SetRotationGT	./4pcs/Registration.h	/^            void SetRotationGT(const Eigen::Matrix3f &r) { rotation_gt_ = r; }$/;"	f	class:pcl::FPCS::FPCSRegistration
SetStop	./src/Registrating.cc	/^	void Registrating::SetStop() {$/;"	f	class:ORB_SLAM2::Registrating
SetTracker	./src/LocalMapping.cc	/^void LocalMapping::SetTracker(Tracking *pTracker)$/;"	f	class:ORB_SLAM2::LocalMapping
SetTracker	./src/LoopClosing.cc	/^void LoopClosing::SetTracker(Tracking *pTracker)$/;"	f	class:ORB_SLAM2::LoopClosing
SetUnFix	./src/Map.cc	/^void Map::SetUnFix() {$/;"	f	class:ORB_SLAM2::Map
SetViewer	./src/Tracking.cc	/^void Tracking::SetViewer(Viewer *pViewer)$/;"	f	class:ORB_SLAM2::Tracking
SetWorldPos	./src/MapPoint.cc	/^void MapPoint::SetWorldPos(const cv::Mat &Pos)$/;"	f	class:ORB_SLAM2::MapPoint
Shutdown	./src/System.cc	/^void System::Shutdown()$/;"	f	class:ORB_SLAM2::System
Side	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    enum { Side = Lhs::IsVectorAtCompileTime ? OnTheLeft : OnTheRight };$/;"	e	enum:Eigen::GeneralProduct::__anon170
SignMatrix	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	g	namespace:Eigen::internal
Sim3	./Thirdparty/g2o/g2o/types/sim3.h	/^    Sim3()$/;"	f	struct:g2o::Sim3
Sim3	./Thirdparty/g2o/g2o/types/sim3.h	/^    Sim3(const Matrix3d & R, const Vector3d & t, double s)$/;"	f	struct:g2o::Sim3
Sim3	./Thirdparty/g2o/g2o/types/sim3.h	/^    Sim3(const Quaterniond & r, const Vector3d & t, double s)$/;"	f	struct:g2o::Sim3
Sim3	./Thirdparty/g2o/g2o/types/sim3.h	/^    Sim3(const Vector7d & update)$/;"	f	struct:g2o::Sim3
Sim3	./Thirdparty/g2o/g2o/types/sim3.h	/^  struct Sim3$/;"	s	namespace:g2o
Sim3Solver	./include/Sim3Solver.h	/^class Sim3Solver$/;"	c	namespace:ORB_SLAM2
Sim3Solver	./src/Sim3Solver.cc	/^Sim3Solver::Sim3Solver(KeyFrame *pKF1, KeyFrame *pKF2, const vector<MapPoint *> &vpMatched12, const bool bFixScale):$/;"	f	class:ORB_SLAM2::Sim3Solver
SimplicialCholesky	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholesky() : Base(), m_LDLT(true) {}$/;"	f	class:Eigen::SimplicialCholesky
SimplicialCholesky	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholesky(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholesky
SimplicialCholesky	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    class SimplicialCholesky : public SimplicialCholeskyBase<SimplicialCholesky<_MatrixType,_UpLo> >$/;"	c	namespace:Eigen
SimplicialCholeskyBase	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholeskyBase()$/;"	f	class:Eigen::SimplicialCholeskyBase
SimplicialCholeskyBase	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholeskyBase(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholeskyBase
SimplicialCholeskyBase	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^class SimplicialCholeskyBase : internal::noncopyable$/;"	c	namespace:Eigen
SimplicialCholeskyLDLT	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  SimplicialCholeskyLDLT$/;"	e	enum:Eigen::SimplicialCholeskyMode
SimplicialCholeskyLLT	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  SimplicialCholeskyLLT,$/;"	e	enum:Eigen::SimplicialCholeskyMode
SimplicialCholeskyMode	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^enum SimplicialCholeskyMode {$/;"	g	namespace:Eigen
SimplicialLDLT	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLDLT() : Base() {}$/;"	f	class:Eigen::SimplicialLDLT
SimplicialLDLT	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLDLT(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLDLT
SimplicialLDLT	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    class SimplicialLDLT : public SimplicialCholeskyBase<SimplicialLDLT<_MatrixType,_UpLo> >$/;"	c	namespace:Eigen
SimplicialLLT	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLLT() : Base() {}$/;"	f	class:Eigen::SimplicialLLT
SimplicialLLT	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLLT(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLLT
SimplicialLLT	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    class SimplicialLLT : public SimplicialCholeskyBase<SimplicialLLT<_MatrixType,_UpLo> >$/;"	c	namespace:Eigen
SingletonVector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^        SingletonVector(Index i, Index v)$/;"	f	class:Eigen::SparseMatrix::SingletonVector
SingletonVector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    class SingletonVector$/;"	c	class:Eigen::SparseMatrix
SingularValuesType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^    typedef Matrix<Scalar, MinSize, 1> SingularValuesType;$/;"	t	class:Eigen::SVD
SingularValuesType	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename internal::plain_diag_type<MatrixType, RealScalar>::type SingularValuesType;$/;"	t	class:Eigen::JacobiSVD
Size	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    Size = Derived::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::redux_impl::__anon196
Size	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      Size = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon451
Size	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      Size = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon455
Size	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      Size = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::Tridiagonalization::__anon457
SizeA	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      SizeA = ActualRows * MaxDepth,$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon37
SizeAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^      SizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(RowsAtCompileTime,ColsAtCompileTime)$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon11
SizeAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^      SizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon255
SizeAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^      SizeAtCompileTime = Base::SizeAtCompileTime$/;"	e	enum:Eigen::MapBase::__anon202
SizeAtCompileTime	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^      SizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon419
SizeB	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      SizeB = ActualCols * MaxDepth,$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon37
SizeMinusOne	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^      SizeMinusOne = SizeAtCompileTime==Dynamic ? Dynamic : SizeAtCompileTime-1$/;"	e	enum:Eigen::MatrixBase::__anon9
SizeMinusOne	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      SizeMinusOne = Size == Dynamic ? Dynamic : Size - 1,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon451
SizeMinusOne	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      SizeMinusOne = Size == Dynamic ? Dynamic : (Size > 1 ? Size - 1 : 1),$/;"	e	enum:Eigen::Tridiagonalization::__anon457
SizeW	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      SizeW = MaxDepth * Traits::WorkSpaceFactor$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon37
SkewSymmetricMatrix	./src/LocalMapping.cc	/^cv::Mat LocalMapping::SkewSymmetricMatrix(const cv::Mat &v)$/;"	f	class:ORB_SLAM2::LocalMapping
SkipDiag	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^           SkipDiag = (Mode&ZeroDiag) ? 1 : 0,$/;"	e	enum:Eigen::SparseTriangularView::__anon418
SkipFirst	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    enum { SkipFirst = ((Mode&Lower) && !(MatrixType::Flags&RowMajorBit))$/;"	e	enum:Eigen::SparseTriangularView::__anon418
SkipLast	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^           SkipLast = !SkipFirst,$/;"	e	enum:Eigen::SparseTriangularView::__anon418
SliceVectorizedTraversal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  SliceVectorizedTraversal,$/;"	e	enum:Eigen::__anon72
SluMatrix	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  SluMatrix()$/;"	f	struct:Eigen::SluMatrix
SluMatrix	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  SluMatrix(const SluMatrix& other)$/;"	f	struct:Eigen::SluMatrix
SluMatrix	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct SluMatrix : SuperMatrix$/;"	s	namespace:Eigen
SluMatrixMapHelper	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct SluMatrixMapHelper<Matrix<Scalar,Rows,Cols,Options,MRows,MCols> >$/;"	s	namespace:Eigen
SluMatrixMapHelper	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct SluMatrixMapHelper<SparseMatrixBase<Derived> >$/;"	s	namespace:Eigen
Small	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  Small = 3$/;"	e	enum:Eigen::__anon143
SmallPanelWidth	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SmallPanelWidth   = 2 * EIGEN_PLAIN_ENUM_MAX(Traits::mr,Traits::nr),$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon58
SmallPanelWidth	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SmallPanelWidth   = EIGEN_PLAIN_ENUM_MAX(Traits::mr,Traits::nr),$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon59
Solver	./Thirdparty/g2o/g2o/core/solver.cpp	/^Solver::Solver() :$/;"	f	class:g2o::Solver
Solver	./Thirdparty/g2o/g2o/core/solver.h	/^      Solver(const Solver&) { }$/;"	f	class:g2o::Solver
Solver	./Thirdparty/g2o/g2o/core/solver.h	/^  class  Solver$/;"	c	namespace:g2o
SolverResult	./Thirdparty/g2o/g2o/core/optimization_algorithm.h	/^      enum  SolverResult {Terminate=2, OK=1, Fail=-1};$/;"	g	class:g2o::OptimizationAlgorithm
SparseBase	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    typedef SparseMatrixBase<SparseVector> SparseBase;$/;"	t	class:Eigen::SparseVector
SparseBlockMatrix	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^class SparseBlockMatrix {$/;"	c	namespace:g2o
SparseBlockMatrix	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  SparseBlockMatrix<MatrixType>::SparseBlockMatrix( ):$/;"	f	class:g2o::SparseBlockMatrix
SparseBlockMatrix	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  SparseBlockMatrix<MatrixType>::SparseBlockMatrix( const int * rbi, const int* cbi, int rb, int cb, bool hasStorage):$/;"	f	class:g2o::SparseBlockMatrix
SparseBlockMatrixCCS	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      SparseBlockMatrixCCS(const std::vector<int>& rowIndices, const std::vector<int>& colIndices) :$/;"	f	class:g2o::SparseBlockMatrixCCS
SparseBlockMatrixCCS	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^  class SparseBlockMatrixCCS$/;"	c	namespace:g2o
SparseBlockMatrixDiagonal	./Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      SparseBlockMatrixDiagonal(const std::vector<int>& blockIndices) :$/;"	f	class:g2o::SparseBlockMatrixDiagonal
SparseBlockMatrixDiagonal	./Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^  class SparseBlockMatrixDiagonal$/;"	c	namespace:g2o
SparseBlockMatrixHashMap	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      SparseBlockMatrixHashMap(const std::vector<int>& rowIndices, const std::vector<int>& colIndices) :$/;"	f	class:g2o::SparseBlockMatrixHashMap
SparseBlockMatrixHashMap	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^  class SparseBlockMatrixHashMap$/;"	c	namespace:g2o
SparseBlockMatrixX	./Thirdparty/g2o/g2o/core/sparse_block_matrix_test.cpp	/^SparseBlockMatrixX;$/;"	t	file:
SparseBlockMatrixXd	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^  typedef SparseBlockMatrix<MatrixXd> SparseBlockMatrixXd;   $/;"	t	namespace:g2o
SparseColumn	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      typedef std::tr1::unordered_map<int, MatrixType*> SparseColumn;$/;"	t	class:g2o::SparseBlockMatrixHashMap
SparseColumn	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      typedef std::vector<RowBlock>      SparseColumn;$/;"	t	class:g2o::SparseBlockMatrixCCS
SparseDenseOuterProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE SparseDenseOuterProduct(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::SparseDenseOuterProduct
SparseDenseOuterProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE SparseDenseOuterProduct(const Rhs& rhs, const Lhs& lhs)$/;"	f	class:Eigen::SparseDenseOuterProduct
SparseDenseOuterProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^class SparseDenseOuterProduct$/;"	c	namespace:Eigen
SparseDenseProductReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^template<typename Lhs, typename Rhs, int InnerSize> struct SparseDenseProductReturnType$/;"	s	namespace:Eigen
SparseDenseProductReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^template<typename Lhs, typename Rhs> struct SparseDenseProductReturnType<Lhs,Rhs,1>$/;"	s	namespace:Eigen
SparseDiagonalProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    EIGEN_STRONG_INLINE SparseDiagonalProduct(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::SparseDiagonalProduct
SparseDiagonalProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^class SparseDiagonalProduct$/;"	c	namespace:Eigen
SparseFlags	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    SparseFlags = is_diagonal<_Lhs>::ret ? int(_Rhs::Flags) : int(_Lhs::Flags),$/;"	e	enum:Eigen::internal::traits::__anon407
SparseLU	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    SparseLU():m_isInitialized(true),m_lastError(""),m_Ustore(0,0,0,0,0,0),m_symmetricmode(false),m_diagpivotthresh(1.0),m_detPermR(1)$/;"	f	class:Eigen::SparseLU
SparseLU	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    SparseLU(const MatrixType& matrix):m_isInitialized(true),m_lastError(""),m_Ustore(0,0,0,0,0,0),m_symmetricmode(false),m_diagpivotthresh(1.0),m_detPermR(1)$/;"	f	class:Eigen::SparseLU
SparseLU	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^class SparseLU : public internal::SparseLUImpl<typename _MatrixType::Scalar, typename _MatrixType::Index>$/;"	c	namespace:Eigen
SparseLUImpl	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLUImpl.h	/^class SparseLUImpl$/;"	c	namespace:Eigen::internal
SparseLUMatrixLReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  SparseLUMatrixLReturnType(const MappedSupernodalType& mapL) : m_mapL(mapL)$/;"	f	struct:Eigen::SparseLUMatrixLReturnType
SparseLUMatrixLReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^struct SparseLUMatrixLReturnType : internal::no_assignment_operator$/;"	s	namespace:Eigen
SparseLUMatrixUReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  SparseLUMatrixUReturnType(const MatrixLType& mapL, const MatrixUType& mapU)$/;"	f	struct:Eigen::SparseLUMatrixUReturnType
SparseLUMatrixUReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^struct SparseLUMatrixUReturnType : internal::no_assignment_operator$/;"	s	namespace:Eigen
SparseMatrix	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    typedef Eigen::SparseMatrix<double, Eigen::ColMajor> SparseMatrix;$/;"	t	class:g2o::LinearSolverEigen
SparseMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    SparseMatrix(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix()$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(Index rows, Index cols)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(const SparseMatrix& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(const SparseSelfAdjointView<OtherDerived, UpLo>& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^class SparseMatrix$/;"	c	namespace:Eigen
SparseMatrixBase	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    SparseMatrixBase() : m_isRValue(false) { \/* TODO check flags *\/ }$/;"	f	class:Eigen::SparseMatrixBase
SparseMatrixBase	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^template<typename Derived> class SparseMatrixBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
SparseMatrixBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    typedef MatrixType SparseMatrixBlock;$/;"	t	class:g2o::SparseBlockMatrix
SparseMatrixBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      typedef MatrixType SparseMatrixBlock;$/;"	t	class:g2o::SparseBlockMatrixCCS
SparseMatrixBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      typedef MatrixType SparseMatrixBlock;$/;"	t	class:g2o::SparseBlockMatrixHashMap
SparseMatrixBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      typedef MatrixType SparseMatrixBlock;$/;"	t	class:g2o::SparseBlockMatrixDiagonal
SparseMatrixType	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef SparseMatrix<Scalar,RowMajor,Index> SparseMatrixType;$/;"	t	class:Eigen::PardisoImpl
SparseMatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    typedef SparseMatrix<_Scalar, _Options, _Index> SparseMatrixType;$/;"	t	class:Eigen::BlockImpl
SparseOptimizer	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  SparseOptimizer::SparseOptimizer() :$/;"	f	class:g2o::SparseOptimizer
SparseOptimizer	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^  class  SparseOptimizer : public OptimizableGraph {$/;"	c	namespace:g2o
SparseQR	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    SparseQR () : m_isInitialized(false), m_analysisIsok(false), m_lastError(""), m_useDefaultThreshold(true),m_isQSorted(false)$/;"	f	class:Eigen::SparseQR
SparseQR	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    SparseQR(const MatrixType& mat) : m_isInitialized(false), m_analysisIsok(false), m_lastError(""), m_useDefaultThreshold(true),m_isQSorted(false)$/;"	f	class:Eigen::SparseQR
SparseQR	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^class SparseQR$/;"	c	namespace:Eigen
SparseQRMatrixQReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  SparseQRMatrixQReturnType(const SparseQRType& qr) : m_qr(qr) {}$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
SparseQRMatrixQReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^struct SparseQRMatrixQReturnType : public EigenBase<SparseQRMatrixQReturnType<SparseQRType> >$/;"	s	namespace:Eigen
SparseQRMatrixQTransposeReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  SparseQRMatrixQTransposeReturnType(const SparseQRType& qr) : m_qr(qr) {}$/;"	f	struct:Eigen::SparseQRMatrixQTransposeReturnType
SparseQRMatrixQTransposeReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^struct SparseQRMatrixQTransposeReturnType$/;"	s	namespace:Eigen
SparseQR_QProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  SparseQR_QProduct(const SparseQRType& qr, const Derived& other, bool transpose) : $/;"	f	struct:Eigen::SparseQR_QProduct
SparseQR_QProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^struct SparseQR_QProduct : ReturnByValue<SparseQR_QProduct<SparseQRType, Derived> >$/;"	s	namespace:Eigen
SparseSelfAdjointTimeDenseProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSelfAdjointTimeDenseProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs)$/;"	f	class:Eigen::SparseSelfAdjointTimeDenseProduct
SparseSelfAdjointTimeDenseProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^class SparseSelfAdjointTimeDenseProduct$/;"	c	namespace:Eigen
SparseSelfAdjointView	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline SparseSelfAdjointView(const MatrixType& matrix) : m_matrix(matrix)$/;"	f	class:Eigen::SparseSelfAdjointView
SparseSelfAdjointView	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^template<typename MatrixType, unsigned int UpLo> class SparseSelfAdjointView$/;"	c	namespace:Eigen
SparseSparseProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    EIGEN_STRONG_INLINE SparseSparseProduct(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::SparseSparseProduct
SparseSparseProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    EIGEN_STRONG_INLINE SparseSparseProduct(const Lhs& lhs, const Rhs& rhs, const RealScalar& tolerance)$/;"	f	class:Eigen::SparseSparseProduct
SparseSparseProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^class SparseSparseProduct : internal::no_assignment_operator,$/;"	c	namespace:Eigen
SparseSparseProductReturnType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^struct SparseSparseProductReturnType$/;"	s	namespace:Eigen
SparseSymmetricPermutationProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSymmetricPermutationProduct(const MatrixType& mat, const Perm& perm)$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
SparseSymmetricPermutationProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^class SparseSymmetricPermutationProduct$/;"	c	namespace:Eigen
SparseTimeDenseProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    SparseTimeDenseProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs)$/;"	f	class:Eigen::SparseTimeDenseProduct
SparseTimeDenseProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^class SparseTimeDenseProduct$/;"	c	namespace:Eigen
SparseTriangularView	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline SparseTriangularView(const MatrixType& matrix) : m_matrix(matrix) {}$/;"	f	class:Eigen::SparseTriangularView
SparseTriangularView	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^template<typename MatrixType, int Mode> class SparseTriangularView$/;"	c	namespace:Eigen
SparseVector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector() : m_size(0) { check_template_parameters(); resize(0); }$/;"	f	class:Eigen::SparseVector
SparseVector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector(Index rows, Index cols) : m_size(0) { check_template_parameters(); resize(rows,cols); }$/;"	f	class:Eigen::SparseVector
SparseVector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector(Index size) : m_size(0) { check_template_parameters(); resize(size); }$/;"	f	class:Eigen::SparseVector
SparseVector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseVector
SparseVector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector(const SparseVector& other)$/;"	f	class:Eigen::SparseVector
SparseVector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^class SparseVector$/;"	c	namespace:Eigen
SparseView	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  SparseView(const MatrixType& mat, const Scalar& m_reference = Scalar(0),$/;"	f	class:Eigen::SparseView
SparseView	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^class SparseView : public SparseMatrixBase<SparseView<MatrixType> >$/;"	c	namespace:Eigen
Specialized	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  Specialized,$/;"	e	enum:Eigen::__anon74
SquareMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^                          EIGEN_SIZE_MAX(RowsAtCompileTime,ColsAtCompileTime)> SquareMatrixType;$/;"	t	class:Eigen::MatrixBase
SquareMatrixType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^                          EIGEN_SIZE_MAX(RowsAtCompileTime,ColsAtCompileTime)> SquareMatrixType;$/;"	t	class:Eigen::SparseMatrixBase
SrcHasDirectAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^      SrcHasDirectAccess = Src::Flags & DirectAccessBit,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon67
SrcIsAligned	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    SrcIsAligned = OtherDerived::Flags & AlignedBit,$/;"	e	enum:Eigen::internal::assign_traits::__anon247
SrcStorageOrder	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^      SrcStorageOrder = MatrixTypeNestedCleaned::Flags&RowMajorBit ? RowMajor : ColMajor,$/;"	e	enum:Eigen::internal::permut_sparsematrix_product_retval::__anon405
SrcStorageOrder	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^    SrcStorageOrder = MatrixTypeNestedCleaned::Flags&RowMajorBit ? RowMajor : ColMajor,$/;"	e	enum:Eigen::internal::traits::__anon404
StemFunction	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::stem_function<Scalar>::type StemFunction;$/;"	t	class:Eigen::MatrixBase
StereoInitialization	./src/Tracking.cc	/^void Tracking::StereoInitialization()$/;"	f	class:ORB_SLAM2::Tracking
Stop	./src/LocalMapping.cc	/^bool LocalMapping::Stop()$/;"	f	class:ORB_SLAM2::LocalMapping
Stop	./src/Viewer.cc	/^bool Viewer::Stop()$/;"	f	class:ORB_SLAM2::Viewer
Storage	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef internal::CompressedStorage<Scalar,Index> Storage;$/;"	t	class:Eigen::SparseMatrix
Storage	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    typedef internal::CompressedStorage<Scalar,Index> Storage;$/;"	t	class:Eigen::SparseVector
StorageBaseType	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    typedef ArrayBase StorageBaseType;$/;"	t	class:Eigen::ArrayBase
StorageBaseType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    typedef MatrixBase StorageBaseType;$/;"	t	class:Eigen::MatrixBase
StorageBaseType	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef SparseMatrixBase StorageBaseType;$/;"	t	class:Eigen::SparseMatrixBase
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::ArrayBase
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^  typedef typename _CoefficientsType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^  typedef typename traits<XprType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^                                           typename traits<Rhs>::StorageKind>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::DenseBase
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::DenseCoeffsBase
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^  typedef typename MatrixType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::DiagonalBase
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<DiagonalMatrix>::StorageKind StorageKind;$/;"	t	class:Eigen::DiagonalMatrix
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^  typedef typename DiagonalVectorType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^  typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	struct:Eigen::EigenBase
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::MapBase
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::MatrixBase
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^  typedef PermutationStorage StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::PlainObjectBase
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^                                           typename traits<Rhs>::StorageKind>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^  typedef typename traits<NestedProduct>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::TriangularBase
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::StorageKind StorageKind;$/;"	t	class:Eigen::TriangularView
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^                                           typename traits<_RhsNested>::StorageKind>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^  typedef typename MatrixType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^  typedef typename VectorsType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    typedef typename internal::traits<MatrixType>::StorageKind StorageKind;$/;"	t	class:Eigen::FullPivLU
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    typedef typename internal::traits<MatrixType>::StorageKind StorageKind;$/;"	t	class:Eigen::PartialPivLU
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::SparseMatrixBase
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename ReturnType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageOrderMatch	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^      StorageOrderMatch = PlainObjectType::IsVectorAtCompileTime || ((PlainObjectType::Flags&RowMajorBit)==(Derived::Flags&RowMajorBit)),$/;"	e	enum:Eigen::internal::traits::match::__anon186
StorageOrdersAgree	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    StorageOrdersAgree = (int(Derived::IsRowMajor) == int(OtherDerived::IsRowMajor)),$/;"	e	enum:Eigen::internal::assign_traits::__anon249
StorageOrdersAgree	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^      StorageOrdersAgree = (int(Dst::IsRowMajor) == int(Src::IsRowMajor)),$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon67
StorageOrdersAgree	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    StorageOrdersAgree = (int(Lhs::Flags)&RowMajorBit)==(int(Rhs::Flags)&RowMajorBit),$/;"	e	enum:Eigen::internal::traits::__anon179
StorageOrdersMatch	./Thirdparty/sparseicp/include/Eigen/src/LU/arch/Inverse_SSE.h	/^    StorageOrdersMatch  = (MatrixType::Flags&RowMajorBit) == (ResultType::Flags&RowMajorBit)$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon339
StorageOrdersMatch	./Thirdparty/sparseicp/include/Eigen/src/LU/arch/Inverse_SSE.h	/^    StorageOrdersMatch  = (MatrixType::Flags&RowMajorBit) == (ResultType::Flags&RowMajorBit)$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon340
StreamPrecision	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^enum { StreamPrecision = -1,$/;"	e	enum:Eigen::__anon245
StrictlyLower	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  StrictlyLower=ZeroDiag|Lower, $/;"	e	enum:Eigen::__anon70
StrictlyUpper	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  StrictlyUpper=ZeroDiag|Upper,$/;"	e	enum:Eigen::__anon70
Stride	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^    Stride()$/;"	f	class:Eigen::Stride
Stride	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^    Stride(Index outerStride, Index innerStride)$/;"	f	class:Eigen::Stride
Stride	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^    Stride(const Stride& other)$/;"	f	class:Eigen::Stride
Stride	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^class Stride$/;"	c	namespace:Eigen
StrideBase	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^  typedef Stride<StrideType::OuterStrideAtCompileTime,StrideType::InnerStrideAtCompileTime> StrideBase;$/;"	t	class:Eigen::RefBase
StrideType	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^  typedef _StrideType StrideType;$/;"	t	struct:Eigen::internal::traits
StrideType	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^  typedef typename internal::traits<Derived>::StrideType StrideType;$/;"	t	class:Eigen::RefBase
StridedAlignedMapType	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedAlignedMapType { typedef Eigen::Map<Derived, Aligned, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
StridedConstAlignedMapType	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstAlignedMapType { typedef Eigen::Map<const Derived, Aligned, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
StridedConstMapType	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstMapType { typedef Eigen::Map<const Derived, Unaligned, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
StridedMapType	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedMapType { typedef Eigen::Map<Derived, Unaligned, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
StringProperty	./Thirdparty/g2o/g2o/stuff/property.h	/^  typedef Property<std::string> StringProperty;$/;"	t	namespace:g2o
SubDiagonalReturnType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^            >::type SubDiagonalReturnType;$/;"	t	class:Eigen::Tridiagonalization
SubDiagonalType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef Matrix<RealScalar, SizeMinusOne, 1, Options & ~RowMajor, MaxSizeMinusOne, 1> SubDiagonalType;$/;"	t	class:Eigen::Tridiagonalization
SubVector	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^                               typename ExpressionType::RowXpr>::type SubVector;$/;"	t	class:Eigen::VectorwiseOp
Subs	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^      Subs   = internal::traits<Derived>::Subs,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon10
Subs	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    Subs = _Subs,$/;"	e	enum:Eigen::internal::traits::__anon13
Subs	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    Subs = _Subs,$/;"	e	enum:Eigen::internal::traits::__anon14
Success	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  Success = 0,        $/;"	e	enum:Eigen::ComputationInfo
SuperDiagVectorType	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, ColsAtCompileTimeMinusOne, 1> SuperDiagVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
SuperILU	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperILU() : Base() { init(); }$/;"	f	class:Eigen::SuperILU
SuperILU	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperILU(SuperILU& ) { }$/;"	f	class:Eigen::SuperILU
SuperILU	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperILU(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::SuperILU
SuperILU	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^class SuperILU : public SuperLUBase<_MatrixType,SuperILU<_MatrixType> >$/;"	c	namespace:Eigen
SuperLU	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLU() : Base() { init(); }$/;"	f	class:Eigen::SuperLU
SuperLU	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLU(SuperLU& ) { }$/;"	f	class:Eigen::SuperLU
SuperLU	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLU(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::SuperLU
SuperLU	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^class SuperLU : public SuperLUBase<_MatrixType,SuperLU<_MatrixType> >$/;"	c	namespace:Eigen
SuperLUBase	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLUBase() {}$/;"	f	class:Eigen::SuperLUBase
SuperLUBase	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLUBase(SuperLUBase& ) { }$/;"	f	class:Eigen::SuperLUBase
SuperLUBase	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^class SuperLUBase : internal::noncopyable$/;"	c	namespace:Eigen
Supers	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^      Supers = internal::traits<Derived>::Supers,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon10
Supers	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    Supers = _Supers,$/;"	e	enum:Eigen::internal::traits::__anon13
Supers	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    Supers = _Supers,$/;"	e	enum:Eigen::internal::traits::__anon14
SupportedAccessPatterns	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    SupportedAccessPatterns = InnerRandomAccessPattern$/;"	e	enum:Eigen::internal::traits::__anon410
SupportedAccessPatterns	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    SupportedAccessPatterns = InnerRandomAccessPattern$/;"	e	enum:Eigen::internal::traits::__anon396
SwapWrapper	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    inline SwapWrapper(ExpressionType& xpr) : m_expression(xpr) {}$/;"	f	class:Eigen::SwapWrapper
SwapWrapper	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^template<typename ExpressionType> class SwapWrapper$/;"	c	namespace:Eigen
Symmetric	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  Symmetric=0x20$/;"	e	enum:Eigen::__anon70
System	./include/System.h	/^class System$/;"	c	namespace:ORB_SLAM2
System	./src/System.cc	/^System::System(const string &strSettingsFile, const string &strMapFile, const string &gthFile, const bool bUseViewer) :$/;"	f	class:ORB_SLAM2::System
System	./src/System.cc	/^System::System(const string &strVocFile, const string &strSettingsFile, const eSensor sensor,$/;"	f	class:ORB_SLAM2::System
TDescriptor	./Thirdparty/DBoW2/DBoW2/FORB.h	/^  typedef cv::Mat TDescriptor; \/\/ CV_8U$/;"	t	class:DBoW2::FORB
TF	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^  TF,$/;"	e	enum:DBoW2::WeightingType
TF_IDF	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^  TF_IDF,$/;"	e	enum:DBoW2::WeightingType
THE_BRACKET_OPERATOR_IS_ONLY_FOR_VECTORS__USE_THE_PARENTHESIS_OPERATOR_INSTEAD	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THE_BRACKET_OPERATOR_IS_ONLY_FOR_VECTORS__USE_THE_PARENTHESIS_OPERATOR_INSTEAD,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
THE_INDEX_TYPE_MUST_BE_A_SIGNED_TYPE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THE_INDEX_TYPE_MUST_BE_A_SIGNED_TYPE,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
THE_MATRIX_OR_EXPRESSION_THAT_YOU_PASSED_DOES_NOT_HAVE_THE_EXPECTED_TYPE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THE_MATRIX_OR_EXPRESSION_THAT_YOU_PASSED_DOES_NOT_HAVE_THE_EXPECTED_TYPE,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
THE_STORAGE_ORDER_OF_BOTH_SIDES_MUST_MATCH	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THE_STORAGE_ORDER_OF_BOTH_SIDES_MUST_MATCH,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
THIS_EXPRESSION_IS_NOT_A_LVALUE__IT_IS_READ_ONLY	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THIS_EXPRESSION_IS_NOT_A_LVALUE__IT_IS_READ_ONLY,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
THIS_FUNCTION_IS_NOT_FOR_INTEGER_NUMERIC_TYPES	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THIS_FUNCTION_IS_NOT_FOR_INTEGER_NUMERIC_TYPES,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
THIS_METHOD_IS_ONLY_FOR_1x1_EXPRESSIONS	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_1x1_EXPRESSIONS,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
THIS_METHOD_IS_ONLY_FOR_ARRAYS_NOT_MATRICES	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_ARRAYS_NOT_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
THIS_METHOD_IS_ONLY_FOR_COLUMN_MAJOR_MATRICES	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_COLUMN_MAJOR_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
THIS_METHOD_IS_ONLY_FOR_DIAGONAL_MATRIX	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_DIAGONAL_MATRIX,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_OF_BOOL	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_OF_BOOL,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_WITH_DIRECT_MEMORY_ACCESS_SUCH_AS_MAP_OR_PLAIN_MATRICES	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_WITH_DIRECT_MEMORY_ACCESS_SUCH_AS_MAP_OR_PLAIN_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
THIS_METHOD_IS_ONLY_FOR_FIXED_SIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_FIXED_SIZE,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
THIS_METHOD_IS_ONLY_FOR_MATRICES_OF_A_SPECIFIC_SIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_MATRICES_OF_A_SPECIFIC_SIZE,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
THIS_METHOD_IS_ONLY_FOR_OBJECTS_OF_A_SPECIFIC_SIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_OBJECTS_OF_A_SPECIFIC_SIZE,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
THIS_METHOD_IS_ONLY_FOR_ROW_MAJOR_MATRICES	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_ROW_MAJOR_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
THIS_METHOD_IS_ONLY_FOR_SPECIFIC_TRANSFORMATIONS	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_SPECIFIC_TRANSFORMATIONS,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
THIS_METHOD_IS_ONLY_FOR_VECTORS_OF_A_SPECIFIC_SIZE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_VECTORS_OF_A_SPECIFIC_SIZE,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
TH_HIGH	./include/ORBmatcher.h	/^    static const int TH_HIGH;$/;"	m	class:ORB_SLAM2::ORBmatcher
TH_HIGH	./src/ORBmatcher.cc	/^const int ORBmatcher::TH_HIGH = 100;$/;"	m	class:ORB_SLAM2::ORBmatcher	file:
TH_LOW	./include/ORBmatcher.h	/^    static const int TH_LOW;$/;"	m	class:ORB_SLAM2::ORBmatcher
TH_LOW	./src/ORBmatcher.cc	/^const int ORBmatcher::TH_LOW = 50;$/;"	m	class:ORB_SLAM2::ORBmatcher	file:
TRACKING_H	./include/Tracking.h	23;"	d
TRIMMED	./Thirdparty/sparseicp/ICP.h	/^        TRIMMED,$/;"	e	enum:ICP::Function
TUKEY	./Thirdparty/sparseicp/ICP.h	/^        TUKEY,$/;"	e	enum:ICP::Function
TagLookup	./Thirdparty/g2o/g2o/core/factory.h	/^      typedef std::map<std::string, std::string>                      TagLookup;$/;"	t	class:g2o::Factory
Target	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^    Target = SSE$/;"	e	enum:Eigen::Architecture::Type
Tcw	./include/KeyFrame.h	/^    cv::Mat Tcw;$/;"	m	class:ORB_SLAM2::KeyFrame
TemplatedVocabulary	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^TemplatedVocabulary<TDescriptor,F>::TemplatedVocabulary$/;"	f	class:DBoW2::TemplatedVocabulary
TemplatedVocabulary	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^TemplatedVocabulary<TDescriptor,F>::TemplatedVocabulary($/;"	f	class:DBoW2::TemplatedVocabulary
TemplatedVocabulary	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^class TemplatedVocabulary$/;"	c	namespace:DBoW2
Terminate	./Thirdparty/g2o/g2o/core/optimization_algorithm.h	/^      enum  SolverResult {Terminate=2, OK=1, Fail=-1};$/;"	e	enum:g2o::OptimizationAlgorithm::SolverResult
ThenMatrixNested	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^  typedef typename ThenMatrixType::Nested ThenMatrixNested;$/;"	t	struct:Eigen::internal::traits
ThisConstantIsPrivateInPlainObjectBase	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    enum { ThisConstantIsPrivateInPlainObjectBase };$/;"	e	enum:Eigen::DenseBase::__anon256
ThisConstantIsPrivateInPlainObjectBase	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    enum { ThisConstantIsPrivateInPlainObjectBase };$/;"	e	enum:Eigen::PlainObjectBase::__anon20
Through	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  static inline Hyperplane Through(const VectorType& p0, const VectorType& p1)$/;"	f	class:Eigen::Hyperplane
Through	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  static inline Hyperplane Through(const VectorType& p0, const VectorType& p1, const VectorType& p2)$/;"	f	class:Eigen::Hyperplane
Through	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  static inline ParametrizedLine Through(const VectorType& p0, const VectorType& p1)$/;"	f	class:Eigen::ParametrizedLine
Through	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  static inline Hyperplane Through(const VectorType& p0, const VectorType& p1)$/;"	f	class:Eigen::Hyperplane
Through	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  static inline Hyperplane Through(const VectorType& p0, const VectorType& p1, const VectorType& p2)$/;"	f	class:Eigen::Hyperplane
Through	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  static inline ParametrizedLine Through(const VectorType& p0, const VectorType& p1)$/;"	f	class:Eigen::ParametrizedLine
Timestamp	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^Timestamp::Timestamp(Timestamp::tOptions option)$/;"	f	class:Timestamp
Timestamp	./Thirdparty/DBoW2/DUtils/Timestamp.h	/^class Timestamp$/;"	c	namespace:DUtils
TmpFlags	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    TmpFlags = _MatrixTypeNested::Flags & HereditaryBits,$/;"	e	enum:Eigen::internal::traits::__anon429
TmpMatrixType	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, 1, Options, MaxRowsAtCompileTime, 1> TmpMatrixType;$/;"	t	class:Eigen::LDLT
TopLeft	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
TopLeft	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^    TopLeft=2, TopRight=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TopLeftCeil	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^    TopLeftCeil=6, TopRightCeil=7$/;"	e	enum:Eigen::AlignedBox::CornerType
TopLeftFloor	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^    TopLeftFloor=2, TopRightFloor=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TopRight	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
TopRight	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^    TopLeft=2, TopRight=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TopRightCeil	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^    TopLeftCeil=6, TopRightCeil=7$/;"	e	enum:Eigen::AlignedBox::CornerType
TopRightFloor	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^    TopLeftFloor=2, TopRightFloor=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
Track	./src/Tracking.cc	/^void Tracking::Track()$/;"	f	class:ORB_SLAM2::Tracking
TrackLocalMap	./src/Tracking.cc	/^bool Tracking::TrackLocalMap()$/;"	f	class:ORB_SLAM2::Tracking
TrackMonocular	./src/System.cc	/^cv::Mat System::TrackMonocular(const cv::Mat &im, const double &timestamp)$/;"	f	class:ORB_SLAM2::System
TrackRGBD	./src/System.cc	/^cv::Mat System::TrackRGBD(const cv::Mat &im, const cv::Mat &depthmap, const double &timestamp)$/;"	f	class:ORB_SLAM2::System
TrackReferenceKeyFrame	./src/Tracking.cc	/^bool Tracking::TrackReferenceKeyFrame()$/;"	f	class:ORB_SLAM2::Tracking
TrackStereo	./src/System.cc	/^cv::Mat System::TrackStereo(const cv::Mat &imLeft, const cv::Mat &imRight, const double &timestamp)$/;"	f	class:ORB_SLAM2::System
TrackWithMotionModel	./src/Tracking.cc	/^bool Tracking::TrackWithMotionModel()$/;"	f	class:ORB_SLAM2::Tracking
TrackedMapPoints	./src/KeyFrame.cc	/^int KeyFrame::TrackedMapPoints(const int &minObs)$/;"	f	class:ORB_SLAM2::KeyFrame
Tracking	./include/Tracking.h	/^class Tracking$/;"	c	namespace:ORB_SLAM2
Tracking	./src/Tracking.cc	/^Tracking::Tracking(System *pSys, ORBVocabulary* pVoc, FrameDrawer *pFrameDrawer, MapDrawer *pMapDrawer, Map *pMap, KeyFrameDatabase* pKFDB, const string &strSettingPath, const int sensor):$/;"	f	class:ORB_SLAM2::Tracking
Tracking	./src/Tracking.cc	/^Tracking::Tracking(System *pSys, ORBVocabulary* pVoc, FrameDrawer *pFrameDrawer, MapDrawer *pMapDrawer, Map *pMap, Map *pLastMap, KeyFrameDatabase* pKFDB, const string &strSettingPath, const int sensor):$/;"	f	class:ORB_SLAM2::Tracking
Traits	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    typedef internal::LDLT_Traits<MatrixType,UpLo> Traits;$/;"	t	class:Eigen::LDLT
Traits	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    typedef internal::LLT_Traits<MatrixType,UpLo> Traits;$/;"	t	class:Eigen::LLT
Traits	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<Derived> Traits;$/;"	t	class:Eigen::PermutationBase
Traits	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<Map> Traits;$/;"	t	class:Eigen::Map
Traits	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<PermutationMatrix> Traits;$/;"	t	class:Eigen::PermutationMatrix
Traits	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<PermutationType> Traits;$/;"	t	class:Eigen::Transpose
Traits	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<PermutationWrapper> Traits;$/;"	t	class:Eigen::PermutationWrapper
Traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^    typedef internal::traits<Ref> Traits;$/;"	t	class:Eigen::Ref
Traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<Derived> Traits;$/;"	t	class:Eigen::TranspositionsBase
Traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<Map> Traits;$/;"	t	class:Eigen::Map
Traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<Transpositions> Traits;$/;"	t	class:Eigen::Transpositions
Traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<TranspositionsWrapper> Traits;$/;"	t	class:Eigen::TranspositionsWrapper
Traits	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef gebp_traits<LhsScalar,RhsScalar,ConjugateLhs,ConjugateRhs> Traits;$/;"	t	struct:Eigen::internal::gebp_kernel
Traits	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef gebp_traits<LhsScalar,RhsScalar> Traits;$/;"	t	class:Eigen::internal::gemm_blocking_space
Traits	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  typedef gebp_traits<LhsScalar,RhsScalar,ConjLhs,ConjRhs> Traits;$/;"	t	struct:Eigen::internal::tribb_kernel
Traits	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  typedef gebp_traits<Scalar,Scalar> Traits;$/;"	t	struct:Eigen::internal::product_triangular_matrix_matrix
Traits	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef internal::pardiso_traits<Derived> Traits;$/;"	t	class:Eigen::PardisoImpl
Traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialCholesky> Traits;$/;"	t	class:Eigen::SimplicialCholesky
Traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLDLT> Traits;$/;"	t	class:Eigen::SimplicialLDLT
Traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLLT> Traits;$/;"	t	class:Eigen::SimplicialLLT
Traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    typedef internal::traits<SparseDenseOuterProduct> Traits;$/;"	t	class:Eigen::SparseDenseOuterProduct
TraitsBase	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^  typedef traits<PlainObjectType> TraitsBase;$/;"	t	struct:Eigen::internal::traits
TraitsBase	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    typedef traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> > TraitsBase;$/;"	t	struct:Eigen::internal::traits
Transform	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	37;"	d
Transform	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	92;"	d
Transform	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Transform() { }$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Transform(const Transform& other)$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline explicit Transform(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline explicit Transform(const RotationBase<Derived, Dim>& r) { *this = r; }$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline explicit Transform(const ScalingType& s) { *this = s; }$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline explicit Transform(const Transform<OtherScalarType,Dim>& other)$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline explicit Transform(const TranslationType& t) { *this = t; }$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::Transform(const QMatrix& other)$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::Transform(const QTransform& other)$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^class Transform$/;"	c	namespace:Eigen
Transform	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  Transform(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline Transform()$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline Transform(const Transform& other)$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline Transform(const Transform<Scalar,Dim,Mode,OtherOptions>& other)$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline Transform(const Transform<Scalar,Dim,OtherMode,OtherOptions>& other)$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline explicit Transform(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline explicit Transform(const RotationBase<Derived, Dim>& r)$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline explicit Transform(const Transform<OtherScalarType,Dim,Mode,Options>& other)$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline explicit Transform(const TranslationType& t)$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline explicit Transform(const UniformScaling<Scalar>& s)$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::Transform(const QMatrix& other)$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::Transform(const QTransform& other)$/;"	f	class:Eigen::Transform
Transform	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^class Transform$/;"	c	namespace:Eigen
Transform2d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	39;"	d
Transform2d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	94;"	d
Transform2d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^typedef Transform<double,2> Transform2d;$/;"	t	namespace:Eigen
Transform2f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	38;"	d
Transform2f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	93;"	d
Transform2f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^typedef Transform<float,2> Transform2f;$/;"	t	namespace:Eigen
Transform3d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	41;"	d
Transform3d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	96;"	d
Transform3d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^typedef Transform<double,3> Transform3d;$/;"	t	namespace:Eigen
Transform3f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	40;"	d
Transform3f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	95;"	d
Transform3f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^typedef Transform<float,3> Transform3f;$/;"	t	namespace:Eigen
TransformTimeDiagonalMode	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  enum { TransformTimeDiagonalMode = ((Mode==int(Isometry))?Affine:int(Mode)) };$/;"	e	enum:Eigen::Transform::__anon435
TransformTimeDiagonalReturnType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,TransformTimeDiagonalMode> TransformTimeDiagonalReturnType;$/;"	t	class:Eigen::Transform
TransformTraits	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^enum TransformTraits {$/;"	g	namespace:Eigen
TransformType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  typedef Transform<Scalar,Dim> TransformType;$/;"	t	class:Eigen::Scaling
TransformType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim> TransformType;$/;"	t	struct:Eigen::ei_transform_product_impl
TransformType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Transform<typename Other::Scalar,Dim> TransformType;$/;"	t	struct:Eigen::ei_transform_product_impl
TransformType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  typedef Transform<Scalar,Dim> TransformType;$/;"	t	class:Eigen::Translation
TransformType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typedef Transform<Scalar, Dim, Mode, Options> TransformType;$/;"	t	struct:Eigen::internal::take_matrix_for_product
TransformType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typedef Transform<Scalar, Dim, Projective, Options> TransformType;$/;"	t	struct:Eigen::internal::take_matrix_for_product
TransformType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef Transform<typename Other::Scalar,Dim,AffineCompact,Options> TransformType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
TransformType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef Transform<typename Other::Scalar,Dim,Mode,Options> TransformType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
Translation	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	43;"	d
Translation	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	98;"	d
Translation	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  Translation() {}$/;"	f	class:Eigen::Translation
Translation	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  explicit inline Translation(const VectorType& vector) : m_coeffs(vector) {}$/;"	f	class:Eigen::Translation
Translation	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  inline Translation(const Scalar& sx, const Scalar& sy)$/;"	f	class:Eigen::Translation
Translation	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  inline Translation(const Scalar& sx, const Scalar& sy, const Scalar& sz)$/;"	f	class:Eigen::Translation
Translation	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  inline explicit Translation(const Translation<OtherScalarType,Dim>& other)$/;"	f	class:Eigen::Translation
Translation	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^class Translation$/;"	c	namespace:Eigen
Translation	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  Translation() {}$/;"	f	class:Eigen::Translation
Translation	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  explicit inline Translation(const VectorType& vector) : m_coeffs(vector) {}$/;"	f	class:Eigen::Translation
Translation	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  inline Translation(const Scalar& sx, const Scalar& sy)$/;"	f	class:Eigen::Translation
Translation	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  inline Translation(const Scalar& sx, const Scalar& sy, const Scalar& sz)$/;"	f	class:Eigen::Translation
Translation	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  inline explicit Translation(const Translation<OtherScalarType,Dim>& other)$/;"	f	class:Eigen::Translation
Translation	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^class Translation$/;"	c	namespace:Eigen
Translation2d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	100;"	d
Translation2d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	45;"	d
Translation2d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^typedef Translation<double,2> Translation2d;$/;"	t	namespace:Eigen
Translation2d	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^typedef Translation<double,2> Translation2d;$/;"	t	namespace:Eigen
Translation2f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	44;"	d
Translation2f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	99;"	d
Translation2f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^typedef Translation<float, 2> Translation2f;$/;"	t	namespace:Eigen
Translation2f	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^typedef Translation<float, 2> Translation2f;$/;"	t	namespace:Eigen
Translation3d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	102;"	d
Translation3d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	47;"	d
Translation3d	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^typedef Translation<double,3> Translation3d;$/;"	t	namespace:Eigen
Translation3d	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^typedef Translation<double,3> Translation3d;$/;"	t	namespace:Eigen
Translation3f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	101;"	d
Translation3f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	46;"	d
Translation3f	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^typedef Translation<float, 3> Translation3f;$/;"	t	namespace:Eigen
Translation3f	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^typedef Translation<float, 3> Translation3f;$/;"	t	namespace:Eigen
TranslationPart	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Block<MatrixType,Dim,1> TranslationPart;$/;"	t	class:Eigen::Transform
TranslationPart	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef Block<MatrixType,Dim,1,int(Mode)==(AffineCompact)> TranslationPart;$/;"	t	class:Eigen::Transform
TranslationType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  typedef Translation<Scalar,Dim> TranslationType;$/;"	t	class:Eigen::Scaling
TranslationType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Translation<Scalar,Dim> TranslationType;$/;"	t	class:Eigen::Transform
TranslationType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef Translation<Scalar,Dim> TranslationType;$/;"	t	class:Eigen::Transform
Transpose	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    Transpose(const PermutationType& p) : m_permutation(p) {}$/;"	f	class:Eigen::Transpose
Transpose	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^class Transpose<PermutationBase<Derived> >$/;"	c	namespace:Eigen
Transpose	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    inline Transpose(MatrixType& a_matrix) : m_matrix(a_matrix) {}$/;"	f	class:Eigen::Transpose
Transpose	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^template<typename MatrixType> class Transpose$/;"	c	namespace:Eigen
Transpose	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    Transpose(const TranspositionType& t) : m_transpositions(t) {}$/;"	f	class:Eigen::Transpose
Transpose	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^class Transpose<TranspositionsBase<TranspositionsDerived> >$/;"	c	namespace:Eigen
Transpose	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      Transpose = StorageOrder==RowMajor$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon38
Transpose	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      Transpose = StorageOrder==RowMajor,$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon36
TransposeImpl	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^template<typename MatrixType> class TransposeImpl<MatrixType,Dense>$/;"	c	namespace:Eigen
TransposeImpl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTranspose.h	/^template<typename MatrixType> class TransposeImpl<MatrixType,Sparse>$/;"	c	namespace:Eigen
TransposeImpl_base	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^struct TransposeImpl_base$/;"	s	namespace:Eigen::internal
TransposeImpl_base	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^struct TransposeImpl_base<MatrixType, false>$/;"	s	namespace:Eigen::internal
TransposeLhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    TransposeLhs = LhsRowMajor && (!RhsRowMajor)$/;"	e	enum:Eigen::SparseSparseProductReturnType::__anon420
TransposeMode	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^      TransposeMode = (Mode & Upper ? Lower : 0)$/;"	e	enum:Eigen::TriangularView::__anon231
TransposeRhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    TransposeRhs = (!LhsRowMajor) && RhsRowMajor,$/;"	e	enum:Eigen::SparseSparseProductReturnType::__anon420
TransposeTypeWithSameStorageOrder	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^          TransposeTypeWithSameStorageOrder;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
TransposedSparseMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef SparseMatrix<Scalar,(Flags&~RowMajorBit)|(IsRowMajor?RowMajorBit:0)> TransposedSparseMatrix;$/;"	t	class:Eigen::SparseMatrix
TranspositionType	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    typedef Transpositions<RowsAtCompileTime, MaxRowsAtCompileTime> TranspositionType;$/;"	t	class:Eigen::LDLT
TranspositionType	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsDerived TranspositionType;$/;"	t	class:Eigen::Transpose
TranspositionType	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    typedef Transpositions<RowsAtCompileTime, MaxRowsAtCompileTime> TranspositionType;$/;"	t	class:Eigen::PartialPivLU
Transpositions	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    explicit inline Transpositions(const MatrixBase<Other>& a_indices) : m_indices(a_indices)$/;"	f	class:Eigen::Transpositions
Transpositions	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline Transpositions() {}$/;"	f	class:Eigen::Transpositions
Transpositions	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline Transpositions(Index size) : m_indices(size)$/;"	f	class:Eigen::Transpositions
Transpositions	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline Transpositions(const Transpositions& other) : m_indices(other.indices()) {}$/;"	f	class:Eigen::Transpositions
Transpositions	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline Transpositions(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::Transpositions
Transpositions	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^class Transpositions : public TranspositionsBase<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,IndexType> >$/;"	c	namespace:Eigen
TranspositionsBase	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^class TranspositionsBase$/;"	c	namespace:Eigen
TranspositionsWrapper	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline TranspositionsWrapper(IndicesType& a_indices)$/;"	f	class:Eigen::TranspositionsWrapper
TranspositionsWrapper	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^class TranspositionsWrapper$/;"	c	namespace:Eigen
Traversal	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    Traversal = int(MayInnerVectorize)  ? int(InnerVectorizedTraversal)$/;"	e	enum:Eigen::internal::assign_traits::__anon250
Traversal	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^      Traversal = MayLinearize ? LinearVectorizedTraversal$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon68
Traversal	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    Traversal = int(MayLinearVectorize) ? int(LinearVectorizedTraversal)$/;"	e	enum:Eigen::internal::redux_traits::__anon189
TraversalSize	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    TraversalSize = Direction==Vertical ? MatrixType::RowsAtCompileTime :  MatrixType::ColsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon21
TreeAction	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^    struct  TreeAction {$/;"	s	struct:g2o::HyperDijkstra
TriangularBase	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline TriangularBase() { eigen_assert(!((Mode&UnitDiag) && (Mode&ZeroDiag))); }$/;"	f	class:Eigen::TriangularBase
TriangularBase	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^template<typename Derived> class TriangularBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
TriangularProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  TriangularProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs) {}$/;"	f	struct:Eigen::TriangularProduct
TriangularProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct TriangularProduct<Mode,LhsIsTriangular,Lhs,false,Rhs,false>$/;"	s	namespace:Eigen
TriangularProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^  TriangularProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs) {}$/;"	f	struct:Eigen::TriangularProduct
TriangularProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct TriangularProduct<Mode,false,Lhs,true,Rhs,false>$/;"	s	namespace:Eigen
TriangularProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct TriangularProduct<Mode,true,Lhs,false,Rhs,true>$/;"	s	namespace:Eigen
TriangularView	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline TriangularView(const MatrixType& matrix) : m_matrix(matrix)$/;"	f	class:Eigen::TriangularView
TriangularView	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^template<typename _MatrixType, unsigned int _Mode> class TriangularView$/;"	c	namespace:Eigen
TriangularViewReturnType	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct TriangularViewReturnType { typedef TriangularView<Derived, Mode> Type; };$/;"	s	class:Eigen::MatrixBase
Triangulate	./src/Initializer.cc	/^void Initializer::Triangulate(const cv::KeyPoint &kp1, const cv::KeyPoint &kp2, const cv::Mat &P1, const cv::Mat &P2, cv::Mat &x3D)$/;"	f	class:ORB_SLAM2::Initializer
TridiagonalMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    TridiagonalMatrix(Index size = Size) : Base(size,size,Options&SelfAdjoint?0:1,1) {}$/;"	f	class:Eigen::internal::TridiagonalMatrix
TridiagonalMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^class TridiagonalMatrix : public BandMatrix<Scalar,Size,Size,Options&SelfAdjoint?0:1,1,Options|RowMajor>$/;"	c	namespace:Eigen::internal
Tridiagonalization	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Tridiagonalization(Index size = Size==Dynamic ? 2 : Size)$/;"	f	class:Eigen::Tridiagonalization
Tridiagonalization	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Tridiagonalization(const MatrixType& matrix)$/;"	f	class:Eigen::Tridiagonalization
Tridiagonalization	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^template<typename _MatrixType> class Tridiagonalization$/;"	c	namespace:Eigen
TridiagonalizationMatrixTReturnType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    TridiagonalizationMatrixTReturnType(const MatrixType& mat) : m_matrix(mat) { }$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
TridiagonalizationMatrixTReturnType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^template<typename MatrixType> struct TridiagonalizationMatrixTReturnType$/;"	s	namespace:Eigen::internal
TridiagonalizationType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef Tridiagonalization<MatrixType> TridiagonalizationType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
Triplet	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    typedef Eigen::Triplet<double> Triplet;$/;"	t	class:g2o::LinearSolverEigen
Triplet	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^  Triplet() : m_row(0), m_col(0), m_value(0) {}$/;"	f	class:Eigen::Triplet
Triplet	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^  Triplet(const Index& i, const Index& j, const Scalar& v = Scalar(0))$/;"	f	class:Eigen::Triplet
Triplet	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^class Triplet$/;"	c	namespace:Eigen
TripletColSort	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^    struct TripletColSort$/;"	s	namespace:g2o::__anon468
TripletEntry	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^      TripletEntry(int r_, int c_, double x_) : r(r_), c(c_), x(x_) {}$/;"	f	struct:g2o::__anon468::TripletEntry
TripletEntry	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^    struct TripletEntry$/;"	s	namespace:g2o::__anon468
Twc	./include/KeyFrame.h	/^    cv::Mat Twc;$/;"	m	class:ORB_SLAM2::KeyFrame
Type	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^                 BuildType>::type Type;$/;"	t	struct:Eigen::internal::BandMatrixBase::DiagonalIntReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  typedef CoeffBasedProduct<LhsNested, RhsNested, EvalBeforeAssigningBit | EvalBeforeNestingBit> Type;$/;"	t	struct:Eigen::ProductReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  typedef CoeffBasedProduct<LhsNested, RhsNested, NestByRefBit> Type;$/;"	t	struct:Eigen::ProductReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  typedef GeneralProduct<Lhs\/*Nested*\/, Rhs\/*Nested*\/, ProductType> Type;$/;"	t	struct:Eigen::ProductReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct ConstDiagonalIndexReturnType { typedef const Diagonal<const Derived,Index> Type; };$/;"	t	struct:Eigen::MatrixBase::ConstDiagonalIndexReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct DiagonalIndexReturnType { typedef Diagonal<Derived,Index> Type; };$/;"	t	struct:Eigen::MatrixBase::DiagonalIndexReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct ConstTriangularViewReturnType { typedef const TriangularView<const Derived, Mode> Type; };$/;"	t	struct:Eigen::MatrixBase::ConstTriangularViewReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct TriangularViewReturnType { typedef TriangularView<Derived, Mode> Type; };$/;"	t	struct:Eigen::MatrixBase::TriangularViewReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct ConstSelfAdjointViewReturnType { typedef const SelfAdjointView<const Derived, UpLo> Type; };$/;"	t	struct:Eigen::MatrixBase::ConstSelfAdjointViewReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct SelfAdjointViewReturnType { typedef SelfAdjointView<Derived, UpLo> Type; };$/;"	t	struct:Eigen::MatrixBase::SelfAdjointViewReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^                              > Type;$/;"	t	struct:Eigen::VectorwiseOp::ReduxReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^                              > Type;$/;"	t	struct:Eigen::VectorwiseOp::ReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^                        Direction==Horizontal ? 1 : ExpressionType::ColsAtCompileTime> Type;$/;"	t	struct:Eigen::VectorwiseOp::ExtendedType
Type	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^                        Direction==Vertical   ? 1 : ExpressionType::ColsAtCompileTime> Type;$/;"	t	struct:Eigen::VectorwiseOp::OppositeExtendedType
Type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  enum Type {$/;"	g	namespace:Eigen::Architecture
Type	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^                 0, MatrixType::MaxRowsAtCompileTime, MatrixType::MaxColsAtCompileTime> Type;$/;"	t	struct:Eigen::internal::matrix_type_times_scalar_type
Type	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef DenseTimeSparseProduct<Lhs,Rhs> Type;$/;"	t	struct:Eigen::DenseSparseProductReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef SparseDenseOuterProduct<Lhs,Rhs,false> Type;$/;"	t	struct:Eigen::SparseDenseProductReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef SparseDenseOuterProduct<Rhs,Lhs,true> Type;$/;"	t	struct:Eigen::DenseSparseProductReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef SparseTimeDenseProduct<Lhs,Rhs> Type;$/;"	t	struct:Eigen::SparseDenseProductReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^  typedef SparseSparseProduct<LhsNested, RhsNested> Type;$/;"	t	struct:Eigen::SparseSparseProductReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNColsBlockXpr { typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	t	struct:ConstNColsBlockXpr
Type	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNRowsBlockXpr { typedef const Block<const Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	t	struct:ConstNRowsBlockXpr
Type	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NColsBlockXpr { typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	t	struct:NColsBlockXpr
Type	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NRowsBlockXpr { typedef Block<Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	t	struct:NRowsBlockXpr
Type	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^template<int Size> struct ConstFixedSegmentReturnType { typedef const VectorBlock<const Derived, Size> Type; };$/;"	t	struct:ConstFixedSegmentReturnType
Type	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^template<int Size> struct FixedSegmentReturnType { typedef VectorBlock<Derived, Size> Type; };$/;"	t	struct:FixedSegmentReturnType
UCOL	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon389
UL	./include/ORBextractor.h	/^    cv::Point2i UL, UR, BL, BR;$/;"	m	class:ORB_SLAM2::ExtractorNode
ULVL	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon389
UMatrixType	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef TriangularView<LUMatrixType,  Upper>           UMatrixType;$/;"	t	class:Eigen::SuperLU
UNALIGNED_LOAD_AND_STORE_OPERATIONS_UNIMPLEMENTED_ON_ALTIVEC	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        UNALIGNED_LOAD_AND_STORE_OPERATIONS_UNIMPLEMENTED_ON_ALTIVEC,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
UR	./include/ORBextractor.h	/^    cv::Point2i UL, UR, BL, BR;$/;"	m	class:ORB_SLAM2::ExtractorNode
USUB	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon389
UmfPackLU	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfPackLU() { init(); }$/;"	f	class:Eigen::UmfPackLU
UmfPackLU	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfPackLU(UmfPackLU& ) { }$/;"	f	class:Eigen::UmfPackLU
UmfPackLU	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfPackLU(const MatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
UmfPackLU	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^class UmfPackLU : internal::noncopyable$/;"	c	namespace:Eigen
UmfpackMatrixType	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef SparseMatrix<Scalar,ColMajor,int> UmfpackMatrixType;$/;"	t	class:Eigen::UmfPackLU
Unaligned	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  Unaligned=0, $/;"	e	enum:Eigen::__anon71
UndistortKeyPoints	./src/Frame.cc	/^void Frame::UndistortKeyPoints()$/;"	f	class:ORB_SLAM2::Frame
UniformCostFunction	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^  struct  UniformCostFunction: public HyperDijkstra::CostFunction {$/;"	s	namespace:g2o
UniformScaling	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^  UniformScaling() {}$/;"	f	class:Eigen::UniformScaling
UniformScaling	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^  explicit inline UniformScaling(const Scalar& s) : m_factor(s) {}$/;"	f	class:Eigen::UniformScaling
UniformScaling	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^  inline explicit UniformScaling(const UniformScaling<OtherScalarType>& other)$/;"	f	class:Eigen::UniformScaling
UniformScaling	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^class UniformScaling$/;"	c	namespace:Eigen
Unit	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::Unit(Index i)$/;"	f	class:Eigen::MatrixBase
Unit	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::Unit(Index newSize, Index i)$/;"	f	class:Eigen::MatrixBase
UnitDiag	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  UnitDiag=0x4, $/;"	e	enum:Eigen::__anon70
UnitDiagBit	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/TriangularSolver.h	/^const unsigned int UnitDiagBit = UnitDiag;$/;"	m	namespace:Eigen
UnitLower	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  UnitLower=UnitDiag|Lower, $/;"	e	enum:Eigen::__anon70
UnitLowerTriangular	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/TriangularSolver.h	/^const unsigned int UnitLowerTriangular = UnitLower;$/;"	m	namespace:Eigen
UnitUpper	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  UnitUpper=UnitDiag|Upper,$/;"	e	enum:Eigen::__anon70
UnitUpperTriangular	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/TriangularSolver.h	/^const unsigned int UnitUpperTriangular = UnitUpper;$/;"	m	namespace:Eigen
UnitW	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitW()$/;"	f	class:Eigen::MatrixBase
UnitX	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitX()$/;"	f	class:Eigen::MatrixBase
UnitY	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitY()$/;"	f	class:Eigen::MatrixBase
UnitZ	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitZ()$/;"	f	class:Eigen::MatrixBase
UnprojectStereo	./src/Frame.cc	/^cv::Mat Frame::UnprojectStereo(const int &i)$/;"	f	class:ORB_SLAM2::Frame
UnprojectStereo	./src/KeyFrame.cc	/^cv::Mat KeyFrame::UnprojectStereo(int i)$/;"	f	class:ORB_SLAM2::KeyFrame
UnrepeatedRandomizer	./Thirdparty/DBoW2/DUtils/Random.cpp	/^DUtils::Random::UnrepeatedRandomizer::UnrepeatedRandomizer$/;"	f	class:DUtils::Random::UnrepeatedRandomizer
UnrepeatedRandomizer	./Thirdparty/DBoW2/DUtils/Random.cpp	/^DUtils::Random::UnrepeatedRandomizer::UnrepeatedRandomizer(int min, int max)$/;"	f	class:DUtils::Random::UnrepeatedRandomizer
UnrepeatedRandomizer	./Thirdparty/DBoW2/DUtils/Random.h	/^class Random::UnrepeatedRandomizer$/;"	c	class:DUtils::Random
Unroll	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^      Unroll = CoeffReadCost != Dynamic && CoeffReadCost <= EIGEN_UNROLLING_LIMIT,$/;"	e	enum:Eigen::CoeffBasedProduct::__anon47
Unrolling	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    Unrolling = (int(Traversal) == int(InnerVectorizedTraversal) || int(Traversal) == int(DefaultTraversal))$/;"	e	enum:Eigen::internal::assign_traits::__anon252
Unrolling	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    Unrolling = Cost != Dynamic && Cost <= UnrollingLimit$/;"	e	enum:Eigen::internal::redux_traits::__anon191
Unrolling	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^      Unrolling   = (RhsIsVectorAtCompileTime && Rhs::SizeAtCompileTime != Dynamic && Rhs::SizeAtCompileTime <= 8)$/;"	e	enum:Eigen::internal::trsolve_traits::__anon239
UnrollingLimit	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    UnrollingLimit      = EIGEN_UNROLLING_LIMIT * (Vectorized ? int(PacketSize) : 1),$/;"	e	enum:Eigen::internal::assign_traits::__anon251
UnrollingLimit	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    UnrollingLimit = EIGEN_UNROLLING_LIMIT * (int(Traversal) == int(DefaultTraversal) ? 1 : int(PacketSize))$/;"	e	enum:Eigen::internal::redux_traits::__anon190
Unusable	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^      Unusable(const Unusable&) {}$/;"	f	class:Eigen::ReturnByValue::Unusable
Unusable	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^    class Unusable{$/;"	c	class:Eigen::ReturnByValue
Unusable	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	66;"	d
UpLo	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^      UpLo = _UpLo$/;"	e	enum:Eigen::LDLT::__anon427
UpLo	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^      UpLo = _UpLo$/;"	e	enum:Eigen::LLT::__anon426
UpLo	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::CholmodBase::__anon462
UpLo	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^    UpLo = _UpLo$/;"	e	enum:Eigen::ConjugateGradient::__anon346
UpLo	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::PastixLDLT::__anon345
UpLo	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::PastixLLT::__anon344
UpLo	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    enum { UpLo = Options&(Upper|Lower) };$/;"	e	enum:Eigen::PardisoLDLT::__anon424
UpLo	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::PardisoLLT::__anon423
UpLo	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::SimplicialCholesky::__anon367
UpLo	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::SimplicialLDLT::__anon366
UpLo	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::SimplicialLLT::__anon365
UpLo	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = internal::traits<Derived>::UpLo };$/;"	e	enum:Eigen::SimplicialCholeskyBase::__anon361
UpLo	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  enum { UpLo = _UpLo };$/;"	e	enum:Eigen::internal::traits::__anon362
UpLo	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  enum { UpLo = _UpLo };$/;"	e	enum:Eigen::internal::traits::__anon363
UpLo	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  enum { UpLo = _UpLo };$/;"	e	enum:Eigen::internal::traits::__anon364
Update	./src/FrameDrawer.cc	/^void FrameDrawer::Update(Tracking *pTracker)$/;"	f	class:ORB_SLAM2::FrameDrawer
UpdateBestCovisibles	./src/KeyFrame.cc	/^void KeyFrame::UpdateBestCovisibles()$/;"	f	class:ORB_SLAM2::KeyFrame
UpdateConnections	./src/KeyFrame.cc	/^void KeyFrame::UpdateConnections()$/;"	f	class:ORB_SLAM2::KeyFrame
UpdateLastFrame	./src/Tracking.cc	/^void Tracking::UpdateLastFrame()$/;"	f	class:ORB_SLAM2::Tracking
UpdateLocalKeyFrames	./src/Tracking.cc	/^void Tracking::UpdateLocalKeyFrames()$/;"	f	class:ORB_SLAM2::Tracking
UpdateLocalMap	./src/Tracking.cc	/^void Tracking::UpdateLocalMap()$/;"	f	class:ORB_SLAM2::Tracking
UpdateLocalPoints	./src/Tracking.cc	/^void Tracking::UpdateLocalPoints()$/;"	f	class:ORB_SLAM2::Tracking
UpdateNormalAndDepth	./src/MapPoint.cc	/^void MapPoint::UpdateNormalAndDepth()$/;"	f	class:ORB_SLAM2::MapPoint
UpdatePoseMatrices	./src/Frame.cc	/^void Frame::UpdatePoseMatrices()$/;"	f	class:ORB_SLAM2::Frame
Upper	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  Upper=0x2,                      $/;"	e	enum:Eigen::__anon70
UpperBidiagonalization	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    UpperBidiagonalization() : m_householder(), m_bidiagonal(), m_isInitialized(false) {}$/;"	f	class:Eigen::internal::UpperBidiagonalization
UpperBidiagonalization	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    UpperBidiagonalization(const MatrixType& matrix)$/;"	f	class:Eigen::internal::UpperBidiagonalization
UpperBidiagonalization	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^template<typename _MatrixType> class UpperBidiagonalization$/;"	c	namespace:Eigen::internal
UpperTriangular	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/TriangularSolver.h	/^const unsigned int UpperTriangular = Upper;$/;"	m	namespace:Eigen
UpperTriangularBit	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/TriangularSolver.h	/^const unsigned int UpperTriangularBit = Upper;$/;"	m	namespace:Eigen
VIEWER_H	./include/Viewer.h	23;"	d
ValueType	./Thirdparty/g2o/g2o/stuff/property.h	/^      typedef T ValueType;$/;"	t	class:g2o::Property
Vector	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::DiagonalPreconditioner
Vector	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::IncompleteLUT
Vector	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::PastixBase
Vector	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::SuperLUBase
Vector	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::UmfPackLU
Vector2	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  typedef Matrix<Scalar,2,1> Vector2;$/;"	t	class:Eigen::Rotation2D
Vector2	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	/^  typedef Matrix<Scalar,2,1> Vector2;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
Vector2	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  typedef Matrix<Scalar,2,1> Vector2;$/;"	t	class:Eigen::Rotation2D
Vector2D	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<double,2,1,Eigen::ColMajor>                               Vector2D;$/;"	t	namespace:g2o
Vector2F	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<float,2,1,Eigen::ColMajor>                                Vector2F; $/;"	t	namespace:g2o
Vector2I	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<int,2,1,Eigen::ColMajor>                                  Vector2I;$/;"	t	namespace:g2o
Vector2s	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<Scalar,2,1> Vector2s;$/;"	t	class:Eigen::RealQZ
Vector3	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  typedef Matrix<Scalar,3,1> Vector3;$/;"	t	class:Eigen::AngleAxis
Vector3	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  typedef Matrix<Scalar,3,1> Vector3;$/;"	t	class:Eigen::Quaternion
Vector3	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  typedef Matrix<Scalar,3,1> Vector3;$/;"	t	class:Eigen::AngleAxis
Vector3	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  typedef Matrix<Scalar,3,1> Vector3;$/;"	t	class:Eigen::QuaternionBase
Vector3D	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<double,3,1,Eigen::ColMajor>                               Vector3D;$/;"	t	namespace:g2o
Vector3F	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<float,3,1,Eigen::ColMajor>                                Vector3F; $/;"	t	namespace:g2o
Vector3I	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<int,3,1,Eigen::ColMajor>                                  Vector3I;$/;"	t	namespace:g2o
Vector3s	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<Scalar,3,1> Vector3s;$/;"	t	class:Eigen::RealQZ
Vector3s	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Matrix<Scalar,3,1> Vector3s;$/;"	t	class:Eigen::RealSchur
Vector4D	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<double,4,1,Eigen::ColMajor>                               Vector4D;$/;"	t	namespace:g2o
Vector4F	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<float,4,1,Eigen::ColMajor>                                Vector4F; $/;"	t	namespace:g2o
Vector4I	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<int,4,1,Eigen::ColMajor>                                  Vector4I;$/;"	t	namespace:g2o
Vector6d	./Thirdparty/g2o/g2o/types/se3quat.h	/^  typedef Matrix<double, 6, 1> Vector6d;$/;"	t	namespace:g2o
Vector7d	./Thirdparty/g2o/g2o/types/se3quat.h	/^  typedef Matrix<double, 7, 1> Vector7d;$/;"	t	namespace:g2o
Vector7d	./Thirdparty/g2o/g2o/types/sim3.h	/^  typedef  Matrix <double, 7, 1> Vector7d;$/;"	t	namespace:g2o
VectorBlock	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorBlock.h	/^    inline VectorBlock(VectorType& vector, Index start)$/;"	f	class:Eigen::VectorBlock
VectorBlock	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorBlock.h	/^    inline VectorBlock(VectorType& vector, Index start, Index size)$/;"	f	class:Eigen::VectorBlock
VectorBlock	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorBlock.h	/^template<typename VectorType, int Size> class VectorBlock$/;"	c	namespace:Eigen
VectorI	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef Matrix<Index,Dynamic,1> VectorI;$/;"	t	class:Eigen::SparseSelfAdjointView
VectorI	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef Matrix<Index,Dynamic,1> VectorI;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
VectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1> VectorType;$/;"	t	class:Eigen::AlignedBox
VectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1> VectorType;$/;"	t	class:Eigen::Hyperplane
VectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1> VectorType;$/;"	t	class:Eigen::ParametrizedLine
VectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::Scaling
VectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::Transform
VectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::Translation
VectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> VectorType;$/;"	t	class:Eigen::GeneralizedEigenSolver
VectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef Matrix<Scalar, 1, Size, Options | RowMajor, 1, MaxSize> VectorType;$/;"	t	class:Eigen::HessenbergDecomposition
VectorType	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::RealVectorType VectorType;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
VectorType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1>  VectorType;$/;"	t	class:Eigen::AlignedBox
VectorType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1> VectorType;$/;"	t	class:Eigen::Hyperplane
VectorType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	/^  typedef typename plain_matrix_type<Derived>::type VectorType;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
VectorType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1,Options> VectorType;$/;"	t	class:Eigen::ParametrizedLine
VectorType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^    typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::RotationBase
VectorType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::Transform
VectorType	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::Translation
VectorType	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::PardisoImpl
VectorType	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialCholesky
VectorType	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialCholeskyBase
VectorType	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialLDLT
VectorType	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialLLT
VectorXD	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<double,Eigen::Dynamic,1,Eigen::ColMajor>                  VectorXD;$/;"	t	namespace:g2o
VectorXF	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<float,Eigen::Dynamic,1,Eigen::ColMajor>                   VectorXF; $/;"	t	namespace:g2o
VectorXI	./Thirdparty/g2o/g2o/core/eigen_types.h	/^  typedef Eigen::Matrix<int,Eigen::Dynamic,1,Eigen::ColMajor>                     VectorXI; $/;"	t	namespace:g2o
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Vectorizable = is_same<LhsScalar,RhsScalar>::value && packet_traits<LhsScalar>::HasDiv && packet_traits<RhsScalar>::HasDiv$/;"	e	enum:Eigen::internal::scalar_quotient_op::__anon267
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^    Vectorizable = is_same<LhsScalar,RhsScalar>::value && packet_traits<LhsScalar>::HasMul && packet_traits<RhsScalar>::HasMul$/;"	e	enum:Eigen::internal::scalar_product_op::__anon258
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    Vectorizable = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon141
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon212
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon213
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon204
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon206
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon207
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon218
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon223
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon224
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon225
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable  = Traits::Vectorizable,$/;"	e	enum:Eigen::internal::gebp_kernel::__anon55
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable,$/;"	e	enum:Eigen::internal::gebp_traits::__anon51
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable,$/;"	e	enum:Eigen::internal::gebp_traits::__anon52
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<RealScalar>::Vectorizable$/;"	e	enum:Eigen::internal::gebp_traits::__anon53
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<RealScalar>::Vectorizable$/;"	e	enum:Eigen::internal::gebp_traits::__anon54
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^  Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon34
Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^  Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon35
Vectorized	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    Vectorized = int(Traversal) == InnerVectorizedTraversal$/;"	e	enum:Eigen::internal::assign_traits::__anon250
VectorizedSize	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    VectorizedSize = (Size \/ PacketSize) * PacketSize$/;"	e	enum:Eigen::internal::redux_impl::__anon196
VectorwiseOp	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    inline VectorwiseOp(ExpressionType& matrix) : m_matrix(matrix) {}$/;"	f	class:Eigen::VectorwiseOp
VectorwiseOp	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^template<typename ExpressionType, int Direction> class VectorwiseOp$/;"	c	namespace:Eigen
Vertex	./Thirdparty/g2o/g2o/core/hyper_graph.cpp	/^  HyperGraph::Vertex::Vertex(int id) : _id(id)$/;"	f	class:g2o::HyperGraph::Vertex
Vertex	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^      class  Vertex : public HyperGraphElement {$/;"	c	class:g2o::HyperGraph
Vertex	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::Vertex::Vertex() :$/;"	f	class:g2o::OptimizableGraph::Vertex
Vertex	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    class  Vertex : public HyperGraph::Vertex {$/;"	c	struct:g2o::OptimizableGraph
VertexContainer	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^      typedef std::vector<Vertex*>                      VertexContainer;$/;"	t	class:g2o::HyperGraph
VertexContainer	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    typedef std::vector<OptimizableGraph::Vertex*>      VertexContainer;$/;"	t	struct:g2o::OptimizableGraph
VertexIDCompare	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    struct  VertexIDCompare {$/;"	s	struct:g2o::OptimizableGraph
VertexIDHashFunction	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^      class VertexIDHashFunction {$/;"	c	class:g2o::EstimatePropagator
VertexIDMap	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^      typedef std::tr1::unordered_map<int, Vertex*>     VertexIDMap;$/;"	t	class:g2o::HyperGraph
VertexSBAPointXYZ	./Thirdparty/g2o/g2o/types/types_sba.cpp	/^  VertexSBAPointXYZ::VertexSBAPointXYZ() : BaseVertex<3, Vector3d>()$/;"	f	class:g2o::VertexSBAPointXYZ
VertexSBAPointXYZ	./Thirdparty/g2o/g2o/types/types_sba.h	/^ class VertexSBAPointXYZ : public BaseVertex<3, Vector3d>$/;"	c	namespace:g2o
VertexSE3Expmap	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^VertexSE3Expmap::VertexSE3Expmap() : BaseVertex<6, SE3Quat>() {$/;"	f	class:g2o::VertexSE3Expmap
VertexSE3Expmap	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^class  VertexSE3Expmap : public BaseVertex<6, SE3Quat>{$/;"	c	namespace:g2o
VertexSet	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^      typedef std::set<Vertex*>                         VertexSet;$/;"	t	class:g2o::HyperGraph
VertexSim3Expmap	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp	/^  VertexSim3Expmap::VertexSim3Expmap() : BaseVertex<7, Sim3>()$/;"	f	class:g2o::VertexSim3Expmap
VertexSim3Expmap	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^  class VertexSim3Expmap : public BaseVertex<7, Sim3>$/;"	c	namespace:g2o
VertexXiType	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      typedef VertexXi VertexXiType;$/;"	t	class:g2o::BaseBinaryEdge
VertexXiType	./Thirdparty/g2o/g2o/core/base_unary_edge.h	/^      typedef VertexXi VertexXiType;$/;"	t	class:g2o::BaseUnaryEdge
VertexXjType	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      typedef VertexXj VertexXjType;$/;"	t	class:g2o::BaseBinaryEdge
Vertical	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  Vertical, $/;"	e	enum:Eigen::DirectionType
Viewer	./include/Viewer.h	/^class Viewer$/;"	c	namespace:ORB_SLAM2
Viewer	./src/Viewer.cc	/^Viewer::Viewer(System* pSystem, FrameDrawer *pFrameDrawer, MapDrawer *pMapDrawer, Tracking *pTracking, const string &strSettingPath):$/;"	f	class:ORB_SLAM2::Viewer
VmlSize	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^      VmlSize = MightLinearize ? MaxSizeAtCompileTime : InnerMaxSize,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon67
WIN32	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	22;"	d	file:
WORDSIZE	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	const size_t     WORDSIZE=16;$/;"	m	namespace:nanoflann
WORK	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	108;"	d
WORK	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	148;"	d
WORK	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	205;"	d
WORK	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	245;"	d
WRITING_TO_TRIANGULAR_PART_WITH_UNIT_DIAGONAL_IS_NOT_SUPPORTED	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        WRITING_TO_TRIANGULAR_PART_WITH_UNIT_DIAGONAL_IS_NOT_SUPPORTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
WeightingType	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^enum WeightingType$/;"	g	namespace:DBoW2
WithFormat	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^    WithFormat(const ExpressionType& matrix, const IOFormat& format)$/;"	f	class:Eigen::WithFormat
WithFormat	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^class WithFormat$/;"	c	namespace:Eigen
WordId	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^typedef unsigned int WordId;$/;"	t	namespace:DBoW2
WordValue	./Thirdparty/DBoW2/DBoW2/BowVector.h	/^typedef double WordValue;$/;"	t	namespace:DBoW2
WorkMatrixType	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^            WorkMatrixType;$/;"	t	class:Eigen::JacobiSVD
WorkSpaceFactor	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    WorkSpaceFactor = Vectorizable ? 2*nr*RealPacketSize : nr,$/;"	e	enum:Eigen::internal::gebp_traits::__anon53
WorkSpaceFactor	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    WorkSpaceFactor = nr * RhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon51
WorkSpaceFactor	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    WorkSpaceFactor = nr*RhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon52
WorkSpaceFactor	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    WorkSpaceFactor = nr*RhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon54
WorkVectorType	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^                 MatrixType::MaxRowsAtCompileTime> WorkVectorType;$/;"	t	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
WorkspaceType	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  typedef Matrix<Scalar, 1, RowsAtCompileTime, RowMajor, 1, MaxRowsAtCompileTime> WorkspaceType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
WorkspaceVector	./Thirdparty/g2o/g2o/core/jacobian_workspace.h	/^      typedef std::vector<Eigen::VectorXd, Eigen::aligned_allocator<Eigen::VectorXd> >      WorkspaceVector;$/;"	t	class:g2o::JacobianWorkspace
WriteAccessors	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  WriteAccessors, $/;"	e	enum:Eigen::AccessorLevels
WriteGnuplotAction	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  WriteGnuplotAction::WriteGnuplotAction(const std::string& typeName_)$/;"	f	class:g2o::WriteGnuplotAction
WriteGnuplotAction	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^  class  WriteGnuplotAction: public HyperGraphElementAction{$/;"	c	namespace:g2o
XprBase	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^  typedef ArrayBase<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> > XprBase;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^  typedef ArrayXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^  typedef ArrayXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^  typedef typename traits<XprType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename traits<Ancestor>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^  typedef typename traits<MatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^  typedef typename traits<MatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^  typedef typename traits<ThenMatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^  typedef typename traits<MatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename traits<MatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprType	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^  typedef SelfCwiseBinaryOp<BinOp,NestedXpr,Rhs> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  typedef CwiseUnaryOp<scalar_conjugate_op<Scalar>, NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  typedef CwiseUnaryOp<scalar_multiple_op<Scalar>, NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  typedef CwiseUnaryOp<scalar_opposite_op<Scalar>, NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  typedef Transpose<NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprTypeIsRowMajor	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    XprTypeIsRowMajor = (int(traits<XprType>::Flags)&RowMajorBit) != 0,$/;"	e	enum:Eigen::internal::traits::__anon184
XprTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^  typedef typename nested<XprType>::type XprTypeNested;$/;"	t	struct:Eigen::internal::traits
XprTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^  typedef typename XprType::Nested XprTypeNested;$/;"	t	struct:Eigen::internal::traits
Xw	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  Vector3d Xw;$/;"	m	class:g2o::EdgeSE3ProjectXYZOnlyPose
Xw	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  Vector3d Xw;$/;"	m	class:g2o::EdgeStereoSE3ProjectXYZOnlyPose
YOU_ALREADY_SPECIFIED_THIS_STRIDE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        YOU_ALREADY_SPECIFIED_THIS_STRIDE,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
YOU_ARE_TRYING_TO_USE_AN_INDEX_BASED_ACCESSOR_ON_AN_EXPRESSION_THAT_DOES_NOT_SUPPORT_THAT	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        YOU_ARE_TRYING_TO_USE_AN_INDEX_BASED_ACCESSOR_ON_AN_EXPRESSION_THAT_DOES_NOT_SUPPORT_THAT,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
YOU_CALLED_A_DYNAMIC_SIZE_METHOD_ON_A_FIXED_SIZE_MATRIX_OR_VECTOR	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        YOU_CALLED_A_DYNAMIC_SIZE_METHOD_ON_A_FIXED_SIZE_MATRIX_OR_VECTOR,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
YOU_CALLED_A_FIXED_SIZE_METHOD_ON_A_DYNAMIC_SIZE_MATRIX_OR_VECTOR	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        YOU_CALLED_A_FIXED_SIZE_METHOD_ON_A_DYNAMIC_SIZE_MATRIX_OR_VECTOR,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
YOU_CANNOT_MIX_ARRAYS_AND_MATRICES	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        YOU_CANNOT_MIX_ARRAYS_AND_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
YOU_MADE_A_PROGRAMMING_MISTAKE	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        YOU_MADE_A_PROGRAMMING_MISTAKE,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
YOU_MIXED_VECTORS_OF_DIFFERENT_SIZES	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        YOU_MIXED_VECTORS_OF_DIFFERENT_SIZES,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
YOU_PASSED_A_COLUMN_VECTOR_BUT_A_ROW_VECTOR_WAS_EXPECTED	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        YOU_PASSED_A_COLUMN_VECTOR_BUT_A_ROW_VECTOR_WAS_EXPECTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
YOU_PASSED_A_ROW_VECTOR_BUT_A_COLUMN_VECTOR_WAS_EXPECTED	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        YOU_PASSED_A_ROW_VECTOR_BUT_A_COLUMN_VECTOR_WAS_EXPECTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
YOU_PERFORMED_AN_INVALID_TRANSFORMATION_CONVERSION	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        YOU_PERFORMED_AN_INVALID_TRANSFORMATION_CONVERSION,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^        YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX,$/;"	e	enum:Eigen::internal::static_assertion::__anon82
ZERO	./Thirdparty/DBoW2/DUtils/Timestamp.h	/^    ZERO = 0x2$/;"	e	enum:DUtils::Timestamp::tOptions
Zero	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Zero()$/;"	f	class:Eigen::DenseBase
Zero	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Zero(Index nbRows, Index nbCols)$/;"	f	class:Eigen::DenseBase
Zero	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Zero(Index size)$/;"	f	class:Eigen::DenseBase
ZeroDiag	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Constants.h	/^  ZeroDiag=0x8,$/;"	e	enum:Eigen::__anon70
ZeroSign	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	e	enum:Eigen::internal::SignMatrix
_ActualLhsType	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typedef typename internal::remove_all<ActualLhsType>::type _ActualLhsType;$/;"	t	class:Eigen::ProductBase
_ActualRhsType	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typedef typename internal::remove_all<ActualRhsType>::type _ActualRhsType;$/;"	t	class:Eigen::ProductBase
_Ai	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h	/^      int* _Ai;         \/\/\/< row indices of the CCS storage$/;"	m	class:g2o::MarginalCovarianceCholesky
_Ap	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h	/^      int* _Ap;         \/\/\/< column pointer of the CCS storage$/;"	m	class:g2o::MarginalCovarianceCholesky
_Ax	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h	/^      double* _Ax;      \/\/\/< values of the cholesky factor$/;"	m	class:g2o::MarginalCovarianceCholesky
_DInvSchur	./Thirdparty/g2o/g2o/core/block_solver.h	/^      SparseBlockMatrixDiagonal<LandmarkMatrixType>* _DInvSchur;$/;"	m	class:g2o::BlockSolver
_EIGEN_ACCUMULATE_PACKETS	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	280;"	d
_EIGEN_ACCUMULATE_PACKETS	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	336;"	d
_EIGEN_ACCUMULATE_PACKETS	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	559;"	d
_EIGEN_ACCUMULATE_PACKETS	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	70;"	d
_EIGEN_DECLARE_CONST_FAST_Packet4f	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	40;"	d
_EIGEN_DECLARE_CONST_FAST_Packet4i	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	43;"	d
_EIGEN_DECLARE_CONST_Packet2d	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	51;"	d
_EIGEN_DECLARE_CONST_Packet4f	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	46;"	d
_EIGEN_DECLARE_CONST_Packet4f	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	33;"	d
_EIGEN_DECLARE_CONST_Packet4f	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	48;"	d
_EIGEN_DECLARE_CONST_Packet4f_FROM_INT	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	49;"	d
_EIGEN_DECLARE_CONST_Packet4f_FROM_INT	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	36;"	d
_EIGEN_DECLARE_CONST_Packet4f_FROM_INT	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	54;"	d
_EIGEN_DECLARE_CONST_Packet4i	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	52;"	d
_EIGEN_DECLARE_CONST_Packet4i	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	39;"	d
_EIGEN_DECLARE_CONST_Packet4i	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	57;"	d
_EIGEN_SPARSE_PUBLIC_INTERFACE	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	46;"	d
_ExtractType	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  typedef Transpose<const typename Base::_ExtractType> _ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
_ExtractType	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  typedef XprType _ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
_H	./Thirdparty/g2o/g2o/solvers/linear_solver_dense.h	/^      Eigen::MatrixXd _H;$/;"	m	class:g2o::LinearSolverDense
_HasDirectAccess	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^      _HasDirectAccess = (int(Flags)&DirectAccessBit) ? 1 : 0 \/\/ workaround sunCC$/;"	e	enum:Eigen::SparseMatrixBase::__anon419
_Hll	./Thirdparty/g2o/g2o/core/block_solver.h	/^      SparseBlockMatrix<LandmarkMatrixType>* _Hll;$/;"	m	class:g2o::BlockSolver
_Hpl	./Thirdparty/g2o/g2o/core/block_solver.h	/^      SparseBlockMatrix<PoseLandmarkMatrixType>* _Hpl;$/;"	m	class:g2o::BlockSolver
_HplCCS	./Thirdparty/g2o/g2o/core/block_solver.h	/^      SparseBlockMatrixCCS<PoseLandmarkMatrixType>* _HplCCS;$/;"	m	class:g2o::BlockSolver
_Hpp	./Thirdparty/g2o/g2o/core/block_solver.h	/^      SparseBlockMatrix<PoseMatrixType>* _Hpp;$/;"	m	class:g2o::BlockSolver
_Hschur	./Thirdparty/g2o/g2o/core/block_solver.h	/^      SparseBlockMatrix<PoseMatrixType>* _Hschur;$/;"	m	class:g2o::BlockSolver
_HschurTransposedCCS	./Thirdparty/g2o/g2o/core/block_solver.h	/^      SparseBlockMatrixCCS<PoseMatrixType>* _HschurTransposedCCS;$/;"	m	class:g2o::BlockSolver
_Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^    typedef typename traits<T>::Index _Index;$/;"	t	struct:Eigen::internal::sparse_eval
_Index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^  typedef typename traits<T>::Index _Index;$/;"	t	struct:Eigen::internal::plain_matrix_type
_Lhs	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  typedef typename remove_all<Lhs>::type _Lhs;$/;"	t	struct:Eigen::internal::product_type
_Lhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef typename remove_all<Lhs>::type _Lhs;$/;"	t	struct:Eigen::internal::traits
_LhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_reference<LhsNested>::type _LhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
_LhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename remove_reference<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typedef typename internal::remove_all<LhsNested>::type _LhsNested;$/;"	t	class:Eigen::ProductBase
_LhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    typedef typename internal::traits<CoeffBasedProduct>::_LhsNested _LhsNested;$/;"	t	class:Eigen::CoeffBasedProduct
_LhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef typename remove_all<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename traits<CwiseBinaryXpr>::_LhsNested _LhsNested;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
_LhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    typedef typename Traits::_LhsNested _LhsNested;$/;"	t	class:Eigen::SparseDenseOuterProduct
_LhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename remove_all<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typedef typename internal::remove_all<LhsNested>::type _LhsNested;$/;"	t	class:Eigen::SparseDiagonalProduct
_LhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    typedef typename internal::traits<SparseSparseProduct>::_LhsNested _LhsNested;$/;"	t	class:Eigen::SparseSparseProduct
_LhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^  typedef typename remove_all<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<LhsScalar>::type  _LhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
_LhsPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename packet_traits<LhsScalar>::type  _LhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
_LinearAccessMask	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    _LinearAccessMask = (RowsAtCompileTime==1 || ColsAtCompileTime==1) ? LinearAccessBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon171
_MatrixType	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename internal::pastix_traits<Derived>::MatrixType _MatrixType;$/;"	t	class:Eigen::PastixBase
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^  typedef typename remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    typedef typename internal::traits<Replicate>::_MatrixTypeNested _MatrixTypeNested;$/;"	t	class:Eigen::Replicate
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::traits<PartialReduxExpr>::_MatrixTypeNested _MatrixTypeNested;$/;"	t	class:Eigen::PartialReduxExpr
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename internal::remove_all<typename SparseMatrixType::Nested>::type _MatrixTypeNested;$/;"	t	class:Eigen::BlockImpl
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename internal::remove_all<typename XprType::Nested>::type _MatrixTypeNested;$/;"	t	class:Eigen::BlockImpl
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^  typedef typename internal::remove_all<typename XprType::Nested>::type _MatrixTypeNested;$/;"	t	class:Eigen::BlockImpl
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename internal::traits<Derived>::_MatrixTypeNested _MatrixTypeNested;$/;"	t	class:Eigen::CwiseUnaryViewImpl
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename internal::traits<Derived>::_XprTypeNested _MatrixTypeNested;$/;"	t	class:Eigen::CwiseUnaryOpImpl
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename internal::remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	class:Eigen::SparseSelfAdjointView
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename internal::remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename internal::remove_all<typename MatrixType::Nested>::type _MatrixTypeNested;$/;"	t	class:Eigen::TransposeImpl
_MatrixTypeNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  typedef typename internal::remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	class:Eigen::SparseView
_Options	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^    enum { _Options = ((traits<T>::Flags&RowMajorBit)==RowMajorBit) ? RowMajor : ColMajor };$/;"	e	enum:Eigen::internal::sparse_eval::__anon401
_Options	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^  enum { _Options = ((traits<T>::Flags&RowMajorBit)==RowMajorBit) ? RowMajor : ColMajor };$/;"	e	enum:Eigen::internal::plain_matrix_type::__anon402
_REGISTRATING_H_	./include/Registrating.h	2;"	d
_ResPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<ResScalar>::type  _ResPacket;$/;"	t	class:Eigen::internal::gebp_traits
_ResPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename packet_traits<ResScalar>::type  _ResPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
_Rhs	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  typedef typename remove_all<Rhs>::type _Rhs;$/;"	t	struct:Eigen::internal::product_type
_Rhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef typename remove_all<Rhs>::type _Rhs;$/;"	t	struct:Eigen::internal::traits
_RhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_reference<RhsNested>::type _RhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
_RhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename remove_reference<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typedef typename internal::remove_all<RhsNested>::type _RhsNested;$/;"	t	class:Eigen::ProductBase
_RhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    typedef typename internal::traits<CoeffBasedProduct>::_RhsNested _RhsNested;$/;"	t	class:Eigen::CoeffBasedProduct
_RhsNested	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef typename remove_all<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename traits<CwiseBinaryXpr>::_RhsNested _RhsNested;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
_RhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    typedef typename Traits::_RhsNested _RhsNested;$/;"	t	class:Eigen::SparseDenseOuterProduct
_RhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename remove_all<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typedef typename internal::remove_all<RhsNested>::type _RhsNested;$/;"	t	class:Eigen::SparseDiagonalProduct
_RhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    typedef typename internal::traits<SparseSparseProduct>::_RhsNested _RhsNested;$/;"	t	class:Eigen::SparseSparseProduct
_RhsNested	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^  typedef typename remove_all<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<RhsScalar>::type  _RhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
_RhsPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename packet_traits<RhsScalar>::type  _RhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
_SameTypes	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    _SameTypes = is_same<typename MatrixType::Scalar, typename DiagonalType::Scalar>::value,$/;"	e	enum:Eigen::internal::traits::__anon171
_Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^    typedef typename traits<T>::Scalar _Scalar;$/;"	t	struct:Eigen::internal::sparse_eval
_Scalar	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^  typedef typename traits<T>::Scalar _Scalar;$/;"	t	struct:Eigen::internal::plain_matrix_type
_ScalarAccessOnDiag	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    _ScalarAccessOnDiag =  !((int(_StorageOrder) == ColMajor && int(ProductOrder) == OnTheLeft)$/;"	e	enum:Eigen::internal::traits::__anon171
_StorageOrder	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    _StorageOrder = MatrixType::Flags & RowMajorBit ? RowMajor : ColMajor,$/;"	e	enum:Eigen::internal::traits::__anon171
_Vectorizable	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    _Vectorizable = bool(int(MatrixType::Flags)&PacketAccessBit) && _SameTypes && (_ScalarAccessOnDiag || (bool(int(DiagonalType::DiagonalVectorType::Flags)&PacketAccessBit))),$/;"	e	enum:Eigen::internal::traits::__anon171
_XprTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^  typedef typename remove_reference<XprTypeNested>::type _XprTypeNested;$/;"	t	struct:Eigen::internal::traits
_XprTypeNested	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^  typedef typename remove_reference<XprTypeNested>::type _XprTypeNested;$/;"	t	struct:Eigen::internal::traits
__D_RANDOM__	./Thirdparty/DBoW2/DUtils/Random.h	13;"	d
__D_TIMESTAMP__	./Thirdparty/DBoW2/DUtils/Timestamp.h	11;"	d
__D_T_BOW_VECTOR__	./Thirdparty/DBoW2/DBoW2/BowVector.h	11;"	d
__D_T_FCLASS__	./Thirdparty/DBoW2/DBoW2/FClass.h	11;"	d
__D_T_FEATURE_VECTOR__	./Thirdparty/DBoW2/DBoW2/FeatureVector.h	11;"	d
__D_T_F_ORB__	./Thirdparty/DBoW2/DBoW2/FORB.h	11;"	d
__D_T_SCORING_OBJECT__	./Thirdparty/DBoW2/DBoW2/ScoringObject.h	11;"	d
__D_T_TEMPLATED_VOCABULARY__	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	18;"	d
__PRETTY_FUNCTION__	./Thirdparty/g2o/g2o/stuff/macros.h	62;"	d
__PRETTY_FUNCTION__	./Thirdparty/g2o/g2o/stuff/macros.h	95;"	d
__SCORING_CLASS	./Thirdparty/DBoW2/DBoW2/ScoringObject.h	53;"	d
__SCORING_CLASS	./Thirdparty/DBoW2/DBoW2/ScoringObject.h	91;"	d
__pld	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	53;"	d
_action	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^        HyperGraphElementAction* _action;$/;"	m	class:g2o::RegisterActionProxy
_actionMap	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^      ActionMap _actionMap;$/;"	m	class:g2o::HyperGraphElementActionCollection
_actionMap	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^      HyperGraphElementAction::ActionMap _actionMap;$/;"	m	class:g2o::HyperGraphActionLibrary
_activeEdges	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    EdgeContainer _activeEdges;        \/\/\/< sorted according to EdgeIDCompare$/;"	m	class:g2o::SparseOptimizer
_activeVertices	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    VertexContainer _activeVertices;   \/\/\/< sorted according to VertexIDCompare$/;"	m	class:g2o::SparseOptimizer
_additionalVectorSpace	./Thirdparty/g2o/g2o/core/solver.h	/^      size_t _additionalVectorSpace;$/;"	m	class:g2o::Solver
_adjacencyMap	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^      AdjacencyMap _adjacencyMap;$/;"	m	class:g2o::EstimatePropagator
_adjacencyMap	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^    AdjacencyMap _adjacencyMap;$/;"	m	struct:g2o::HyperDijkstra
_algorithm	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    OptimizationAlgorithm* _algorithm;$/;"	m	class:g2o::SparseOptimizer
_auxVector	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      Eigen::VectorXd _auxVector;   \/\/\/< auxilary vector used to perform multiplications or other stuff$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_b	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    Matrix<double, D, 1> _b;$/;"	m	class:g2o::BaseVertex
_b	./Thirdparty/g2o/g2o/core/solver.h	/^      double* _b;$/;"	m	class:g2o::Solver
_backup	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    BackupStackType _backup;$/;"	m	class:g2o::BaseVertex
_batchStatistics	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    BatchStatisticsContainer _batchStatistics;   \/\/\/< global statistics of the optimizer, e.g., timing, num-non-zeros$/;"	m	class:g2o::SparseOptimizer
_blockCols	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    std::vector <IntBlockMap> _blockCols;$/;"	m	class:g2o::SparseBlockMatrix
_blockCols	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      std::vector<SparseColumn> _blockCols;     \/\/\/< the matrices stored in CCS order$/;"	m	class:g2o::SparseBlockMatrixCCS
_blockCols	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      std::vector<SparseColumn> _blockCols;     \/\/\/< the matrices stored in CCS order$/;"	m	class:g2o::SparseBlockMatrixHashMap
_blockIndices	./Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      const std::vector<int>& _blockIndices; \/\/\/< vector of the indices of the blocks along the diagonal$/;"	m	class:g2o::SparseBlockMatrixDiagonal
_blockOrdering	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    bool _blockOrdering;$/;"	m	class:g2o::LinearSolverEigen
_bschur	./Thirdparty/g2o/g2o/core/block_solver.h	/^      double* _bschur;$/;"	m	class:g2o::BlockSolver
_cacheContainer	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        CacheContainer* _cacheContainer;$/;"	m	class:g2o::OptimizableGraph::Vertex
_cacheIds	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        std::vector<int> _cacheIds;$/;"	m	class:g2o::OptimizableGraph::Edge
_ccsMatrix	./Thirdparty/g2o/g2o/core/linear_solver.h	/^    SparseBlockMatrixCCS<MatrixType>* _ccsMatrix;$/;"	m	class:g2o::LinearSolverCCS
_check_template_params	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    static EIGEN_STRONG_INLINE void _check_template_params()$/;"	f	class:Eigen::PlainObjectBase
_check_template_params	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    static EIGEN_STRONG_INLINE void _check_template_params()$/;"	f	class:Eigen::Quaternion
_child	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^          OptimizableGraph::Vertex* _child;$/;"	m	class:g2o::EstimatePropagator::AdjacencyMapEntry
_child	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^      HyperGraph::Vertex* _child;$/;"	m	struct:g2o::HyperDijkstra::AdjacencyMapEntry
_children	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^      HyperGraph::VertexSet _children;$/;"	m	struct:g2o::HyperDijkstra::AdjacencyMapEntry
_cholesky	./Thirdparty/g2o/g2o/solvers/linear_solver_dense.h	/^      Eigen::LDLT<Eigen::MatrixXd> _cholesky;$/;"	m	class:g2o::LinearSolverDense
_cholesky	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    CholeskyDecomposition _cholesky;$/;"	m	class:g2o::LinearSolverEigen
_coefficients	./Thirdparty/g2o/g2o/core/block_solver.h	/^      double* _coefficients;$/;"	m	class:g2o::BlockSolver
_coefficientsMutex	./Thirdparty/g2o/g2o/core/block_solver.h	/^      std::vector<OpenMPMutex> _coefficientsMutex;$/;"	m	class:g2o::BlockSolver
_colBlockIndices	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    std::vector<int> _colBlockIndices; \/\/\/< vector of the indices of the blocks along the cols$/;"	m	class:g2o::SparseBlockMatrix
_colBlockIndices	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<int>& _colBlockIndices; \/\/\/< vector of the indices of the blocks along the cols$/;"	m	class:g2o::SparseBlockMatrixCCS
_colBlockIndices	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<int>& _colBlockIndices; \/\/\/< vector of the indices of the blocks along the cols$/;"	m	class:g2o::SparseBlockMatrixHashMap
_colInHessian	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        int _colInHessian;$/;"	m	class:g2o::OptimizableGraph::Vertex
_compute	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^void HessenbergDecomposition<MatrixType>::_compute(MatrixType& matA, CoeffVectorType& hCoeffs, VectorType& temp)$/;"	f	class:Eigen::HessenbergDecomposition
_computeBatchStatistics	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    bool _computeBatchStatistics;$/;"	m	class:g2o::SparseOptimizer
_container	./Thirdparty/g2o/g2o/core/cache.h	/^      CacheContainer* _container;$/;"	m	class:g2o::Cache
_creator	./Thirdparty/g2o/g2o/core/factory.h	/^      CreatorMap _creator;     \/\/\/< look-up map for the existing creators$/;"	m	class:g2o::Factory
_creator	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	/^      AbstractOptimizationAlgorithmCreator* _creator;$/;"	m	class:g2o::RegisterOptimizationAlgorithmProxy
_creator	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	/^      CreatorList _creator;$/;"	m	class:g2o::OptimizationAlgorithmFactory
_creator	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	/^      CreatorMap _creator;     \/\/\/< look-up map for the existing creators$/;"	m	class:g2o::RobustKernelFactory
_currentLambda	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      double _currentLambda;        \/\/\/< the damping factor to force positive definite matrix$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_currentLambda	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      double _currentLambda;$/;"	m	class:g2o::OptimizationAlgorithmLevenberg
_data	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Storage& _data() { return m_data; }$/;"	f	class:Eigen::SparseVector
_data	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED const Storage& _data() const { return m_data; }$/;"	f	class:Eigen::SparseVector
_delta	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      double _delta;                \/\/\/< trust region$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_delta	./Thirdparty/g2o/g2o/core/robust_kernel.h	/^      double _delta;$/;"	m	class:g2o::RobustKernel
_deltaSqr	./Thirdparty/g2o/g2o/core/robust_kernel_impl.h	/^      float _deltaSqr;$/;"	m	class:g2o::RobustKernelTukey
_diag	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h	/^      std::vector<double> _diag;  \/\/\/< cache 1 \/ H_ii to avoid recalculations$/;"	m	class:g2o::MarginalCovarianceCholesky
_diagonal	./Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      DiagonalVector _diagonal;$/;"	m	class:g2o::SparseBlockMatrixDiagonal
_diagonalBackupLandmark	./Thirdparty/g2o/g2o/core/block_solver.h	/^      std::vector<LandmarkVectorType, Eigen::aligned_allocator<LandmarkVectorType> > _diagonalBackupLandmark;$/;"	m	class:g2o::BlockSolver
_diagonalBackupPose	./Thirdparty/g2o/g2o/core/block_solver.h	/^      std::vector<PoseVectorType, Eigen::aligned_allocator<PoseVectorType> > _diagonalBackupPose;$/;"	m	class:g2o::BlockSolver
_dimension	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        int _dimension;$/;"	m	class:g2o::OptimizableGraph::Edge
_dimension	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        int _dimension;$/;"	m	class:g2o::OptimizableGraph::Vertex
_distance	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^          double _distance;$/;"	m	class:g2o::EstimatePropagator::AdjacencyMapEntry
_distance	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^      double _distance;$/;"	m	struct:g2o::HyperDijkstra::AdjacencyMapEntry
_doSchur	./Thirdparty/g2o/g2o/core/block_solver.h	/^      bool _doSchur;$/;"	m	class:g2o::BlockSolver
_edge	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^          OptimizableGraph::Edge* _edge;$/;"	m	class:g2o::EstimatePropagator::AdjacencyMapEntry
_edge	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^      HyperGraph::Edge* _edge;$/;"	m	struct:g2o::HyperDijkstra::AdjacencyMapEntry
_edge_has_id	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    bool _edge_has_id;$/;"	m	struct:g2o::OptimizableGraph
_edges	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^          EdgeSet _edges;$/;"	m	class:g2o::HyperGraph::Vertex
_edges	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^      EdgeSet _edges;$/;"	m	class:g2o::HyperGraph
_error	./Thirdparty/g2o/g2o/core/base_edge.h	/^      ErrorVector _error;$/;"	m	class:g2o::BaseEdge
_estimate	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    EstimateType _estimate;$/;"	m	class:g2o::BaseVertex
_expression	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    const ExpressionType& _expression() const { return m_matrix; }$/;"	f	class:Eigen::Flagged
_expression	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    const MatrixTypeNestedCleaned& _expression() const { return m_matrix; }$/;"	f	class:Eigen::SelfAdjointView
_expression	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    inline const ExpressionType& _expression() const { return m_matrix; }$/;"	f	class:Eigen::VectorwiseOp
_expression	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Cwise.h	/^    inline const ExpressionType& _expression() const { return m_matrix; }$/;"	f	class:Eigen::Cwise
_fix_scale	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^    bool _fix_scale;$/;"	m	class:g2o::VertexSim3Expmap
_fixed	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        bool _fixed;$/;"	m	class:g2o::OptimizableGraph::Vertex
_focal_length1	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^    Vector2d _focal_length1, _focal_length2;$/;"	m	class:g2o::VertexSim3Expmap
_focal_length2	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^    Vector2d _focal_length1, _focal_length2;$/;"	m	class:g2o::VertexSim3Expmap
_forceStopFlag	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    bool* _forceStopFlag;$/;"	m	class:g2o::SparseOptimizer
_frontierLevel	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^          int _frontierLevel;$/;"	m	class:g2o::EstimatePropagator::AdjacencyMapEntry
_globalStats	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    static G2OBatchStatistics* _globalStats;$/;"	m	struct:g2o::G2OBatchStatistics
_goodStepLowerScale	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      double _goodStepLowerScale; \/\/\/< lower bound for lambda decrease if a good LM step$/;"	m	class:g2o::OptimizationAlgorithmLevenberg
_goodStepUpperScale	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      double _goodStepUpperScale; \/\/\/< upper bound for lambda decrease if a good LM step$/;"	m	class:g2o::OptimizationAlgorithmLevenberg
_graph	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^      OptimizableGraph* _graph;$/;"	m	class:g2o::EstimatePropagator
_graph	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^      SparseOptimizer* _graph;$/;"	m	class:g2o::EstimatePropagatorCost
_graph	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^    HyperGraph* _graph;$/;"	m	struct:g2o::HyperDijkstra
_graph	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        OptimizableGraph* _graph;$/;"	m	class:g2o::OptimizableGraph::Vertex
_graphActions	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    std::vector<HyperGraphActionSet> _graphActions;$/;"	m	struct:g2o::OptimizableGraph
_hasStorage	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    bool _hasStorage;$/;"	m	class:g2o::SparseBlockMatrix
_hdl	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      Eigen::VectorXd _hdl;         \/\/\/< final dogleg step$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_hessian	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      HessianBlockType _hessian;$/;"	m	class:g2o::BaseBinaryEdge
_hessian	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    HessianBlockType _hessian;$/;"	m	class:g2o::BaseVertex
_hessianIndex	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        int _hessianIndex;$/;"	m	class:g2o::OptimizableGraph::Vertex
_hessianTransposed	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      HessianBlockTransposedType _hessianTransposed;$/;"	m	class:g2o::BaseBinaryEdge
_hsd	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      Eigen::VectorXd _hsd;         \/\/\/< steepest decent step$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_id	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^          int _id; \/\/\/< unique id$/;"	m	class:g2o::HyperGraph::Edge
_id	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^          int _id;$/;"	m	class:g2o::HyperGraph::Vertex
_id	./Thirdparty/g2o/g2o/core/parameter.h	/^        int _id;$/;"	m	class:g2o::Parameter
_information	./Thirdparty/g2o/g2o/core/base_edge.h	/^      InformationType _information;$/;"	m	class:g2o::BaseEdge
_init	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    bool _init;$/;"	m	class:g2o::LinearSolverEigen
_init2	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init2(Index nbRows, Index nbCols, typename internal::enable_if<Base::SizeAtCompileTime!=2,T0>::type* = 0)$/;"	f	class:Eigen::PlainObjectBase
_init2	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init2(const Scalar& val0, const Scalar& val1, typename internal::enable_if<Base::SizeAtCompileTime==2,T0>::type* = 0)$/;"	f	class:Eigen::PlainObjectBase
_initialLambda	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      Property<double>* _initialLambda;$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_internalId	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        long long _internalId;$/;"	m	class:g2o::OptimizableGraph::Edge
_invDeltaSqr	./Thirdparty/g2o/g2o/core/robust_kernel_impl.h	/^      float _invDeltaSqr;$/;"	m	class:g2o::RobustKernelTukey
_isLevenberg	./Thirdparty/g2o/g2o/core/solver.h	/^      bool _isLevenberg; \/\/\/< the system we gonna solve is a Levenberg-Marquardt system$/;"	m	class:g2o::Solver
_isMainStorage	./Thirdparty/g2o/g2o/core/parameter_container.h	/^      bool _isMainStorage;$/;"	m	class:g2o::ParameterContainer
_ivMap	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    VertexContainer _ivMap;$/;"	m	class:g2o::SparseOptimizer
_jacobianOplus	./Thirdparty/g2o/g2o/core/base_multi_edge.h	/^      std::vector<JacobianType, aligned_allocator<JacobianType> > _jacobianOplus; \/\/\/< jacobians of the edge (w.r.t. oplus)$/;"	m	class:g2o::BaseMultiEdge
_jacobianOplusXi	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      JacobianXiOplusType _jacobianOplusXi;$/;"	m	class:g2o::BaseBinaryEdge
_jacobianOplusXj	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      JacobianXjOplusType _jacobianOplusXj;$/;"	m	class:g2o::BaseBinaryEdge
_jacobianWorkspace	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    JacobianWorkspace _jacobianWorkspace;$/;"	m	struct:g2o::OptimizableGraph
_kernel	./Thirdparty/g2o/g2o/core/robust_kernel_impl.h	/^      RobustKernelPtr _kernel;$/;"	m	class:g2o::RobustKernelScaleDelta
_lamdbaFactor	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      Property<double>* _lamdbaFactor;$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_lastNumTries	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      int _lastNumTries;$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_lastStep	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      int _lastStep;                \/\/\/< type of the step taken by the algorithm$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_level	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        int _level;$/;"	m	class:g2o::OptimizableGraph::Edge
_levenbergIterations	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      int _levenbergIterations;   \/\/\/< the numer of levenberg iterations performed to accept the last step$/;"	m	class:g2o::OptimizationAlgorithmLevenberg
_linearSolver	./Thirdparty/g2o/g2o/core/block_solver.h	/^      LinearSolver<PoseMatrixType>* _linearSolver;$/;"	m	class:g2o::BlockSolver
_lock	./Thirdparty/g2o/g2o/core/openmp_mutex.h	/^      omp_lock_t _lock;$/;"	m	class:g2o::OpenMPMutex
_map	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h	/^      LookupMap _map;             \/\/\/< hash look up table for the already computed entries$/;"	m	class:g2o::MarginalCovarianceCholesky
_marginalized	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        bool _marginalized;$/;"	m	class:g2o::OptimizableGraph::Vertex
_maxDimension	./Thirdparty/g2o/g2o/core/jacobian_workspace.h	/^      int _maxDimension;            \/\/\/< the maximum dimension (number of elements) for a Jacobian$/;"	m	class:g2o::JacobianWorkspace
_maxNumVertices	./Thirdparty/g2o/g2o/core/jacobian_workspace.h	/^      int _maxNumVertices;          \/\/\/< the maximum number of vertices connected by a hyper-edge$/;"	m	class:g2o::JacobianWorkspace
_maxTrialsAfterFailure	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      Property<int>* _maxTrialsAfterFailure;$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_maxTrialsAfterFailure	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      Property<int>* _maxTrialsAfterFailure;$/;"	m	class:g2o::OptimizationAlgorithmLevenberg
_maxXSize	./Thirdparty/g2o/g2o/core/solver.h	/^      size_t _xSize, _maxXSize;$/;"	m	class:g2o::Solver
_measurement	./Thirdparty/g2o/g2o/core/base_edge.h	/^      Measurement _measurement;$/;"	m	class:g2o::BaseEdge
_mutex	./Thirdparty/g2o/g2o/core/openmp_mutex.h	/^      OpenMPMutex* const _mutex;$/;"	m	class:g2o::ScopedOpenMPMutex
_n	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h	/^      int _n;           \/\/\/< L is an n X n matrix$/;"	m	class:g2o::MarginalCovarianceCholesky
_nBad	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      int _nBad;$/;"	m	class:g2o::OptimizationAlgorithmLevenberg
_name	./Thirdparty/g2o/g2o/core/creators.h	/^      std::string _name;$/;"	m	class:g2o::HyperGraphElementCreator
_name	./Thirdparty/g2o/g2o/core/factory.h	/^      std::string _name;$/;"	m	class:g2o::RegisterTypeProxy
_name	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^      std::string _name;$/;"	m	class:g2o::HyperGraphElementAction
_name	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	/^      std::string _name;$/;"	m	class:g2o::RegisterRobustKernelProxy
_name	./Thirdparty/g2o/g2o/stuff/property.h	/^      std::string _name;$/;"	m	class:g2o::BaseProperty
_next	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        Data* _next; \/\/ linked list of multiple data;$/;"	m	class:g2o::OptimizableGraph::Data
_nextEdgeId	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    long long _nextEdgeId;$/;"	m	struct:g2o::OptimizableGraph
_ni	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      double _ni;$/;"	m	class:g2o::OptimizationAlgorithmLevenberg
_numLandmarks	./Thirdparty/g2o/g2o/core/block_solver.h	/^      int _numPoses, _numLandmarks;$/;"	m	class:g2o::BlockSolver
_numPoses	./Thirdparty/g2o/g2o/core/block_solver.h	/^      int _numPoses, _numLandmarks;$/;"	m	class:g2o::BlockSolver
_optimizer	./Thirdparty/g2o/g2o/core/optimization_algorithm.h	/^      SparseOptimizer* _optimizer;   \/\/\/< the optimizer the solver is working on$/;"	m	class:g2o::OptimizationAlgorithm
_optimizer	./Thirdparty/g2o/g2o/core/solver.h	/^      SparseOptimizer* _optimizer;$/;"	m	class:g2o::Solver
_parameterIds	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        std::vector<int> _parameterIds;$/;"	m	class:g2o::OptimizableGraph::Edge
_parameterTypes	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        std::vector<std::string> _parameterTypes;$/;"	m	class:g2o::OptimizableGraph::Edge
_parameters	./Thirdparty/g2o/g2o/core/cache.h	/^          ParameterVector _parameters;$/;"	m	class:g2o::Cache::CacheKey
_parameters	./Thirdparty/g2o/g2o/core/cache.h	/^      ParameterVector _parameters;$/;"	m	class:g2o::Cache
_parameters	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        std::vector<Parameter**> _parameters;$/;"	m	class:g2o::OptimizableGraph::Edge
_parameters	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    ParameterContainer _parameters;$/;"	m	struct:g2o::OptimizableGraph
_parent	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^          OptimizableGraph::VertexSet _parent;$/;"	m	class:g2o::EstimatePropagator::AdjacencyMapEntry
_parent	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^      HyperGraph::Vertex* _parent;$/;"	m	struct:g2o::HyperDijkstra::AdjacencyMapEntry
_parentCaches	./Thirdparty/g2o/g2o/core/cache.h	/^      std::vector<Cache*> _parentCaches;$/;"	m	class:g2o::Cache
_perm	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h	/^      int* _perm;       \/\/\/< permutation of the cholesky factor. Variable re-ordering for better fill-in$/;"	m	class:g2o::MarginalCovarianceCholesky
_previousParams	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^    Parameters* _previousParams;$/;"	m	class:g2o::DrawAction
_principle_point1	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^    Vector2d _principle_point1, _principle_point2;$/;"	m	class:g2o::VertexSim3Expmap
_principle_point2	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^    Vector2d _principle_point1, _principle_point2;$/;"	m	class:g2o::VertexSim3Expmap
_properties	./Thirdparty/g2o/g2o/core/optimization_algorithm.h	/^      PropertyMap _properties;       \/\/\/< the properties of your solver, use this to store the parameters of your solver$/;"	m	class:g2o::OptimizationAlgorithm
_property	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	/^      OptimizationAlgorithmProperty _property;$/;"	m	class:g2o::AbstractOptimizationAlgorithmCreator
_quadraticFormMutex	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        OpenMPMutex _quadraticFormMutex;$/;"	m	class:g2o::OptimizableGraph::Vertex
_r	./Thirdparty/g2o/g2o/types/se3quat.h	/^      Quaterniond _r;$/;"	m	class:g2o::SE3Quat
_renamedTypesLookup	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    std::map<std::string, std::string> _renamedTypesLookup;$/;"	m	struct:g2o::OptimizableGraph
_reset	./Thirdparty/g2o/g2o/solvers/linear_solver_dense.h	/^      bool _reset;$/;"	m	class:g2o::LinearSolverDense
_resize_to_match	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _resize_to_match(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_robustKernel	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        RobustKernel* _robustKernel;$/;"	m	class:g2o::OptimizableGraph::Edge
_rowBlockIndices	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    std::vector<int> _rowBlockIndices; \/\/\/< vector of the indices of the blocks along the rows.$/;"	m	class:g2o::SparseBlockMatrix
_rowBlockIndices	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<int>& _rowBlockIndices; \/\/\/< vector of the indices of the blocks along the rows.$/;"	m	class:g2o::SparseBlockMatrixCCS
_rowBlockIndices	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<int>& _rowBlockIndices; \/\/\/< vector of the indices of the blocks along the rows.$/;"	m	class:g2o::SparseBlockMatrixHashMap
_set	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& _set(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_set_noalias	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& _set_noalias(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_set_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _set_selector(const OtherDerived& other, const internal::false_type&) { _set_noalias(other); }$/;"	f	class:Eigen::PlainObjectBase
_set_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _set_selector(const OtherDerived& other, const internal::true_type&) { _set_noalias(other.eval()); }$/;"	f	class:Eigen::PlainObjectBase
_show	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^    BoolProperty* _show;$/;"	m	class:g2o::DrawAction
_showId	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^    BoolProperty* _showId;$/;"	m	class:g2o::DrawAction
_sizeLandmarks	./Thirdparty/g2o/g2o/core/block_solver.h	/^      int _sizePoses, _sizeLandmarks;$/;"	m	class:g2o::BlockSolver
_sizePoses	./Thirdparty/g2o/g2o/core/block_solver.h	/^      int _sizePoses, _sizeLandmarks;$/;"	m	class:g2o::BlockSolver
_solve	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void _solve(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::CholmodBase
_solve	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void _solve(const SparseMatrix<RhsScalar,RhsOptions,RhsIndex> &b, SparseMatrix<DestScalar,DestOptions,DestIndex> &dest) const$/;"	f	class:Eigen::CholmodBase
_solve	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    void _solve(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::DiagonalPreconditioner
_solve	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  void _solve(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::BiCGSTAB
_solve	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  void _solve(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::ConjugateGradient
_solve	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    void _solve(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::IncompleteLUT
_solve	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^bool PastixBase<Base>::_solve (const MatrixBase<Rhs> &b, MatrixBase<Dest> &x) const$/;"	f	class:Eigen::PastixBase
_solve	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^bool PardisoImpl<Base>::_solve(const MatrixBase<BDerived> &b, MatrixBase<XDerived>& x) const$/;"	f	class:Eigen::PardisoImpl
_solve	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void _solve(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SPQR
_solve	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void _solve(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SimplicialCholesky
_solve	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void _solve(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SimplicialCholeskyBase
_solve	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    bool _solve(const MatrixBase<Rhs> &B, MatrixBase<Dest> &X_base) const$/;"	f	class:Eigen::SparseLU
_solve	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    bool _solve(const MatrixBase<Rhs> &B, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SparseQR
_solve	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperILU<MatrixType>::_solve(const MatrixBase<Rhs> &b, MatrixBase<Dest>& x) const$/;"	f	class:Eigen::SuperILU
_solve	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperLU<MatrixType>::_solve(const MatrixBase<Rhs> &b, MatrixBase<Dest>& x) const$/;"	f	class:Eigen::SuperLU
_solve	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^bool UmfPackLU<MatrixType>::_solve(const MatrixBase<BDerived> &b, MatrixBase<XDerived> &x) const$/;"	f	class:Eigen::UmfPackLU
_solveWithGuess	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  void _solveWithGuess(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::BiCGSTAB
_solveWithGuess	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  void _solveWithGuess(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::ConjugateGradient
_solve_sparse	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void _solve_sparse(const Rhs& b, SparseMatrix<DestScalar,DestOptions,DestIndex> &dest) const$/;"	f	class:Eigen::IterativeSolverBase
_solver	./Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h	/^      Solver* _solver;$/;"	m	class:g2o::OptimizationAlgorithmWithHessian
_sparseMatrix	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    SparseMatrix _sparseMatrix;$/;"	m	class:g2o::LinearSolverEigen
_startTime	./Thirdparty/g2o/g2o/stuff/timeutil.h	/^    double _startTime;$/;"	m	class:g2o::ScopeTime
_swap	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    void _swap(DenseBase<OtherDerived> const & other)$/;"	f	class:Eigen::PlainObjectBase
_t	./Thirdparty/g2o/g2o/types/se3quat.h	/^      Vector3d _t;$/;"	m	class:g2o::SE3Quat
_tagLookup	./Thirdparty/g2o/g2o/core/factory.h	/^      TagLookup _tagLookup;    \/\/\/< reverse look-up, class name to tag$/;"	m	class:g2o::Factory
_tau	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      double _tau;$/;"	m	class:g2o::OptimizationAlgorithmLevenberg
_title	./Thirdparty/g2o/g2o/stuff/timeutil.h	/^    std::string _title;$/;"	m	class:g2o::ScopeTime
_transformVector	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::_transformVector(Vector3 v) const$/;"	f	class:Eigen::QuaternionBase
_transformVector	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^    inline VectorType _transformVector(const OtherVectorType& v) const$/;"	f	class:Eigen::RotationBase
_type	./Thirdparty/g2o/g2o/core/cache.h	/^          std::string _type;$/;"	m	class:g2o::Cache::CacheKey
_typeName	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^      std::string _typeName;$/;"	m	class:g2o::HyperGraphElementAction
_updateNeeded	./Thirdparty/g2o/g2o/core/cache.h	/^      bool _updateNeeded;$/;"	m	class:g2o::Cache
_updateNeeded	./Thirdparty/g2o/g2o/core/cache.h	/^      bool _updateNeeded;$/;"	m	class:g2o::CacheContainer
_userData	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        Data* _userData;$/;"	m	class:g2o::OptimizableGraph::Vertex
_userDeltaInit	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      Property<double>* _userDeltaInit;$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_userLambdaInit	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      Property<double>* _userLambdaInit;$/;"	m	class:g2o::OptimizationAlgorithmLevenberg
_value	./Thirdparty/g2o/g2o/stuff/property.h	/^      T _value;$/;"	m	class:g2o::Property
_verbose	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    bool _verbose;$/;"	m	class:g2o::SparseOptimizer
_vertex	./Thirdparty/g2o/g2o/core/cache.h	/^      OptimizableGraph::Vertex* _vertex;$/;"	m	class:g2o::CacheContainer
_vertices	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^          VertexContainer _vertices;$/;"	m	class:g2o::HyperGraph::Edge
_vertices	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^      VertexIDMap _vertices;$/;"	m	class:g2o::HyperGraph
_visited	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^      OptimizableGraph::VertexSet _visited;$/;"	m	class:g2o::EstimatePropagator
_visited	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^    HyperGraph::VertexSet _visited;$/;"	m	struct:g2o::HyperDijkstra
_wasPDInAllIterations	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      bool _wasPDInAllIterations;   \/\/\/< the matrix we solve was positive definite in all iterations -> if not apply damping$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_workspace	./Thirdparty/g2o/g2o/core/jacobian_workspace.h	/^      WorkspaceVector _workspace;   \/\/\/< the memory pre-allocated for computing the Jacobians$/;"	m	class:g2o::JacobianWorkspace
_writeDebug	./Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h	/^      Property<bool>* _writeDebug;$/;"	m	class:g2o::OptimizationAlgorithmWithHessian
_writeDebug	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    bool _writeDebug;$/;"	m	class:g2o::LinearSolverEigen
_x	./Thirdparty/g2o/g2o/core/solver.h	/^      double* _x;$/;"	m	class:g2o::Solver
_xSize	./Thirdparty/g2o/g2o/core/solver.h	/^      size_t _xSize, _maxXSize;$/;"	m	class:g2o::Solver
a	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct has_none {int a[1];};$/;"	m	struct:Eigen::internal::has_none
a	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct has_std_result_type {int a[2];};$/;"	m	struct:Eigen::internal::has_std_result_type
a	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct has_tr1_result {int a[3];};$/;"	m	struct:Eigen::internal::has_tr1_result
a	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  enum { a = MatrixType::RowsAtCompileTime != Dynamic &&$/;"	e	enum:Eigen::internal::qr_preconditioner_should_do_anything::__anon354
abs	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::abs() const$/;"	f	class:Eigen::Cwise
abs	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^abs() const$/;"	f
abs	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	template<> inline double abs<double>(double x) { return fabs(x); }$/;"	f	namespace:nanoflann
abs	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	template<> inline float abs<float>(float x) { return fabsf(x); }$/;"	f	namespace:nanoflann
abs	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	template<> inline int abs<int>(int x) { return ::abs(x); }$/;"	f	namespace:nanoflann
abs	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	template<> inline long double abs<long double>(long double x) { return fabsl(x); }$/;"	f	namespace:nanoflann
abs	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	template<typename T> inline T abs(T x) { return (x<0) ? -x : x; }$/;"	f	namespace:nanoflann
abs2	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(abs2, Scalar) abs2(const Scalar& x)$/;"	f	namespace:Eigen::numext
abs2	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::abs2() const$/;"	f	class:Eigen::Cwise
abs2	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^abs2() const$/;"	f
abs2_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct abs2_impl$/;"	s	namespace:Eigen::internal
abs2_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct abs2_impl<std::complex<RealScalar> >$/;"	s	namespace:Eigen::internal
abs2_retval	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct abs2_retval$/;"	s	namespace:Eigen::internal
absDeterminant	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^typename MatrixType::RealScalar ColPivHouseholderQR<MatrixType>::absDeterminant() const$/;"	f	class:Eigen::ColPivHouseholderQR
absDeterminant	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^typename MatrixType::RealScalar FullPivHouseholderQR<MatrixType>::absDeterminant() const$/;"	f	class:Eigen::FullPivHouseholderQR
absDeterminant	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^typename MatrixType::RealScalar HouseholderQR<MatrixType>::absDeterminant() const$/;"	f	class:Eigen::HouseholderQR
absDeterminant	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^     Scalar absDeterminant()$/;"	f	class:Eigen::SparseLU
absDiagIndex	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    EIGEN_STRONG_INLINE Index absDiagIndex() const { return m_index.value()>0 ? m_index.value() : -m_index.value(); }$/;"	f	class:Eigen::Diagonal
absDistance	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline Scalar absDistance(const VectorType& p) const { return ei_abs(signedDistance(p)); }$/;"	f	class:Eigen::Hyperplane
absDistance	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  inline Scalar absDistance(const VectorType& p) const { using std::abs; return abs(signedDistance(p)); }$/;"	f	class:Eigen::Hyperplane
acc	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const AccPacket& c, const ResPacket& alpha, ResPacket& r) const$/;"	f	class:Eigen::internal::gebp_traits
acc	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const DoublePacket& c, const ResPacket& alpha, ResPacket& r) const$/;"	f	class:Eigen::internal::gebp_traits
acc	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const Scalar& c, const Scalar& alpha, Scalar& r) const { r += alpha * c; }$/;"	f	class:Eigen::internal::gebp_traits
accessors_level	./Thirdparty/sparseicp/include/Eigen/src/Core/util/ForwardDeclarations.h	/^template<typename Derived> struct accessors_level$/;"	s	namespace:Eigen::internal
accum_dist	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline DistanceType accum_dist(const U a, const V b, int dim) const$/;"	f	struct:nanoflann::L1_Adaptor
accum_dist	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline DistanceType accum_dist(const U a, const V b, int dim) const$/;"	f	struct:nanoflann::L2_Adaptor
accum_dist	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline DistanceType accum_dist(const U a, const V b, int dim) const$/;"	f	struct:nanoflann::L2_Simple_Adaptor
acos	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^acos() const$/;"	f
actionByName	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementAction* HyperGraphActionLibrary::actionByName(const std::string& name)$/;"	f	class:g2o::HyperGraphActionLibrary
actionLibInstance	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^      static HyperGraphActionLibrary* actionLibInstance;$/;"	m	class:g2o::HyperGraphActionLibrary
actionMap	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^      ActionMap& actionMap() {return _actionMap;}$/;"	f	class:g2o::HyperGraphElementActionCollection
actionMap	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^      inline HyperGraphElementAction::ActionMap& actionMap() {return _actionMap;}$/;"	f	class:g2o::HyperGraphActionLibrary
activeChi2	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  double SparseOptimizer::activeChi2( ) const$/;"	f	class:g2o::SparseOptimizer
activeEdges	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    const EdgeContainer& activeEdges() const { return _activeEdges;}$/;"	f	class:g2o::SparseOptimizer
activeRobustChi2	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  double SparseOptimizer::activeRobustChi2() const$/;"	f	class:g2o::SparseOptimizer
activeVertices	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    const VertexContainer& activeVertices() const { return _activeVertices;}$/;"	f	class:g2o::SparseOptimizer
add	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  bool SparseBlockMatrix<MatrixType>::add(SparseBlockMatrix*& dest) const {$/;"	f	class:g2o::SparseBlockMatrix
add	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    struct add  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() += src; } };$/;"	s	class:Eigen::GeneralProduct
add	./src/KeyFrameDatabase.cc	/^void KeyFrameDatabase::add(KeyFrame *pKF)$/;"	f	class:ORB_SLAM2::KeyFrameDatabase
addBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      MatrixType* addBlock(int r, int c, bool zeroBlock = false)$/;"	f	class:g2o::SparseBlockMatrixHashMap
addComputeErrorAction	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::addComputeErrorAction(HyperGraphAction* action)$/;"	f	class:g2o::SparseOptimizer
addEdge	./Thirdparty/g2o/g2o/core/hyper_graph.cpp	/^  bool HyperGraph::addEdge(Edge* e)$/;"	f	class:g2o::HyperGraph
addEdge	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::addEdge(HyperGraph::Edge* e_)$/;"	f	class:g2o::OptimizableGraph
addFeature	./Thirdparty/DBoW2/DBoW2/FeatureVector.cpp	/^void FeatureVector::addFeature(NodeId id, unsigned int i_feature)$/;"	f	class:DBoW2::FeatureVector
addGraph	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::addGraph(OptimizableGraph* g){$/;"	f	class:g2o::OptimizableGraph
addIfNotExist	./Thirdparty/DBoW2/DBoW2/BowVector.cpp	/^void BowVector::addIfNotExist(WordId id, WordValue v)$/;"	f	class:DBoW2::BowVector
addParameter	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    bool addParameter(Parameter* p) {$/;"	f	struct:g2o::OptimizableGraph
addParameter	./Thirdparty/g2o/g2o/core/parameter_container.cpp	/^  bool ParameterContainer::addParameter(Parameter* p){$/;"	f	class:g2o::ParameterContainer
addPoint	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline void addPoint(DistanceType dist, IndexType index)$/;"	f	class:nanoflann::KNNResultSet
addPoint	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline void addPoint(DistanceType dist, IndexType index)$/;"	f	class:nanoflann::RadiusResultSet
addPostIterationAction	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::addPostIterationAction(HyperGraphAction* action)$/;"	f	class:g2o::OptimizableGraph
addPreIterationAction	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::addPreIterationAction(HyperGraphAction* action)$/;"	f	class:g2o::OptimizableGraph
addProperty	./Thirdparty/g2o/g2o/stuff/property.cpp	/^  bool PropertyMap::addProperty(BaseProperty* p) {$/;"	f	class:g2o::PropertyMap
addTo	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    void addTo(MatrixBase<DenseDerived> &other) const$/;"	f	class:Eigen::DiagonalBase
addTo	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^  template<typename Dest> inline void addTo(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
addTo	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    inline void addTo(Dest& dest) const {$/;"	f	class:Eigen::GeneralProduct
addTo	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    inline void addTo(Dest& dst) const { scaleAndAddTo(dst, Scalar(1)); }$/;"	f	class:Eigen::ScaledProduct
addTo	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    inline void addTo(Dest& dst) const { scaleAndAddTo(dst,Scalar(1)); }$/;"	f	class:Eigen::ProductBase
addUserData	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^	void addUserData(Data* obs) { $/;"	f	class:g2o::OptimizableGraph::Vertex
addVertex	./Thirdparty/g2o/g2o/core/hyper_graph.cpp	/^  bool HyperGraph::addVertex(Vertex* v)$/;"	f	class:g2o::HyperGraph
addVertex	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::addVertex(HyperGraph::Vertex* v, Data* userData)$/;"	f	class:g2o::OptimizableGraph
addVertex	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    virtual bool addVertex(HyperGraph::Vertex* v) { return addVertex(v, 0);}$/;"	f	struct:g2o::OptimizableGraph
addWeight	./Thirdparty/DBoW2/DBoW2/BowVector.cpp	/^void BowVector::addWeight(WordId id, WordValue v)$/;"	f	class:DBoW2::BowVector
add_const	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const { typedef const T type; };$/;"	s	namespace:Eigen::internal
add_const	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const<T&> { typedef T& type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type            { typedef const T type;  };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T const* const>  { typedef T const* const type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T&>        { typedef T const& type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T* const>  { typedef T const* const type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T*>        { typedef T const* type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type_if_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^template<typename T> struct add_const_on_value_type_if_arithmetic$/;"	s	namespace:Eigen::internal
add_correspondence	./src/PnPsolver.cc	/^void PnPsolver::add_correspondence(double X, double Y, double Z, double u, double v)$/;"	f	class:ORB_SLAM2::PnPsolver
add_correspondence	./src/PoseSolver.cc	/^void PoseSolver::add_correspondence(double X, double Y, double Z, double u, double v)$/;"	f	class:ORB_SLAM2::PoseSolver
additionalVectorSpace	./Thirdparty/g2o/g2o/core/solver.h	/^      size_t additionalVectorSpace() const { return _additionalVectorSpace;}$/;"	f	class:g2o::Solver
address	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    const_pointer address( const_reference value ) const$/;"	f	class:Eigen::aligned_allocator
address	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    pointer address( reference value ) const$/;"	f	class:Eigen::aligned_allocator
adds	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^      adds(const Scalar& s) : m_scale(s) {}$/;"	f	struct:Eigen::GeneralProduct::adds
adds	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    struct adds {$/;"	s	class:Eigen::GeneralProduct
adj	./Thirdparty/g2o/g2o/types/se3quat.h	/^      Matrix<double, 6, 6> adj() const$/;"	f	class:g2o::SE3Quat
adjacencyMap	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^      AdjacencyMap& adjacencyMap() {return _adjacencyMap; }$/;"	f	class:g2o::EstimatePropagator
adjacencyMap	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^    AdjacencyMap& adjacencyMap() {return _adjacencyMap; }$/;"	f	struct:g2o::HyperDijkstra
adjoint	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^MatrixBase<Derived>::adjoint() const$/;"	f	class:Eigen::MatrixBase
adjoint	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline const TriangularView<const typename MatrixType::AdjointReturnType,TransposeMode> adjoint() const$/;"	f	class:Eigen::TriangularView
adjoint	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    ConjugateReturnType adjoint() const$/;"	f	class:Eigen::HouseholderSequence
adjoint	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation adjoint() const { using numext::conj; return JacobiRotation(conj(m_c), -m_s); }$/;"	f	class:Eigen::JacobiRotation
adjoint	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQRMatrixQTransposeReturnType<SPQRType> adjoint() const$/;"	f	struct:Eigen::SPQRMatrixQReturnType
adjoint	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    const AdjointReturnType adjoint() const { return transpose(); }$/;"	f	class:Eigen::SparseMatrixBase
adjoint	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  SparseQRMatrixQTransposeReturnType<SparseQRType> adjoint() const$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
adjointInPlace	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^inline void MatrixBase<Derived>::adjointInPlace()$/;"	f	class:Eigen::MatrixBase
affine	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline AffinePart affine() { return take_affine_part::run(m_matrix); }$/;"	f	class:Eigen::Transform
affine	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline ConstAffinePart affine() const { return take_affine_part::run(m_matrix); }$/;"	f	class:Eigen::Transform
algorithm	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    const OptimizationAlgorithm* algorithm() const { return _algorithm;}$/;"	f	class:g2o::SparseOptimizer
aligned_allocator	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    aligned_allocator( const aligned_allocator& )$/;"	f	class:Eigen::aligned_allocator
aligned_allocator	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    aligned_allocator( const aligned_allocator<U>& )$/;"	f	class:Eigen::aligned_allocator
aligned_allocator	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    aligned_allocator()$/;"	f	class:Eigen::aligned_allocator
aligned_allocator	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^class aligned_allocator$/;"	c	namespace:Eigen
aligned_allocator_indirection	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection() {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const EIGEN_ALIGNED_ALLOCATOR<T>& ) {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const EIGEN_ALIGNED_ALLOCATOR<U>& ) {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const aligned_allocator_indirection& ) : EIGEN_ALIGNED_ALLOCATOR<T>() {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const aligned_allocator_indirection<U>& ) {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^  class aligned_allocator_indirection : public EIGEN_ALIGNED_ALLOCATOR<T>$/;"	c	namespace:Eigen
aligned_delete	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<typename T> inline void aligned_delete(T *ptr, size_t size)$/;"	f	namespace:Eigen::internal
aligned_free	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline void aligned_free(void *ptr)$/;"	f	namespace:Eigen::internal
aligned_malloc	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline void* aligned_malloc(size_t size)$/;"	f	namespace:Eigen::internal
aligned_new	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<typename T> inline T* aligned_new(size_t size)$/;"	f	namespace:Eigen::internal
aligned_realloc	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline void* aligned_realloc(void *ptr, size_t new_size, size_t old_size)$/;"	f	namespace:Eigen::internal
aligned_stack_memory_handler	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    aligned_stack_memory_handler(T* ptr, size_t size, bool dealloc)$/;"	f	class:Eigen::internal::aligned_stack_memory_handler
aligned_stack_memory_handler	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<typename T> class aligned_stack_memory_handler$/;"	c	namespace:Eigen::internal
alignment	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    alignment = (Derived::Flags & AlignedBit) ? Aligned : Unaligned$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon195
all	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^inline bool DenseBase<Derived>::all() const$/;"	f	class:Eigen::DenseBase
all	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_all>::Type all() const$/;"	f	class:Eigen::VectorwiseOp
allFinite	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^inline bool DenseBase<Derived>::allFinite() const$/;"	f	class:Eigen::DenseBase
allVerticesFixed	./Thirdparty/g2o/g2o/core/base_binary_edge.hpp	/^bool BaseBinaryEdge<D, E, VertexXiType, VertexXjType>::allVerticesFixed() const$/;"	f	class:BaseBinaryEdge
allVerticesFixed	./Thirdparty/g2o/g2o/core/base_multi_edge.hpp	/^bool BaseMultiEdge<D, E>::allVerticesFixed() const$/;"	f	class:BaseMultiEdge
allVerticesFixed	./Thirdparty/g2o/g2o/core/base_unary_edge.hpp	/^bool BaseUnaryEdge<D, E, VertexXiType>::allVerticesFixed() const$/;"	f	class:BaseUnaryEdge
all_unroller	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^struct all_unroller$/;"	s	namespace:Eigen::internal
all_unroller	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^struct all_unroller<Derived, 0>$/;"	s	namespace:Eigen::internal
all_unroller	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^struct all_unroller<Derived, Dynamic>$/;"	s	namespace:Eigen::internal
alloc	./Thirdparty/g2o/g2o/core/matrix_structure.cpp	/^void MatrixStructure::alloc(int n_, int nz)$/;"	f	class:g2o::MatrixStructure
allocate	./Thirdparty/g2o/g2o/core/jacobian_workspace.cpp	/^bool JacobianWorkspace::allocate()$/;"	f	class:g2o::JacobianWorkspace
allocate	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    pointer allocate( size_type num, const void* hint = 0 )$/;"	f	class:Eigen::aligned_allocator
allocate	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, ColPivHouseholderQRPreconditioner>& svd)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, FullPivHouseholderQRPreconditioner>& svd)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, HouseholderQRPreconditioner>& svd)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, QRPreconditioner>&) {}$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^void JacobiSVD<MatrixType, QRPreconditioner>::allocate(Index rows, Index cols, unsigned int computationOptions)$/;"	f	class:Eigen::JacobiSVD
allocate	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		T* allocate(const size_t count = 1)$/;"	f	class:nanoflann::PooledAllocator
allocate	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	inline T* allocate(size_t count = 1)$/;"	f	namespace:nanoflann
allocateA	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline void allocateA() {}$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateA	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void allocateA()$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateAll	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline void allocateAll() {}$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateAll	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void allocateAll()$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateB	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline void allocateB() {}$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateB	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void allocateB()$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateW	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline void allocateW() {}$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateW	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void allocateW()$/;"	f	class:Eigen::internal::gemm_blocking_space
allocatedSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    inline size_t allocatedSize() const { return m_allocatedSize; }$/;"	f	class:Eigen::internal::CompressedStorage
alpha	./Thirdparty/sparseicp/ICP.h	/^        double alpha = 1.2;       \/\/\/ penalty increase factor$/;"	m	struct:SICP::Parameters
alpha	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    const Scalar& alpha() const { return m_alpha; }$/;"	f	class:Eigen::ScaledProduct
alphas	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    ComplexVectorType alphas() const$/;"	f	class:Eigen::GeneralizedEigenSolver
alphas	./include/PnPsolver.h	/^  double * pws, * us, * alphas, * pcs;$/;"	m	class:ORB_SLAM2::PnPsolver
alphas	./include/PoseSolver.h	/^  double * pws, * us, * alphas, * pcs;$/;"	m	class:ORB_SLAM2::PoseSolver
always_void	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^template<typename T> struct always_void { typedef void type; };$/;"	s	namespace:Eigen::internal
amd_flip	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Amd.h	/^template<typename T> inline T amd_flip(const T& i) { return -i-2; }$/;"	f	namespace:Eigen::internal
amd_mark	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Amd.h	/^template<typename T0, typename T1> inline void amd_mark(const T0* w, const T1& j) { return w[j] = amd_flip(w[j]); }$/;"	f	namespace:Eigen::internal
amd_marked	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Amd.h	/^template<typename T0, typename T1> inline bool amd_marked(const T0* w, const T1& j) { return w[j]<0; }$/;"	f	namespace:Eigen::internal
amd_unflip	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Amd.h	/^template<typename T> inline T amd_unflip(const T& i) { return i<0 ? amd_flip(i) : i; }$/;"	f	namespace:Eigen::internal
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner& analyzePattern(const MatType& )$/;"	f	class:Eigen::DiagonalPreconditioner
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner& analyzePattern(const MatrixType& ) { return *this; }$/;"	f	class:Eigen::IdentityPreconditioner
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar>::analyzePattern(const _MatrixType& amat)$/;"	f	class:Eigen::IncompleteLUT
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& analyzePattern(const MatrixType& A)$/;"	f	class:Eigen::IterativeSolverBase
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLDLT
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLLT
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLU
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::analyzePattern(ColSpMatrix& mat)$/;"	f	class:Eigen::PastixBase
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^Derived& PardisoImpl<Derived>::analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::PardisoImpl
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::SimplicialCholesky
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLDLT
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLLT
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a, bool doLDLT)$/;"	f	class:Eigen::SimplicialCholeskyBase
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^void SparseLU<MatrixType, OrderingType>::analyzePattern(const MatrixType& mat)$/;"	f	class:Eigen::SparseLU
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^void SparseQR<MatrixType,OrderingType>::analyzePattern(const MatrixType& mat)$/;"	f	class:Eigen::SparseQR
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void analyzePattern(const MatrixType& \/*matrix*\/)$/;"	f	class:Eigen::SuperLUBase
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::SuperILU
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::SuperLU
analyzePattern	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
analyzePatternWithPermutation	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^        void analyzePatternWithPermutation(SparseMatrix& a, const PermutationMatrix& permutation)$/;"	f	class:g2o::LinearSolverEigen::CholeskyDecomposition
analyzePattern_preordered	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h	/^void SimplicialCholeskyBase<Derived>::analyzePattern_preordered(const CholMatrixType& ap, bool doLDLT)$/;"	f	class:Eigen::SimplicialCholeskyBase
angle	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  Scalar angle() const { return m_angle; }$/;"	f	class:Eigen::AngleAxis
angle	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  Scalar& angle() { return m_angle; }$/;"	f	class:Eigen::AngleAxis
angle	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline Scalar angle() const { return m_angle; }$/;"	f	class:Eigen::Rotation2D
angle	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline Scalar& angle() { return m_angle; }$/;"	f	class:Eigen::Rotation2D
angle	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  Scalar angle() const { return m_angle; }$/;"	f	class:Eigen::AngleAxis
angle	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  Scalar& angle() { return m_angle; }$/;"	f	class:Eigen::AngleAxis
angle	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  inline Scalar angle() const { return m_angle; }$/;"	f	class:Eigen::Rotation2D
angle	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  inline Scalar& angle() { return m_angle; }$/;"	f	class:Eigen::Rotation2D
angularDistance	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Scalar Quaternion<Scalar>::angularDistance(const Quaternion& other) const$/;"	f	class:Eigen::Quaternion
angularDistance	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::angularDistance(const QuaternionBase<OtherDerived>& other) const$/;"	f	class:Eigen::QuaternionBase
any	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^inline bool DenseBase<Derived>::any() const$/;"	f	class:Eigen::DenseBase
any	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_any>::Type any() const$/;"	f	class:Eigen::VectorwiseOp
any_unroller	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^struct any_unroller$/;"	s	namespace:Eigen::internal
any_unroller	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^struct any_unroller<Derived, 0>$/;"	s	namespace:Eigen::internal
any_unroller	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^struct any_unroller<Derived, Dynamic>$/;"	s	namespace:Eigen::internal
append	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    void append(const Scalar& v, Index i)$/;"	f	class:Eigen::internal::CompressedStorage
applyAction	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  void applyAction(HyperGraph* graph, HyperGraphElementAction* action, HyperGraphElementAction::Parameters* params, const std::string& typeName)$/;"	f	namespace:g2o
applyHouseholderOnTheLeft	./Thirdparty/sparseicp/include/Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::applyHouseholderOnTheLeft($/;"	f	class:Eigen::MatrixBase
applyHouseholderOnTheRight	./Thirdparty/sparseicp/include/Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::applyHouseholderOnTheRight($/;"	f	class:Eigen::MatrixBase
applyOnTheLeft	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^inline void MatrixBase<Derived>::applyOnTheLeft(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
applyOnTheLeft	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^inline void MatrixBase<Derived>::applyOnTheLeft(Index p, Index q, const JacobiRotation<OtherScalar>& j)$/;"	f	class:Eigen::MatrixBase
applyOnTheRight	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^inline void MatrixBase<Derived>::applyOnTheRight(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
applyOnTheRight	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^inline void MatrixBase<Derived>::applyOnTheRight(Index p, Index q, const JacobiRotation<OtherScalar>& j)$/;"	f	class:Eigen::MatrixBase
applyThisOnTheLeft	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^  template<typename Dest> inline void applyThisOnTheLeft(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
applyThisOnTheLeft	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    inline void applyThisOnTheLeft(Dest& dst, Workspace& workspace) const$/;"	f	class:Eigen::HouseholderSequence
applyThisOnTheLeft	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    template<typename Dest> inline void applyThisOnTheLeft(Dest& dst) const$/;"	f	class:Eigen::HouseholderSequence
applyThisOnTheRight	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^  template<typename Dest> inline void applyThisOnTheRight(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
applyThisOnTheRight	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    inline void applyThisOnTheRight(Dest& dst, Workspace& workspace) const$/;"	f	class:Eigen::HouseholderSequence
applyThisOnTheRight	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    template<typename Dest> inline void applyThisOnTheRight(Dest& dst) const$/;"	f	class:Eigen::HouseholderSequence
applyTranspositionOnTheLeft	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    Derived& applyTranspositionOnTheLeft(Index i, Index j)$/;"	f	class:Eigen::PermutationBase
applyTranspositionOnTheRight	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    Derived& applyTranspositionOnTheRight(Index i, Index j)$/;"	f	class:Eigen::PermutationBase
apply_block_householder_on_the_left	./Thirdparty/sparseicp/include/Eigen/src/Householder/BlockHouseholder.h	/^void apply_block_householder_on_the_left(MatrixType& mat, const VectorsType& vectors, const CoeffsType& hCoeffs)$/;"	f	namespace:Eigen::internal
apply_rotation_in_the_plane	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^void \/*EIGEN_DONT_INLINE*\/ apply_rotation_in_the_plane(VectorX& _x, VectorY& _y, const JacobiRotation<OtherScalar>& j)$/;"	f	namespace:Eigen::internal
array	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    ArrayBase<Derived>& array() { return *this; }$/;"	f	class:Eigen::ArrayBase
array	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    const ArrayBase<Derived>& array() const { return *this; }$/;"	f	class:Eigen::ArrayBase
array	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^  EIGEN_USER_ALIGN16 T array[1];$/;"	m	struct:Eigen::internal::plain_array
array	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^  EIGEN_USER_ALIGN16 T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^  T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    ArrayWrapper<Derived> array() { return derived(); }$/;"	f	class:Eigen::MatrixBase
array	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    const ArrayWrapper<const Derived> array() const { return derived(); }$/;"	f	class:Eigen::MatrixBase
arrayHasNaN	./Thirdparty/g2o/g2o/stuff/misc.h	/^inline bool arrayHasNaN(const double* array, int size, int* nanIndex = 0)$/;"	f	namespace:g2o
asDiagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^MatrixBase<Derived>::asDiagonal() const$/;"	f	class:Eigen::MatrixBase
asPermutation	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^const PermutationWrapper<const Derived> MatrixBase<Derived>::asPermutation() const$/;"	f	class:Eigen::MatrixBase
asSluMatrix	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^SluMatrix asSluMatrix(MatrixType& mat)$/;"	f	namespace:Eigen::internal
asin	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^asin() const$/;"	f
assign	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Derived& assign(const OtherDerived& other)$/;"	f	class:Eigen::SparseMatrixBase
assignGeneric	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline void assignGeneric(const OtherDerived& other)$/;"	f	class:Eigen::SparseMatrixBase
assignProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    void assignProduct(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::PermutationBase
assignProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^TriangularView<MatrixType,UpLo>& TriangularView<MatrixType,UpLo>::assignProduct(const ProductBase<ProductDerived, _Lhs,_Rhs>& prod, const Scalar& alpha)$/;"	f	class:Eigen::TriangularView
assignTranspose	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    void assignTranspose(const PermutationBase<OtherDerived>& other)$/;"	f	class:Eigen::PermutationBase
assign_DefaultTraversal_CompleteUnrolling	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_DefaultTraversal_CompleteUnrolling$/;"	s	namespace:Eigen::internal
assign_DefaultTraversal_CompleteUnrolling	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_DefaultTraversal_CompleteUnrolling<Derived1, Derived2, Stop, Stop>$/;"	s	namespace:Eigen::internal
assign_DefaultTraversal_InnerUnrolling	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_DefaultTraversal_InnerUnrolling$/;"	s	namespace:Eigen::internal
assign_DefaultTraversal_InnerUnrolling	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_DefaultTraversal_InnerUnrolling<Derived1, Derived2, Stop, Stop>$/;"	s	namespace:Eigen::internal
assign_LinearTraversal_CompleteUnrolling	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_LinearTraversal_CompleteUnrolling$/;"	s	namespace:Eigen::internal
assign_LinearTraversal_CompleteUnrolling	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_LinearTraversal_CompleteUnrolling<Derived1, Derived2, Stop, Stop>$/;"	s	namespace:Eigen::internal
assign_conj_scalar_eig2mkl	./Thirdparty/sparseicp/include/Eigen/src/Core/util/MKL_support.h	/^inline void assign_conj_scalar_eig2mkl<MKL_Complex16,dcomplex>(MKL_Complex16& mklScalar, const dcomplex& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_conj_scalar_eig2mkl	./Thirdparty/sparseicp/include/Eigen/src/Core/util/MKL_support.h	/^inline void assign_conj_scalar_eig2mkl<MKL_Complex8,scomplex>(MKL_Complex8& mklScalar, const scomplex& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_conj_scalar_eig2mkl	./Thirdparty/sparseicp/include/Eigen/src/Core/util/MKL_support.h	/^static inline void assign_conj_scalar_eig2mkl(MKLType& mklScalar, const EigenType& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, DefaultTraversal, CompleteUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, DefaultTraversal, InnerUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, DefaultTraversal, NoUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, InnerVectorizedTraversal, CompleteUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, InnerVectorizedTraversal, InnerUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, InnerVectorizedTraversal, NoUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, InvalidTraversal, Unrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, LinearTraversal, CompleteUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, LinearTraversal, NoUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, LinearVectorizedTraversal, CompleteUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, LinearVectorizedTraversal, NoUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, SliceVectorizedTraversal, NoUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_innervec_CompleteUnrolling	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_innervec_CompleteUnrolling$/;"	s	namespace:Eigen::internal
assign_innervec_CompleteUnrolling	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_innervec_CompleteUnrolling<Derived1, Derived2, Stop, Stop>$/;"	s	namespace:Eigen::internal
assign_innervec_InnerUnrolling	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_innervec_InnerUnrolling$/;"	s	namespace:Eigen::internal
assign_innervec_InnerUnrolling	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_innervec_InnerUnrolling<Derived1, Derived2, Stop, Stop>$/;"	s	namespace:Eigen::internal
assign_scalar_eig2mkl	./Thirdparty/sparseicp/include/Eigen/src/Core/util/MKL_support.h	/^inline void assign_scalar_eig2mkl<MKL_Complex16,dcomplex>(MKL_Complex16& mklScalar, const dcomplex& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_scalar_eig2mkl	./Thirdparty/sparseicp/include/Eigen/src/Core/util/MKL_support.h	/^inline void assign_scalar_eig2mkl<MKL_Complex8,scomplex>(MKL_Complex8& mklScalar, const scomplex& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_scalar_eig2mkl	./Thirdparty/sparseicp/include/Eigen/src/Core/util/MKL_support.h	/^static inline void assign_scalar_eig2mkl(MKLType& mklScalar, const EigenType& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_selector<Derived,OtherDerived,false,false> {$/;"	s	namespace:Eigen::internal
assign_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_selector<Derived,OtherDerived,false,true> {$/;"	s	namespace:Eigen::internal
assign_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_selector<Derived,OtherDerived,true,false> {$/;"	s	namespace:Eigen::internal
assign_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_selector<Derived,OtherDerived,true,true> {$/;"	s	namespace:Eigen::internal
assign_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct assign_traits$/;"	s	namespace:Eigen::internal
at	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar at(Index key, const Scalar& defaultValue = Scalar(0)) const$/;"	f	class:Eigen::internal::CompressedStorage
atInRange	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar atInRange(size_t start, size_t end, Index key, const Scalar& defaultValue = Scalar(0)) const$/;"	f	class:Eigen::internal::CompressedStorage
atWithInsertion	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar& atWithInsertion(Index key, const Scalar& defaultValue = Scalar(0))$/;"	f	class:Eigen::internal::CompressedStorage
atanh2	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(atanh2, Scalar) atanh2(const Scalar& x, const Scalar& y)$/;"	f	namespace:Eigen::numext
atanh2_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct atanh2_default_impl$/;"	s	namespace:Eigen::internal
atanh2_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct atanh2_default_impl<Scalar, true>$/;"	s	namespace:Eigen::internal
atanh2_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct atanh2_impl : atanh2_default_impl<Scalar, NumTraits<Scalar>::IsInteger> {};$/;"	s	namespace:Eigen::internal
atanh2_retval	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct atanh2_retval$/;"	s	namespace:Eigen::internal
atxpy	./Thirdparty/g2o/g2o/core/matrix_operations.h	/^    inline void atxpy(const Eigen::Matrix<double, Eigen::Dynamic, t>& A, const Eigen::Map<const Eigen::VectorXd>& x, int xoff, Eigen::Map<Eigen::VectorXd>& y, int yoff)$/;"	f	namespace:g2o::internal
atxpy	./Thirdparty/g2o/g2o/core/matrix_operations.h	/^    inline void atxpy(const Eigen::MatrixXd& A, const Eigen::Map<const Eigen::VectorXd>& x, int xoff, Eigen::Map<Eigen::VectorXd>& y, int yoff)$/;"	f	namespace:g2o::internal
atxpy	./Thirdparty/g2o/g2o/core/matrix_operations.h	/^    inline void atxpy(const MatrixType& A, const Eigen::Map<const Eigen::VectorXd>& x, int xoff, Eigen::Map<Eigen::VectorXd>& y, int yoff)$/;"	f	namespace:g2o::internal
average_angle	./Thirdparty/g2o/g2o/stuff/misc.h	/^inline double average_angle(double theta1, double theta2)$/;"	f	namespace:g2o
axis	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  Vector3& axis() { return m_axis; }$/;"	f	class:Eigen::AngleAxis
axis	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  const Vector3& axis() const { return m_axis; }$/;"	f	class:Eigen::AngleAxis
axis	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  Vector3& axis() { return m_axis; }$/;"	f	class:Eigen::AngleAxis
axis	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  const Vector3& axis() const { return m_axis; }$/;"	f	class:Eigen::AngleAxis
axpy	./Thirdparty/g2o/g2o/core/matrix_operations.h	/^    inline void axpy(const Eigen::Matrix<double, Eigen::Dynamic, t>& A, const Eigen::Map<const Eigen::VectorXd>& x, int xoff, Eigen::Map<Eigen::VectorXd>& y, int yoff)$/;"	f	namespace:g2o::internal
axpy	./Thirdparty/g2o/g2o/core/matrix_operations.h	/^    inline void axpy(const Eigen::MatrixXd& A, const Eigen::Map<const Eigen::VectorXd>& x, int xoff, Eigen::Map<Eigen::VectorXd>& y, int yoff)$/;"	f	namespace:g2o::internal
axpy	./Thirdparty/g2o/g2o/core/matrix_operations.h	/^    inline void axpy(const MatrixType& A, const Eigen::Map<const Eigen::VectorXd>& x, int xoff, Eigen::Map<Eigen::VectorXd>& y, int yoff)$/;"	f	namespace:g2o::internal
b	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    Matrix<double, D, 1>& b() { return _b;}$/;"	f	class:g2o::BaseVertex
b	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    const Matrix<double, D, 1>& b() const { return _b;}$/;"	f	class:g2o::BaseVertex
b	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    virtual const double& b(int i) const { assert(i < D); return _b(i);}$/;"	f	class:g2o::BaseVertex
b	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    virtual double& b(int i) { assert(i < D); return _b(i);}$/;"	f	class:g2o::BaseVertex
b	./Thirdparty/g2o/g2o/core/solver.h	/^      const double* b() const { return _b;}$/;"	f	class:g2o::Solver
b	./Thirdparty/g2o/g2o/core/solver.h	/^      double* b() { return _b;}$/;"	f	class:g2o::Solver
b	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^         b = MatrixType::RowsAtCompileTime != Dynamic &&$/;"	e	enum:Eigen::internal::qr_preconditioner_should_do_anything::__anon354
bData	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    virtual double* bData() { return _b.data();}$/;"	f	class:g2o::BaseVertex
bNoMore	./include/ORBextractor.h	/^    bool bNoMore;$/;"	m	class:ORB_SLAM2::ExtractorNode
base	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    Base& base() { return *static_cast<Base*>(this); }$/;"	f	class:Eigen::PlainObjectBase
base	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    const Base& base() const { return *static_cast<const Base*>(this); }$/;"	f	class:Eigen::PlainObjectBase
base	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		void*   base;     \/* Pointer to base of current block of storage. *\/$/;"	m	class:nanoflann::PooledAllocator
baseOfBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      inline int baseOfBlock(int r) const { return r ? _blockIndices[r-1] : 0 ; }$/;"	f	class:g2o::SparseBlockMatrixDiagonal
basis_	./4pcs/Registration.h	/^            Set4 basis_;$/;"	m	class:pcl::FPCS::FPCSRegistration
batchStatistics	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    BatchStatisticsContainer& batchStatistics() { return _batchStatistics;}$/;"	f	class:g2o::SparseOptimizer
batchStatistics	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    const BatchStatisticsContainer& batchStatistics() const { return _batchStatistics;}$/;"	f	class:g2o::SparseOptimizer
betas	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    VectorType betas() const$/;"	f	class:Eigen::GeneralizedEigenSolver
bf	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy, bf;$/;"	m	class:g2o::EdgeStereoSE3ProjectXYZ
bf	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy, bf;$/;"	m	class:g2o::EdgeStereoSE3ProjectXYZOnlyPose
bicgstab	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^bool bicgstab(const MatrixType& mat, const Rhs& rhs, Dest& x,$/;"	f	namespace:Eigen::internal
bidiagonal	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    const BidiagonalType& bidiagonal() const { return m_bidiagonal; }$/;"	f	class:Eigen::internal::UpperBidiagonalization
binaryExpr	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseBinaryOps.h	/^binaryExpr(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other, const CustomBinaryOp& func = CustomBinaryOp()) const$/;"	f
binary_result_of_select	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select {typedef ArgType0 type;};$/;"	s	namespace:Eigen::internal
binary_result_of_select	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select<Func, ArgType0, ArgType1, sizeof(has_std_result_type)>$/;"	s	namespace:Eigen::internal
binary_result_of_select	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select<Func, ArgType0, ArgType1, sizeof(has_tr1_result)>$/;"	s	namespace:Eigen::internal
bit_pattern_31_	./src/ORBextractor.cc	/^static int bit_pattern_31_[256*4] =$/;"	m	namespace:ORB_SLAM2	file:
blas_data_mapper	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^    blas_data_mapper(Scalar* data, Index stride) : m_data(data), m_stride(stride) {}$/;"	f	class:Eigen::internal::blas_data_mapper
blas_data_mapper	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^class blas_data_mapper$/;"	c	namespace:Eigen::internal
blas_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^struct blas_traits<SelfCwiseBinaryOp<BinOp,NestedXpr,Rhs> >$/;"	s	namespace:Eigen::internal
blas_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseUnaryOp<scalar_conjugate_op<Scalar>, NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseUnaryOp<scalar_multiple_op<Scalar>, NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseUnaryOp<scalar_opposite_op<Scalar>, NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<Transpose<NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<const T>$/;"	s	namespace:Eigen::internal
blas_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^template<typename XprType> struct blas_traits$/;"	s	namespace:Eigen::internal
block	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  const typename SparseBlockMatrix<MatrixType>::SparseMatrixBlock* SparseBlockMatrix<MatrixType>::block(int r, int c) const {$/;"	f	class:g2o::SparseBlockMatrix
block	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  typename SparseBlockMatrix<MatrixType>::SparseMatrixBlock* SparseBlockMatrix<MatrixType>::block(int r, int c, bool alloc) {$/;"	f	class:g2o::SparseBlockMatrix
block	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^        MatrixType* block;    \/\/\/< matrix pointer for the block$/;"	m	struct:g2o::SparseBlockMatrixCCS::RowBlock
block	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, BlockRows, BlockCols> block(Index startRow, Index startCol)$/;"	f
block	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, BlockRows, BlockCols> block(Index startRow, Index startCol, $/;"	f
block	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived> block(Index startRow, Index startCol, Index blockRows, Index blockCols)$/;"	f
block	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, BlockRows, BlockCols> block(Index startRow, Index startCol) const$/;"	f
block	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, BlockRows, BlockCols> block(Index startRow, Index startCol,$/;"	f
block	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived> block(Index startRow, Index startCol, Index blockRows, Index blockCols) const$/;"	f
blockA	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline LhsScalar* blockA() { return m_blockA; }$/;"	f	class:Eigen::internal::level3_blocking
blockB	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline RhsScalar* blockB() { return m_blockB; }$/;"	f	class:Eigen::internal::level3_blocking
blockCols	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    const std::vector<IntBlockMap>& blockCols() const { return _blockCols;}$/;"	f	class:g2o::SparseBlockMatrix
blockCols	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    std::vector<IntBlockMap>& blockCols() { return _blockCols;}$/;"	f	class:g2o::SparseBlockMatrix
blockCols	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<SparseColumn>& blockCols() const { return _blockCols;}$/;"	f	class:g2o::SparseBlockMatrixCCS
blockCols	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<SparseColumn>& blockCols() const { return _blockCols;}$/;"	f	class:g2o::SparseBlockMatrixHashMap
blockCols	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      std::vector<SparseColumn>& blockCols() { return _blockCols;}$/;"	f	class:g2o::SparseBlockMatrixCCS
blockCols	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      std::vector<SparseColumn>& blockCols() { return _blockCols;}$/;"	f	class:g2o::SparseBlockMatrixHashMap
blockIndices	./Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      const std::vector<int>& blockIndices() const { return _blockIndices;}$/;"	f	class:g2o::SparseBlockMatrixDiagonal
blockOrdering	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    bool blockOrdering() const { return _blockOrdering;}$/;"	f	class:g2o::LinearSolverEigen
blockW	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline RhsScalar* blockW() { return m_blockW; }$/;"	f	class:Eigen::internal::level3_blocking
blocked	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^  static EIGEN_STRONG_INLINE typename MatrixType::Index blocked(MatrixType& mat)$/;"	f	struct:Eigen::internal::llt_inplace
blocked	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^  static typename MatrixType::Index blocked(MatrixType& m)$/;"	f	struct:Eigen::internal::llt_inplace
blocked_lu	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^  static Index blocked_lu(Index rows, Index cols, Scalar* lu_data, Index luStride, PivIndex* row_transpositions, PivIndex& nb_transpositions, Index maxBlockSize=256)$/;"	f	struct:Eigen::internal::partial_lu_impl
blocksize	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		size_t  blocksize;$/;"	m	class:nanoflann::PooledAllocator
blueNorm	./Thirdparty/sparseicp/include/Eigen/src/Core/StableNorm.h	/^MatrixBase<Derived>::blueNorm() const$/;"	f	class:Eigen::MatrixBase
blueNorm	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_blueNorm,RealScalar>::Type blueNorm() const$/;"	f	class:Eigen::VectorwiseOp
blueNorm	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::blueNorm() const$/;"	f	class:Eigen::SparseMatrixBase
blueNorm_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/StableNorm.h	/^blueNorm_impl(const EigenBase<Derived>& _vec)$/;"	f	namespace:Eigen::internal
bottomLeftCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> bottomLeftCorner()$/;"	f
bottomLeftCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> bottomLeftCorner(Index cRows, Index cCols)$/;"	f
bottomLeftCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived> bottomLeftCorner(Index cRows, Index cCols)$/;"	f
bottomLeftCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> bottomLeftCorner() const$/;"	f
bottomLeftCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> bottomLeftCorner(Index cRows, Index cCols) const$/;"	f
bottomLeftCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived> bottomLeftCorner(Index cRows, Index cCols) const$/;"	f
bottomRightCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> bottomRightCorner()$/;"	f
bottomRightCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> bottomRightCorner(Index cRows, Index cCols)$/;"	f
bottomRightCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived> bottomRightCorner(Index cRows, Index cCols)$/;"	f
bottomRightCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> bottomRightCorner() const$/;"	f
bottomRightCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> bottomRightCorner(Index cRows, Index cCols) const$/;"	f
bottomRightCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived> bottomRightCorner(Index cRows, Index cCols) const$/;"	f
bottomRows	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline ConstRowsBlockXpr bottomRows(Index n) const$/;"	f
bottomRows	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline RowsBlockXpr bottomRows(Index n)$/;"	f
bottomRows	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNRowsBlockXpr<N>::Type bottomRows(Index n = N) const$/;"	f
bottomRows	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename NRowsBlockXpr<N>::Type bottomRows(Index n = N)$/;"	f
bruteforce_det3_helper	./Thirdparty/sparseicp/include/Eigen/src/LU/Determinant.h	/^inline const typename Derived::Scalar bruteforce_det3_helper$/;"	f	namespace:Eigen::internal
bruteforce_det4_helper	./Thirdparty/sparseicp/include/Eigen/src/LU/Determinant.h	/^const typename Derived::Scalar bruteforce_det4_helper$/;"	f	namespace:Eigen::internal
buildIndex	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		void buildIndex()$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
buildIndexMapping	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::buildIndexMapping(SparseOptimizer::VertexContainer& vlist){$/;"	f	class:g2o::SparseOptimizer
buildLinearStructure	./Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^  bool OptimizationAlgorithmWithHessian::buildLinearStructure()$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
buildStructure	./Thirdparty/g2o/g2o/core/block_solver.hpp	/^bool BlockSolver<Traits>::buildStructure(bool zeroBlocks)$/;"	f	class:g2o::BlockSolver
buildSystem	./Thirdparty/g2o/g2o/core/block_solver.hpp	/^bool BlockSolver<Traits>::buildSystem()$/;"	f	class:g2o::BlockSolver
c	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^  int r, c;$/;"	m	struct:g2o::MatrixElem	file:
c	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^      int r, c;$/;"	m	struct:g2o::__anon468::TripletEntry
c	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^    Scalar c() const { return m_c; }$/;"	f	class:Eigen::JacobiRotation
c	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^    Scalar& c() { return m_c; }$/;"	f	class:Eigen::JacobiRotation
c_to_fortran_numbering	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void c_to_fortran_numbering (MatrixType& mat)$/;"	f	namespace:Eigen::internal
cacheContainer	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  CacheContainer* OptimizableGraph::Vertex::cacheContainer(){$/;"	f	class:g2o::OptimizableGraph::Vertex
cam_map1	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^    Vector2d cam_map1(const Vector2d & v) const$/;"	f	class:g2o::VertexSim3Expmap
cam_map2	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^    Vector2d cam_map2(const Vector2d & v) const$/;"	f	class:g2o::VertexSim3Expmap
cam_project	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^Vector2d EdgeSE3ProjectXYZ::cam_project(const Vector3d & trans_xyz) const{$/;"	f	class:g2o::EdgeSE3ProjectXYZ
cam_project	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^Vector2d EdgeSE3ProjectXYZOnlyPose::cam_project(const Vector3d & trans_xyz) const{$/;"	f	class:g2o::EdgeSE3ProjectXYZOnlyPose
cam_project	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^Vector3d EdgeStereoSE3ProjectXYZ::cam_project(const Vector3d & trans_xyz, const float &bf) const{$/;"	f	class:g2o::EdgeStereoSE3ProjectXYZ
cam_project	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^Vector3d EdgeStereoSE3ProjectXYZOnlyPose::cam_project(const Vector3d & trans_xyz) const{$/;"	f	class:g2o::EdgeStereoSE3ProjectXYZOnlyPose
capacity	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		CountType capacity;$/;"	m	class:nanoflann::KNNResultSet
cast	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline NewType cast(const OldType& x)$/;"	f	namespace:Eigen::internal
cast	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^           AlignedBox<NewScalarType,AmbientDimAtCompileTime> >::type cast() const$/;"	f	class:Eigen::AlignedBox
cast	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline typename internal::cast_return_type<AngleAxis,AngleAxis<NewScalarType> >::type cast() const$/;"	f	class:Eigen::AngleAxis
cast	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^           Hyperplane<NewScalarType,AmbientDimAtCompileTime> >::type cast() const$/;"	f	class:Eigen::Hyperplane
cast	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^           ParametrizedLine<NewScalarType,AmbientDimAtCompileTime> >::type cast() const$/;"	f	class:Eigen::ParametrizedLine
cast	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline typename internal::cast_return_type<Quaternion,Quaternion<NewScalarType> >::type cast() const$/;"	f	class:Eigen::Quaternion
cast	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline typename internal::cast_return_type<Rotation2D,Rotation2D<NewScalarType> >::type cast() const$/;"	f	class:Eigen::Rotation2D
cast	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline typename internal::cast_return_type<Scaling,Scaling<NewScalarType,Dim> >::type cast() const$/;"	f	class:Eigen::Scaling
cast	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline typename internal::cast_return_type<Transform,Transform<NewScalarType,Dim> >::type cast() const$/;"	f	class:Eigen::Transform
cast	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  inline typename internal::cast_return_type<Translation,Translation<NewScalarType,Dim> >::type cast() const$/;"	f	class:Eigen::Translation
cast	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^           AlignedBox<NewScalarType,AmbientDimAtCompileTime> >::type cast() const$/;"	f	class:Eigen::AlignedBox
cast	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  inline typename internal::cast_return_type<AngleAxis,AngleAxis<NewScalarType> >::type cast() const$/;"	f	class:Eigen::AngleAxis
cast	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^           Hyperplane<NewScalarType,AmbientDimAtCompileTime,Options> >::type cast() const$/;"	f	class:Eigen::Hyperplane
cast	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^           ParametrizedLine<NewScalarType,AmbientDimAtCompileTime,Options> >::type cast() const$/;"	f	class:Eigen::ParametrizedLine
cast	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline typename internal::cast_return_type<Derived,Quaternion<NewScalarType> >::type cast() const$/;"	f	class:Eigen::QuaternionBase
cast	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  inline typename internal::cast_return_type<Rotation2D,Rotation2D<NewScalarType> >::type cast() const$/;"	f	class:Eigen::Rotation2D
cast	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^  inline UniformScaling<NewScalarType> cast() const$/;"	f	class:Eigen::UniformScaling
cast	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline typename internal::cast_return_type<Transform,Transform<NewScalarType,Dim,Mode,Options> >::type cast() const$/;"	f	class:Eigen::Transform
cast	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  inline typename internal::cast_return_type<Translation,Translation<NewScalarType,Dim> >::type cast() const$/;"	f	class:Eigen::Translation
cast	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^cast() const$/;"	f
cast_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct cast_impl$/;"	s	namespace:Eigen::internal
cast_to_pointer_type	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    inline PointerType cast_to_pointer_type(PointerArgType ptr) { return const_cast<PointerType>(ptr); }$/;"	f	class:Eigen::Map
cast_to_pointer_type	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    inline PointerType cast_to_pointer_type(PointerArgType ptr) { return ptr; }$/;"	f	class:Eigen::Map
ccs	./include/PnPsolver.h	/^  double cws[4][3], ccs[4][3];$/;"	m	class:ORB_SLAM2::PnPsolver
ccs	./include/PoseSolver.h	/^  double cws[4][3], ccs[4][3];$/;"	m	class:ORB_SLAM2::PoseSolver
cdiv	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^std::complex<Scalar> cdiv(const Scalar& xr, const Scalar& xi, const Scalar& yr, const Scalar& yi)$/;"	f	namespace:Eigen
center	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  center() const$/;"	f	class:Eigen::AlignedBox
centering	./4pcs/Registration.cc	/^        Eigen::Vector3f FPCSRegistration::centering(pcl::PointCloud<pcl::PointXYZ>::Ptr point_cloud) {$/;"	f	class:pcl::FPCS::FPCSRegistration
changeId	./Thirdparty/g2o/g2o/core/hyper_graph.cpp	/^  bool HyperGraph::changeId(Vertex* v, int newId){$/;"	f	class:g2o::HyperGraph
check	./4pcs/Registration.cc	/^        bool FPCSRegistration::check(pcl::FPCS::FPCSRegistration::Set4 ss, float delta) {$/;"	f	class:pcl::FPCS::FPCSRegistration
checkSanity	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    void checkSanity() const$/;"	f	class:Eigen::MapBase
checkTransposeAliasing	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^void DenseBase<Derived>::checkTransposeAliasing(const OtherDerived& other) const$/;"	f	class:Eigen::DenseBase
checkTransposeAliasing_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^struct checkTransposeAliasing_impl$/;"	s	namespace:Eigen::internal
checkTransposeAliasing_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^struct checkTransposeAliasing_impl<Derived, OtherDerived, false>$/;"	s	namespace:Eigen::internal
check_DenseIndex_is_signed	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^static inline void check_DenseIndex_is_signed() {$/;"	f	namespace:Eigen::internal
check_coordinates	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    void check_coordinates(Index row, Index col) const$/;"	f	class:Eigen::TriangularBase
check_coordinates_internal	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    void check_coordinates_internal(Index , Index ) const {}$/;"	f	class:Eigen::TriangularBase
check_coordinates_internal	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    void check_coordinates_internal(Index row, Index col) const$/;"	f	class:Eigen::TriangularBase
check_rows_cols_for_overflow	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^template<> struct check_rows_cols_for_overflow<Dynamic> {$/;"	s	namespace:Eigen::internal
check_rows_cols_for_overflow	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^template<int MaxSizeAtCompileTime> struct check_rows_cols_for_overflow {$/;"	s	namespace:Eigen::internal
check_size_for_overflow	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^EIGEN_ALWAYS_INLINE void check_size_for_overflow(size_t size)$/;"	f	namespace:Eigen::internal
check_template_parameters	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^  static void check_template_parameters()$/;"	f	class:Eigen::SparseMatrix
check_template_parameters	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::SparseVector
check_template_params	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    static EIGEN_STRONG_INLINE void check_template_params()$/;"	f	class:Eigen::Transform
check_that_malloc_is_allowed	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline void check_that_malloc_is_allowed()$/;"	f	namespace:Eigen::internal
check_transpose_aliasing_compile_time_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_compile_time_selector$/;"	s	namespace:Eigen::internal
check_transpose_aliasing_compile_time_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_compile_time_selector<DestIsTransposed,CwiseBinaryOp<BinOp,DerivedA,DerivedB> >$/;"	s	namespace:Eigen::internal
check_transpose_aliasing_run_time_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_run_time_selector$/;"	s	namespace:Eigen::internal
check_transpose_aliasing_run_time_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_run_time_selector<Scalar,DestIsTransposed,CwiseBinaryOp<BinOp,DerivedA,DerivedB> >$/;"	s	namespace:Eigen::internal
checks	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		int   checks;  \/\/!< Ignored parameter (Kept for compatibility with the FLANN interface).$/;"	m	struct:nanoflann::SearchParams
chi2	./Thirdparty/g2o/g2o/core/base_edge.h	/^      virtual double chi2() const $/;"	f	class:g2o::BaseEdge
chi2	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    double chi2;                      \/\/\/< total chi2$/;"	m	struct:g2o::G2OBatchStatistics
chi2	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^double OptimizableGraph::chi2() const$/;"	f	class:g2o::OptimizableGraph
child	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^          OptimizableGraph::Vertex* child() const {return _child;}$/;"	f	class:g2o::EstimatePropagator::AdjacencyMapEntry
child	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^      HyperGraph::Vertex* child() const {return _child;}$/;"	f	struct:g2o::HyperDijkstra::AdjacencyMapEntry
child1	./Thirdparty/sparseicp/include/nanoflann.hpp	/^			Node* child1, * child2;$/;"	m	struct:nanoflann::KDTreeSingleIndexAdaptor::Node
child2	./Thirdparty/sparseicp/include/nanoflann.hpp	/^			Node* child1, * child2;$/;"	m	struct:nanoflann::KDTreeSingleIndexAdaptor::Node
children	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^    vector<NodeId> children;$/;"	m	struct:DBoW2::TemplatedVocabulary::Node
children	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^      HyperGraph::VertexSet& children() {return _children;}$/;"	f	struct:g2o::HyperDijkstra::AdjacencyMapEntry
children	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^      const HyperGraph::VertexSet& children() const {return _children;}$/;"	f	struct:g2o::HyperDijkstra::AdjacencyMapEntry
choleskyNNZ	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    size_t choleskyNNZ;               \/\/\/< number of non-zeros in the cholesky factor$/;"	m	struct:g2o::G2OBatchStatistics
cholmod	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    cholmod_common& cholmod() { return m_cholmod; }$/;"	f	class:Eigen::CholmodBase
cholmodCommon	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    cholmod_common *cholmodCommon() const { return &m_cc; }$/;"	f	class:Eigen::SPQR
cholmod_configure_matrix	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^void cholmod_configure_matrix(CholmodType& mat)$/;"	f	namespace:Eigen::internal
choose_control_points	./src/PnPsolver.cc	/^void PnPsolver::choose_control_points(void)$/;"	f	class:ORB_SLAM2::PnPsolver
choose_control_points	./src/PoseSolver.cc	/^void PoseSolver::choose_control_points(void)$/;"	f	class:ORB_SLAM2::PoseSolver
cj	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  conj_helper<LhsScalar,RhsScalar,ConjLhs,ConjRhs> cj;$/;"	m	class:Eigen::internal::gebp_traits
cj	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  conj_helper<ResPacket,ResPacket,ConjLhs,false> cj;$/;"	m	class:Eigen::internal::gebp_traits
cj	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  conj_helper<ResPacket,ResPacket,false,ConjRhs> cj;$/;"	m	class:Eigen::internal::gebp_traits
clamp	./Thirdparty/g2o/g2o/stuff/misc.h	/^inline T clamp(T l, T x, T u) $/;"	f	namespace:g2o
clamp	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline AlignedBox& clamp(const AlignedBox& b)$/;"	f	class:Eigen::AlignedBox
clamp	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox& clamp(const AlignedBox& b)$/;"	f	class:Eigen::AlignedBox
clean	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void clean()$/;"	f	class:Eigen::PastixBase
clear	./Thirdparty/g2o/g2o/core/hyper_graph.cpp	/^  void HyperGraph::clear()$/;"	f	class:g2o::HyperGraph
clear	./Thirdparty/g2o/g2o/core/parameter_container.cpp	/^  void ParameterContainer::clear() {$/;"	f	class:g2o::ParameterContainer
clear	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  void SparseBlockMatrix<MatrixType>::clear(bool dealloc) {$/;"	f	class:g2o::SparseBlockMatrix
clear	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::clear() {$/;"	f	class:g2o::SparseOptimizer
clear	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    inline void clear() { m_size = 0; }$/;"	f	class:Eigen::internal::CompressedStorage
clear	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline void clear() { m_indices_dists.clear(); }$/;"	f	class:nanoflann::RadiusResultSet
clear	./src/KeyFrameDatabase.cc	/^void KeyFrameDatabase::clear()$/;"	f	class:ORB_SLAM2::KeyFrameDatabase
clear	./src/Map.cc	/^void Map::clear()$/;"	f	class:ORB_SLAM2::Map
clearFactors	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void clearFactors()$/;"	f	class:Eigen::SuperLUBase
clearIndexMapping	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::clearIndexMapping(){$/;"	f	class:g2o::SparseOptimizer
clearParameters	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::clearParameters()$/;"	f	class:g2o::OptimizableGraph
clearQuadraticForm	./Thirdparty/g2o/g2o/core/base_vertex.hpp	/^void BaseVertex<D, T>::clearQuadraticForm() {$/;"	f	class:BaseVertex
clear_mark	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static inline  Index clear_mark  \/* return the new value for tag_mark *\/$/;"	f	namespace:internal
clone	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::Edge* OptimizableGraph::Edge::clone() const$/;"	f	class:g2o::OptimizableGraph::Edge
clone	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::Vertex* OptimizableGraph::Vertex::clone() const$/;"	f	class:g2o::OptimizableGraph::Vertex
clone	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  SparseBlockMatrix<MatrixType>* SparseBlockMatrix<MatrixType>::clone() const {$/;"	f	class:g2o::SparseBlockMatrix
closest	./Thirdparty/sparseicp/ICP.h	/^        inline IndexType closest(const num_t *query_point) const {$/;"	f	struct:nanoflann::KDTreeAdaptor
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::ArrayWrapper
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::MatrixWrapper
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline CoeffReturnType coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::ArrayWrapper
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline CoeffReturnType coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::MatrixWrapper
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    EIGEN_STRONG_INLINE const CoeffReturnType coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::internal::BlockImpl_dense
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline const CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::internal::BlockImpl_dense
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index index) const$/;"	f	class:Eigen::CwiseBinaryOpImpl
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::CwiseBinaryOpImpl
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index index) const$/;"	f	class:Eigen::CwiseNullaryOp
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::CwiseNullaryOp
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index index) const$/;"	f	class:Eigen::CwiseUnaryOpImpl
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::CwiseUnaryOpImpl
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::CwiseUnaryViewImpl
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::CwiseUnaryViewImpl
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::DenseCoeffsBase
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    coeff(Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    inline CoeffReturnType coeff(Index idx) const$/;"	f	class:Eigen::Diagonal
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    inline CoeffReturnType coeff(Index row, Index) const$/;"	f	class:Eigen::Diagonal
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index idx) const$/;"	f	class:Eigen::DiagonalProduct
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::DiagonalProduct
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    inline CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::Flagged
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    inline CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::Flagged
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^    inline const CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::ForceAlignedAccess
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^    inline const CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::ForceAlignedAccess
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeff(Index index) const$/;"	f	class:Eigen::MapBase
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::MapBase
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^    inline const CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::NestByValue
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^    inline const CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::NestByValue
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeff(Index index) const$/;"	f	class:Eigen::PlainObjectBase
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::PlainObjectBase
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typename Base::CoeffReturnType coeff(Index i) const$/;"	f	class:Eigen::ProductBase
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    typename Base::CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::ProductBase
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    inline Scalar coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::Replicate
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^    const Unusable& coeff(Index) const { return *reinterpret_cast<const Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^    const Unusable& coeff(Index,Index) const { return *reinterpret_cast<const Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    inline CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::Reverse
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    inline CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::Reverse
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    const Scalar coeff(Index i) const$/;"	f	class:Eigen::Select
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    const Scalar coeff(Index i, Index j) const$/;"	f	class:Eigen::Select
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SelfAdjointView
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    inline CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::TransposeImpl
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    inline CoeffReturnType coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::TransposeImpl
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline const Index& coeff(Index i) const { return indices().coeff(i); }$/;"	f	class:Eigen::TranspositionsBase
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar coeff(Index row, Index col) const  { return derived().coeff(row,col); }$/;"	f	class:Eigen::TriangularBase
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::TriangularView
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index i, Index j) const$/;"	f	class:Eigen::PartialReduxExpr
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    const Scalar coeff(Index index) const$/;"	f	class:Eigen::PartialReduxExpr
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index index) const$/;"	f	class:Eigen::CoeffBasedProduct
coeff	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::CoeffBasedProduct
coeff	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^    inline const Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::Minor
coeff	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::Homogeneous
coeff	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^_Scalar& AmbiVector<_Scalar,_Index>::coeff(_Index i)$/;"	f	class:Eigen::internal::AmbiVector
coeff	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::MappedSparseMatrix
coeff	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar coeff(int index) const$/;"	f	class:Eigen::BlockImpl
coeff	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar coeff(int row, int col) const$/;"	f	class:Eigen::BlockImpl
coeff	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SparseMatrix
coeff	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar coeff(Index i) const$/;"	f	class:Eigen::SparseVector
coeff	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SparseVector
coeffByOuterInner	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE CoeffReturnType coeffByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::ArrayWrapper
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::MatrixWrapper
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline Scalar& coeffRef(Index rowId, Index colId)$/;"	f	class:Eigen::ArrayWrapper
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline Scalar& coeffRef(Index rowId, Index colId)$/;"	f	class:Eigen::MatrixWrapper
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::ArrayWrapper
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::MatrixWrapper
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::ArrayWrapper
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::MatrixWrapper
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::internal::BlockImpl_dense
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline Scalar& coeffRef(Index rowId, Index colId)$/;"	f	class:Eigen::internal::BlockImpl_dense
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::internal::BlockImpl_dense
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::internal::BlockImpl_dense
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index index)$/;"	f	class:Eigen::CwiseUnaryViewImpl
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::CwiseUnaryViewImpl
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::DenseCoeffsBase
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    coeffRef(Index index)$/;"	f	class:Eigen::DenseCoeffsBase
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    inline Scalar& coeffRef(Index idx)$/;"	f	class:Eigen::Diagonal
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    inline Scalar& coeffRef(Index row, Index)$/;"	f	class:Eigen::Diagonal
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    inline const Scalar& coeffRef(Index idx) const$/;"	f	class:Eigen::Diagonal
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    inline const Scalar& coeffRef(Index row, Index) const$/;"	f	class:Eigen::Diagonal
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::Flagged
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::Flagged
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::Flagged
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    inline const Scalar& coeffRef(Index row, Index col) const$/;"	f	class:Eigen::Flagged
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::ForceAlignedAccess
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::ForceAlignedAccess
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline ScalarWithConstIfNotLvalue& coeffRef(Index index)$/;"	f	class:Eigen::MapBase
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline ScalarWithConstIfNotLvalue& coeffRef(Index row, Index col)$/;"	f	class:Eigen::MapBase
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::MapBase
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::MapBase
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::NestByValue
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::NestByValue
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index index)$/;"	f	class:Eigen::PlainObjectBase
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index rowId, Index colId)$/;"	f	class:Eigen::PlainObjectBase
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::PlainObjectBase
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::PlainObjectBase
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    const Scalar& coeffRef(Index i) const$/;"	f	class:Eigen::ProductBase
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    const Scalar& coeffRef(Index row, Index col) const$/;"	f	class:Eigen::ProductBase
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^    Unusable& coeffRef(Index) { return *reinterpret_cast<Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^    Unusable& coeffRef(Index,Index) { return *reinterpret_cast<Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::Reverse
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::Reverse
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SelfAdjointView
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::SelfCwiseBinaryOp
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SelfCwiseBinaryOp
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::SelfCwiseBinaryOp
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline const Scalar& coeffRef(Index row, Index col) const$/;"	f	class:Eigen::SelfCwiseBinaryOp
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    inline Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::SwapWrapper
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::SwapWrapper
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    inline Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::SwapWrapper
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    inline Scalar& coeffRef(Index rowId, Index colId)$/;"	f	class:Eigen::SwapWrapper
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    inline ScalarWithConstIfNotLvalue& coeffRef(Index index)$/;"	f	class:Eigen::TransposeImpl
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    inline ScalarWithConstIfNotLvalue& coeffRef(Index rowId, Index colId)$/;"	f	class:Eigen::TransposeImpl
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::TransposeImpl
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::TransposeImpl
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline Index& coeffRef(Index i) { return indices().coeffRef(i); }$/;"	f	class:Eigen::TranspositionsBase
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col) { return derived().coeffRef(row,col); }$/;"	f	class:Eigen::TriangularBase
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::TriangularView
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::Minor
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^_Scalar& AmbiVector<_Scalar,_Index>::coeffRef(_Index i)$/;"	f	class:Eigen::internal::AmbiVector
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::MappedSparseMatrix
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline Scalar& coeffRef(int index)$/;"	f	class:Eigen::BlockImpl
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline Scalar& coeffRef(int row, int col)$/;"	f	class:Eigen::BlockImpl
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& coeffRef(Index i)$/;"	f	class:Eigen::SparseVector
coeffRef	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SparseVector
coeffRefByOuterInner	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    coeffRefByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::DenseCoeffsBase
coeffSeparator	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^  std::string coeffSeparator;$/;"	m	struct:Eigen::IOFormat
coeff_visitor	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^struct coeff_visitor$/;"	s	namespace:Eigen::internal
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline CoefficientsType& coeffs() { return derived().coeffs(); }$/;"	f	class:Eigen::internal::BandMatrixBase
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline CoefficientsType& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::internal::BandMatrix
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline const CoefficientsType& coeffs() const { return derived().coeffs(); }$/;"	f	class:Eigen::internal::BandMatrixBase
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline const CoefficientsType& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::internal::BandMatrix
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline const CoefficientsType& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::internal::BandMatrixWrapper
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline Coefficients& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::Hyperplane
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline const Coefficients& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::Hyperplane
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Coefficients& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::Quaternion
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline const Coefficients& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::Quaternion
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  VectorType& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::Scaling
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  const VectorType& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::Scaling
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  inline Coefficients& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::Hyperplane
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  inline const Coefficients& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::Hyperplane
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    inline Coefficients& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::Map
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    inline const Coefficients& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::Map
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    inline const Coefficients& coeffs() const { return m_coeffs;}$/;"	f	class:Eigen::Map
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline Coefficients& coeffs() { return m_coeffs;}$/;"	f	class:Eigen::Quaternion
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline const Coefficients& coeffs() const { return m_coeffs;}$/;"	f	class:Eigen::Quaternion
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline const typename internal::traits<Derived>::Coefficients& coeffs() const { return derived().coeffs(); }$/;"	f	class:Eigen::QuaternionBase
coeffs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline typename internal::traits<Derived>::Coefficients& coeffs() { return derived().coeffs(); }$/;"	f	class:Eigen::QuaternionBase
cofactor_3x3	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^inline typename MatrixType::Scalar cofactor_3x3(const MatrixType& m)$/;"	f	namespace:Eigen::internal
cofactor_4x4	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^inline typename MatrixType::Scalar cofactor_4x4(const MatrixType& matrix)$/;"	f	namespace:Eigen::internal
col	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline Block<CoefficientsType,Dynamic,1> col(Index i)$/;"	f	class:Eigen::internal::BandMatrixBase
col	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^    col = (UnrollCount-1) \/ Derived::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::all_unroller::__anon200
col	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^    col = (UnrollCount-1) \/ Derived::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::any_unroller::__anon201
col	./Thirdparty/sparseicp/include/Eigen/src/Core/CoreIterators.h	/^    inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::DenseBase::InnerIterator
col	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    col = (UnrollCount-1) \/ Derived1::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::triangular_assignment_selector::__anon334
col	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    col = (UnrollCount-1) \/ Derived1::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::triangular_assignment_selector::__anon335
col	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    col = (UnrollCount-1) \/ Derived1::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::triangular_assignment_selector::__anon232
col	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^    col = (UnrollCount-1) \/ Derived::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::visitor_impl::__anon235
col	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^  Index row, col;$/;"	m	struct:Eigen::internal::coeff_visitor
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::MappedSparseMatrix::InnerIterator
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^        inline Index col() const { return IsRowMajor ? this->index() : m_outer; }$/;"	f	class:Eigen::BlockImpl::InnerIterator
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^        inline Index col() const { return IsRowMajor ? this->index() : m_outer; }$/;"	f	class:Eigen::BlockImpl::ReverseInnerIterator
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      inline Index col()    const { return Base::col()   - m_block.m_startCol.value(); }$/;"	f	class:Eigen::BlockImpl::InnerIterator
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      inline Index col()    const { return Base::col()   - m_block.m_startCol.value(); }$/;"	f	class:Eigen::BlockImpl::ReverseInnerIterator
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return Lhs::IsRowMajor ? index() : m_lhsIter.col(); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return m_lhsIter.col(); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return m_rhsIter.col(); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    inline Index col() const { return Transpose ? m_outer : Base::row(); }$/;"	f	class:Eigen::SparseDenseOuterProduct::InnerIterator
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Index col() const { return m_outer; }$/;"	f	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::SparseMatrix::InnerIterator
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTranspose.h	/^    Index col() const { return Base::row(); }$/;"	f	class:Eigen::TransposeImpl::InnerIterator
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTranspose.h	/^    Index col() const { return Base::row(); }$/;"	f	class:Eigen::TransposeImpl::ReverseInnerIterator
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index col() const { return (MatrixType::Flags&RowMajorBit ? this->index() : Base::outer()); }$/;"	f	class:Eigen::SparseTriangularView::InnerIterator
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index col() const { return Base::col(); }$/;"	f	class:Eigen::SparseTriangularView::ReverseInnerIterator
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^  const Index& col() const { return m_col; }$/;"	f	class:Eigen::Triplet
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Index col() const { return IsColVector ? 0 : index(); }$/;"	f	class:Eigen::SparseVector::InnerIterator
col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Index col() const { return IsColVector ? 0 : index(); }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
col	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Index col() const { return m_outer; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
col	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline ColXpr col(Index i)$/;"	f
col	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline ConstColXpr col(Index i) const$/;"	f
colBaseOfBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    inline int colBaseOfBlock(int c) const { return c ? _colBlockIndices[c-1] : 0 ; }$/;"	f	class:g2o::SparseBlockMatrix
colBaseOfBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int colBaseOfBlock(int c) const { return c ? _colBlockIndices[c-1] : 0 ; }$/;"	f	class:g2o::SparseBlockMatrixCCS
colBaseOfBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int colBaseOfBlock(int c) const { return c ? _colBlockIndices[c-1] : 0 ; }$/;"	f	class:g2o::SparseBlockMatrixHashMap
colBlockIndices	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    const std::vector<int>& colBlockIndices() const { return _colBlockIndices;}$/;"	f	class:g2o::SparseBlockMatrix
colBlockIndices	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    std::vector<int>& colBlockIndices() { return _colBlockIndices;}$/;"	f	class:g2o::SparseBlockMatrix
colBlockIndices	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<int>& colBlockIndices() const { return _colBlockIndices;}$/;"	f	class:g2o::SparseBlockMatrixCCS
colBlockIndices	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<int>& colBlockIndices() const { return _colBlockIndices;}$/;"	f	class:g2o::SparseBlockMatrixHashMap
colInHessian	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        int colInHessian() const {return _colInHessian;}$/;"	f	class:g2o::OptimizableGraph::Vertex
colIndexByOuterInner	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE Index colIndexByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
colIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index* colIndexPtr()$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
colIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index* colIndexPtr() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
colOffset	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    EIGEN_STRONG_INLINE Index colOffset() const { return m_index.value()>0 ? m_index.value() : 0; }$/;"	f	class:Eigen::Diagonal
colPivHouseholderQr	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^MatrixBase<Derived>::colPivHouseholderQr() const$/;"	f	class:Eigen::MatrixBase
colStride	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index colStride() const$/;"	f	class:Eigen::DenseCoeffsBase
colToSup	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index* colToSup()  { return m_col_to_sup; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
colToSup	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index* colToSup() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
colamd	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static bool colamd(Index n_row, Index n_col, Index Alen, Index *A, Index *p, double knobs[COLAMD_KNOBS], Index stats[COLAMD_STATS])$/;"	f	namespace:internal
colamd_c	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^inline Index colamd_c(Index n_col) $/;"	f	namespace:internal
colamd_col	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^struct colamd_col$/;"	s	namespace:internal
colamd_r	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^inline Index  colamd_r(Index n_row)$/;"	f	namespace:internal
colamd_recommended	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^inline Index colamd_recommended ( Index nnz, Index n_row, Index n_col)$/;"	f	namespace:internal
colamd_set_defaults	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static inline void colamd_set_defaults(double knobs[COLAMD_KNOBS])$/;"	f	namespace:internal
colblk	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index colblk; \/\/ The minimum column dimension for 2-D blocking to be used;$/;"	m	struct:Eigen::internal::perfvalues
coletree	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseColEtree.h	/^int coletree(const MatrixType& mat, IndexVector& parent, IndexVector& firstRowElt, typename MatrixType::Index *perm=0)$/;"	f	namespace:Eigen::internal
cols	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    inline int cols() const {return _colBlockIndices.size() ? _colBlockIndices.back() : 0;}$/;"	f	class:g2o::SparseBlockMatrix
cols	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int cols() const {return _colBlockIndices.size() ? _colBlockIndices.back() : 0;}$/;"	f	class:g2o::SparseBlockMatrixCCS
cols	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int cols() const {return _colBlockIndices.size() ? _colBlockIndices.back() : 0;}$/;"	f	class:g2o::SparseBlockMatrixHashMap
cols	./Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      int cols() const {return _blockIndices.size() ? _blockIndices.back() : 0;}$/;"	f	class:g2o::SparseBlockMatrixDiagonal
cols	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::LDLT
cols	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::LLT
cols	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    inline Index cols() const { return m_cholmodFactor->n; }$/;"	f	class:Eigen::CholmodBase
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::ArrayWrapper
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::MatrixWrapper
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline Index cols() const { return m_coeffs.cols(); }$/;"	f	class:Eigen::internal::BandMatrix
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline Index cols() const { return m_coeffs.cols(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline Index cols() const { return m_blockCols.value(); }$/;"	f	class:Eigen::internal::BlockImpl_dense
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index cols() const {$/;"	f	class:Eigen::CwiseBinaryOp
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_cols.value(); }$/;"	f	class:Eigen::CwiseNullaryOp
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_xpr.cols(); }$/;"	f	class:Eigen::CwiseUnaryOp
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::CwiseUnaryView
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseIndex cols() const {return m_cols;}$/;"	f	class:Eigen::DenseStorage
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseIndex cols(void) const {return _Cols;}$/;"	f	class:Eigen::DenseStorage
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseIndex cols(void) const {return m_cols;}$/;"	f	class:Eigen::DenseStorage
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    static inline DenseIndex cols(void) {return _Cols;}$/;"	f	class:Eigen::DenseStorage
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    inline Index cols() const { return 1; }$/;"	f	class:Eigen::Diagonal
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline Index cols() const { return diagonal().size(); }$/;"	f	class:Eigen::DiagonalBase
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::DiagonalProduct
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^  inline Index cols() const { return derived().cols(); }$/;"	f	struct:Eigen::EigenBase
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::Flagged
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^    inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::ForceAlignedAccess
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline Index cols() const { return m_cols.value(); }$/;"	f	class:Eigen::MapBase
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^    inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::NestByValue
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline Index cols() const { return Index(indices().size()); }$/;"	f	class:Eigen::PermutationBase
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	struct:Eigen::internal::permut_matrix_product_retval
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline int cols() const { return m_permutation.cols(); }$/;"	f	class:Eigen::Transpose
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_storage.cols(); }$/;"	f	class:Eigen::PlainObjectBase
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    inline Index cols() const { return m_rhs.cols(); }$/;"	f	class:Eigen::ProductBase
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    inline Index cols() const { return m_matrix.cols() * m_colFactor.value(); }$/;"	f	class:Eigen::Replicate
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^    inline Index cols() const { return static_cast<const Derived*>(this)->cols(); }$/;"	f	class:Eigen::ReturnByValue
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::Reverse
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    Index cols() const { return m_condition.cols(); }$/;"	f	class:Eigen::Select
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SelfAdjointView
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SelfCwiseBinaryOp
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::triangular_solve_retval
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::SwapWrapper
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    inline Index cols() const { return m_matrix.rows(); }$/;"	f	class:Eigen::Transpose
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline int cols() const { return m_matrix.cols(); }$/;"	f	struct:Eigen::internal::transposition_matrix_product_retval
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline Index cols() const { return derived().cols(); }$/;"	f	class:Eigen::TriangularBase
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::TriangularView
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    Index cols() const { return (Direction==Horizontal ? 1 : m_matrix.cols()); }$/;"	f	class:Eigen::PartialReduxExpr
cols	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_rhs.cols(); }$/;"	f	class:Eigen::CoeffBasedProduct
cols	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^    inline Index cols() const { return m_matrix.cols() - 1; }$/;"	f	class:Eigen::Minor
cols	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    Index cols() const { return m_hess.packedMatrix().cols(); }$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
cols	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Index cols() const { return m_matrix.cols(); }$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
cols	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    inline Index cols() const { return m_matrix.cols() + (int(Direction)==Horizontal ? 1 : 0); }$/;"	f	class:Eigen::Homogeneous
cols	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
cols	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
cols	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    Index cols() const { return rows(); }$/;"	f	class:Eigen::HouseholderSequence
cols	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    Index cols() const { return m_invdiag.size(); }$/;"	f	class:Eigen::DiagonalPreconditioner
cols	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    Index cols() const { return m_lu.cols(); }$/;"	f	class:Eigen::IncompleteLUT
cols	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index cols() const { return mp_matrix ? mp_matrix->cols() : 0; }$/;"	f	class:Eigen::IterativeSolverBase
cols	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    inline Index cols() const { return m_lu.cols(); }$/;"	f	class:Eigen::FullPivLU
cols	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^  inline Index cols() const { return m_matrix.cols(); }$/;"	f	struct:Eigen::internal::inverse_impl
cols	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    inline Index cols() const { return m_lu.cols(); }$/;"	f	class:Eigen::PartialPivLU
cols	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    inline Index cols() const { return m_size; }$/;"	f	class:Eigen::PastixBase
cols	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    inline Index cols() const { return m_size; }$/;"	f	class:Eigen::PardisoImpl
cols	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index cols() const { return m_qr.cols(); }$/;"	f	class:Eigen::ColPivHouseholderQR
cols	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    Index cols() const { return m_qr.rows(); }$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
cols	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index cols() const { return m_qr.cols(); }$/;"	f	class:Eigen::FullPivHouseholderQR
cols	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    inline Index cols() const { return m_qr.cols(); }$/;"	f	class:Eigen::HouseholderQR
cols	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    inline Index cols() const { return m_cR->ncol; }$/;"	f	class:Eigen::SPQR
cols	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  inline Index cols() const { return m_other.cols(); }$/;"	f	struct:Eigen::SPQR_QProduct
cols	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    inline Index cols() const { return m_cols; }$/;"	f	class:Eigen::JacobiSVD
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SimplicialCholeskyBase
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index cols() const { return IsRowMajor ? m_innerSize : m_outerSize; }$/;"	f	class:Eigen::MappedSparseMatrix
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    EIGEN_STRONG_INLINE Index cols() const { return IsRowMajor ? m_matrix.cols() : m_outerSize.value(); }$/;"	f	class:Eigen::BlockImpl
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline int cols() const { return m_blockCols.value(); }$/;"	f	class:Eigen::BlockImpl
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE Index cols() const { return Tr ? m_lhs.cols() : m_rhs.cols(); }$/;"	f	class:Eigen::SparseDenseOuterProduct
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_rhs.cols(); }$/;"	f	class:Eigen::SparseDiagonalProduct
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index cols() const { return IsRowMajor ? m_innerSize : m_outerSize; }$/;"	f	class:Eigen::SparseMatrix
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Index cols() const { return derived().cols(); }$/;"	f	class:Eigen::SparseMatrixBase
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^    inline int cols() const { return m_matrix.cols(); }$/;"	f	struct:Eigen::internal::permut_sparsematrix_product_retval
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_rhs.cols(); }$/;"	f	class:Eigen::SparseSparseProduct
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SparseSelfAdjointView
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SparseTriangularView
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index cols() const { return IsColVector ? 1 : m_size; }$/;"	f	class:Eigen::SparseVector
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SparseView
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    inline Index cols() const { return m_mat.cols(); }$/;"	f	class:Eigen::SparseLU
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  Index cols() { return m_mapL.cols(); }$/;"	f	struct:Eigen::SparseLUMatrixLReturnType
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  Index cols() { return m_mapL.cols(); }$/;"	f	struct:Eigen::SparseLUMatrixUReturnType
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index cols() { return m_col; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    inline Index cols() const { return m_pmat.cols();}$/;"	f	class:Eigen::SparseQR
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  inline Index cols() const { return m_other.cols(); }$/;"	f	struct:Eigen::SparseQR_QProduct
cols	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  inline Index cols() const { return m_qr.cols(); }$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
cols	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SuperLUBase
cols	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline Index cols() const { return m_copyMatrix.cols(); }$/;"	f	class:Eigen::UmfPackLU
cols	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^  inline Index cols() const { return m_cols; }$/;"	f	struct:Eigen::internal::image_retval_base
cols	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^  inline Index cols() const { return m_cols; }$/;"	f	struct:Eigen::internal::kernel_retval_base
cols	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^  inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::solve_retval_base
cols	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^  inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::solve_retval_with_guess
cols	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^  inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::sparse_solve_retval_base
colsOfBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    inline int colsOfBlock(int c) const { return c ? _colBlockIndices[c] - _colBlockIndices[c-1] : _colBlockIndices[0]; }$/;"	f	class:g2o::SparseBlockMatrix
colsOfBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int colsOfBlock(int c) const { return c ? _colBlockIndices[c] - _colBlockIndices[c-1] : _colBlockIndices[0]; }$/;"	f	class:g2o::SparseBlockMatrixCCS
colsOfBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int colsOfBlock(int c) const { return c ? _colBlockIndices[c] - _colBlockIndices[c-1] : _colBlockIndices[0]; }$/;"	f	class:g2o::SparseBlockMatrixHashMap
colsPermutation	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    const PermutationType& colsPermutation() const$/;"	f	class:Eigen::ColPivHouseholderQR
colsPermutation	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    const PermutationType& colsPermutation() const$/;"	f	class:Eigen::FullPivHouseholderQR
colsPermutation	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    PermutationType colsPermutation() const$/;"	f	class:Eigen::SPQR
colsPermutation	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    inline const PermutationType& colsPermutation() const$/;"	f	class:Eigen::SparseLU
colsPermutation	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    const PermutationType& colsPermutation() const$/;"	f	class:Eigen::SparseQR
cols_select	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    cols_select = product_size_category<Cols,MaxCols>::value,$/;"	e	enum:Eigen::internal::product_type::__anon146
column_bmod	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_bmod.h	/^Index SparseLUImpl<Scalar,Index>::column_bmod(const Index jcol, const Index nseg, BlockScalarVector dense, ScalarVector& tempv, BlockIndexVector segrep, BlockIndexVector repfnz, Index fpanelc, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
column_dfs	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^Index SparseLUImpl<Scalar,Index>::column_dfs(const Index m, const Index jcol, IndexVector& perm_r, Index maxsuper, Index& nseg,  BlockIndexVector lsub_col, IndexVector& segrep, BlockIndexVector repfnz, IndexVector& xprune, IndexVector& marker, IndexVector& parent, IndexVector& xplore, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
column_dfs_traits	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  column_dfs_traits(Index jcol, Index& jsuper, typename SparseLUImpl<Scalar, Index>::GlobalLU_t& glu, SparseLUImpl<Scalar, Index>& luImpl)$/;"	f	struct:Eigen::internal::column_dfs_traits
column_dfs_traits	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^struct column_dfs_traits : no_assignment_operator$/;"	s	namespace:Eigen::internal
colwise	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^DenseBase<Derived>::colwise() const$/;"	f	class:Eigen::DenseBase
colwise	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^DenseBase<Derived>::colwise()$/;"	f	class:Eigen::DenseBase
complex_schur_reduce_to_hessenberg	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^struct complex_schur_reduce_to_hessenberg$/;"	s	namespace:Eigen::internal
complex_schur_reduce_to_hessenberg	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^struct complex_schur_reduce_to_hessenberg<MatrixType, false>$/;"	s	namespace:Eigen::internal
compute	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^LDLT<MatrixType,_UpLo>& LDLT<MatrixType,_UpLo>::compute(const MatrixType& a)$/;"	f	class:Eigen::LDLT
compute	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^LLT<MatrixType,_UpLo>& LLT<MatrixType,_UpLo>::compute(const MatrixType& a)$/;"	f	class:Eigen::LLT
compute	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    Derived& compute(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
compute	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^void SVD<MatrixType>::compute(const MatrixType& matrix)$/;"	f	class:Eigen::SVD
compute	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^ComplexEigenSolver<MatrixType>::compute(const MatrixType& matrix, bool computeEigenvectors)$/;"	f	class:Eigen::ComplexEigenSolver
compute	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^ComplexSchur<MatrixType>& ComplexSchur<MatrixType>::compute(const MatrixType& matrix, bool computeU)$/;"	f	class:Eigen::ComplexSchur
compute	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^EigenSolver<MatrixType>::compute(const MatrixType& matrix, bool computeEigenvectors)$/;"	f	class:Eigen::EigenSolver
compute	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^GeneralizedEigenSolver<MatrixType>::compute(const MatrixType& A, const MatrixType& B, bool computeEigenvectors)$/;"	f	class:Eigen::GeneralizedEigenSolver
compute	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^compute(const MatrixType& matA, const MatrixType& matB, int options)$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
compute	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HessenbergDecomposition& compute(const MatrixType& matrix)$/;"	f	class:Eigen::HessenbergDecomposition
compute	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^    RealQZ<MatrixType>& RealQZ<MatrixType>::compute(const MatrixType& A_in, const MatrixType& B_in, bool computeQZ)$/;"	f	class:Eigen::RealQZ
compute	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^RealSchur<MatrixType>& RealSchur<MatrixType>::compute(const MatrixType& matrix, bool computeU)$/;"	f	class:Eigen::RealSchur
compute	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    void compute(const MatrixType& matA, const MatrixType& matB, bool computeEigenvectors = true)$/;"	f	class:Eigen::SelfAdjointEigenSolver
compute	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    void compute(const MatrixType& matrix, bool computeEigenvectors)$/;"	f	class:Eigen::SelfAdjointEigenSolver
compute	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^::compute(const MatrixType& matrix, int options)$/;"	f	class:Eigen::SelfAdjointEigenSolver
compute	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Tridiagonalization& compute(const MatrixType& matrix)$/;"	f	class:Eigen::Tridiagonalization
compute	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner& compute(const MatType& mat)$/;"	f	class:Eigen::DiagonalPreconditioner
compute	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner& compute(const MatrixType& ) { return *this; }$/;"	f	class:Eigen::IdentityPreconditioner
compute	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    IncompleteLUT<Scalar>& compute(const MatrixType& amat)$/;"	f	class:Eigen::IncompleteLUT
compute	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& compute(const MatrixType& A)$/;"	f	class:Eigen::IterativeSolverBase
compute	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>& FullPivLU<MatrixType>::compute(const MatrixType& matrix)$/;"	f	class:Eigen::FullPivLU
compute	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>& PartialPivLU<MatrixType>::compute(const MatrixType& matrix)$/;"	f	class:Eigen::PartialPivLU
compute	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::PastixLDLT
compute	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::PastixLLT
compute	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::PastixLU
compute	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::compute(ColSpMatrix& mat)$/;"	f	class:Eigen::PastixBase
compute	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^Derived& PardisoImpl<Derived>::compute(const MatrixType& a)$/;"	f	class:Eigen::PardisoImpl
compute	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^ColPivHouseholderQR<MatrixType>& ColPivHouseholderQR<MatrixType>::compute(const MatrixType& matrix)$/;"	f	class:Eigen::ColPivHouseholderQR
compute	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^FullPivHouseholderQR<MatrixType>& FullPivHouseholderQR<MatrixType>::compute(const MatrixType& matrix)$/;"	f	class:Eigen::FullPivHouseholderQR
compute	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^HouseholderQR<MatrixType>& HouseholderQR<MatrixType>::compute(const MatrixType& matrix)$/;"	f	class:Eigen::HouseholderQR
compute	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void compute(const _MatrixType& matrix)$/;"	f	class:Eigen::SPQR
compute	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    JacobiSVD& compute(const MatrixType& matrix)$/;"	f	class:Eigen::JacobiSVD
compute	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType& matrix, unsigned int computationOptions)$/;"	f	class:Eigen::JacobiSVD
compute	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^UpperBidiagonalization<_MatrixType>& UpperBidiagonalization<_MatrixType>::compute(const _MatrixType& matrix)$/;"	f	class:Eigen::internal::UpperBidiagonalization
compute	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholesky& compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholesky
compute	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLDLT& compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLDLT
compute	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLLT& compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLLT
compute	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholeskyBase
compute	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::SparseLU
compute	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    void compute(const MatrixType& mat)$/;"	f	class:Eigen::SparseQR
compute	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void compute(const MatrixType& matrix)$/;"	f	class:Eigen::SuperLUBase
compute	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void compute(const MatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
computeActiveErrors	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::computeActiveErrors()$/;"	f	class:g2o::SparseOptimizer
computeBatchStatistics	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    bool computeBatchStatistics() const { return _computeBatchStatistics;}$/;"	f	class:g2o::SparseOptimizer
computeBoundingBox	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		void computeBoundingBox(BoundingBox& bbox)$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
computeCovariance	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^void MarginalCovarianceCholesky::computeCovariance(SparseBlockMatrix<MatrixXd>& spinv, const std::vector<int>& rowBlockIndices, const std::vector< std::pair<int, int> >& blockIndices)$/;"	f	class:g2o::MarginalCovarianceCholesky
computeCovariance	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^void MarginalCovarianceCholesky::computeCovariance(double** covBlocks, const std::vector<int>& blockIndices)$/;"	f	class:g2o::MarginalCovarianceCholesky
computeDescriptors	./src/ORBextractor.cc	/^static void computeDescriptors(const Mat& image, vector<KeyPoint>& keypoints, Mat& descriptors,$/;"	f	namespace:ORB_SLAM2
computeDirect	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^::computeDirect(const MatrixType& matrix, int options)$/;"	f	class:Eigen::SelfAdjointEigenSolver
computeEntry	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^double MarginalCovarianceCholesky::computeEntry(int r, int c)$/;"	f	class:g2o::MarginalCovarianceCholesky
computeError	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^    void computeError()$/;"	f	class:g2o::EdgeInverseSim3ProjectXYZ
computeError	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^    void computeError()$/;"	f	class:g2o::EdgeSim3
computeError	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^    void computeError()$/;"	f	class:g2o::EdgeSim3ProjectXYZ
computeError	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  void computeError()  {$/;"	f	class:g2o::EdgeSE3ProjectXYZ
computeError	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  void computeError()  {$/;"	f	class:g2o::EdgeSE3ProjectXYZOnlyPose
computeError	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  void computeError()  {$/;"	f	class:g2o::EdgeStereoSE3ProjectXYZ
computeError	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  void computeError()  {$/;"	f	class:g2o::EdgeStereoSE3ProjectXYZOnlyPose
computeFromHessenberg	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^ComplexSchur<MatrixType>& ComplexSchur<MatrixType>::computeFromHessenberg(const HessMatrixType& matrixH, const OrthMatrixType& matrixQ, bool computeU)$/;"	f	class:Eigen::ComplexSchur
computeFromHessenberg	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^RealSchur<MatrixType>& RealSchur<MatrixType>::computeFromHessenberg(const HessMatrixType& matrixH, const OrthMatrixType& matrixQ,  bool computeU)$/;"	f	class:Eigen::RealSchur
computeImage	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^    void computeImage(ImageMatrixType *result) const$/;"	f	class:Eigen::LU
computeIndex	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h	/^      int computeIndex(int r, int c) const { \/*assert(r <= c);*\/ return r*_n + c;}$/;"	f	class:g2o::MarginalCovarianceCholesky
computeInitialDistances	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		DistanceType computeInitialDistances(const ElementType* vec, std::vector<DistanceType>& dists) const$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
computeInitialGuess	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::computeInitialGuess()$/;"	f	class:g2o::SparseOptimizer
computeInitialGuess	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::computeInitialGuess(EstimatePropagatorCost& costFunction)$/;"	f	class:g2o::SparseOptimizer
computeInverse	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    void computeInverse(MatrixBase<ResultType> *result) const {$/;"	f	class:Eigen::MatrixBase
computeInverse	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^    inline void computeInverse(ResultType *result) const$/;"	f	class:Eigen::LU
computeInverseAndDetWithCheck	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^inline void MatrixBase<Derived>::computeInverseAndDetWithCheck($/;"	f	class:Eigen::MatrixBase
computeInverseWithCheck	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^inline void MatrixBase<Derived>::computeInverseWithCheck($/;"	f	class:Eigen::MatrixBase
computeKernel	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^    void computeKernel(KernelMatrixType *result) const$/;"	f	class:Eigen::LU
computeLambdaInit	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^  double OptimizationAlgorithmLevenberg::computeLambdaInit() const$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
computeMarginals	./Thirdparty/g2o/g2o/core/block_solver.hpp	/^bool BlockSolver<Traits>::computeMarginals(SparseBlockMatrix<MatrixXd>& spinv, const std::vector<std::pair<int, int> >& blockIndices)$/;"	f	class:g2o::BlockSolver
computeMarginals	./Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^  bool OptimizationAlgorithmWithHessian::computeMarginals(SparseBlockMatrix<MatrixXd>& spinv, const std::vector<std::pair<int, int> >& blockIndices)$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
computeMarginals	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::computeMarginals(SparseBlockMatrix<MatrixXd>& spinv, const std::vector<std::pair<int, int> >& blockIndices){$/;"	f	class:g2o::SparseOptimizer
computeMarginals	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    bool computeMarginals(SparseBlockMatrix<MatrixXd>& spinv, const Vertex* vertex) {$/;"	f	class:g2o::SparseOptimizer
computeMarginals	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    bool computeMarginals(SparseBlockMatrix<MatrixXd>& spinv, const VertexContainer& vertices) {$/;"	f	class:g2o::SparseOptimizer
computeMinMax	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		void computeMinMax(IndexType* ind, IndexType count, int element, ElementType& min_elem, ElementType& max_elem)$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
computeNormOfT	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^inline typename MatrixType::Scalar RealSchur<MatrixType>::computeNormOfT()$/;"	f	class:Eigen::RealSchur
computeNorms	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^    inline void RealQZ<MatrixType>::computeNorms()$/;"	f	class:Eigen::RealQZ
computeOrbDescriptor	./src/ORBextractor.cc	/^static void computeOrbDescriptor(const KeyPoint& kpt,$/;"	f	namespace:ORB_SLAM2
computeOrientation	./src/ORBextractor.cc	/^static void computeOrientation(const Mat& image, vector<KeyPoint>& keypoints, const vector<int>& umax)$/;"	f	namespace:ORB_SLAM2
computePositiveUnitary	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^void SVD<MatrixType>::computePositiveUnitary(UnitaryType *positive,$/;"	f	class:Eigen::SVD
computeProductBlockingSizes	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline void computeProductBlockingSizes(SizeType& k, SizeType& m, SizeType& n)$/;"	f	namespace:Eigen::internal
computeProductBlockingSizes	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^void computeProductBlockingSizes(SizeType& k, SizeType& m, SizeType& n)$/;"	f	namespace:Eigen::internal
computeQuadraticForm	./Thirdparty/g2o/g2o/core/base_multi_edge.hpp	/^void BaseMultiEdge<D, E>::computeQuadraticForm(const InformationType& omega, const ErrorVector& weightedError)$/;"	f	class:BaseMultiEdge
computeRoots	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline void computeRoots(const MatrixType& m, VectorType& roots)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
computeRotationScaling	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^void Transform<Scalar,Dim>::computeRotationScaling(RotationMatrixType *rotation, ScalingMatrixType *scaling) const$/;"	f	class:Eigen::Transform
computeRotationScaling	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^void SVD<MatrixType>::computeRotationScaling(RotationType *rotation, ScalingType *scaling) const$/;"	f	class:Eigen::SVD
computeRotationScaling	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^void Transform<Scalar,Dim,Mode,Options>::computeRotationScaling(RotationMatrixType *rotation, ScalingMatrixType *scaling) const$/;"	f	class:Eigen::Transform
computeScale	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^  double OptimizationAlgorithmLevenberg::computeScale() const$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
computeScalingRotation	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^void Transform<Scalar,Dim>::computeScalingRotation(ScalingMatrixType *scaling, RotationMatrixType *rotation) const$/;"	f	class:Eigen::Transform
computeScalingRotation	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^void SVD<MatrixType>::computeScalingRotation(ScalingType *scaling, RotationType *rotation) const$/;"	f	class:Eigen::SVD
computeScalingRotation	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^void Transform<Scalar,Dim,Mode,Options>::computeScalingRotation(ScalingMatrixType *scaling, RotationMatrixType *rotation) const$/;"	f	class:Eigen::Transform
computeShift	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^typename ComplexSchur<MatrixType>::ComplexScalar ComplexSchur<MatrixType>::computeShift(Index iu, Index iter)$/;"	f	class:Eigen::ComplexSchur
computeShift	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::computeShift(Index iu, Index iter, Scalar& exshift, Vector3s& shiftInfo)$/;"	f	class:Eigen::RealSchur
computeSymbolicDecomposition	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    void computeSymbolicDecomposition(const SparseBlockMatrix<MatrixType>& A)$/;"	f	class:g2o::LinearSolverEigen
computeTree	./Thirdparty/g2o/g2o/core/hyper_dijkstra.cpp	/^  void HyperDijkstra::computeTree(AdjacencyMap& amap)$/;"	f	class:g2o::HyperDijkstra
computeU	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    inline bool computeU() const { return m_computeFullU || m_computeThinU; }$/;"	f	class:Eigen::JacobiSVD
computeUnitaryPositive	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^void SVD<MatrixType>::computeUnitaryPositive(UnitaryType *unitary,$/;"	f	class:Eigen::SVD
computeUpperTriangleIndex	./Thirdparty/g2o/g2o/core/base_multi_edge.hpp	/^  inline int computeUpperTriangleIndex(int i, int j)$/;"	f	namespace:internal
computeV	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    inline bool computeV() const { return m_computeFullV || m_computeThinV; }$/;"	f	class:Eigen::JacobiSVD
compute_A_and_b_gauss_newton	./src/PnPsolver.cc	/^void PnPsolver::compute_A_and_b_gauss_newton(const double * l_6x10, const double * rho,$/;"	f	class:ORB_SLAM2::PnPsolver
compute_A_and_b_gauss_newton	./src/PoseSolver.cc	/^void PoseSolver::compute_A_and_b_gauss_newton(const double * l_6x10, const double * rho,$/;"	f	class:ORB_SLAM2::PoseSolver
compute_L_6x10	./src/PnPsolver.cc	/^void PnPsolver::compute_L_6x10(const double * ut, double * l_6x10)$/;"	f	class:ORB_SLAM2::PnPsolver
compute_L_6x10	./src/PoseSolver.cc	/^void PoseSolver::compute_L_6x10(const double * ut, double * l_6x10)$/;"	f	class:ORB_SLAM2::PoseSolver
compute_R_and_t	./src/PnPsolver.cc	/^double PnPsolver::compute_R_and_t(const double * ut, const double * betas,$/;"	f	class:ORB_SLAM2::PnPsolver
compute_R_and_t	./src/PoseSolver.cc	/^double PoseSolver::compute_R_and_t(const double * ut, const double * betas,$/;"	f	class:ORB_SLAM2::PoseSolver
compute_barycentric_coordinates	./src/PnPsolver.cc	/^void PnPsolver::compute_barycentric_coordinates(void)$/;"	f	class:ORB_SLAM2::PnPsolver
compute_barycentric_coordinates	./src/PoseSolver.cc	/^void PoseSolver::compute_barycentric_coordinates(void)$/;"	f	class:ORB_SLAM2::PoseSolver
compute_ccs	./src/PnPsolver.cc	/^void PnPsolver::compute_ccs(const double * betas, const double * ut)$/;"	f	class:ORB_SLAM2::PnPsolver
compute_ccs	./src/PoseSolver.cc	/^void PoseSolver::compute_ccs(const double * betas, const double * ut)$/;"	f	class:ORB_SLAM2::PoseSolver
compute_inverse	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^struct compute_inverse$/;"	s	namespace:Eigen::internal
compute_inverse	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^struct compute_inverse<MatrixType, ResultType, 1>$/;"	s	namespace:Eigen::internal
compute_inverse	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^struct compute_inverse<MatrixType, ResultType, 2>$/;"	s	namespace:Eigen::internal
compute_inverse	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^struct compute_inverse<MatrixType, ResultType, 3>$/;"	s	namespace:Eigen::internal
compute_inverse	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^struct compute_inverse<MatrixType, ResultType, 4>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^struct compute_inverse_and_det_with_check { \/* nothing! general case not supported. *\/ };$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 1>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 2>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 3>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 4>$/;"	s	namespace:Eigen::internal
compute_inverse_size2_helper	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^inline void compute_inverse_size2_helper($/;"	f	namespace:Eigen::internal
compute_inverse_size3_helper	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^inline void compute_inverse_size3_helper($/;"	f	namespace:Eigen::internal
compute_inverse_size4	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^struct compute_inverse_size4$/;"	s	namespace:Eigen::internal
compute_inverse_size4	./Thirdparty/sparseicp/include/Eigen/src/LU/arch/Inverse_SSE.h	/^struct compute_inverse_size4<Architecture::SSE, double, MatrixType, ResultType>$/;"	s	namespace:Eigen::internal
compute_inverse_size4	./Thirdparty/sparseicp/include/Eigen/src/LU/arch/Inverse_SSE.h	/^struct compute_inverse_size4<Architecture::SSE, float, MatrixType, ResultType>$/;"	s	namespace:Eigen::internal
compute_pcs	./src/PnPsolver.cc	/^void PnPsolver::compute_pcs(void)$/;"	f	class:ORB_SLAM2::PnPsolver
compute_pcs	./src/PoseSolver.cc	/^void PoseSolver::compute_pcs(void)$/;"	f	class:ORB_SLAM2::PoseSolver
compute_pose	./src/PnPsolver.cc	/^double PnPsolver::compute_pose(double R[3][3], double t[3])$/;"	f	class:ORB_SLAM2::PnPsolver
compute_pose	./src/PoseSolver.cc	/^double PoseSolver::compute_pose(double R[3][3], double t[3])$/;"	f	class:ORB_SLAM2::PoseSolver
compute_rho	./src/PnPsolver.cc	/^void PnPsolver::compute_rho(double * rho)$/;"	f	class:ORB_SLAM2::PnPsolver
compute_rho	./src/PoseSolver.cc	/^void PoseSolver::compute_rho(double * rho)$/;"	f	class:ORB_SLAM2::PoseSolver
conditionMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    const ConditionMatrixType& conditionMatrix() const$/;"	f	class:Eigen::Select
conditional	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct conditional <false, Then, Else> { typedef Else type; };$/;"	s	namespace:Eigen::internal
conditional	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct conditional { typedef Then type; };$/;"	s	namespace:Eigen::internal
conditional_aligned_delete	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> inline void conditional_aligned_delete(T *ptr, size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_delete_auto	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> inline void conditional_aligned_delete_auto(T *ptr, size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_free	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<> inline void conditional_aligned_free<false>(void *ptr)$/;"	f	namespace:Eigen::internal
conditional_aligned_free	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<bool Align> inline void conditional_aligned_free(void *ptr)$/;"	f	namespace:Eigen::internal
conditional_aligned_malloc	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<> inline void* conditional_aligned_malloc<false>(size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_malloc	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<bool Align> inline void* conditional_aligned_malloc(size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_new	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> inline T* conditional_aligned_new(size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_new_auto	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> inline T* conditional_aligned_new_auto(size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<> inline void* conditional_aligned_realloc<false>(void* ptr, size_t new_size, size_t)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<bool Align> inline void* conditional_aligned_realloc(void* ptr, size_t new_size, size_t old_size)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc_new	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> inline T* conditional_aligned_realloc_new(T* pts, size_t new_size, size_t old_size)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc_new_auto	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> inline T* conditional_aligned_realloc_new_auto(T* pts, size_t new_size, size_t old_size)$/;"	f	namespace:Eigen::internal
conj	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(conj, Scalar) conj(const Scalar& x)$/;"	f	namespace:Eigen::numext
conj_expr_if	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointRank2Update.h	/^template<bool Cond, typename T> struct conj_expr_if$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet2d, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet4f, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2d, Packet1cd, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet4f, Packet2cf, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar,bool Conj> struct conj_helper<RealScalar, std::complex<RealScalar>, false,Conj>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar,bool Conj> struct conj_helper<std::complex<RealScalar>, RealScalar, Conj,false>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar> struct conj_helper<std::complex<RealScalar>, std::complex<RealScalar>, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar> struct conj_helper<std::complex<RealScalar>, std::complex<RealScalar>, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar> struct conj_helper<std::complex<RealScalar>, std::complex<RealScalar>, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^template<typename Scalar> struct conj_helper<Scalar,Scalar,false,false>$/;"	s	namespace:Eigen::internal
conj_if	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^template<> struct conj_if<false> {$/;"	s	namespace:Eigen::internal
conj_if	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^template<> struct conj_if<true> {$/;"	s	namespace:Eigen::internal
conj_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct conj_impl$/;"	s	namespace:Eigen::internal
conj_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct conj_impl<Scalar,true>$/;"	s	namespace:Eigen::internal
conj_retval	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct conj_retval$/;"	s	namespace:Eigen::internal
conjugate	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline TriangularView<MatrixConjugateReturnType,Mode> conjugate()$/;"	f	class:Eigen::TriangularView
conjugate	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline const TriangularView<MatrixConjugateReturnType,Mode> conjugate() const$/;"	f	class:Eigen::TriangularView
conjugate	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Quaternion<Scalar> Quaternion<Scalar>::conjugate() const$/;"	f	class:Eigen::Quaternion
conjugate	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::conjugate() const$/;"	f	class:Eigen::QuaternionBase
conjugate	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    ConjugateReturnType conjugate() const$/;"	f	class:Eigen::HouseholderSequence
conjugate	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^conjugate() const$/;"	f
conjugate_gradient	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^void conjugate_gradient(const MatrixType& mat, const Rhs& rhs, Dest& x,$/;"	f	namespace:Eigen::internal
connectedSubset	./Thirdparty/g2o/g2o/core/hyper_dijkstra.cpp	/^  void HyperDijkstra::connectedSubset(HyperGraph::VertexSet& connected, HyperGraph::VertexSet& visited, $/;"	f	class:g2o::HyperDijkstra
conservativeResize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline void conservativeResize(DenseIndex size, DenseIndex nbRows, DenseIndex nbCols)$/;"	f	class:Eigen::DenseStorage
conservativeResize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline void conservativeResize(DenseIndex size, DenseIndex nbRows, DenseIndex)$/;"	f	class:Eigen::DenseStorage
conservativeResize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline void conservativeResize(DenseIndex size, DenseIndex, DenseIndex nbCols)$/;"	f	class:Eigen::DenseStorage
conservativeResize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline void conservativeResize(DenseIndex, DenseIndex nbRows, DenseIndex nbCols) { m_rows = nbRows; m_cols = nbCols; }$/;"	f	class:Eigen::DenseStorage
conservativeResize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline void conservativeResize(DenseIndex, DenseIndex nbRows, DenseIndex) { m_rows = nbRows; }$/;"	f	class:Eigen::DenseStorage
conservativeResize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline void conservativeResize(DenseIndex, DenseIndex, DenseIndex nbCols) { m_cols = nbCols; }$/;"	f	class:Eigen::DenseStorage
conservativeResize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline void conservativeResize(DenseIndex,DenseIndex,DenseIndex) {}$/;"	f	class:Eigen::DenseStorage
conservativeResize	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(Index nbRows, Index nbCols)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(Index nbRows, NoChange_t)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(Index size)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(NoChange_t, Index nbCols)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    void conservativeResize(Index rows, Index cols) $/;"	f	class:Eigen::SparseMatrix
conservativeResizeLike	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResizeLike(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
conservative_resize_like_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^struct conservative_resize_like_impl$/;"	s	namespace:Eigen::internal
conservative_resize_like_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^struct conservative_resize_like_impl<Derived,OtherDerived,true>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_impl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^static void conservative_sparse_sparse_product_impl(const Lhs& lhs, const Rhs& rhs, ResultType& res)$/;"	f	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
const	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
const_blas_data_mapper	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^    const_blas_data_mapper(const Scalar* data, Index stride) : m_data(data), m_stride(stride) {}$/;"	f	class:Eigen::internal::const_blas_data_mapper
const_blas_data_mapper	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^class const_blas_data_mapper$/;"	c	namespace:Eigen::internal
const_cast_derived	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^  inline Derived& const_cast_derived() const$/;"	f	struct:Eigen::EigenBase
const_cast_derived	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Derived& const_cast_derived() const$/;"	f	class:Eigen::SparseMatrixBase
const_derived	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^  inline const Derived& const_derived() const$/;"	f	struct:Eigen::EigenBase
const_pointer	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    typedef const T*  const_pointer;$/;"	t	class:Eigen::aligned_allocator
const_pointer	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    typedef const T*  const_pointer;$/;"	t	class:Eigen::aligned_allocator_indirection
const_reference	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    typedef const T&  const_reference;$/;"	t	class:Eigen::aligned_allocator
const_reference	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    typedef const T&  const_reference;$/;"	t	class:Eigen::aligned_allocator_indirection
construct	./Thirdparty/g2o/g2o/core/creators.h	/^      HyperGraph::HyperGraphElement* construct() { return new T;}$/;"	f	class:g2o::HyperGraphElementCreator
construct	./Thirdparty/g2o/g2o/core/factory.cpp	/^HyperGraph::HyperGraphElement* Factory::construct(const std::string& tag) const$/;"	f	class:g2o::Factory
construct	./Thirdparty/g2o/g2o/core/factory.cpp	/^HyperGraph::HyperGraphElement* Factory::construct(const std::string& tag, const HyperGraph::GraphElemBitset& elemsToConstruct) const$/;"	f	class:g2o::Factory
construct	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  OptimizationAlgorithm* OptimizationAlgorithmFactory::construct(const std::string& name, OptimizationAlgorithmProperty& solverProperty) const$/;"	f	class:g2o::OptimizationAlgorithmFactory
construct	./Thirdparty/g2o/g2o/core/robust_kernel_factory.cpp	/^RobustKernel* RobustKernelFactory::construct(const std::string& tag) const$/;"	f	class:g2o::RobustKernelFactory
construct	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	/^      RobustKernel* construct() { return new T;}$/;"	f	class:g2o::RobustKernelCreator
construct	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^    void construct(const Expression& expr, internal::false_type)$/;"	f	class:Eigen::Ref
construct	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^    void construct(const Expression& expr,internal::true_type)$/;"	f	class:Eigen::Ref
construct	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^  void construct(Expression& expr)$/;"	f	class:Eigen::RefBase
construct	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    void construct( pointer p, const T& value )$/;"	f	class:Eigen::aligned_allocator
constructQuadraticForm	./Thirdparty/g2o/g2o/core/base_binary_edge.hpp	/^void BaseBinaryEdge<D, E, VertexXiType, VertexXjType>::constructQuadraticForm()$/;"	f	class:BaseBinaryEdge
constructQuadraticForm	./Thirdparty/g2o/g2o/core/base_multi_edge.hpp	/^void BaseMultiEdge<D, E>::constructQuadraticForm()$/;"	f	class:BaseMultiEdge
constructQuadraticForm	./Thirdparty/g2o/g2o/core/base_unary_edge.hpp	/^void BaseUnaryEdge<D, E, VertexXiType>::constructQuadraticForm()$/;"	f	class:BaseUnaryEdge
construct_elements_of_array	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<typename T> inline T* construct_elements_of_array(T *ptr, size_t size)$/;"	f	namespace:Eigen::internal
construct_from_matrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  struct construct_from_matrix$/;"	s	class:Eigen::Transform
construct_from_matrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  template<typename OtherDerived> struct construct_from_matrix<OtherDerived, true>$/;"	s	class:Eigen::Transform
constructor_without_unaligned_array_assert	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^struct constructor_without_unaligned_array_assert {};$/;"	s	namespace:Eigen::internal
container	./Thirdparty/g2o/g2o/core/cache.cpp	/^  CacheContainer* Cache::container() {$/;"	f	class:g2o::Cache
contains	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline bool contains(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
contains	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline bool contains(const VectorType& p) const$/;"	f	class:Eigen::AlignedBox
contains	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline bool contains(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
contains	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline bool contains(const MatrixBase<Derived>& a_p) const$/;"	f	class:Eigen::AlignedBox
convertString	./Thirdparty/g2o/g2o/stuff/string_tools.h	/^bool convertString(const std::string& s, T& x, bool failIfLeftoverChars = true)$/;"	f	namespace:g2o
copyB	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    virtual int copyB(double* b_) const {$/;"	f	class:g2o::BaseVertex
copyCoeff	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE void copyCoeff(Index index, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseCoeffsBase
copyCoeff	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE void copyCoeff(Index row, Index col, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseCoeffsBase
copyCoeff	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    void copyCoeff(Index index, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::SelfCwiseBinaryOp
copyCoeff	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    void copyCoeff(Index row, Index col, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::SelfCwiseBinaryOp
copyCoeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    void copyCoeff(Index index, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::SwapWrapper
copyCoeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    void copyCoeff(Index rowId, Index colId, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::SwapWrapper
copyCoeff	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE void copyCoeff(Index row, Index col, Other& other)$/;"	f	class:Eigen::TriangularBase
copyCoeffByOuterInner	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE void copyCoeffByOuterInner(Index outer, Index inner, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseCoeffsBase
copyPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE void copyPacket(Index index, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseCoeffsBase
copyPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE void copyPacket(Index row, Index col, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseCoeffsBase
copyPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    void copyPacket(Index index, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::SelfCwiseBinaryOp
copyPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    void copyPacket(Index row, Index col, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::SelfCwiseBinaryOp
copyPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    void copyPacket(Index index, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::SwapWrapper
copyPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    void copyPacket(Index rowId, Index colId, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::SwapWrapper
copyPacketByOuterInner	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE void copyPacketByOuterInner(Index outer, Index inner, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseCoeffsBase
copy_R_and_t	./src/PnPsolver.cc	/^void PnPsolver::copy_R_and_t(const double R_src[3][3], const double t_src[3],$/;"	f	class:ORB_SLAM2::PnPsolver
copy_R_and_t	./src/PoseSolver.cc	/^void PoseSolver::copy_R_and_t(const double R_src[3][3], const double t_src[3],$/;"	f	class:ORB_SLAM2::PoseSolver
copy_bool	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	/^    inline bool copy_bool(bool b) { return b; }$/;"	f	namespace:Eigen::internal
copy_source_	./4pcs/Registration.h	/^            PointCloud<PointXYZ>::Ptr copy_source_;$/;"	m	class:pcl::FPCS::FPCSRegistration
copy_target_	./4pcs/Registration.h	/^            PointCloud<PointXYZ>::Ptr copy_target_;$/;"	m	class:pcl::FPCS::FPCSRegistration
copy_to_ucol	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h	/^Index SparseLUImpl<Scalar,Index>::copy_to_ucol(const Index jcol, const Index nseg, IndexVector& segrep, BlockIndexVector repfnz ,IndexVector& perm_r, BlockScalarVector dense, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
corner	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Block.h	/^  ::corner(CornerType type, Index cRows, Index cCols)$/;"	f	class:Eigen::DenseBase
corner	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Block.h	/^DenseBase<Derived>::corner(CornerType type) const$/;"	f	class:Eigen::DenseBase
corner	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Block.h	/^DenseBase<Derived>::corner(CornerType type)$/;"	f	class:Eigen::DenseBase
corner	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Block.h	/^DenseBase<Derived>::corner(CornerType type, Index cRows, Index cCols) const$/;"	f	class:Eigen::DenseBase
corner	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline VectorType corner(CornerType corner) const$/;"	f	class:Eigen::AlignedBox
cos	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::cos() const$/;"	f	class:Eigen::Cwise
cos	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^cos() const$/;"	f
count	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^inline typename DenseBase<Derived>::Index DenseBase<Derived>::count() const$/;"	f	class:Eigen::DenseBase
count	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    const PartialReduxExpr<ExpressionType, internal::member_count<Index>, Direction> count() const$/;"	f	class:Eigen::VectorwiseOp
count	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		CountType count;$/;"	m	class:nanoflann::KNNResultSet
countnz	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Utils.h	/^void SparseLUImpl<Scalar,Index>::countnz(const Index n, Index& nnzL, Index& nnzU, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
cpuid_is_vendor	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline bool cpuid_is_vendor(int abcd[4], const char* vendor)$/;"	f	namespace:Eigen::internal
create	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::create($/;"	f	class:DBoW2::TemplatedVocabulary
createCache	./Thirdparty/g2o/g2o/core/cache.cpp	/^  Cache* CacheContainer::createCache(const Cache::CacheKey& key){$/;"	f	class:g2o::CacheContainer
createFrom	./Thirdparty/g2o/g2o/core/base_binary_edge.hpp	/^OptimizableGraph::Vertex* BaseBinaryEdge<D, E, VertexXiType, VertexXjType>::createFrom(){$/;"	f	class:BaseBinaryEdge
createFrom	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        virtual Vertex* createFrom() {return 0;}$/;"	f	class:g2o::OptimizableGraph::Edge
createScoringObject	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::createScoringObject()$/;"	f	class:DBoW2::TemplatedVocabulary
createTo	./Thirdparty/g2o/g2o/core/base_binary_edge.hpp	/^OptimizableGraph::Vertex* BaseBinaryEdge<D, E, VertexXiType, VertexXjType>::createTo(){$/;"	f	class:BaseBinaryEdge
createTo	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        virtual Vertex* createTo()   {return 0;}$/;"	f	class:g2o::OptimizableGraph::Edge
createValues	./Thirdparty/DBoW2/DUtils/Random.cpp	/^void DUtils::Random::UnrepeatedRandomizer::createValues()$/;"	f	class:DUtils::Random::UnrepeatedRandomizer
createWords	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::createWords()$/;"	f	class:DBoW2::TemplatedVocabulary
creator	./Thirdparty/g2o/g2o/core/factory.h	/^          AbstractHyperGraphElementCreator* creator;$/;"	m	class:g2o::Factory::CreatorInformation
creator	./Thirdparty/g2o/g2o/core/robust_kernel_factory.cpp	/^AbstractRobustKernelCreator* RobustKernelFactory::creator(const std::string& tag) const$/;"	f	class:g2o::RobustKernelFactory
creatorList	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	/^      const CreatorList& creatorList() const { return _creator;}$/;"	f	class:g2o::OptimizationAlgorithmFactory
cross	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	/^MatrixBase<Derived>::cross(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
cross	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	/^VectorwiseOp<ExpressionType,Direction>::cross(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
cross3	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	/^MatrixBase<Derived>::cross3(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
cross3_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	/^struct cross3_impl {$/;"	s	namespace:Eigen::internal
cross3_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct cross3_impl<Architecture::SSE,VectorLhs,VectorRhs,float,true>$/;"	s	namespace:Eigen::internal
cross_product_return_type	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    template<typename OtherDerived> struct cross_product_return_type {$/;"	s	class:Eigen::MatrixBase
cs_tdfs	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Amd.h	/^Index cs_tdfs(Index j, Index k, Index *head, const Index *next, Index *post, Index *stack)$/;"	f	namespace:Eigen::internal
cs_wclear	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Amd.h	/^static int cs_wclear (Index mark, Index lemax, Index *w, Index n)$/;"	f	namespace:Eigen::internal
cube	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::cube() const$/;"	f	class:Eigen::Cwise
cube	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^cube() const$/;"	f
current	./4pcs/Registration.h	/^            vector<MapPoint*> current;$/;"	m	class:pcl::FPCS::FPCSRegistration
currentLambda	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      double currentLambda() const { return _currentLambda;}$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
cwise	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Cwise.h	/^inline Cwise<Derived> MatrixBase<Derived>::cwise()$/;"	f	class:Eigen::MatrixBase
cwise	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Cwise.h	/^inline const Cwise<Derived> MatrixBase<Derived>::cwise() const$/;"	f	class:Eigen::MatrixBase
cwiseAbs	./Thirdparty/sparseicp/include/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseAbs() const { return derived(); }$/;"	f
cwiseAbs2	./Thirdparty/sparseicp/include/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseAbs2() const { return derived(); }$/;"	f
cwiseEqual	./Thirdparty/sparseicp/include/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseEqual(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseEqual	./Thirdparty/sparseicp/include/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseEqual(const Scalar& s) const$/;"	f
cwiseInverse	./Thirdparty/sparseicp/include/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseInverse() const { return derived(); }$/;"	f
cwiseMax	./Thirdparty/sparseicp/include/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMax(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseMax	./Thirdparty/sparseicp/include/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMax(const Scalar &other) const$/;"	f
cwiseMin	./Thirdparty/sparseicp/include/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMin(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseMin	./Thirdparty/sparseicp/include/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMin(const Scalar &other) const$/;"	f
cwiseNotEqual	./Thirdparty/sparseicp/include/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseNotEqual(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseProduct	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^SparseMatrixBase<Derived>::cwiseProduct(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
cwiseProduct	./Thirdparty/sparseicp/include/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseProduct(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseQuotient	./Thirdparty/sparseicp/include/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseQuotient(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseSqrt	./Thirdparty/sparseicp/include/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseSqrt() const { return derived(); }$/;"	f
cws	./include/PnPsolver.h	/^  double cws[4][3], ccs[4][3];$/;"	m	class:ORB_SLAM2::PnPsolver
cws	./include/PoseSolver.h	/^  double cws[4][3], ccs[4][3];$/;"	m	class:ORB_SLAM2::PoseSolver
cws_determinant	./include/PnPsolver.h	/^  double cws_determinant;$/;"	m	class:ORB_SLAM2::PnPsolver
cws_determinant	./include/PoseSolver.h	/^  double cws_determinant;$/;"	m	class:ORB_SLAM2::PoseSolver
cx	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy, bf;$/;"	m	class:g2o::EdgeStereoSE3ProjectXYZ
cx	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy, bf;$/;"	m	class:g2o::EdgeStereoSE3ProjectXYZOnlyPose
cx	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy;$/;"	m	class:g2o::EdgeSE3ProjectXYZ
cx	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy;$/;"	m	class:g2o::EdgeSE3ProjectXYZOnlyPose
cx	./include/Frame.h	/^    static float cx;$/;"	m	class:ORB_SLAM2::Frame
cx	./include/KeyFrame.h	/^    const float fx, fy, cx, cy, invfx, invfy, mbf, mb, mThDepth;$/;"	m	class:ORB_SLAM2::KeyFrame
cx	./src/Frame.cc	/^float Frame::cx, Frame::cy, Frame::fx, Frame::fy, Frame::invfx, Frame::invfy;$/;"	m	class:ORB_SLAM2::Frame	file:
cy	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy, bf;$/;"	m	class:g2o::EdgeStereoSE3ProjectXYZ
cy	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy, bf;$/;"	m	class:g2o::EdgeStereoSE3ProjectXYZOnlyPose
cy	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy;$/;"	m	class:g2o::EdgeSE3ProjectXYZ
cy	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy;$/;"	m	class:g2o::EdgeSE3ProjectXYZOnlyPose
cy	./include/Frame.h	/^    static float cy;$/;"	m	class:ORB_SLAM2::Frame
cy	./include/KeyFrame.h	/^    const float fx, fy, cx, cy, invfx, invfy, mbf, mb, mThDepth;$/;"	m	class:ORB_SLAM2::KeyFrame
cy	./src/Frame.cc	/^float Frame::cx, Frame::cy, Frame::fx, Frame::fy, Frame::invfx, Frame::invfy;$/;"	m	class:ORB_SLAM2::Frame	file:
data	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline ScalarWithConstIfNotLvalue* data() { return m_expression.const_cast_derived().data(); }$/;"	f	class:Eigen::ArrayWrapper
data	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline ScalarWithConstIfNotLvalue* data() { return m_expression.const_cast_derived().data(); }$/;"	f	class:Eigen::MatrixWrapper
data	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar* data() const { return m_expression.data(); }$/;"	f	class:Eigen::ArrayWrapper
data	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar* data() const { return m_expression.data(); }$/;"	f	class:Eigen::MatrixWrapper
data	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    inline Scalar* data() { return &coeffRef(0); }$/;"	f	class:Eigen::CwiseUnaryViewImpl
data	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    inline const Scalar* data() const { return &coeff(0); }$/;"	f	class:Eigen::CwiseUnaryViewImpl
data	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline T *data() { return 0; }$/;"	f	class:Eigen::DenseStorage
data	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline T *data() { return m_data.array; }$/;"	f	class:Eigen::DenseStorage
data	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline T *data() { return m_data; }$/;"	f	class:Eigen::DenseStorage
data	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline const T *data() const { return 0; }$/;"	f	class:Eigen::DenseStorage
data	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline const T *data() const { return m_data.array; }$/;"	f	class:Eigen::DenseStorage
data	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline const T *data() const { return m_data; }$/;"	f	class:Eigen::DenseStorage
data	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    inline ScalarWithConstIfNotLvalue* data() { return &(m_matrix.const_cast_derived().coeffRef(rowOffset(), colOffset())); }$/;"	f	class:Eigen::Diagonal
data	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    inline const Scalar* data() const { return &(m_matrix.const_cast_derived().coeffRef(rowOffset(), colOffset())); }$/;"	f	class:Eigen::Diagonal
data	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  EIGEN_STRONG_INLINE  Scalar* data() { eigen_internal_assert(false && "should never be called"); return 0; }$/;"	f	struct:Eigen::internal::gemv_static_vector_if
data	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  EIGEN_STRONG_INLINE Scalar* data() { return 0; }$/;"	f	struct:Eigen::internal::gemv_static_vector_if
data	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  EIGEN_STRONG_INLINE Scalar* data() { return m_data.array; }$/;"	f	struct:Eigen::internal::gemv_static_vector_if
data	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline ScalarWithConstIfNotLvalue* data() { return this->m_data; } \/\/ no const-cast here so non-const-correct code will give a compile error$/;"	f	class:Eigen::MapBase
data	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline const Scalar* data() const { return m_data; }$/;"	f	class:Eigen::MapBase
data	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline const Scalar* data() const { return this->m_data; }$/;"	f	class:Eigen::MapBase
data	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Scalar *data()$/;"	f	class:Eigen::PlainObjectBase
data	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar *data() const$/;"	f	class:Eigen::PlainObjectBase
data	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline const Scalar* data() const { return m_matrix.data(); }$/;"	f	class:Eigen::SelfCwiseBinaryOp
data	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    inline ScalarWithConstIfNotLvalue* data() { return m_expression.data(); }$/;"	f	class:Eigen::SwapWrapper
data	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    inline const Scalar* data() const { return m_expression.data(); }$/;"	f	class:Eigen::SwapWrapper
data	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    inline ScalarWithConstIfNotLvalue* data() { return derived().nestedExpression().data(); }$/;"	f	class:Eigen::TransposeImpl
data	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    inline const Scalar* data() const { return derived().nestedExpression().data(); }$/;"	f	class:Eigen::TransposeImpl
data	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  Scalar* data() { return m_matrix.data(); }$/;"	f	class:Eigen::Transform
data	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  const Scalar* data() const { return m_matrix.data(); }$/;"	f	class:Eigen::Transform
data	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  Scalar* data() { return m_matrix.data(); }$/;"	f	class:Eigen::Transform
data	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  const Scalar* data() const { return m_matrix.data(); }$/;"	f	class:Eigen::Transform
data	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Storage& data() { return m_data; }$/;"	f	class:Eigen::SparseMatrix
data	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Storage& data() const { return m_data; }$/;"	f	class:Eigen::SparseMatrix
data	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Storage& data() { return m_data; }$/;"	f	class:Eigen::SparseVector
data	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline const Storage& data() const { return m_data; }$/;"	f	class:Eigen::SparseVector
data_source	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		const DataSource &data_source;$/;"	m	struct:nanoflann::L1_Adaptor
data_source	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		const DataSource &data_source;$/;"	m	struct:nanoflann::L2_Adaptor
data_source	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		const DataSource &data_source;$/;"	m	struct:nanoflann::L2_Simple_Adaptor
dataset	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		const DatasetAdaptor &dataset; \/\/!< The source of our data$/;"	m	class:nanoflann::KDTreeSingleIndexAdaptor
dataset_get	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline ElementType dataset_get(size_t idx, int component) const {$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
dcomplex	./Thirdparty/sparseicp/include/Eigen/src/Core/util/MKL_support.h	/^typedef std::complex<double> dcomplex;$/;"	t	namespace:Eigen
deallocate	./Thirdparty/g2o/g2o/core/block_solver.hpp	/^void BlockSolver<Traits>::deallocate()$/;"	f	class:g2o::BlockSolver
deallocate	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    void deallocate( pointer p, size_type \/*num*\/ )$/;"	f	class:Eigen::aligned_allocator
debug	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static void debug()$/;"	f	struct:Eigen::internal::assign_traits
debug	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  static void debug()$/;"	f	struct:Eigen::internal::product_type
dec	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^  inline const DecompositionType& dec() const { return m_dec; }$/;"	f	struct:Eigen::internal::image_retval_base
dec	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^  inline const DecompositionType& dec() const { return m_dec; }$/;"	f	struct:Eigen::internal::kernel_retval_base
dec	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^  inline const DecompositionType& dec() const { return m_dec; }$/;"	f	struct:Eigen::internal::solve_retval_base
dec	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^  inline const DecompositionType& dec() const { return m_dec; }$/;"	f	struct:Eigen::internal::sparse_solve_retval_base
decrement_size	./Thirdparty/sparseicp/include/Eigen/src/Householder/Householder.h	/^template<int n> struct decrement_size$/;"	s	namespace:Eigen::internal
defaultEvalTo	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^    inline void defaultEvalTo(SparseMatrix<DestScalar,DestOptions,DestIndex>& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval_base
default_packet_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^struct default_packet_traits$/;"	s	namespace:Eigen::internal
default_prunning_func	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    default_prunning_func(const Scalar& ref, const RealScalar& eps) : reference(ref), epsilon(eps) {}$/;"	f	struct:Eigen::SparseMatrix::default_prunning_func
default_prunning_func	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^  struct default_prunning_func {$/;"	s	class:Eigen::SparseMatrix
deg2rad	./Thirdparty/g2o/g2o/stuff/misc.h	/^inline double deg2rad(double degree)$/;"	f	namespace:g2o
degree	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    Index degree ;  \/* number of principal & non-principal columns in row *\/$/;"	m	union:internal::Colamd_Row::__anon351
degree_next	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    Index degree_next ; \/* next column, if col is in a degree list *\/$/;"	m	union:internal::colamd_col::__anon350
delta	./Thirdparty/g2o/g2o/core/robust_kernel.h	/^      double delta() const { return _delta;}$/;"	f	class:g2o::RobustKernel
deltaR	./Thirdparty/g2o/g2o/types/se3_ops.hpp	/^  Vector3d deltaR(const Matrix3d& R)$/;"	f
delta_	./4pcs/Registration.h	/^            double delta_;$/;"	m	class:pcl::FPCS::FPCSRegistration
dense_xpr_base_dispatcher_for_doxygen	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^struct dense_xpr_base_dispatcher_for_doxygen<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::internal
dense_xpr_base_dispatcher_for_doxygen	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^struct dense_xpr_base_dispatcher_for_doxygen<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::internal
depth_select	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    depth_select = product_size_category<Depth,MaxDepth>::value$/;"	e	enum:Eigen::internal::product_type::__anon146
deque	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdDeque.h	/^  class deque<T,EIGEN_ALIGNED_ALLOCATOR<T> >$/;"	c	namespace:std
deque_base	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdDeque.h	/^                Eigen::aligned_allocator_indirection<EIGEN_WORKAROUND_MSVC_STL_SUPPORT(T)> > deque_base;$/;"	t	class:std::deque
derived	./Thirdparty/sparseicp/ICP.h	/^        const self_t & derived() const {return *this;}$/;"	f	struct:nanoflann::KDTreeAdaptor
derived	./Thirdparty/sparseicp/ICP.h	/^        self_t & derived() {return *this;}$/;"	f	struct:nanoflann::KDTreeAdaptor
derived	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::CholmodBase
derived	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::CholmodBase
derived	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::DiagonalBase
derived	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::DiagonalBase
derived	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^  Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	struct:Eigen::EigenBase
derived	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^  const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	struct:Eigen::EigenBase
derived	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::TranspositionsBase
derived	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::TranspositionsBase
derived	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::TriangularBase
derived	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::TriangularBase
derived	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::RotationBase
derived	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::RotationBase
derived	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::RotationBase
derived	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::RotationBase
derived	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::IterativeSolverBase
derived	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::IterativeSolverBase
derived	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    Derived& derived()$/;"	f	class:Eigen::PastixBase
derived	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    const Derived& derived() const$/;"	f	class:Eigen::PastixBase
derived	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    Derived& derived()$/;"	f	class:Eigen::PardisoImpl
derived	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    const Derived& derived() const$/;"	f	class:Eigen::PardisoImpl
derived	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SimplicialCholeskyBase
derived	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SimplicialCholeskyBase
derived	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SparseMatrixBase
derived	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SparseMatrixBase
derived	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SuperLUBase
derived	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SuperLUBase
derived	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		const self_t & derived() const {$/;"	f	struct:nanoflann::KDTreeEigenMatrixAdaptor
derived	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		self_t & derived()       {$/;"	f	struct:nanoflann::KDTreeEigenMatrixAdaptor
desc	./Thirdparty/g2o/g2o/core/optimization_algorithm_property.h	/^  std::string desc;           \/\/\/< short description of the solver$/;"	m	struct:g2o::OptimizationAlgorithmProperty
descriptor	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^    TDescriptor descriptor;$/;"	m	struct:DBoW2::TemplatedVocabulary::Node
destroy	./Thirdparty/g2o/g2o/core/factory.cpp	/^void Factory::destroy()$/;"	f	class:g2o::Factory
destroy	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  void HyperGraphActionLibrary::destroy()$/;"	f	class:g2o::HyperGraphActionLibrary
destroy	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  void OptimizationAlgorithmFactory::destroy()$/;"	f	class:g2o::OptimizationAlgorithmFactory
destroy	./Thirdparty/g2o/g2o/core/robust_kernel_factory.cpp	/^void RobustKernelFactory::destroy()$/;"	f	class:g2o::RobustKernelFactory
destroy	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    void destroy( pointer p )$/;"	f	class:Eigen::aligned_allocator
destruct_elements_of_array	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<typename T> inline void destruct_elements_of_array(T *ptr, size_t size)$/;"	f	namespace:Eigen::internal
detachParameter	./Thirdparty/g2o/g2o/core/parameter_container.cpp	/^  Parameter* ParameterContainer::detachParameter(int id){$/;"	f	class:g2o::ParameterContainer
detect_super_cols	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static void detect_super_cols$/;"	f	namespace:internal
determinant	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    Scalar determinant() const$/;"	f	class:Eigen::TriangularView
determinant	./Thirdparty/sparseicp/include/Eigen/src/LU/Determinant.h	/^inline typename internal::traits<Derived>::Scalar MatrixBase<Derived>::determinant() const$/;"	f	class:Eigen::MatrixBase
determinant	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^typename internal::traits<MatrixType>::Scalar FullPivLU<MatrixType>::determinant() const$/;"	f	class:Eigen::FullPivLU
determinant	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^typename internal::traits<MatrixType>::Scalar PartialPivLU<MatrixType>::determinant() const$/;"	f	class:Eigen::PartialPivLU
determinant	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Scalar determinant() const$/;"	f	class:Eigen::SimplicialCholesky
determinant	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Scalar determinant() const$/;"	f	class:Eigen::SimplicialLDLT
determinant	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Scalar determinant() const$/;"	f	class:Eigen::SimplicialLLT
determinant	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^typename SuperLU<MatrixType>::Scalar SuperLU<MatrixType>::determinant() const$/;"	f	class:Eigen::SuperLU
determinant	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^typename UmfPackLU<MatrixType>::Scalar UmfPackLU<MatrixType>::determinant() const$/;"	f	class:Eigen::UmfPackLU
determinant_impl	./Thirdparty/sparseicp/include/Eigen/src/LU/Determinant.h	/^> struct determinant_impl$/;"	s	namespace:Eigen::internal
determinant_impl	./Thirdparty/sparseicp/include/Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 1>$/;"	s	namespace:Eigen::internal
determinant_impl	./Thirdparty/sparseicp/include/Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 2>$/;"	s	namespace:Eigen::internal
determinant_impl	./Thirdparty/sparseicp/include/Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 3>$/;"	s	namespace:Eigen::internal
determinant_impl	./Thirdparty/sparseicp/include/Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 4>$/;"	s	namespace:Eigen::internal
dfs_kernel	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^void SparseLUImpl<Scalar,Index>::dfs_kernel(const Index jj, IndexVector& perm_r,$/;"	f	class:Eigen::internal::SparseLUImpl
diagonal	./Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      DiagonalVector& diagonal() { return _diagonal;}$/;"	f	class:g2o::SparseBlockMatrixDiagonal
diagonal	./Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      const DiagonalVector& diagonal() const { return _diagonal;}$/;"	f	class:g2o::SparseBlockMatrixDiagonal
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline Block<CoefficientsType,1,Dynamic> diagonal(Index i)$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline Block<CoefficientsType,1,SizeAtCompileTime> diagonal()$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline const Block<const CoefficientsType,1,Dynamic> diagonal(Index i) const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline const Block<const CoefficientsType,1,SizeAtCompileTime> diagonal() const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    template<int N> inline const typename DiagonalIntReturnType<N>::Type diagonal() const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    template<int N> inline typename DiagonalIntReturnType<N>::Type diagonal()$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal() const$/;"	f	class:Eigen::MatrixBase
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal()$/;"	f	class:Eigen::MatrixBase
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal(Index index) const$/;"	f	class:Eigen::MatrixBase
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal(Index index)$/;"	f	class:Eigen::MatrixBase
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    const DiagonalVectorType& diagonal() const { return m_diagonal; }$/;"	f	class:Eigen::DiagonalWrapper
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalVectorType& diagonal() { return derived().diagonal(); }$/;"	f	class:Eigen::DiagonalBase
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalVectorType& diagonal() { return m_diagonal; }$/;"	f	class:Eigen::DiagonalMatrix
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline const DiagonalVectorType& diagonal() const { return derived().diagonal(); }$/;"	f	class:Eigen::DiagonalBase
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline const DiagonalVectorType& diagonal() const { return m_diagonal; }$/;"	f	class:Eigen::DiagonalMatrix
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    const Diagonal<FullyLazyCoeffBaseProductType,Dynamic> diagonal(Index index) const$/;"	f	class:Eigen::ProductBase
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    const Diagonal<FullyLazyCoeffBaseProductType,Index> diagonal() const$/;"	f	class:Eigen::ProductBase
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    const Diagonal<const FullyLazyCoeffBaseProductType,0> diagonal() const$/;"	f	class:Eigen::ProductBase
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    const Diagonal<const LazyCoeffBasedProductType,0> diagonal() const$/;"	f	class:Eigen::CoeffBasedProduct
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    const Diagonal<const LazyCoeffBasedProductType,DiagonalIndex> diagonal() const$/;"	f	class:Eigen::CoeffBasedProduct
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    const Diagonal<const LazyCoeffBasedProductType,Dynamic> diagonal(Index index) const$/;"	f	class:Eigen::CoeffBasedProduct
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^Tridiagonalization<MatrixType>::diagonal() const$/;"	f	class:Eigen::Tridiagonalization
diagonal	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline CwiseBinaryOp< internal::scalar_difference_op<Scalar>, const VectorType, const VectorType> diagonal() const$/;"	f	class:Eigen::AlignedBox
diagonal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    const Diagonal<const SparseMatrix> diagonal() const { return *this; }$/;"	f	class:Eigen::SparseMatrix
diagonalLength	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline Index diagonalLength(Index i) const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonalSize	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    inline Index diagonalSize() const { return (std::min)(rows(),cols()); }$/;"	f	class:Eigen::MatrixBase
difference_type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    typedef std::ptrdiff_t difference_type;$/;"	t	class:Eigen::aligned_allocator
difference_type	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    typedef ptrdiff_t difference_type;$/;"	t	class:Eigen::aligned_allocator_indirection
dim	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline int dim() const { return AmbientDimAtCompileTime==Dynamic ? m_min.size()-1 : AmbientDimAtCompileTime; }$/;"	f	class:Eigen::AlignedBox
dim	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline int dim() const { return int(AmbientDimAtCompileTime)==Dynamic ? m_coeffs.size()-1 : int(AmbientDimAtCompileTime); }$/;"	f	class:Eigen::Hyperplane
dim	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  inline int dim() const { return m_direction.size(); }$/;"	f	class:Eigen::ParametrizedLine
dim	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline Index dim() const { return AmbientDimAtCompileTime==Dynamic ? m_min.size() : Index(AmbientDimAtCompileTime); }$/;"	f	class:Eigen::AlignedBox
dim	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  inline Index dim() const { return AmbientDimAtCompileTime==Dynamic ? m_coeffs.size()-1 : Index(AmbientDimAtCompileTime); }$/;"	f	class:Eigen::Hyperplane
dim	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  inline Index dim() const { return m_direction.size(); }$/;"	f	class:Eigen::ParametrizedLine
dim	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		int dim;  \/\/!< Dimensionality of each data point$/;"	m	class:nanoflann::KDTreeSingleIndexAdaptor
dim	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		int dim;$/;"	m	struct:nanoflann::KDTreeSingleIndexAdaptorParams
dimOfBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      inline int dimOfBlock(int r) const { return r ? _blockIndices[r] - _blockIndices[r-1] : _blockIndices[0] ; }$/;"	f	class:g2o::SparseBlockMatrixDiagonal
dimension	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        int dimension() const { return _dimension;}$/;"	f	class:g2o::OptimizableGraph::Edge
dimension	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        int dimension() const { return _dimension;}$/;"	f	class:g2o::OptimizableGraph::Vertex
dimensionOfKernel	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    inline Index dimensionOfKernel() const$/;"	f	class:Eigen::FullPivLU
dimensionOfKernel	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index dimensionOfKernel() const$/;"	f	class:Eigen::ColPivHouseholderQR
dimensionOfKernel	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index dimensionOfKernel() const$/;"	f	class:Eigen::FullPivHouseholderQR
dimensions	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^std::set<int> OptimizableGraph::dimensions() const$/;"	f	class:g2o::OptimizableGraph
direct_selfadjoint_eigenvalues	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^template<typename SolverType,int Size,bool IsComplex> struct direct_selfadjoint_eigenvalues$/;"	s	namespace:Eigen::internal
direct_selfadjoint_eigenvalues	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^template<typename SolverType> struct direct_selfadjoint_eigenvalues<SolverType,2,false>$/;"	s	namespace:Eigen::internal
direct_selfadjoint_eigenvalues	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^template<typename SolverType> struct direct_selfadjoint_eigenvalues<SolverType,3,false>$/;"	s	namespace:Eigen::internal
direction	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  VectorType& direction() { return m_direction; }$/;"	f	class:Eigen::ParametrizedLine
direction	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  const VectorType& direction() const { return m_direction; }$/;"	f	class:Eigen::ParametrizedLine
direction	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType& direction() { return m_direction; }$/;"	f	class:Eigen::ParametrizedLine
direction	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  const VectorType& direction() const { return m_direction; }$/;"	f	class:Eigen::ParametrizedLine
discardTop	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    virtual void discardTop() { assert(!_backup.empty()); _backup.pop();}$/;"	f	class:g2o::BaseVertex
discardTop	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::discardTop()$/;"	f	class:g2o::OptimizableGraph
discardTop	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::discardTop(HyperGraph::VertexSet& vset)$/;"	f	class:g2o::OptimizableGraph
discardTop	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::discardTop()$/;"	f	class:g2o::SparseOptimizer
discardTop	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::discardTop(SparseOptimizer::VertexContainer& vlist)$/;"	f	class:g2o::SparseOptimizer
dist2	./src/PnPsolver.cc	/^double PnPsolver::dist2(const double * p1, const double * p2)$/;"	f	class:ORB_SLAM2::PnPsolver
dist2	./src/PoseSolver.cc	/^double PoseSolver::dist2(const double * p1, const double * p2)$/;"	f	class:ORB_SLAM2::PoseSolver
distance	./Thirdparty/DBoW2/DBoW2/FORB.cpp	/^int FORB::distance(const FORB::TDescriptor &a,$/;"	f	class:DBoW2::FORB
distance	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^          double distance() const {return _distance;}$/;"	f	class:g2o::EstimatePropagator::AdjacencyMapEntry
distance	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^      double distance() const {return _distance;}$/;"	f	struct:g2o::HyperDijkstra::AdjacencyMapEntry
distance	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  RealScalar distance(const VectorType& p) const { return ei_sqrt(squaredDistance(p)); }$/;"	f	class:Eigen::ParametrizedLine
distance	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  RealScalar distance(const VectorType& p) const { using std::sqrt; return sqrt(squaredDistance(p)); }$/;"	f	class:Eigen::ParametrizedLine
distance	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		Distance distance;$/;"	m	class:nanoflann::KDTreeSingleIndexAdaptor
distance_t	./Thirdparty/sparseicp/include/nanoflann.hpp	/^			typedef L1_Adaptor<T,DataSource> distance_t;$/;"	t	struct:nanoflann::metric_L1::traits
distance_t	./Thirdparty/sparseicp/include/nanoflann.hpp	/^			typedef L2_Adaptor<T,DataSource> distance_t;$/;"	t	struct:nanoflann::metric_L2::traits
distance_t	./Thirdparty/sparseicp/include/nanoflann.hpp	/^			typedef L2_Simple_Adaptor<T,DataSource> distance_t;$/;"	t	struct:nanoflann::metric_L2_Simple::traits
dists	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		DistanceType* dists;$/;"	m	class:nanoflann::KNNResultSet
divfeat	./Thirdparty/sparseicp/include/nanoflann.hpp	/^					int divfeat;$/;"	m	struct:nanoflann::KDTreeSingleIndexAdaptor::Node::__anon463::__anon465
divhigh	./Thirdparty/sparseicp/include/nanoflann.hpp	/^					DistanceType divlow, divhigh;$/;"	m	struct:nanoflann::KDTreeSingleIndexAdaptor::Node::__anon463::__anon465
divideTree	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		NodePtr divideTree(const IndexType left, const IndexType right, BoundingBox& bbox)$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
divlow	./Thirdparty/sparseicp/include/nanoflann.hpp	/^					DistanceType divlow, divhigh;$/;"	m	struct:nanoflann::KDTreeSingleIndexAdaptor::Node::__anon463::__anon465
doComputeEigenvectors	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^void ComplexEigenSolver<MatrixType>::doComputeEigenvectors(const RealScalar& matrixnorm)$/;"	f	class:Eigen::ComplexEigenSolver
doComputeEigenvectors	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^void EigenSolver<MatrixType>::doComputeEigenvectors()$/;"	f	class:Eigen::EigenSolver
dot	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::dot(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
dot	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  template<class OtherDerived> inline Scalar dot(const QuaternionBase<OtherDerived>& other) const { return coeffs().dot(other.coeffs()); }$/;"	f	class:Eigen::QuaternionBase
dot	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::dot(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseMatrixBase
dot	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::dot(const SparseMatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseMatrixBase
dot	./src/PnPsolver.cc	/^double PnPsolver::dot(const double * v1, const double * v2)$/;"	f	class:ORB_SLAM2::PnPsolver
dot	./src/PoseSolver.cc	/^double PoseSolver::dot(const double * v1, const double * v2)$/;"	f	class:ORB_SLAM2::PoseSolver
dot_nocheck	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^struct dot_nocheck$/;"	s	namespace:Eigen::internal
dot_nocheck	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^struct dot_nocheck<T, U, true>$/;"	s	namespace:Eigen::internal
dparm	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    Array<RealScalar,IPARM_SIZE,1>& dparm()$/;"	f	class:Eigen::PastixBase
dparm	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    double& dparm(int idxparam)$/;"	f	class:Eigen::PastixBase
drand48	./Thirdparty/g2o/g2o/stuff/os_specific.h	37;"	d
dsqr	./Thirdparty/g2o/g2o/core/robust_kernel_impl.h	/^      float dsqr;$/;"	m	class:g2o::RobustKernelHuber
dumpMemory	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void dumpMemory(Stream& \/*s*\/)$/;"	f	class:Eigen::CholmodBase
dumpMemory	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void dumpMemory(Stream& s)$/;"	f	class:Eigen::SimplicialCholeskyBase
dumpMemory	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void dumpMemory(Stream& \/*s*\/)$/;"	f	class:Eigen::SuperLUBase
eSensor	./include/System.h	/^    enum eSensor{$/;"	g	class:ORB_SLAM2::System
eTrackingState	./include/Tracking.h	/^    enum eTrackingState{$/;"	g	class:ORB_SLAM2::Tracking
edge	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^          OptimizableGraph::Edge* edge() const {return _edge;}$/;"	f	class:g2o::EstimatePropagator::AdjacencyMapEntry
edge	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^      HyperGraph::Edge* edge() const {return _edge;}$/;"	f	struct:g2o::HyperDijkstra::AdjacencyMapEntry
edges	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^          EdgeSet& edges() {return _edges;}$/;"	f	class:g2o::HyperGraph::Vertex
edges	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^          const EdgeSet& edges() const {return _edges;}$/;"	f	class:g2o::HyperGraph::Vertex
edges	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^      EdgeSet& edges() {return _edges;}$/;"	f	class:g2o::HyperGraph
edges	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^      const EdgeSet& edges() const {return _edges;}$/;"	f	class:g2o::HyperGraph
ei_abs	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline typename NumTraits<T>::Real ei_abs (const T& x) { using std::abs; return abs(x); }$/;"	f	namespace:Eigen
ei_abs2	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline typename NumTraits<T>::Real ei_abs2(const T& x) { return numext::abs2(x); }$/;"	f	namespace:Eigen
ei_aligned_delete	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Memory.h	/^template<typename T> inline void ei_aligned_delete(T *ptr, size_t size)$/;"	f	namespace:Eigen
ei_aligned_free	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Memory.h	/^inline void  ei_aligned_free(void *ptr) { internal::aligned_free(ptr); }$/;"	f	namespace:Eigen
ei_aligned_malloc	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Memory.h	/^inline void* ei_aligned_malloc(size_t size) { return internal::aligned_malloc(size); }$/;"	f	namespace:Eigen
ei_aligned_new	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Memory.h	/^template<typename T> inline T* ei_aligned_new(size_t size)$/;"	f	namespace:Eigen
ei_aligned_realloc	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Memory.h	/^inline void* ei_aligned_realloc(void *ptr, size_t new_size, size_t old_size) { return internal::aligned_realloc(ptr, new_size, old_size); }$/;"	f	namespace:Eigen
ei_assert	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Macros.h	13;"	d
ei_atan2	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_atan2(const T& x,const T& y) { using std::atan2; return atan2(x,y); }$/;"	f	namespace:Eigen
ei_cleantype	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype { typedef T type; };$/;"	s	namespace:Eigen
ei_cleantype	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<T&>        { typedef typename ei_cleantype<T>::type type; };$/;"	s	namespace:Eigen
ei_cleantype	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<T*>        { typedef typename ei_cleantype<T>::type type; };$/;"	s	namespace:Eigen
ei_cleantype	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<const T&>  { typedef typename ei_cleantype<T>::type type; };$/;"	s	namespace:Eigen
ei_cleantype	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<const T*>  { typedef typename ei_cleantype<T>::type type; };$/;"	s	namespace:Eigen
ei_cleantype	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<const T>   { typedef typename ei_cleantype<T>::type type; };$/;"	s	namespace:Eigen
ei_conditional_aligned_free	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Memory.h	/^template<bool Align> inline void ei_conditional_aligned_free(void *ptr)$/;"	f	namespace:Eigen
ei_conditional_aligned_malloc	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Memory.h	/^template<bool Align> inline void* ei_conditional_aligned_malloc(size_t size)$/;"	f	namespace:Eigen
ei_conditional_aligned_realloc	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Memory.h	/^template<bool Align> inline void* ei_conditional_aligned_realloc(void* ptr, size_t new_size, size_t old_size)$/;"	f	namespace:Eigen
ei_conj	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_conj(const T& x) { return numext::conj(x); }$/;"	f	namespace:Eigen
ei_cos	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_cos (const T& x) { using std::cos;  return cos(x); }$/;"	f	namespace:Eigen
ei_declare_aligned_stack_constructed_variable	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	587;"	d
ei_exp	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_exp (const T& x) { using std::exp;  return exp(x); }$/;"	f	namespace:Eigen
ei_handmade_aligned_free	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Memory.h	/^inline void  ei_handmade_aligned_free(void *ptr) { internal::handmade_aligned_free(ptr); }$/;"	f	namespace:Eigen
ei_handmade_aligned_malloc	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Memory.h	/^inline void* ei_handmade_aligned_malloc(size_t size) { return internal::handmade_aligned_malloc(size); }$/;"	f	namespace:Eigen
ei_imag	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline typename NumTraits<T>::Real ei_imag(const T& x) { return numext::imag(x); }$/;"	f	namespace:Eigen
ei_internal_assert	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Macros.h	14;"	d
ei_isApprox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^inline bool ei_isApprox(const Scalar& x, const Scalar& y,$/;"	f	namespace:Eigen
ei_isApproxOrLessThan	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^inline bool ei_isApproxOrLessThan(const Scalar& x, const Scalar& y,$/;"	f	namespace:Eigen
ei_isMuchSmallerThan	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^inline bool ei_isMuchSmallerThan(const Scalar& x, const OtherScalar& y,$/;"	f	namespace:Eigen
ei_is_same_type	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T, typename U> struct ei_is_same_type { enum { ret = 0 }; };$/;"	s	namespace:Eigen
ei_is_same_type	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_is_same_type<T,T> { enum { ret = 1 }; };$/;"	s	namespace:Eigen
ei_log	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_log (const T& x) { using std::log;  return log(x); }$/;"	f	namespace:Eigen
ei_meta_false	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^struct ei_meta_false { enum { ret = 0 }; };$/;"	s	namespace:Eigen
ei_meta_if	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^struct ei_meta_if <false, Then, Else> { typedef Else ret; };$/;"	s	namespace:Eigen
ei_meta_if	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^struct ei_meta_if { typedef Then ret; };$/;"	s	namespace:Eigen
ei_meta_sqrt	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^class ei_meta_sqrt<Y, InfX, SupX, true> { public:  enum { ret = (SupX*SupX <= Y) ? SupX : InfX }; };$/;"	c
ei_meta_true	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^struct ei_meta_true {  enum { ret = 1 }; };$/;"	s	namespace:Eigen
ei_pow	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_pow (const T& x,const T& y) { return numext::pow(x,y); }$/;"	f	namespace:Eigen
ei_quaternion_assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	61;"	d
ei_quaternion_assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	76;"	d
ei_quaternion_assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^struct ei_quaternion_assign_impl<Other,3,3>$/;"	s	namespace:Eigen
ei_quaternion_assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^struct ei_quaternion_assign_impl<Other,4,1>$/;"	s	namespace:Eigen
ei_quaternion_product	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^ei_quaternion_product(const Quaternion<Scalar>& a, const Quaternion<Scalar>& b)$/;"	f	namespace:Eigen
ei_random	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_random () { return internal::random<T>(); }$/;"	f	namespace:Eigen
ei_random	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_random (const T& x, const T& y) { return internal::random(x, y); }$/;"	f	namespace:Eigen
ei_real	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline typename NumTraits<T>::Real ei_real(const T& x) { return numext::real(x); }$/;"	f	namespace:Eigen
ei_sin	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_sin (const T& x) { using std::sin;  return sin(x); }$/;"	f	namespace:Eigen
ei_sqrt	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_sqrt(const T& x) { using std::sqrt; return sqrt(x); }$/;"	f	namespace:Eigen
ei_toRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	60;"	d
ei_toRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	75;"	d
ei_toRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^static inline Matrix<Scalar,2,2> ei_toRotationMatrix(const Scalar& s)$/;"	f	namespace:Eigen
ei_toRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^static inline Matrix<Scalar,Dim,Dim> ei_toRotationMatrix(const RotationBase<OtherDerived,Dim>& r)$/;"	f	namespace:Eigen
ei_toRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^static inline const MatrixBase<OtherDerived>& ei_toRotationMatrix(const MatrixBase<OtherDerived>& mat)$/;"	f	namespace:Eigen
ei_traits	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^template<typename _Scalar> struct ei_traits<AngleAxis<_Scalar> >$/;"	s	namespace:Eigen
ei_traits	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^template<typename _Scalar> struct ei_traits<Quaternion<_Scalar> >$/;"	s	namespace:Eigen
ei_traits	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^template<typename _Scalar> struct ei_traits<Rotation2D<_Scalar> >$/;"	s	namespace:Eigen
ei_traits	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^struct ei_traits : internal::traits<T>$/;"	s	namespace:Eigen
ei_transform_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	62;"	d
ei_transform_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/All.h	77;"	d
ei_transform_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^struct ei_transform_product_impl<Other,Dim,HDim, Dim,1>$/;"	s	namespace:Eigen
ei_transform_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^struct ei_transform_product_impl<Other,Dim,HDim, Dim,Dim>$/;"	s	namespace:Eigen
ei_transform_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^struct ei_transform_product_impl<Other,Dim,HDim, HDim,1>$/;"	s	namespace:Eigen
ei_transform_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^struct ei_transform_product_impl<Other,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen
ei_unconst	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unconst { typedef T type; };$/;"	s	namespace:Eigen
ei_unconst	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unconst<T const &> { typedef T & type; };$/;"	s	namespace:Eigen
ei_unconst	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unconst<T const *> { typedef T * type; };$/;"	s	namespace:Eigen
ei_unconst	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unconst<const T> { typedef T type; };$/;"	s	namespace:Eigen
ei_unpointer	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unpointer { typedef T type; };$/;"	s	namespace:Eigen
ei_unpointer	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unpointer<T*> { typedef T type; };$/;"	s	namespace:Eigen
ei_unpointer	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unpointer<T*const> { typedef T type; };$/;"	s	namespace:Eigen
ei_unref	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unref { typedef T type; };$/;"	s	namespace:Eigen
ei_unref	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unref<T&> { typedef T type; };$/;"	s	namespace:Eigen
eigen2_dot	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::eigen2_dot(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
eigen2_dot	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar eigen2_dot(const Quaternion& other) const { return m_coeffs.eigen2_dot(other.m_coeffs); }$/;"	f	class:Eigen::Quaternion
eigen2_lu	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^MatrixBase<Derived>::eigen2_lu() const$/;"	f	class:Eigen::MatrixBase
eigen2_part_return_type	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^struct eigen2_part_return_type$/;"	s	namespace:Eigen::internal
eigen2_part_return_type	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^struct eigen2_part_return_type<MatrixType, SelfAdjoint>$/;"	s	namespace:Eigen::internal
eigen2_product_return_type	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    struct eigen2_product_return_type$/;"	s	class:Eigen::TriangularView
eigen_assert	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	207;"	d
eigen_internal_assert	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	211;"	d
eigen_pastix	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, double *vals, int *perm, int * invp, double *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_pastix	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, float *vals, int *perm, int * invp, float *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_pastix	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, std::complex<double> *vals, int *perm, int * invp, std::complex<double> *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_pastix	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, std::complex<float> *vals, int *perm, int * invp, std::complex<float> *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_plain_assert	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	169;"	d
eigen_plain_assert	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	177;"	d
eigen_unaligned_array_assert_workaround_gcc47	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^  EIGEN_ALWAYS_INLINE PtrType eigen_unaligned_array_assert_workaround_gcc47(PtrType array) { return array; }$/;"	f	namespace:Eigen::internal
eigenvalues	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    const EigenvalueType& eigenvalues() const$/;"	f	class:Eigen::ComplexEigenSolver
eigenvalues	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    const EigenvalueType& eigenvalues() const$/;"	f	class:Eigen::EigenSolver
eigenvalues	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    EigenvalueType eigenvalues() const$/;"	f	class:Eigen::GeneralizedEigenSolver
eigenvalues	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^MatrixBase<Derived>::eigenvalues() const$/;"	f	class:Eigen::MatrixBase
eigenvalues	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^SelfAdjointView<MatrixType, UpLo>::eigenvalues() const$/;"	f	class:Eigen::SelfAdjointView
eigenvalues	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    const RealVectorType& eigenvalues() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
eigenvalues_selector	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^struct eigenvalues_selector$/;"	s	namespace:Eigen::internal
eigenvalues_selector	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^struct eigenvalues_selector<Derived, false>$/;"	s	namespace:Eigen::internal
eigenvectors	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    const EigenvectorType& eigenvectors() const$/;"	f	class:Eigen::ComplexEigenSolver
eigenvectors	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^typename EigenSolver<MatrixType>::EigenvectorsType EigenSolver<MatrixType>::eigenvectors() const$/;"	f	class:Eigen::EigenSolver
eigenvectors	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    const MatrixType& eigenvectors() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
elementType	./Thirdparty/g2o/g2o/core/cache.h	/^      virtual HyperGraph::HyperGraphElementType elementType() const { return HyperGraph::HGET_CACHE;}$/;"	f	class:g2o::Cache
elementType	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^          virtual HyperGraphElementType elementType() const { return HGET_EDGE;}$/;"	f	class:g2o::HyperGraph::Edge
elementType	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^          virtual HyperGraphElementType elementType() const { return HGET_VERTEX;}$/;"	f	class:g2o::HyperGraph::Vertex
elementType	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        virtual HyperGraph::HyperGraphElementType elementType() const { return HyperGraph::HGET_DATA;}$/;"	f	class:g2o::OptimizableGraph::Data
elementType	./Thirdparty/g2o/g2o/core/parameter.h	/^        virtual HyperGraph::HyperGraphElementType elementType() const { return HyperGraph::HGET_PARAMETER;}$/;"	f	class:g2o::Parameter
elementTypeBit	./Thirdparty/g2o/g2o/core/factory.h	/^          int elementTypeBit;$/;"	m	class:g2o::Factory::CreatorInformation
elseMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    const ElseMatrixType& elseMatrix() const$/;"	f	class:Eigen::Select
empty	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^inline bool TemplatedVocabulary<TDescriptor,F>::empty() const$/;"	f	class:DBoW2::TemplatedVocabulary
empty	./Thirdparty/DBoW2/DUtils/Random.h	/^  inline bool empty() const { return m_values.empty(); }$/;"	f	class:DUtils::Random::UnrepeatedRandomizer
empty	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^bool Timestamp::empty() const$/;"	f	class:Timestamp
emptyIdxLU	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Memory.h	/^enum {emptyIdxLU = -1};$/;"	e	enum:Eigen::internal::__anon391
enable_if	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct enable_if<true,T>$/;"	s	namespace:Eigen::internal
end	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/VectorBlock.h	/^MatrixBase<Derived>::end() const$/;"	f	class:Eigen::MatrixBase
end	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/VectorBlock.h	/^MatrixBase<Derived>::end()$/;"	f	class:Eigen::MatrixBase
end	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/VectorBlock.h	/^MatrixBase<Derived>::end(Index size) const$/;"	f	class:Eigen::MatrixBase
end	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/VectorBlock.h	/^MatrixBase<Derived>::end(Index size)$/;"	f	class:Eigen::MatrixBase
endFill	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED void endFill() {}$/;"	f	class:Eigen::SparseVector
eps	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		float eps;  \/\/!< search for eps-approximate neighbours (default: 0)$/;"	m	struct:nanoflann::SearchParams
epsilon	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    RealScalar epsilon;$/;"	m	struct:Eigen::SparseMatrix::default_prunning_func
erase	./src/KeyFrameDatabase.cc	/^void KeyFrameDatabase::erase(KeyFrame* pKF)$/;"	f	class:ORB_SLAM2::KeyFrameDatabase
eraseProperty	./Thirdparty/g2o/g2o/stuff/property.cpp	/^  bool PropertyMap::eraseProperty(const std::string& name) {$/;"	f	class:g2o::PropertyMap
error	./Thirdparty/g2o/g2o/core/base_edge.h	/^      ErrorVector& error() { return _error;}$/;"	f	class:g2o::BaseEdge
error	./Thirdparty/g2o/g2o/core/base_edge.h	/^      const ErrorVector& error() const { return _error;}$/;"	f	class:g2o::BaseEdge
error	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  RealScalar error() const$/;"	f	class:Eigen::IterativeSolverBase
errorData	./Thirdparty/g2o/g2o/core/base_edge.h	/^      virtual const double* errorData() const { return _error.data();}$/;"	f	class:g2o::BaseEdge
errorData	./Thirdparty/g2o/g2o/core/base_edge.h	/^      virtual double* errorData() { return _error.data();}$/;"	f	class:g2o::BaseEdge
essentialVector	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    const EssentialVectorType essentialVector(Index k) const$/;"	f	class:Eigen::HouseholderSequence
essentialVector	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^  static inline const EssentialVectorType essentialVector(const HouseholderSequenceType& h, Index k)$/;"	f	struct:Eigen::internal::hseq_side_dependent_impl
estimate	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    const EstimateType& estimate() const { return _estimate;}$/;"	f	class:g2o::BaseVertex
estimateDimension	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  int OptimizableGraph::Vertex::estimateDimension() const$/;"	f	class:g2o::OptimizableGraph::Vertex
estimateRotation	./4pcs/Registration.cc	/^        Eigen::Quaternionf FPCSRegistration::estimateRotation(const int corr_index) {$/;"	f	class:pcl::FPCS::FPCSRegistration
estimateSim	./4pcs/Registration.cc	/^        void FPCSRegistration::estimateSim(const int corr_index, float &scale, Eigen::Matrix3f &rotation, Eigen::Vector3f &offset) {$/;"	f	class:pcl::FPCS::FPCSRegistration
estimate_R_and_t	./src/PnPsolver.cc	/^void PnPsolver::estimate_R_and_t(double R[3][3], double t[3])$/;"	f	class:ORB_SLAM2::PnPsolver
estimate_R_and_t	./src/PoseSolver.cc	/^void PoseSolver::estimate_R_and_t(double R[3][3], double t[3])$/;"	f	class:ORB_SLAM2::PoseSolver
etree_find	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseColEtree.h	/^Index etree_find (Index i, IndexVector& pp)$/;"	f	namespace:Eigen::internal
eulerAngles	./Thirdparty/sparseicp/include/Eigen/src/Geometry/EulerAngles.h	/^MatrixBase<Derived>::eulerAngles(Index a0, Index a1, Index a2) const$/;"	f	class:Eigen::MatrixBase
eval	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    EIGEN_STRONG_INLINE EvalReturnType eval() const$/;"	f	class:Eigen::DenseBase
eval	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    PlainPermutationType eval() const { return *this; }$/;"	f	class:Eigen::Transpose
eval	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline const typename internal::eval<Derived>::type eval() const$/;"	f	class:Eigen::SparseMatrixBase
eval	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T> struct eval<T,Sparse>$/;"	s	namespace:Eigen::internal
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline void evalTo(Dest& dst) const { dst = m_expression; }$/;"	f	class:Eigen::ArrayWrapper
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE Derived& evalTo(ActualDerived& dst, const ActualOtherDerived& other) { Transpose<ActualDerived> dstTrans(dst); other.evalTo(dstTrans); return dst; }$/;"	f	struct:Eigen::internal::assign_selector
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE Derived& evalTo(ActualDerived& dst, const ActualOtherDerived& other) { other.evalTo(dst); return dst; }$/;"	f	struct:Eigen::internal::assign_selector
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	class:Eigen::internal::BandMatrixBase
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    template<typename Dest> inline void evalTo(Dest& ) const$/;"	f	class:Eigen::DenseBase
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^void DiagonalBase<Derived>::evalTo(MatrixBase<DenseDerived> &other) const$/;"	f	class:Eigen::DiagonalBase
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    inline void evalTo(Dest& dest) const {$/;"	f	class:Eigen::GeneralProduct
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::permut_matrix_product_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    void evalTo(MatrixBase<DenseDerived>& other) const$/;"	f	class:Eigen::PermutationBase
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    void evalTo(MatrixBase<DenseDerived>& other) const$/;"	f	class:Eigen::Transpose
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    inline void evalTo(Dest& dst) const { dst.setZero(); scaleAndAddTo(dst, Scalar(1)); }$/;"	f	class:Eigen::ScaledProduct
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    inline void evalTo(Dest& dst) const { dst.setZero(); scaleAndAddTo(dst,Scalar(1)); }$/;"	f	class:Eigen::ProductBase
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^    inline void evalTo(Dest& dst) const$/;"	f	class:Eigen::ReturnByValue
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::triangular_solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::transposition_matrix_product_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^void TriangularBase<Derived>::evalTo(MatrixBase<DenseDerived> &other) const$/;"	f	class:Eigen::TriangularBase
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    inline void evalTo(ResultType& result) const$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    inline void evalTo(ResultType& result) const$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    template<typename DestType> inline void evalTo(DestType& dst) const$/;"	f	class:Eigen::HouseholderSequence
evalTo	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    void evalTo(Dest& dst, Workspace& workspace) const$/;"	f	class:Eigen::HouseholderSequence
evalTo	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::image_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::kernel_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::inverse_impl
evalTo	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^  void evalTo(ResultType& result) const$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
evalTo	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^  void evalTo(ResultType& result, WorkVectorType& workspace) const$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
evalTo	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  void evalTo(ResType& res) const$/;"	f	struct:Eigen::SPQR_QProduct
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    void evalTo(MatrixBase<DenseDerived>& dst) const$/;"	f	class:Eigen::SparseMatrixBase
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^    template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::permut_sparsematrix_product_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    void evalTo(Dest& result) const$/;"	f	class:Eigen::SparseSparseProduct
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    template<typename DestScalar,int StorageOrder> void evalTo(SparseMatrix<DestScalar,StorageOrder,Index>& _dest) const$/;"	f	class:Eigen::SparseSelfAdjointView
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    template<typename DestScalar> void evalTo(DynamicSparseMatrix<DestScalar,ColMajor,Index>& _dest) const$/;"	f	class:Eigen::SparseSelfAdjointView
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    template<typename DestType,unsigned int DestUpLo> void evalTo(SparseSelfAdjointView<DestType,DestUpLo>& dest) const$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    void evalTo(SparseMatrix<DestScalar,Options,DstIndex>& _dest) const$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  template<typename Dest> void evalTo(MatrixBase<Dest>& dest) const$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  template<typename Dest> void evalTo(SparseMatrixBase<Dest>& dest) const$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  void evalTo(DesType& res) const$/;"	f	struct:Eigen::SparseQR_QProduct
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval
evalTo	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::image_retval_base
evalTo	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::kernel_retval_base
evalTo	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval_base
evalTo	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval_with_guess
evalTo	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval_base
evalToLazy	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^void TriangularBase<Derived>::evalToLazy(MatrixBase<DenseDerived> &other) const$/;"	f	class:Eigen::TriangularBase
exp	./Thirdparty/g2o/g2o/types/se3quat.h	/^      static SE3Quat exp(const Vector6d & update)$/;"	f	class:g2o::SE3Quat
exp	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::exp() const$/;"	f	class:Eigen::Cwise
exp	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^exp() const$/;"	f
expand	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Memory.h	/^Index  SparseLUImpl<Scalar,Index>::expand(VectorType& vec, Index& length, Index nbElts, Index keep_prev, Index& num_expansions) $/;"	f	class:Eigen::internal::SparseLUImpl
expression	./Thirdparty/sparseicp/include/Eigen/src/Core/NoAlias.h	/^    ExpressionType& expression() const$/;"	f	class:Eigen::NoAlias
expression	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    Lhs& expression() const $/;"	f	class:Eigen::SelfCwiseBinaryOp
expression	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    ExpressionType& expression() const { return m_expression; }$/;"	f	class:Eigen::SwapWrapper
extend	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline AlignedBox& extend(const AlignedBox& b)$/;"	f	class:Eigen::AlignedBox
extend	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline AlignedBox& extend(const VectorType& p)$/;"	f	class:Eigen::AlignedBox
extend	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox& extend(const AlignedBox& b)$/;"	f	class:Eigen::AlignedBox
extend	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox& extend(const MatrixBase<Derived>& a_p)$/;"	f	class:Eigen::AlignedBox
extendedTo	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    extendedTo(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
extendedToOpposite	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    extendedToOpposite(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
exteriorDistance	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline Scalar exteriorDistance(const VectorType& p) const$/;"	f	class:Eigen::AlignedBox
exteriorDistance	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline NonInteger exteriorDistance(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
exteriorDistance	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline NonInteger exteriorDistance(const MatrixBase<Derived>& p) const$/;"	f	class:Eigen::AlignedBox
extract	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^  static inline const XprType extract(const XprType& x) { return x; }$/;"	f	struct:Eigen::internal::blas_traits
extract	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  static inline ExtractType extract(const XprType& x) { return Base::extract(x.nestedExpression()); }$/;"	f	struct:Eigen::internal::blas_traits
extract	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  static inline ExtractType extract(const XprType& x) { return x; }$/;"	f	struct:Eigen::internal::blas_traits
extractData	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperLUBase<MatrixType,Derived>::extractData() const$/;"	f	class:Eigen::SuperLUBase
extractData	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^void UmfPackLU<MatrixType>::extractData() const$/;"	f	class:Eigen::UmfPackLU
extractScalarFactor	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  static inline Scalar extractScalarFactor(const XprType& x) { return Base::extractScalarFactor(x.nestedExpression()); }$/;"	f	struct:Eigen::internal::blas_traits
extractScalarFactor	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  static inline Scalar extractScalarFactor(const XprType& x) { return conj(Base::extractScalarFactor(x.nestedExpression())); }$/;"	f	struct:Eigen::internal::blas_traits
extractScalarFactor	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  static inline Scalar extractScalarFactor(const XprType& x)$/;"	f	struct:Eigen::internal::blas_traits
extractScalarFactor	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  static inline const Scalar extractScalarFactor(const XprType&) { return Scalar(1); }$/;"	f	struct:Eigen::internal::blas_traits
extract_data	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^template<typename T> const typename T::Scalar* extract_data(const T& m)$/;"	f	namespace:Eigen::internal
extract_data_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^struct extract_data_selector {$/;"	s	namespace:Eigen::internal
extract_data_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^struct extract_data_selector<T,false> {$/;"	s	namespace:Eigen::internal
f	./Thirdparty/sparseicp/ICP.h	/^        Function f;     \/\/\/ robust function type$/;"	m	class:ICP::Parameters
factor	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^  inline Scalar& factor() { return m_factor; }$/;"	f	class:Eigen::UniformScaling
factor	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^  inline const Scalar& factor() const { return m_factor; }$/;"	f	class:Eigen::UniformScaling
factorPI	./src/ORBextractor.cc	/^const float factorPI = (float)(CV_PI\/180.f);$/;"	m	namespace:ORB_SLAM2	file:
factorize	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
factorize	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner& factorize(const MatType& mat)$/;"	f	class:Eigen::DiagonalPreconditioner
factorize	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner& factorize(const MatrixType& ) { return *this; }$/;"	f	class:Eigen::IdentityPreconditioner
factorize	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar>::factorize(const _MatrixType& amat)$/;"	f	class:Eigen::IncompleteLUT
factorize	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& factorize(const MatrixType& A)$/;"	f	class:Eigen::IterativeSolverBase
factorize	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLDLT
factorize	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLLT
factorize	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLU
factorize	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::factorize(ColSpMatrix& mat)$/;"	f	class:Eigen::PastixBase
factorize	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^Derived& PardisoImpl<Derived>::factorize(const MatrixType& a)$/;"	f	class:Eigen::PardisoImpl
factorize	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialCholesky
factorize	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialCholeskyBase
factorize	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLDLT
factorize	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLLT
factorize	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^void SparseLU<MatrixType, OrderingType>::factorize(const MatrixType& matrix)$/;"	f	class:Eigen::SparseLU
factorize	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^void SparseQR<MatrixType,OrderingType>::factorize(const MatrixType& mat)$/;"	f	class:Eigen::SparseQR
factorize	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperILU<MatrixType>::factorize(const MatrixType& a)$/;"	f	class:Eigen::SuperILU
factorize	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperLU<MatrixType>::factorize(const MatrixType& a)$/;"	f	class:Eigen::SuperLU
factorize	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
factorize_preordered	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h	/^void SimplicialCholeskyBase<Derived>::factorize_preordered(const CholMatrixType& ap)$/;"	f	class:Eigen::SimplicialCholeskyBase
factoryInstance	./Thirdparty/g2o/g2o/core/factory.cpp	/^Factory* Factory::factoryInstance = 0;$/;"	m	class:g2o::Factory	file:
factoryInstance	./Thirdparty/g2o/g2o/core/factory.h	/^      static Factory* factoryInstance;$/;"	m	class:g2o::Factory
factoryInstance	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  OptimizationAlgorithmFactory* OptimizationAlgorithmFactory::factoryInstance = 0;$/;"	m	class:g2o::OptimizationAlgorithmFactory	file:
factoryInstance	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	/^      static OptimizationAlgorithmFactory* factoryInstance;$/;"	m	class:g2o::OptimizationAlgorithmFactory
factoryInstance	./Thirdparty/g2o/g2o/core/robust_kernel_factory.cpp	/^RobustKernelFactory* RobustKernelFactory::factoryInstance = 0;$/;"	m	class:g2o::RobustKernelFactory	file:
factoryInstance	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	/^      static RobustKernelFactory* factoryInstance;$/;"	m	class:g2o::RobustKernelFactory
fair_weight	./Thirdparty/sparseicp/ICP.h	/^    void fair_weight(Eigen::VectorXd& r, double p) {$/;"	f	namespace:ICP
false_type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct false_type { enum { value = 0 }; };$/;"	s	namespace:Eigen::internal
features	./Thirdparty/DBoW2/build/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v
features	./Thirdparty/DBoW2/build/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v
features	./Thirdparty/g2o/build/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v
features	./Thirdparty/g2o/build/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v
features	./build/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v
features	./build/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v
features	./cmake-build-debug/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v
features	./cmake-build-debug/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v
fill	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE void DenseBase<Derived>::fill(const Scalar& val)$/;"	f	class:Eigen::DenseBase
fill	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    void fill(const Scalar& value) { setConstant(value); }$/;"	f	class:Eigen::TriangularView
fill	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fill(Index i)$/;"	f	class:Eigen::SparseVector
fill	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fill(Index r, Index c)$/;"	f	class:Eigen::SparseVector
fillBlockStructure	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  void SparseBlockMatrix<MatrixType>::fillBlockStructure(MatrixStructure& ms) const$/;"	f	class:g2o::SparseBlockMatrix
fillCCS	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  int SparseBlockMatrix<MatrixType>::fillCCS(double* Cx, bool upperTriangle) const$/;"	f	class:g2o::SparseBlockMatrix
fillCCS	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  int SparseBlockMatrix<MatrixType>::fillCCS(int* Cp, int* Ci, double* Cx, bool upperTriangle) const$/;"	f	class:g2o::SparseBlockMatrix
fillCCS	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int fillCCS(double* Cx, bool upperTriangle = false) const$/;"	f	class:g2o::SparseBlockMatrixCCS
fillCCS	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int fillCCS(int* Cp, int* Ci, double* Cx, bool upperTriangle = false) const$/;"	f	class:g2o::SparseBlockMatrixCCS
fillKnownKernels	./Thirdparty/g2o/g2o/core/robust_kernel_factory.cpp	/^void RobustKernelFactory::fillKnownKernels(std::vector<std::string>& types) const$/;"	f	class:g2o::RobustKernelFactory
fillKnownTypes	./Thirdparty/g2o/g2o/core/factory.cpp	/^void Factory::fillKnownTypes(std::vector<std::string>& types) const$/;"	f	class:g2o::Factory
fillSparseBlockMatrixCCS	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  int SparseBlockMatrix<MatrixType>::fillSparseBlockMatrixCCS(SparseBlockMatrixCCS<MatrixType>& blockCCS) const$/;"	f	class:g2o::SparseBlockMatrix
fillSparseBlockMatrixCCSTransposed	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  int SparseBlockMatrix<MatrixType>::fillSparseBlockMatrixCCSTransposed(SparseBlockMatrixCCS<MatrixType>& blockCCS) const$/;"	f	class:g2o::SparseBlockMatrix
fillSparseMatrix	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    void fillSparseMatrix(const SparseBlockMatrix<MatrixType>& A, bool onlyValues)$/;"	f	class:g2o::LinearSolverEigen
fill_M	./src/PnPsolver.cc	/^void PnPsolver::fill_M(CvMat * M,$/;"	f	class:ORB_SLAM2::PnPsolver
fill_M	./src/PoseSolver.cc	/^void PoseSolver::fill_M(CvMat * M,$/;"	f	class:ORB_SLAM2::PoseSolver
fillfactor	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index fillfactor; \/\/ The estimated fills factors for L and U, compared with A$/;"	m	struct:Eigen::internal::perfvalues
fillrand	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fillrand(Index i)$/;"	f	class:Eigen::SparseVector
fillrand	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fillrand(Index r, Index c)$/;"	f	class:Eigen::SparseVector
finalize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void finalize()$/;"	f	class:Eigen::SparseMatrix
finalize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline void finalize() {}$/;"	f	class:Eigen::SparseVector
find	./src/PnPsolver.cc	/^cv::Mat PnPsolver::find(vector<bool> &vbInliers, int &nInliers)$/;"	f	class:ORB_SLAM2::PnPsolver
find	./src/PoseSolver.cc	/^cv::Mat PoseSolver::find(vector<bool> &vbInliers, int &nInliers)$/;"	f	class:ORB_SLAM2::PoseSolver
find	./src/Sim3Solver.cc	/^cv::Mat Sim3Solver::find(vector<bool> &vbInliers12, int &nInliers)$/;"	f	class:ORB_SLAM2::Sim3Solver
findActiveEdge	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  SparseOptimizer::EdgeContainer::const_iterator SparseOptimizer::findActiveEdge(const OptimizableGraph::Edge* e) const$/;"	f	class:g2o::SparseOptimizer
findActiveVertex	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  SparseOptimizer::VertexContainer::const_iterator SparseOptimizer::findActiveVertex(const OptimizableGraph::Vertex* v) const$/;"	f	class:g2o::SparseOptimizer
findBasis	./4pcs/Registration.cc	/^        int FPCSRegistration::findBasis(const double dist) {$/;"	f	class:pcl::FPCS::FPCSRegistration
findCache	./Thirdparty/g2o/g2o/core/cache.cpp	/^  Cache* CacheContainer::findCache(const Cache::CacheKey& key) {$/;"	f	class:g2o::CacheContainer
findGauge	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  OptimizableGraph::Vertex* SparseOptimizer::findGauge(){$/;"	f	class:g2o::SparseOptimizer
findNeighbors	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		void findNeighbors(RESULTSET& result, const ElementType* vec, const SearchParams& searchParams) const$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
findSmallDiagEntry	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^    inline typename MatrixType::Index RealQZ<MatrixType>::findSmallDiagEntry(Index f, Index l)$/;"	f	class:Eigen::RealQZ
findSmallSubdiagEntry	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^    inline typename MatrixType::Index RealQZ<MatrixType>::findSmallSubdiagEntry(Index iu)$/;"	f	class:Eigen::RealQZ
findSmallSubdiagEntry	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^inline typename MatrixType::Index RealSchur<MatrixType>::findSmallSubdiagEntry(Index iu, const Scalar& norm)$/;"	f	class:Eigen::RealSchur
findSolver	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  OptimizationAlgorithmFactory::CreatorList::const_iterator OptimizationAlgorithmFactory::findSolver(const std::string& name) const$/;"	f	class:g2o::OptimizationAlgorithmFactory
findSolver	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  OptimizationAlgorithmFactory::CreatorList::iterator OptimizationAlgorithmFactory::findSolver(const std::string& name)$/;"	f	class:g2o::OptimizationAlgorithmFactory
findTargetCandidateBasis	./4pcs/Registration.cc	/^        int FPCSRegistration::findTargetCandidateBasis() {$/;"	f	class:pcl::FPCS::FPCSRegistration
find_betas_approx_1	./src/PnPsolver.cc	/^void PnPsolver::find_betas_approx_1(const CvMat * L_6x10, const CvMat * Rho,$/;"	f	class:ORB_SLAM2::PnPsolver
find_betas_approx_1	./src/PoseSolver.cc	/^void PoseSolver::find_betas_approx_1(const CvMat * L_6x10, const CvMat * Rho,$/;"	f	class:ORB_SLAM2::PoseSolver
find_betas_approx_2	./src/PnPsolver.cc	/^void PnPsolver::find_betas_approx_2(const CvMat * L_6x10, const CvMat * Rho,$/;"	f	class:ORB_SLAM2::PnPsolver
find_betas_approx_2	./src/PoseSolver.cc	/^void PoseSolver::find_betas_approx_2(const CvMat * L_6x10, const CvMat * Rho,$/;"	f	class:ORB_SLAM2::PoseSolver
find_betas_approx_3	./src/PnPsolver.cc	/^void PnPsolver::find_betas_approx_3(const CvMat * L_6x10, const CvMat * Rho,$/;"	f	class:ORB_SLAM2::PnPsolver
find_betas_approx_3	./src/PoseSolver.cc	/^void PoseSolver::find_betas_approx_3(const CvMat * L_6x10, const CvMat * Rho,$/;"	f	class:ORB_SLAM2::PoseSolver
find_ordering	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static Index find_ordering \/* return the number of garbage collections *\/$/;"	f	namespace:internal
finished	./Thirdparty/sparseicp/include/Eigen/src/Core/CommaInitializer.h	/^  inline XprType& finished() { return m_xpr; }$/;"	f	struct:Eigen::CommaInitializer
first	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RealPacket first;$/;"	m	struct:Eigen::internal::gebp_traits::DoublePacket
first_aligned	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^static inline typename Derived::Index first_aligned(const Derived& m)$/;"	f	namespace:Eigen::internal
first_aligned	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^static inline Index first_aligned(const Scalar* array, Index size)$/;"	f	namespace:Eigen::internal
first_aligned_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^struct first_aligned_impl$/;"	s	namespace:Eigen::internal
first_aligned_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^struct first_aligned_impl<Derived, false>$/;"	s	namespace:Eigen::internal
first_column	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    Index first_column ;\/* first column in row (used in garbage collection) *\/$/;"	m	union:internal::Colamd_Row::__anon352
first_multiple	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline static Index first_multiple(Index size, Index base)$/;"	f	namespace:Eigen::internal
fitHyperplane	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LeastSquares.h	/^void fitHyperplane(int numPoints,$/;"	f	namespace:Eigen
fixPoint	./include/Tracking.h	/^    cv::Mat fixPoint[4];$/;"	m	class:ORB_SLAM2::Tracking
fixed	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        bool fixed() const {return _fixed;}$/;"	f	class:g2o::OptimizableGraph::Vertex
fixupL	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Utils.h	/^void SparseLUImpl<Scalar,Index>::fixupL(const Index n, const IndexVector& perm_r, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
flagged	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^DenseBase<Derived>::flagged() const$/;"	f	class:Eigen::DenseBase
flags	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^  int flags;$/;"	m	struct:Eigen::IOFormat
floor_log2	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct floor_log2 {};$/;"	s	namespace:Eigen::internal
floor_log2	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct floor_log2<n, lower, upper, floor_log2_bogus>$/;"	s	namespace:Eigen::internal
floor_log2	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct floor_log2<n, lower, upper, floor_log2_move_down>$/;"	s	namespace:Eigen::internal
floor_log2	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct floor_log2<n, lower, upper, floor_log2_move_up>$/;"	s	namespace:Eigen::internal
floor_log2	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct floor_log2<n, lower, upper, floor_log2_terminate>$/;"	s	namespace:Eigen::internal
floor_log2_bogus	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  floor_log2_bogus$/;"	e	enum:Eigen::internal::__anon172
floor_log2_move_down	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  floor_log2_move_down,$/;"	e	enum:Eigen::internal::__anon172
floor_log2_move_up	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  floor_log2_move_up,$/;"	e	enum:Eigen::internal::__anon172
floor_log2_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^template<unsigned int n, int lower, int upper> struct floor_log2_selector$/;"	s	namespace:Eigen::internal
floor_log2_terminate	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  floor_log2_terminate,$/;"	e	enum:Eigen::internal::__anon172
forceAlignedAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccess() const$/;"	f	class:Eigen::MatrixBase
forceAlignedAccess	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccess()$/;"	f	class:Eigen::MatrixBase
forceAlignedAccessIf	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccessIf() const$/;"	f	class:Eigen::MatrixBase
forceAlignedAccessIf	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccessIf()$/;"	f	class:Eigen::MatrixBase
forceStopFlag	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    bool* forceStopFlag() const { return _forceStopFlag;};$/;"	f	class:g2o::SparseOptimizer
format	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^DenseBase<Derived>::format(const IOFormat& fmt) const$/;"	f	class:Eigen::DenseBase
formatString	./Thirdparty/g2o/g2o/stuff/string_tools.cpp	/^std::string formatString(const char* fmt, ...)$/;"	f	namespace:g2o
fortran_to_c_numbering	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void fortran_to_c_numbering (MatrixType& mat)$/;"	f	namespace:Eigen::internal
free	./Thirdparty/g2o/g2o/core/matrix_structure.cpp	/^void MatrixStructure::free()$/;"	f	class:g2o::MatrixStructure
fromMinimalVector	./Thirdparty/g2o/g2o/types/se3quat.h	/^      inline void fromMinimalVector(const Vector6d& v){$/;"	f	class:g2o::SE3Quat
fromPositionOrientationScale	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::fromPositionOrientationScale(const MatrixBase<PositionDerived> &position,$/;"	f	class:Eigen::Transform
fromPositionOrientationScale	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::fromPositionOrientationScale(const MatrixBase<PositionDerived> &position,$/;"	f	class:Eigen::Transform
fromRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^Rotation2D<Scalar>& Rotation2D<Scalar>::fromRotationMatrix(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::Rotation2D
fromRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^AngleAxis<Scalar>& AngleAxis<Scalar>::fromRotationMatrix(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::AngleAxis
fromRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^Rotation2D<Scalar>& Rotation2D<Scalar>::fromRotationMatrix(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::Rotation2D
fromString	./Thirdparty/DBoW2/DBoW2/FORB.cpp	/^void FORB::fromString(FORB::TDescriptor &a, const std::string &s)$/;"	f	class:DBoW2::FORB
fromString	./Thirdparty/g2o/g2o/stuff/property.h	/^      virtual bool fromString(const std::string& s)$/;"	f	class:g2o::Property
fromVector	./Thirdparty/g2o/g2o/types/se3quat.h	/^      inline void fromVector(const Vector7d& v){$/;"	f	class:g2o::SE3Quat
frontierLevel	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^          int frontierLevel() const { return _frontierLevel;}$/;"	f	class:g2o::EstimatePropagator::AdjacencyMapEntry
fu	./include/PnPsolver.h	/^  double uc, vc, fu, fv;$/;"	m	class:ORB_SLAM2::PnPsolver
fu	./include/PoseSolver.h	/^  double uc, vc, fu, fv;$/;"	m	class:ORB_SLAM2::PoseSolver
full	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline bool full() const { return true; }$/;"	f	class:nanoflann::RadiusResultSet
full	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline bool full() const$/;"	f	class:nanoflann::KNNResultSet
fullPivHouseholderQr	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^MatrixBase<Derived>::fullPivHouseholderQr() const$/;"	f	class:Eigen::MatrixBase
fullPivLu	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^MatrixBase<Derived>::fullPivLu() const$/;"	f	class:Eigen::MatrixBase
functor	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    const BinaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseBinaryOp
functor	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^    const NullaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseNullaryOp
functor	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^    const UnaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseUnaryOp
functor	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    const ViewOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseUnaryView
functor	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    const BinaryOp& functor() const $/;"	f	class:Eigen::SelfCwiseBinaryOp
functor_has_linear_access	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Functor> struct functor_has_linear_access { enum { ret = 1 }; };$/;"	s	namespace:Eigen::internal
functor_has_linear_access	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct functor_has_linear_access<scalar_identity_op<Scalar> > { enum { ret = 0 }; };$/;"	s	namespace:Eigen::internal
functor_is_product_like	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Functor> struct functor_is_product_like { enum { ret = 0 }; };$/;"	s	namespace:Eigen::internal
functor_is_product_like	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename LhsScalar,typename RhsScalar> struct functor_is_product_like<scalar_conj_product_op<LhsScalar,RhsScalar> > { enum { ret = 1 }; };$/;"	s	namespace:Eigen::internal
functor_is_product_like	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename LhsScalar,typename RhsScalar> struct functor_is_product_like<scalar_product_op<LhsScalar,RhsScalar> > { enum { ret = 1 }; };$/;"	s	namespace:Eigen::internal
functor_is_product_like	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename LhsScalar,typename RhsScalar> struct functor_is_product_like<scalar_quotient_op<LhsScalar,RhsScalar> > { enum { ret = 1 }; };$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_abs2_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_abs_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_acos_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_add_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_asin_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_binary_pow_op<Scalar,OtherScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_cast_op<Scalar,NewType> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_conj_product_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_conjugate_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_constant_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_cos_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_cube_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_difference_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_exp_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_hypot_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_identity_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_imag_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_imag_ref_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_inverse_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_log_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_max_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_min_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_multiple2_op<Scalar1,Scalar2> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_multiple_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_opposite_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_pow_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_product_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_quotient1_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_quotient_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_real_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_real_ref_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_sin_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_sqrt_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_square_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_sum_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_tan_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::binary_compose<T0,T1,T2> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::binary_negate<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::binder1st<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::binder2nd<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::divides<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::equal_to<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::greater<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::greater_equal<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::less<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::less_equal<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::logical_and<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::logical_not<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::logical_or<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::minus<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::multiplies<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::negate<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::not_equal_to<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::plus<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::project1st<T0,T1> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::project2nd<T0,T1> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::select1st<std::pair<T0,T1> > >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::select2nd<std::pair<T0,T1> > >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::unary_compose<T0,T1> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct functor_traits<std::unary_negate<T> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template <typename Scalar, bool RandomAccess> struct functor_traits< linspaced_op<Scalar,RandomAccess> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<> struct functor_traits<scalar_boolean_and_op> {$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<> struct functor_traits<scalar_boolean_or_op> {$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Random.h	/^struct functor_traits<scalar_random_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^struct functor_traits<max_coeff_visitor<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^struct functor_traits<min_coeff_visitor<Scalar> > {$/;"	s	namespace:Eigen::internal
fv	./include/PnPsolver.h	/^  double uc, vc, fu, fv;$/;"	m	class:ORB_SLAM2::PnPsolver
fv	./include/PoseSolver.h	/^  double uc, vc, fu, fv;$/;"	m	class:ORB_SLAM2::PoseSolver
fx	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy, bf;$/;"	m	class:g2o::EdgeStereoSE3ProjectXYZ
fx	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy, bf;$/;"	m	class:g2o::EdgeStereoSE3ProjectXYZOnlyPose
fx	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy;$/;"	m	class:g2o::EdgeSE3ProjectXYZ
fx	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy;$/;"	m	class:g2o::EdgeSE3ProjectXYZOnlyPose
fx	./include/Frame.h	/^    static float fx;$/;"	m	class:ORB_SLAM2::Frame
fx	./include/KeyFrame.h	/^    const float fx, fy, cx, cy, invfx, invfy, mbf, mb, mThDepth;$/;"	m	class:ORB_SLAM2::KeyFrame
fx	./src/Frame.cc	/^float Frame::cx, Frame::cy, Frame::fx, Frame::fy, Frame::invfx, Frame::invfy;$/;"	m	class:ORB_SLAM2::Frame	file:
fy	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy, bf;$/;"	m	class:g2o::EdgeStereoSE3ProjectXYZ
fy	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy, bf;$/;"	m	class:g2o::EdgeStereoSE3ProjectXYZOnlyPose
fy	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy;$/;"	m	class:g2o::EdgeSE3ProjectXYZ
fy	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  double fx, fy, cx, cy;$/;"	m	class:g2o::EdgeSE3ProjectXYZOnlyPose
fy	./include/Frame.h	/^    static float fy;$/;"	m	class:ORB_SLAM2::Frame
fy	./include/KeyFrame.h	/^    const float fx, fy, cx, cy, invfx, invfy, mbf, mb, mThDepth;$/;"	m	class:ORB_SLAM2::KeyFrame
fy	./src/Frame.cc	/^float Frame::cx, Frame::cy, Frame::fx, Frame::fy, Frame::invfx, Frame::invfy;$/;"	m	class:ORB_SLAM2::Frame	file:
g2o	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/base_edge.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/base_multi_edge.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/base_unary_edge.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/base_vertex.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/batch_stats.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/batch_stats.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/block_solver.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/block_solver.hpp	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/cache.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/cache.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/creators.h	/^namespace g2o$/;"	n
g2o	./Thirdparty/g2o/g2o/core/eigen_types.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/estimate_propagator.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/factory.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/factory.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/hyper_dijkstra.cpp	/^namespace g2o{$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^namespace g2o{$/;"	n
g2o	./Thirdparty/g2o/g2o/core/hyper_graph.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/jacobian_workspace.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/jacobian_workspace.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/linear_solver.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/matrix_operations.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/matrix_structure.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/matrix_structure.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/openmp_mutex.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/optimization_algorithm.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/optimization_algorithm.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/optimization_algorithm_property.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/parameter.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/parameter.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/parameter_container.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/parameter_container.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/robust_kernel.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/robust_kernel.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/robust_kernel_factory.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/robust_kernel_impl.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/solver.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/solver.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^namespace g2o{$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/solvers/linear_solver_dense.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/stuff/misc.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/stuff/property.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/stuff/property.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/stuff/string_tools.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/stuff/string_tools.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/stuff/timeutil.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/stuff/timeutil.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/types/se3_ops.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/types/se3quat.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/types/sim3.h	/^namespace g2o$/;"	n
g2o	./Thirdparty/g2o/g2o/types/types_sba.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/types/types_sba.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^namespace g2o {$/;"	n
g2o	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^namespace g2o {$/;"	n	file:
g2o	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^namespace g2o {$/;"	n
g2o_isfinite	./Thirdparty/g2o/g2o/stuff/macros.h	107;"	d
g2o_isfinite	./Thirdparty/g2o/g2o/stuff/macros.h	53;"	d
g2o_isfinite	./Thirdparty/g2o/g2o/stuff/macros.h	57;"	d
g2o_isfinite	./Thirdparty/g2o/g2o/stuff/macros.h	90;"	d
g2o_isinf	./Thirdparty/g2o/g2o/stuff/macros.h	106;"	d
g2o_isinf	./Thirdparty/g2o/g2o/stuff/macros.h	52;"	d
g2o_isinf	./Thirdparty/g2o/g2o/stuff/macros.h	56;"	d
g2o_isinf	./Thirdparty/g2o/g2o/stuff/macros.h	89;"	d
g2o_isnan	./Thirdparty/g2o/g2o/stuff/macros.h	105;"	d
g2o_isnan	./Thirdparty/g2o/g2o/stuff/macros.h	51;"	d
g2o_isnan	./Thirdparty/g2o/g2o/stuff/macros.h	55;"	d
g2o_isnan	./Thirdparty/g2o/g2o/stuff/macros.h	88;"	d
garbage_collection	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static Index garbage_collection  \/* returns the new value of pfree *\/$/;"	f	namespace:internal
gaugeFreedom	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::gaugeFreedom()$/;"	f	class:g2o::SparseOptimizer
gauss_newton	./src/PnPsolver.cc	/^void PnPsolver::gauss_newton(const CvMat * L_6x10, const CvMat * Rho,$/;"	f	class:ORB_SLAM2::PnPsolver
gauss_newton	./src/PoseSolver.cc	/^void PoseSolver::gauss_newton(const CvMat * L_6x10, const CvMat * Rho,$/;"	f	class:ORB_SLAM2::PoseSolver
gebp_kernel	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gebp_kernel$/;"	s	namespace:Eigen::internal
gebp_madd	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void gebp_madd(const CJ& cj, A& a, B& b, C& c, T& t)$/;"	f	namespace:Eigen::internal
gebp_madd_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  template<typename CJ, typename A, typename B, typename C, typename T> struct gebp_madd_selector {$/;"	s	namespace:Eigen::internal
gebp_madd_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  template<typename CJ, typename T> struct gebp_madd_selector<CJ,T,T,T,T> {$/;"	s	namespace:Eigen::internal
gebp_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits$/;"	c	namespace:Eigen::internal
gebp_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits<RealScalar, std::complex<RealScalar>, false, _ConjRhs >$/;"	c	namespace:Eigen::internal
gebp_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits<std::complex<RealScalar>, RealScalar, _ConjLhs, false>$/;"	c	namespace:Eigen::internal
gebp_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits<std::complex<RealScalar>, std::complex<RealScalar>, _ConjLhs, _ConjRhs >$/;"	c	namespace:Eigen::internal
gemm_blocking_space	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    gemm_blocking_space(DenseIndex \/*rows*\/, DenseIndex \/*cols*\/, DenseIndex \/*depth*\/)$/;"	f	class:Eigen::internal::gemm_blocking_space
gemm_blocking_space	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    gemm_blocking_space(DenseIndex rows, DenseIndex cols, DenseIndex depth)$/;"	f	class:Eigen::internal::gemm_blocking_space
gemm_blocking_space	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^class gemm_blocking_space<StorageOrder,_LhsScalar,_RhsScalar,MaxRows, MaxCols, MaxDepth, KcFactor, false>$/;"	c	namespace:Eigen::internal
gemm_blocking_space	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^class gemm_blocking_space<StorageOrder,_LhsScalar,_RhsScalar,MaxRows, MaxCols, MaxDepth, KcFactor, true>$/;"	c	namespace:Eigen::internal
gemm_functor	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  gemm_functor(const Lhs& lhs, const Rhs& rhs, Dest& dest, const Scalar& actualAlpha,$/;"	f	struct:Eigen::internal::gemm_functor
gemm_functor	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct gemm_functor$/;"	s	namespace:Eigen::internal
gemm_pack_lhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_lhs$/;"	s	namespace:Eigen::internal
gemm_pack_rhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_rhs<Scalar, Index, nr, ColMajor, Conjugate, PanelMode>$/;"	s	namespace:Eigen::internal
gemm_pack_rhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_rhs<Scalar, Index, nr, RowMajor, Conjugate, PanelMode>$/;"	s	namespace:Eigen::internal
gemv_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^struct gemv_selector<OnTheLeft,StorageOrder,BlasCompatible>$/;"	s	namespace:Eigen::internal
gemv_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_selector<OnTheRight,ColMajor,false>$/;"	s	namespace:Eigen::internal
gemv_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_selector<OnTheRight,ColMajor,true>$/;"	s	namespace:Eigen::internal
gemv_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_selector<OnTheRight,RowMajor,false>$/;"	s	namespace:Eigen::internal
gemv_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_selector<OnTheRight,RowMajor,true>$/;"	s	namespace:Eigen::internal
gemv_static_vector_if	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^struct gemv_static_vector_if<Scalar,Size,Dynamic,true>$/;"	s	namespace:Eigen::internal
gemv_static_vector_if	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^struct gemv_static_vector_if<Scalar,Size,MaxSize,false>$/;"	s	namespace:Eigen::internal
gemv_static_vector_if	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^struct gemv_static_vector_if<Scalar,Size,MaxSize,true>$/;"	s	namespace:Eigen::internal
general_det3_helper	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^inline const typename Derived::Scalar general_det3_helper$/;"	f	namespace:Eigen::internal
general_matrix_matrix_product	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct general_matrix_matrix_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,ColMajor>$/;"	s	namespace:Eigen::internal
general_matrix_matrix_product	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct general_matrix_matrix_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,RowMajor>$/;"	s	namespace:Eigen::internal
general_matrix_matrix_rankupdate	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	/^struct general_matrix_matrix_rankupdate :$/;"	s	namespace:Eigen::internal
general_matrix_matrix_triangular_product	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_matrix_matrix_triangular_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,ColMajor,UpLo,Version>$/;"	s	namespace:Eigen::internal
general_matrix_matrix_triangular_product	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_matrix_matrix_triangular_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,RowMajor,UpLo,Version>$/;"	s	namespace:Eigen::internal
general_matrix_vector_product	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^struct general_matrix_vector_product<Index,LhsScalar,ColMajor,ConjugateLhs,RhsScalar,ConjugateRhs,Version>$/;"	s	namespace:Eigen::internal
general_matrix_vector_product	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^struct general_matrix_vector_product<Index,LhsScalar,RowMajor,ConjugateLhs,RhsScalar,ConjugateRhs,Version>$/;"	s	namespace:Eigen::internal
general_matrix_vector_product_gemv	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector_MKL.h	/^struct general_matrix_vector_product_gemv :$/;"	s	namespace:Eigen::internal
general_product_to_triangular_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_product_to_triangular_selector<MatrixType,ProductType,UpLo,false>$/;"	s	namespace:Eigen
general_product_to_triangular_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_product_to_triangular_selector<MatrixType,ProductType,UpLo,true>$/;"	s	namespace:Eigen
generic_aligned_realloc	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline void* generic_aligned_realloc(void* ptr, size_t size, size_t old_size)$/;"	f	namespace:Eigen::internal
get	./Thirdparty/DBoW2/DUtils/Random.cpp	/^int DUtils::Random::UnrepeatedRandomizer::get()$/;"	f	class:DUtils::Random::UnrepeatedRandomizer
getBranchingFactor	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^  inline int getBranchingFactor() const { return m_k; }$/;"	f	class:DBoW2::TemplatedVocabulary
getCross	./4pcs/Registration.cc	/^        PointXYZ FPCSRegistration::getCross(const pcl::PointXYZ &p1, const pcl::PointXYZ &p2, const pcl::PointXYZ &p3,$/;"	f	class:pcl::FPCS::FPCSRegistration
getDepthLevels	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^  inline int getDepthLevels() const { return m_L; }$/;"	f	class:DBoW2::TemplatedVocabulary
getEffectiveLevels	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^float TemplatedVocabulary<TDescriptor,F>::getEffectiveLevels() const$/;"	f	class:DBoW2::TemplatedVocabulary
getEstimateData	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Vertex::getEstimateData(double *) const$/;"	f	class:g2o::OptimizableGraph::Vertex
getEstimateData	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        virtual bool getEstimateData(std::vector<double>& estimate) const {$/;"	f	class:g2o::OptimizableGraph::Vertex
getFeatures	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::getFeatures($/;"	f	class:DBoW2::TemplatedVocabulary
getFloatTime	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^double Timestamp::getFloatTime() const {$/;"	f	class:Timestamp
getInput	./main.cc	/^void getInput(char *file_name) {$/;"	f
getL	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return m.adjoint(); }$/;"	f	struct:Eigen::internal::LDLT_Traits
getL	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::LDLT_Traits
getL	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return m.adjoint(); }$/;"	f	struct:Eigen::internal::LLT_Traits
getL	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::LLT_Traits
getL	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  static inline MatrixL getL(const MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::traits
getMatrix	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void getMatrix(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLDLT
getMatrix	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void getMatrix(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLLT
getMatrix	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void getMatrix(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLU
getMaxIterations	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    Index getMaxIterations()$/;"	f	class:Eigen::ComplexEigenSolver
getMaxIterations	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    Index getMaxIterations()$/;"	f	class:Eigen::ComplexSchur
getMaxIterations	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    Index getMaxIterations()$/;"	f	class:Eigen::EigenSolver
getMaxIterations	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    Index getMaxIterations()$/;"	f	class:Eigen::RealSchur
getMeasurementData	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Edge::getMeasurementData(double *) const$/;"	f	class:g2o::OptimizableGraph::Edge
getMinimalEstimateData	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Vertex::getMinimalEstimateData(double *) const$/;"	f	class:g2o::OptimizableGraph::Vertex
getMinimalEstimateData	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        virtual bool getMinimalEstimateData(std::vector<double>& estimate) const {$/;"	f	class:g2o::OptimizableGraph::Vertex
getParameter	./Thirdparty/g2o/g2o/core/parameter_container.cpp	/^  Parameter* ParameterContainer::getParameter(int id) {$/;"	f	class:g2o::ParameterContainer
getParentNode	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^NodeId TemplatedVocabulary<TDescriptor,F>::getParentNode$/;"	f	class:DBoW2::TemplatedVocabulary
getProperty	./Thirdparty/g2o/g2o/stuff/property.h	/^      P* getProperty(const std::string& name_)$/;"	f	class:g2o::PropertyMap
getProperty	./Thirdparty/g2o/g2o/stuff/property.h	/^      const P* getProperty(const std::string& name_) const$/;"	f	class:g2o::PropertyMap
getScoringType	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^  inline ScoringType getScoringType() const { return m_scoring; }$/;"	f	class:DBoW2::TemplatedVocabulary
getStringTime	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^string Timestamp::getStringTime() const {$/;"	f	class:Timestamp
getTime	./Thirdparty/DBoW2/DUtils/Timestamp.h	/^	inline void getTime(unsigned long &secs, unsigned long &usecs) const$/;"	f	class:DUtils::Timestamp
getTransform	./4pcs/Registration.cc	/^        Eigen::Matrix4f FPCSRegistration::getTransform() {$/;"	f	class:pcl::FPCS::FPCSRegistration
getU	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return m.adjoint(); }$/;"	f	struct:Eigen::internal::LDLT_Traits
getU	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::LDLT_Traits
getU	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return m.adjoint(); }$/;"	f	struct:Eigen::internal::LLT_Traits
getU	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::LLT_Traits
getU	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  static inline MatrixU getU(const MatrixType& m) { return m.adjoint(); }$/;"	f	struct:Eigen::internal::traits
getWeightingType	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^  inline WeightingType getWeightingType() const { return m_weighting; }$/;"	f	class:DBoW2::TemplatedVocabulary
getWord	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^TDescriptor TemplatedVocabulary<TDescriptor,F>::getWord(WordId wid) const$/;"	f	class:DBoW2::TemplatedVocabulary
getWordWeight	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^WordValue TemplatedVocabulary<TDescriptor, F>::getWordWeight(WordId wid) const$/;"	f	class:DBoW2::TemplatedVocabulary
getWordsFromNode	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::getWordsFromNode$/;"	f	class:DBoW2::TemplatedVocabulary
get_factor	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^template<typename From,typename To> struct get_factor {$/;"	s	namespace:Eigen::internal
get_factor	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^template<typename Scalar> struct get_factor<Scalar,typename NumTraits<Scalar>::Real> {$/;"	s	namespace:Eigen::internal
get_monotonic_time	./Thirdparty/g2o/g2o/stuff/timeutil.cpp	/^double get_monotonic_time()$/;"	f	namespace:g2o
get_symmetrized_graph	./Thirdparty/sparseicp/include/Eigen/src/MetisSupport/MetisSupport.h	/^  void get_symmetrized_graph(const MatrixType& A)$/;"	f	class:Eigen::MetisOrdering
get_time	./Thirdparty/g2o/g2o/stuff/timeutil.h	/^inline double get_time() $/;"	f	namespace:g2o
gettimeofday	./Thirdparty/g2o/g2o/stuff/timeutil.cpp	/^int gettimeofday(struct timeval *tv, struct timezone *tz)$/;"	f	namespace:g2o
globalStats	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    static G2OBatchStatistics* globalStats() {return _globalStats;}$/;"	f	struct:g2o::G2OBatchStatistics
global_math_functions_filtering_base	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct global_math_functions_filtering_base$/;"	s	namespace:Eigen::internal
grabMatrix	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void grabMatrix(const MatrixType& matrix, ColSpMatrix& out)$/;"	f	class:Eigen::PastixLDLT
grabMatrix	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void grabMatrix(const MatrixType& matrix, ColSpMatrix& out)$/;"	f	class:Eigen::PastixLLT
grabMatrix	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void grabMatrix(const MatrixType& matrix, ColSpMatrix& out)$/;"	f	class:Eigen::PastixLU
grapInput	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void grapInput(const MatrixType& mat)$/;"	f	class:Eigen::UmfPackLU
graph	./Thirdparty/g2o/g2o/core/cache.cpp	/^  OptimizableGraph* Cache::graph() {$/;"	f	class:g2o::Cache
graph	./Thirdparty/g2o/g2o/core/cache.cpp	/^  OptimizableGraph* CacheContainer::graph(){$/;"	f	class:g2o::CacheContainer
graph	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^      OptimizableGraph* graph() {return _graph;} $/;"	f	class:g2o::EstimatePropagator
graph	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^    HyperGraph* graph() {return _graph;} $/;"	f	struct:g2o::HyperDijkstra
graph	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph* OptimizableGraph::Edge::graph(){$/;"	f	class:g2o::OptimizableGraph::Edge
graph	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  const OptimizableGraph* OptimizableGraph::Edge::graph() const{$/;"	f	class:g2o::OptimizableGraph::Edge
graph	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        OptimizableGraph* graph() {return _graph;}$/;"	f	class:g2o::OptimizableGraph::Vertex
graph	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        const OptimizableGraph* graph() const {return _graph;}$/;"	f	class:g2o::OptimizableGraph::Vertex
gth_file	./main.cc	/^	std::string gth_file;$/;"	m	struct:__anon469	file:
gts	./include/MapDrawer.h	/^    vector<cv::Mat> gts;$/;"	m	class:ORB_SLAM2::MapDrawer
hCoeffs	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    const HCoeffsType& hCoeffs() const { return m_hCoeffs; }$/;"	f	class:Eigen::ColPivHouseholderQR
hCoeffs	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    const HCoeffsType& hCoeffs() const { return m_hCoeffs; }$/;"	f	class:Eigen::FullPivHouseholderQR
hCoeffs	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    const HCoeffsType& hCoeffs() const { return m_hCoeffs; }$/;"	f	class:Eigen::HouseholderQR
handmade_aligned_free	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline void handmade_aligned_free(void *ptr)$/;"	f	namespace:Eigen::internal
handmade_aligned_malloc	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline void* handmade_aligned_malloc(std::size_t size)$/;"	f	namespace:Eigen::internal
handmade_aligned_realloc	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline void* handmade_aligned_realloc(void* ptr, std::size_t size, std::size_t = 0)$/;"	f	namespace:Eigen::internal
hasChild	./src/KeyFrame.cc	/^bool KeyFrame::hasChild(KeyFrame *pKF)$/;"	f	class:ORB_SLAM2::KeyFrame
hasNaN	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^inline bool DenseBase<Derived>::hasNaN() const$/;"	f	class:Eigen::DenseBase
has_direct_access	./Thirdparty/sparseicp/include/Eigen/src/Core/util/ForwardDeclarations.h	/^  enum { has_direct_access = (traits<Derived>::Flags & DirectAccessBit) ? 1 : 0,$/;"	e	enum:Eigen::internal::accessors_level::__anon84
has_direct_access	./Thirdparty/sparseicp/include/Eigen/src/Core/util/ForwardDeclarations.h	/^template<typename Derived> struct has_direct_access$/;"	s	namespace:Eigen::internal
has_none	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct has_none {int a[1];};$/;"	s	namespace:Eigen::internal
has_std_result_type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct has_std_result_type {int a[2];};$/;"	s	namespace:Eigen::internal
has_tr1_result	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct has_tr1_result {int a[3];};$/;"	s	namespace:Eigen::internal
has_write_access	./Thirdparty/sparseicp/include/Eigen/src/Core/util/ForwardDeclarations.h	/^         has_write_access = (traits<Derived>::Flags & LvalueBit) ? 1 : 0,$/;"	e	enum:Eigen::internal::accessors_level::__anon84
hash	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    Index hash ;  \/* hash value, if col is not in a degree list *\/$/;"	m	union:internal::colamd_col::__anon349
hash_next	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    Index hash_next ;   \/* next column, if col is in a hash list *\/$/;"	m	union:internal::colamd_col::__anon350
head	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline ConstSegmentReturnType head(Index n) const$/;"	f
head	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline SegmentReturnType head(Index n)$/;"	f
head	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstFixedSegmentReturnType<N>::Type head(Index n = N) const$/;"	f
head	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedSegmentReturnType<N>::Type head(Index n = N)$/;"	f
headhash	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    Index headhash ;  \/* head of a hash bucket, if col is at the head of *\/$/;"	m	union:internal::colamd_col::__anon349
heap_relax_snode	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h	/^void SparseLUImpl<Scalar,Index>::heap_relax_snode (const Index n, IndexVector& et, const Index relax_columns, IndexVector& descendants, IndexVector& relax_end)$/;"	f	class:Eigen::internal::SparseLUImpl
hessenbergTriangular	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^    void RealQZ<MatrixType>::hessenbergTriangular()$/;"	f	class:Eigen::RealQZ
hessian	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    virtual const double& hessian(int i, int j) const { assert(i<D && j<D); return _hessian(i,j);}$/;"	f	class:g2o::BaseVertex
hessian	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    virtual double& hessian(int i, int j)  { assert(i<D && j<D); return _hessian(i,j);}$/;"	f	class:g2o::BaseVertex
hessianData	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    virtual double* hessianData() { return const_cast<double*>(_hessian.data());}$/;"	f	class:g2o::BaseVertex
hessianDeterminant	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    virtual double hessianDeterminant() const {return _hessian.determinant();}$/;"	f	class:g2o::BaseVertex
hessianDimension	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    size_t hessianDimension;          \/\/\/< rows \/ cols of the Hessian$/;"	m	struct:g2o::G2OBatchStatistics
hessianIndex	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        int hessianIndex() const { return _hessianIndex;}$/;"	f	class:g2o::OptimizableGraph::Vertex
hessianLandmarkDimension	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    size_t hessianLandmarkDimension;  \/\/\/< dimension of the landmark matrix in Schur$/;"	m	struct:g2o::G2OBatchStatistics
hessianPoseDimension	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    size_t hessianPoseDimension;      \/\/\/< dimension of the pose matrix in Schur$/;"	m	struct:g2o::G2OBatchStatistics
high	./Thirdparty/sparseicp/include/nanoflann.hpp	/^			ElementType low, high;$/;"	m	struct:nanoflann::KDTreeSingleIndexAdaptor::Interval
hnormalized	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^MatrixBase<Derived>::hnormalized() const$/;"	f	class:Eigen::MatrixBase
hnormalized	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^VectorwiseOp<ExpressionType,Direction>::hnormalized() const$/;"	f	class:Eigen::VectorwiseOp
homogeneous	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^MatrixBase<Derived>::homogeneous() const$/;"	f	class:Eigen::MatrixBase
homogeneous	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^VectorwiseOp<ExpressionType,Direction>::homogeneous() const$/;"	f	class:Eigen::VectorwiseOp
homogeneous_left_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  homogeneous_left_product_impl(const Lhs& lhs, const MatrixType& rhs)$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
homogeneous_left_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^struct homogeneous_left_product_impl<Homogeneous<MatrixType,Vertical>,Lhs>$/;"	s	namespace:Eigen::internal
homogeneous_right_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  homogeneous_right_product_impl(const MatrixType& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
homogeneous_right_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^struct homogeneous_right_product_impl<Homogeneous<MatrixType,Horizontal>,Rhs>$/;"	s	namespace:Eigen::internal
householder	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    const MatrixType& householder() const { return m_householder; }$/;"	f	class:Eigen::internal::UpperBidiagonalization
householderCoefficients	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    const CoeffVectorType& householderCoefficients() const$/;"	f	class:Eigen::HessenbergDecomposition
householderCoefficients	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    inline CoeffVectorType householderCoefficients() const$/;"	f	class:Eigen::Tridiagonalization
householderQ	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^  ::householderQ() const$/;"	f	class:Eigen::ColPivHouseholderQR
householderQ	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    HouseholderSequenceType householderQ() const$/;"	f	class:Eigen::HouseholderQR
householderQr	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^MatrixBase<Derived>::householderQr() const$/;"	f	class:Eigen::MatrixBase
householderSequence	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^HouseholderSequence<VectorsType,CoeffsType> householderSequence(const VectorsType& v, const CoeffsType& h)$/;"	f	namespace:Eigen
householderU	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    const HouseholderUSequenceType householderU() const$/;"	f	class:Eigen::internal::UpperBidiagonalization
householderV	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    const HouseholderVSequenceType householderV() \/\/ const here gives nasty errors and i'm lazy$/;"	f	class:Eigen::internal::UpperBidiagonalization
householder_qr_inplace_blocked	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^void householder_qr_inplace_blocked(MatrixQR& mat, HCoeffs& hCoeffs,$/;"	f	namespace:Eigen::internal
householder_qr_inplace_unblocked	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^void householder_qr_inplace_unblocked(MatrixQR& mat, HCoeffs& hCoeffs, typename MatrixQR::Scalar* tempData = 0)$/;"	f	namespace:Eigen::internal
hseq_side_dependent_impl	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^struct hseq_side_dependent_impl$/;"	s	namespace:Eigen::internal
hseq_side_dependent_impl	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^struct hseq_side_dependent_impl<VectorsType, CoeffsType, OnTheRight>$/;"	s	namespace:Eigen::internal
hypot	./Thirdparty/g2o/g2o/stuff/misc.h	/^inline T hypot(T x, T y)$/;"	f	namespace:g2o
hypot	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(hypot, Scalar) hypot(const Scalar& x, const Scalar& y)$/;"	f	namespace:Eigen::numext
hypotNorm	./Thirdparty/sparseicp/include/Eigen/src/Core/StableNorm.h	/^MatrixBase<Derived>::hypotNorm() const$/;"	f	class:Eigen::MatrixBase
hypotNorm	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_hypotNorm,RealScalar>::Type hypotNorm() const$/;"	f	class:Eigen::VectorwiseOp
hypot_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct hypot_impl$/;"	s	namespace:Eigen::internal
hypot_retval	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct hypot_retval$/;"	s	namespace:Eigen::internal
hypot_sqr	./Thirdparty/g2o/g2o/stuff/misc.h	/^inline T hypot_sqr(T x, T y)$/;"	f	namespace:g2o
icc_11_workaround	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  template<int OtherMode,int OtherOptions> struct icc_11_workaround$/;"	s	class:Eigen::Transform
id	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^    NodeId id;$/;"	m	struct:DBoW2::TemplatedVocabulary::Node
id	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^          int id() const {return _id;}$/;"	f	class:g2o::HyperGraph::Edge
id	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^          int id() const {return _id;}$/;"	f	class:g2o::HyperGraph::Vertex
id	./Thirdparty/g2o/g2o/core/parameter.h	/^        int id() const {return _id;}$/;"	f	class:g2o::Parameter
ignore_unused_variable	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	/^    template<typename T> void ignore_unused_variable(const T&) {}$/;"	f	namespace:Eigen::internal
imag	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(imag, Scalar) imag(const Scalar& x)$/;"	f	namespace:Eigen::numext
imag	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^imag() const { return derived(); }$/;"	f
imag	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^imag() { return derived(); }$/;"	f
imag_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct imag_default_impl$/;"	s	namespace:Eigen::internal
imag_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct imag_default_impl<Scalar,true>$/;"	s	namespace:Eigen::internal
imag_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^template<typename Scalar> struct imag_impl : imag_default_impl<Scalar> {};$/;"	s	namespace:Eigen::internal
imag_ref	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(imag_ref, Scalar) imag_ref(Scalar& x)$/;"	f	namespace:Eigen::numext
imag_ref	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline typename internal::add_const_on_value_type< EIGEN_MATHFUNC_RETVAL(imag_ref, Scalar) >::type imag_ref(const Scalar& x)$/;"	f	namespace:Eigen::numext
imag_ref_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct imag_ref_default_impl$/;"	s	namespace:Eigen::internal
imag_ref_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct imag_ref_default_impl<Scalar, false>$/;"	s	namespace:Eigen::internal
imag_ref_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct imag_ref_impl : imag_ref_default_impl<Scalar, NumTraits<Scalar>::IsComplex> {};$/;"	s	namespace:Eigen::internal
imag_ref_retval	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct imag_ref_retval$/;"	s	namespace:Eigen::internal
imag_retval	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct imag_retval$/;"	s	namespace:Eigen::internal
image	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^    const ImageResultType image() const$/;"	f	class:Eigen::LU
image	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^      image(const MatrixType& originalMatrix) const$/;"	f	class:Eigen::FullPivLU
image_folder	./main.cc	/^	std::string image_folder;$/;"	m	struct:__anon469	file:
image_list_file	./main.cc	/^	std::string image_list_file;$/;"	m	struct:__anon469	file:
image_retval	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^struct image_retval<FullPivLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
image_retval_base	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^  image_retval_base(const DecompositionType& dec, const MatrixType& originalMatrix)$/;"	f	struct:Eigen::internal::image_retval_base
image_retval_base	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^template<typename _DecompositionType> struct image_retval_base$/;"	s	namespace:Eigen::internal
img	./include/Frame.h	/^    cv::Mat img;$/;"	m	class:ORB_SLAM2::Frame
img_cur_	./include/Tracking.h	/^	cv::Mat img_cur_, img_ref_;$/;"	m	class:ORB_SLAM2::Tracking
img_ref_	./include/Tracking.h	/^	cv::Mat img_cur_, img_ref_;$/;"	m	class:ORB_SLAM2::Tracking
impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  const linspaced_op_impl<Scalar,RandomAccess> impl;$/;"	m	struct:Eigen::internal::linspaced_op
inQueue	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^          bool inQueue;$/;"	m	class:g2o::EstimatePropagator::AdjacencyMapEntry
incrementToNonZero	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  void incrementToNonZero()$/;"	f	class:Eigen::SparseView::InnerIterator
index	./Thirdparty/sparseicp/ICP.h	/^        index_t* index;$/;"	m	struct:nanoflann::KDTreeAdaptor
index	./Thirdparty/sparseicp/include/Eigen/src/Core/CoreIterators.h	/^    EIGEN_STRONG_INLINE Index index() const { return m_inner; }$/;"	f	class:Eigen::DenseBase::InnerIterator
index	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    int index() const$/;"	f	class:Eigen::Diagonal
index	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    index = Start * packet_traits<typename Derived::Scalar>::size,$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon195
index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^      Index index;$/;"	m	struct:Eigen::internal::AmbiVector::ListEl
index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Index index() const { return m_cachedIndex; }$/;"	f	class:Eigen::internal::AmbiVector::Iterator
index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index& index(size_t i) { return m_indices[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    inline const Index& index(size_t i) const { return m_indices[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index index() const { return m_matrix.innerIndexPtr()[m_id-1]; }$/;"	f	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index index() const { return m_matrix.innerIndexPtr()[m_id]; }$/;"	f	class:Eigen::MappedSparseMatrix::InnerIterator
index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      inline Index index()  const { return Base::index() - (IsRowMajor ? m_block.m_startCol.value() : m_block.m_startRow.value()); }$/;"	f	class:Eigen::BlockImpl::InnerIterator
index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      inline Index index()  const { return Base::index() - (IsRowMajor ? m_block.m_startCol.value() : m_block.m_startRow.value()); }$/;"	f	class:Eigen::BlockImpl::ReverseInnerIterator
index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index index() const { return m_id; }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index index() const { return m_lhsIter.index(); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index index() const { return m_rhsIter.index(); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index index() const { return m_indices[m_id-1]; }$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index index() const { return m_indices[m_id]; }$/;"	f	class:Eigen::SparseMatrix::InnerIterator
index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index index() const$/;"	f	class:Eigen::SparseTriangularView::InnerIterator
index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Index index() const { return m_data.index(m_id); }$/;"	f	class:Eigen::SparseVector::InnerIterator
index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Index index() const { return m_data.index(m_id-1); }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
index	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Index index() const { return m_matrix.rowIndex()[m_idrow]; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
index	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		index_t* index; \/\/! The kd-tree index for the user to call its methods as usual with any other FLANN index.$/;"	m	struct:nanoflann::KDTreeEigenMatrixAdaptor
indexMapping	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    const VertexContainer& indexMapping() const {return _ivMap;}$/;"	f	class:g2o::SparseOptimizer
index_params	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		const KDTreeSingleIndexAdaptorParams index_params;$/;"	m	class:nanoflann::KDTreeSingleIndexAdaptor
index_t	./Thirdparty/sparseicp/ICP.h	/^        typedef KDTreeSingleIndexAdaptor< metric_t,self_t,DIM,IndexType>  index_t;$/;"	t	struct:nanoflann::KDTreeAdaptor
index_t	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		typedef KDTreeSingleIndexAdaptor< metric_t,self_t,DIM,IndexType>  index_t;$/;"	t	struct:nanoflann::KDTreeEigenMatrixAdaptor
indices	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType& indices() { return derived().indices(); }$/;"	f	class:Eigen::PermutationBase
indices	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::Map
indices	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::PermutationMatrix
indices	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    const IndicesType& indices() const { return derived().indices(); }$/;"	f	class:Eigen::PermutationBase
indices	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::Map
indices	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::PermutationMatrix
indices	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    indices() const { return m_indices; }$/;"	f	class:Eigen::PermutationWrapper
indices	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return derived().indices(); }$/;"	f	class:Eigen::TranspositionsBase
indices	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::Map
indices	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::Transpositions
indices	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::TranspositionsWrapper
indices	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return derived().indices(); }$/;"	f	class:Eigen::TranspositionsBase
indices	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::Map
indices	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::Transpositions
indices	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::TranspositionsWrapper
indices	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		IndexType * indices;$/;"	m	class:nanoflann::KNNResultSet
info	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::LDLT
info	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::LLT
info	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::CholmodBase
info	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::ComplexEigenSolver
info	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::ComplexSchur
info	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::EigenSolver
info	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::GeneralizedEigenSolver
info	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      ComputationInfo info() const$/;"	f	class:Eigen::RealQZ
info	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::RealSchur
info	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
info	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::IncompleteLUT
info	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  ComputationInfo info() const$/;"	f	class:Eigen::IterativeSolverBase
info	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::PastixBase
info	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::PardisoImpl
info	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::ColPivHouseholderQR
info	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SPQR
info	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SimplicialCholeskyBase
info	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SparseLU
info	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SparseQR
info	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SuperLUBase
info	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::UmfPackLU
info_arch	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_language_dialect_default	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_language_dialect_default	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_language_dialect_default	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_language_dialect_default	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_language_dialect_default	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_language_dialect_default	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_language_dialect_default	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_language_dialect_default	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_language_dialect_default	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_platform	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version_internal	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
info_version_internal	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v
information	./Thirdparty/g2o/g2o/core/base_edge.h	/^      InformationType& information() { return _information;}$/;"	f	class:g2o::BaseEdge
information	./Thirdparty/g2o/g2o/core/base_edge.h	/^      const InformationType& information() const { return _information;}$/;"	f	class:g2o::BaseEdge
informationData	./Thirdparty/g2o/g2o/core/base_edge.h	/^      virtual const double* informationData() const { return _information.data();}$/;"	f	class:g2o::BaseEdge
informationData	./Thirdparty/g2o/g2o/core/base_edge.h	/^      virtual double* informationData() { return _information.data();}$/;"	f	class:g2o::BaseEdge
iniThFAST	./include/ORBextractor.h	/^    int iniThFAST;$/;"	m	class:ORB_SLAM2::ORBextractor
init	./Thirdparty/g2o/g2o/core/block_solver.hpp	/^bool BlockSolver<Traits>::init(SparseOptimizer* optimizer, bool online)$/;"	f	class:g2o::BlockSolver
init	./Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^  bool OptimizationAlgorithmWithHessian::init(bool online)$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
init	./Thirdparty/g2o/g2o/solvers/linear_solver_dense.h	/^      virtual bool init()$/;"	f	class:g2o::LinearSolverDense
init	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    virtual bool init()$/;"	f	class:g2o::LinearSolverEigen
init	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodDecomposition
init	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodSimplicialLDLT
init	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodSimplicialLLT
init	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodSupernodalLLT
init	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    void init()$/;"	f	class:Eigen::internal::BlockImpl_dense
init	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^  inline void init(const Scalar& value, Index i, Index j)$/;"	f	struct:Eigen::internal::coeff_visitor
init	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void init()$/;"	f	class:Eigen::IterativeSolverBase
init	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void init()$/;"	f	class:Eigen::PastixLDLT
init	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void init()$/;"	f	class:Eigen::PastixLLT
init	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void init()$/;"	f	class:Eigen::PastixLU
init	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::init()$/;"	f	class:Eigen::PastixBase
init	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_Index>::init(double estimatedDensity)$/;"	f	class:Eigen::internal::AmbiVector
init	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_Index>::init(int mode)$/;"	f	class:Eigen::internal::AmbiVector
init	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    void init()$/;"	f	class:Eigen::SparseSparseProduct
init	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void init()$/;"	f	class:Eigen::SuperILU
init	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void init()$/;"	f	class:Eigen::SuperLU
init	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void init()$/;"	f	class:Eigen::SuperLUBase
init	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void init()$/;"	f	class:Eigen::UmfPackLU
init	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline void init() { clear(); }$/;"	f	class:nanoflann::RadiusResultSet
init	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline void init(IndexType* indices_, DistanceType* dists_)$/;"	f	class:nanoflann::KNNResultSet
initAcc	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void initAcc(AccPacket& p)$/;"	f	class:Eigen::internal::gebp_traits
initAcc	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void initAcc(DoublePacket& p)$/;"	f	class:Eigen::internal::gebp_traits
initAcc	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void initAcc(Scalar& p) { p = Scalar(0); }$/;"	f	class:Eigen::internal::gebp_traits
initAssignment	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    void initAssignment(const Other& other)$/;"	f	class:Eigen::SparseMatrix
initFactorization	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void initFactorization(const MatrixType& a)$/;"	f	class:Eigen::SuperLUBase
initFrancisQRStep	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::initFrancisQRStep(Index il, Index iu, const Vector3s& shiftInfo, Index& im, Vector3s& firstHouseholderVector)$/;"	f	class:Eigen::RealSchur
initMatrixStructure	./Thirdparty/g2o/g2o/core/linear_solver.h	/^    void initMatrixStructure(const SparseBlockMatrix<MatrixType>& A)$/;"	f	class:g2o::LinearSolverCCS
initMultiThreading	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::initMultiThreading()$/;"	f	class:g2o::OptimizableGraph
initParallel	./Thirdparty/sparseicp/include/Eigen/src/Core/products/Parallelizer.h	/^inline void initParallel()$/;"	f	namespace:Eigen
initParallelSession	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  void initParallelSession() const$/;"	f	struct:Eigen::internal::gemm_functor
init_rows_cols	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static Index init_rows_cols  \/* returns true if OK, or false otherwise *\/$/;"	f	namespace:internal
init_scoring	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static void init_scoring$/;"	f	namespace:internal
init_vind	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		void init_vind()$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
initialEstimate	./Thirdparty/g2o/g2o/core/base_edge.h	/^      virtual void initialEstimate(const OptimizableGraph::VertexSet&, OptimizableGraph::Vertex*)$/;"	f	class:g2o::BaseEdge
initialEstimate	./Thirdparty/g2o/g2o/core/base_unary_edge.hpp	/^void BaseUnaryEdge<D, E, VertexXiType>::initialEstimate(const OptimizableGraph::VertexSet&, OptimizableGraph::Vertex*)$/;"	f	class:BaseUnaryEdge
initialEstimate	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^    virtual void initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* \/*to*\/)$/;"	f	class:g2o::EdgeSim3
initialEstimatePossible	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* to) { (void) from; (void) to; return -1.;}$/;"	f	class:g2o::OptimizableGraph::Edge
initialEstimatePossible	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^    virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& , OptimizableGraph::Vertex* ) { return 1.;}$/;"	f	class:g2o::EdgeSim3
initializeOptimization	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::initializeOptimization(HyperGraph::EdgeSet& eset){$/;"	f	class:g2o::SparseOptimizer
initializeOptimization	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::initializeOptimization(HyperGraph::VertexSet& vset, int level){$/;"	f	class:g2o::SparseOptimizer
initializeOptimization	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::initializeOptimization(int level){$/;"	f	class:g2o::SparseOptimizer
initiateClusters	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor, F>::initiateClusters$/;"	f	class:DBoW2::TemplatedVocabulary
initiateClustersKMpp	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::initiateClustersKMpp($/;"	f	class:DBoW2::TemplatedVocabulary
initperfvalues	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    void initperfvalues()$/;"	f	class:Eigen::SparseLU
inner	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    inner = Index % Derived1::InnerSizeAtCompileTime$/;"	e	enum:Eigen::internal::assign_DefaultTraversal_CompleteUnrolling::__anon253
inner	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    inner = Index % Derived1::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::assign_innervec_CompleteUnrolling::__anon254
inner	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    inner = Start % Derived::InnerSizeAtCompileTime$/;"	e	enum:Eigen::internal::redux_novec_unroller::__anon193
inner	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    inner = index % int(Derived::InnerSizeAtCompileTime),$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon195
inner	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^    inline Index inner() const { return m_inner.value(); }$/;"	f	class:Eigen::Stride
innerInd	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int *innerInd;$/;"	m	struct:Eigen::SluMatrix::__anon460
innerIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index* innerIndexPtr() { return m_innerIndices; }$/;"	f	class:Eigen::MappedSparseMatrix
innerIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline const Index* innerIndexPtr() const { return m_innerIndices; }$/;"	f	class:Eigen::MappedSparseMatrix
innerIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline Index* innerIndexPtr()$/;"	f	class:Eigen::BlockImpl
innerIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Index* innerIndexPtr() const$/;"	f	class:Eigen::BlockImpl
innerIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index* innerIndexPtr() { return &m_data.index(0); }$/;"	f	class:Eigen::SparseMatrix
innerIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Index* innerIndexPtr() const { return &m_data.index(0); }$/;"	f	class:Eigen::SparseMatrix
innerIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index* innerIndexPtr() { return &m_data.index(0); }$/;"	f	class:Eigen::SparseVector
innerIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE const Index* innerIndexPtr() const { return &m_data.index(0); }$/;"	f	class:Eigen::SparseVector
innerNonZeroPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index* innerNonZeroPtr() { return m_innerNonZeros; }$/;"	f	class:Eigen::SparseMatrix
innerNonZeroPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Index* innerNonZeroPtr() const { return m_innerNonZeros; }$/;"	f	class:Eigen::SparseMatrix
innerNonZeros	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    Eigen::Map<Matrix<Index,Dynamic,1> > innerNonZeros() { return Eigen::Map<Matrix<Index,Dynamic,1> >(m_innerNonZeros, m_innerNonZeros?m_outerSize:0); }$/;"	f	class:Eigen::SparseMatrix
innerNonZeros	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    const  Eigen::Map<const Matrix<Index,Dynamic,1> > innerNonZeros() const { return Eigen::Map<const Matrix<Index,Dynamic,1> >(m_innerNonZeros, m_innerNonZeros?m_outerSize:0); }$/;"	f	class:Eigen::SparseMatrix
innerSize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    Index innerSize() const$/;"	f	class:Eigen::DenseBase
innerSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index innerSize() const { return m_innerSize; }$/;"	f	class:Eigen::MappedSparseMatrix
innerSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index innerSize() const { return m_innerSize; }$/;"	f	class:Eigen::SparseMatrix
innerSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Index innerSize() const { return (int(Flags)&RowMajorBit) ? this->cols() : this->rows(); }$/;"	f	class:Eigen::SparseMatrixBase
innerSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index innerSize() const { return m_size; }$/;"	f	class:Eigen::SparseVector
innerSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  inline Index innerSize() const { return m_matrix.innerSize(); }$/;"	f	class:Eigen::SparseView
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    inline Index innerStride() const { return 1; }$/;"	f	class:Eigen::Array
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::ArrayWrapper
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::MatrixWrapper
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::internal::BlockImpl_dense
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::CwiseUnaryViewImpl
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::DenseCoeffsBase
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::Diagonal
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    inline Index innerStride() const { return m_matrix.innerStride(); }$/;"	f	class:Eigen::Flagged
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^    inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::ForceAlignedAccess
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::Map
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    inline Index innerStride() const { return 1; }$/;"	f	class:Eigen::Matrix
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^    inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::NestByValue
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^  inline Index innerStride() const$/;"	f	class:Eigen::RefBase
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::Reverse
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    inline Index innerStride() const { return m_matrix.innerStride(); }$/;"	f	class:Eigen::SelfAdjointView
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline Index innerStride() const { return m_matrix.innerStride(); }$/;"	f	class:Eigen::SelfCwiseBinaryOp
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::SwapWrapper
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    inline Index innerStride() const { return derived().nestedExpression().innerStride(); }$/;"	f	class:Eigen::TransposeImpl
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline Index innerStride() const { return derived().innerStride(); }$/;"	f	class:Eigen::TriangularBase
innerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline Index innerStride() const { return m_matrix.innerStride(); }$/;"	f	class:Eigen::TriangularView
innerVector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^const typename SparseMatrixBase<Derived>::ConstInnerVectorReturnType SparseMatrixBase<Derived>::innerVector(Index outer) const$/;"	f	class:Eigen::SparseMatrixBase
innerVector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^typename SparseMatrixBase<Derived>::InnerVectorReturnType SparseMatrixBase<Derived>::innerVector(Index outer)$/;"	f	class:Eigen::SparseMatrixBase
innerVectors	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^Block<Derived,Dynamic,Dynamic,true> SparseMatrixBase<Derived>::innerVectors(Index outerStart, Index outerSize)$/;"	f	class:Eigen::SparseMatrixBase
innerVectors	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^const Block<const Derived,Dynamic,Dynamic,true> SparseMatrixBase<Derived>::innerVectors(Index outerStart, Index outerSize) const$/;"	f	class:Eigen::SparseMatrixBase
inner_stride_at_compile_time	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^struct inner_stride_at_compile_time$/;"	s	namespace:Eigen::internal
inner_stride_at_compile_time	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^struct inner_stride_at_compile_time<Derived, false>$/;"	s	namespace:Eigen::internal
inplace_decomposition	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^  static bool inplace_decomposition(MatrixType& m)$/;"	f	struct:Eigen::internal::LLT_Traits
inplace_transpose_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^struct inplace_transpose_selector<MatrixType,false> { \/\/ non square matrix$/;"	s	namespace:Eigen::internal
inplace_transpose_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^struct inplace_transpose_selector<MatrixType,true> { \/\/ square matrix$/;"	s	namespace:Eigen::internal
input_source_	./4pcs/Registration.h	/^            PointCloud<PointXYZ>::Ptr input_source_;$/;"	m	class:pcl::FPCS::FPCSRegistration
input_target_	./4pcs/Registration.h	/^            PointCloud<PointXYZ>::Ptr input_target_;$/;"	m	class:pcl::FPCS::FPCSRegistration
insert	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    Scalar& insert(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insert	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    Scalar& insert(Index i)$/;"	f	class:Eigen::SparseVector
insert	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insert(Index row, Index col)$/;"	f	class:Eigen::SparseVector
insert	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdDeque.h	/^  iterator insert(const_iterator position, const value_type& x)$/;"	f	class:std::deque
insert	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdDeque.h	/^  void insert(const_iterator position, size_type new_size, const value_type& x)$/;"	f	class:std::deque
insert	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdList.h	/^    iterator insert(const_iterator position, const value_type& x)$/;"	f	class:std::list
insert	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdList.h	/^    void insert(const_iterator position, size_type new_size, const value_type& x)$/;"	f	class:std::list
insert	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdVector.h	/^  iterator insert(const_iterator position, const value_type& x)$/;"	f	class:std::vector
insert	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdVector.h	/^  void insert(const_iterator position, size_type new_size, const value_type& x)$/;"	f	class:std::vector
insertBack	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& insertBack(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insertBack	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insertBack(Index i)$/;"	f	class:Eigen::SparseVector
insertBackByOuterInner	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& insertBackByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::SparseMatrix
insertBackByOuterInner	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insertBackByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::SparseVector
insertBackByOuterInnerUnordered	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& insertBackByOuterInnerUnordered(Index outer, Index inner)$/;"	f	class:Eigen::SparseMatrix
insertBackUncompressed	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    EIGEN_STRONG_INLINE Scalar& insertBackUncompressed(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insertByOuterInner	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    Scalar& insertByOuterInner(Index j, Index i)$/;"	f	class:Eigen::SparseMatrix
insertCompressed	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^EIGEN_DONT_INLINE typename SparseMatrix<_Scalar,_Options,_Index>::Scalar& SparseMatrix<_Scalar,_Options,_Index>::insertCompressed(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insertUncompressed	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^EIGEN_DONT_INLINE typename SparseMatrix<_Scalar,_Options,_Index>::Scalar& SparseMatrix<_Scalar,_Options,_Index>::insertUncompressed(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
installDependency	./Thirdparty/g2o/g2o/core/cache.cpp	/^  Cache* Cache::installDependency(const std::string& type_, const std::vector<int>& parameterIndices){$/;"	f	class:g2o::Cache
installParameter	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^          bool installParameter(ParameterType*& p, size_t argNo, int paramId=-1){$/;"	f	class:g2o::OptimizableGraph::Edge
instance	./Thirdparty/g2o/g2o/core/factory.cpp	/^Factory* Factory::instance()$/;"	f	class:g2o::Factory
instance	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphActionLibrary* HyperGraphActionLibrary::instance()$/;"	f	class:g2o::HyperGraphActionLibrary
instance	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  OptimizationAlgorithmFactory* OptimizationAlgorithmFactory::instance()$/;"	f	class:g2o::OptimizationAlgorithmFactory
instance	./Thirdparty/g2o/g2o/core/robust_kernel_factory.cpp	/^RobustKernelFactory* RobustKernelFactory::instance()$/;"	f	class:g2o::RobustKernelFactory
internal	./Thirdparty/g2o/g2o/core/base_multi_edge.hpp	/^namespace internal {$/;"	n
internal	./Thirdparty/g2o/g2o/core/matrix_operations.h	/^  namespace internal {$/;"	n	namespace:g2o
internal	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^namespace internal{$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Fuzzy.h	/^namespace internal$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/GlobalFunctions.h	/^  namespace internal$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Random.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/StableNorm.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorBlock.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/Parallelizer.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointRank2Update.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/ForwardDeclarations.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/MKL_support.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	/^    namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Macros.h	/^  namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^    namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/XprHelper.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Umeyama.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Geometry/arch/Geometry_SSE.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Householder/BlockHouseholder.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Householder/Householder.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/LU/Determinant.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/LU/arch/Inverse_SSE.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Amd.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^namespace internal {$/;"	n
internal	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Ordering.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^namespace internal$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^namespace internal$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseColEtree.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLUImpl.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Memory.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Utils.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_bmod.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_panel_bmod.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_pivotL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_pruneL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_relax_snode.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^  namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^namespace internal {$/;"	n	namespace:Eigen
internalId	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        long long internalId() const { return _internalId;}$/;"	f	class:g2o::OptimizableGraph::Edge
intersection	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  VectorType intersection(const Hyperplane& other)$/;"	f	class:Eigen::Hyperplane
intersection	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^inline _Scalar ParametrizedLine<_Scalar, _AmbientDim>::intersection(const Hyperplane<_Scalar, _AmbientDim>& hyperplane)$/;"	f	class:Eigen::ParametrizedLine
intersection	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox intersection(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
intersection	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  VectorType intersection(const Hyperplane& other) const$/;"	f	class:Eigen::Hyperplane
intersection	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^inline _Scalar ParametrizedLine<_Scalar, _AmbientDim,_Options>::intersection(const Hyperplane<_Scalar, _AmbientDim, OtherOptions>& hyperplane) const$/;"	f	class:Eigen::ParametrizedLine
intersectionParameter	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^inline _Scalar ParametrizedLine<_Scalar, _AmbientDim,_Options>::intersectionParameter(const Hyperplane<_Scalar, _AmbientDim, OtherOptions>& hyperplane) const$/;"	f	class:Eigen::ParametrizedLine
intersectionPoint	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^ParametrizedLine<_Scalar, _AmbientDim,_Options>::intersectionPoint(const Hyperplane<_Scalar, _AmbientDim, OtherOptions>& hyperplane) const$/;"	f	class:Eigen::ParametrizedLine
inverse	./Thirdparty/g2o/g2o/types/se3quat.h	/^      inline SE3Quat inverse() const{$/;"	f	class:g2o::SE3Quat
inverse	./Thirdparty/g2o/g2o/types/sim3.h	/^    Sim3 inverse() const$/;"	f	struct:g2o::Sim3
inverse	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inverse() const$/;"	f	class:Eigen::DiagonalBase
inverse	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline Transpose<PermutationBase> inverse() const$/;"	f	class:Eigen::PermutationBase
inverse	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline Transpose<TranspositionsBase> inverse() const$/;"	f	class:Eigen::TranspositionsBase
inverse	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::inverse() const$/;"	f	class:Eigen::Cwise
inverse	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  AngleAxis inverse() const$/;"	f	class:Eigen::AngleAxis
inverse	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Quaternion<Scalar> Quaternion<Scalar>::inverse() const$/;"	f	class:Eigen::Quaternion
inverse	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline Rotation2D inverse() const { return -m_angle; }$/;"	f	class:Eigen::Rotation2D
inverse	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    inline Derived inverse() const { return derived().inverse(); }$/;"	f	class:Eigen::RotationBase
inverse	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline Scaling inverse() const$/;"	f	class:Eigen::Scaling
inverse	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::inverse(TransformTraits traits) const$/;"	f	class:Eigen::Transform
inverse	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  Translation inverse() const { return Translation(-m_coeffs); }$/;"	f	class:Eigen::Translation
inverse	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  AngleAxis inverse() const$/;"	f	class:Eigen::AngleAxis
inverse	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^inline Quaternion<typename internal::traits<Derived>::Scalar> QuaternionBase<Derived>::inverse() const$/;"	f	class:Eigen::QuaternionBase
inverse	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  inline Rotation2D inverse() const { return -m_angle; }$/;"	f	class:Eigen::Rotation2D
inverse	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^    inline Derived inverse() const { return derived().inverse(); }$/;"	f	class:Eigen::RotationBase
inverse	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^  inline UniformScaling inverse() const$/;"	f	class:Eigen::UniformScaling
inverse	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::inverse(TransformTraits hint) const$/;"	f	class:Eigen::Transform
inverse	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  Translation inverse() const { return Translation(-m_coeffs); }$/;"	f	class:Eigen::Translation
inverse	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    ConjugateReturnType inverse() const { return adjoint(); }$/;"	f	class:Eigen::HouseholderSequence
inverse	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    inline const internal::solve_retval<FullPivLU,typename MatrixType::IdentityReturnType> inverse() const$/;"	f	class:Eigen::FullPivLU
inverse	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^inline const internal::inverse_impl<Derived> MatrixBase<Derived>::inverse() const$/;"	f	class:Eigen::MatrixBase
inverse	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    inline const internal::solve_retval<PartialPivLU,typename MatrixType::IdentityReturnType> inverse() const$/;"	f	class:Eigen::PartialPivLU
inverse	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    inverse() const$/;"	f	class:Eigen::ColPivHouseholderQR
inverse	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    inverse() const$/;"	f	class:Eigen::FullPivHouseholderQR
inverse	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^inverse() const$/;"	f
inverse_impl	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^  inverse_impl(const MatrixType& matrix)$/;"	f	struct:Eigen::internal::inverse_impl
inverse_impl	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^struct inverse_impl : public ReturnByValue<inverse_impl<MatrixType> >$/;"	s	namespace:Eigen::internal
inverse_theta	./Thirdparty/g2o/g2o/stuff/misc.h	/^inline double inverse_theta(double th)$/;"	f	namespace:g2o
invfx	./include/Frame.h	/^    static float invfx;$/;"	m	class:ORB_SLAM2::Frame
invfx	./include/KeyFrame.h	/^    const float fx, fy, cx, cy, invfx, invfy, mbf, mb, mThDepth;$/;"	m	class:ORB_SLAM2::KeyFrame
invfx	./src/Frame.cc	/^float Frame::cx, Frame::cy, Frame::fx, Frame::fy, Frame::invfx, Frame::invfy;$/;"	m	class:ORB_SLAM2::Frame	file:
invfy	./include/Frame.h	/^    static float invfy;$/;"	m	class:ORB_SLAM2::Frame
invfy	./include/KeyFrame.h	/^    const float fx, fy, cx, cy, invfx, invfy, mbf, mb, mThDepth;$/;"	m	class:ORB_SLAM2::KeyFrame
invfy	./src/Frame.cc	/^float Frame::cx, Frame::cy, Frame::fx, Frame::fy, Frame::invfx, Frame::invfy;$/;"	m	class:ORB_SLAM2::Frame	file:
iparm	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    Array<Index,IPARM_SIZE,1>& iparm()$/;"	f	class:Eigen::PastixBase
iparm	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int& iparm(int idxparam)$/;"	f	class:Eigen::PastixBase
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    bool isApprox(const DiagonalBase<OtherDerived>& other, typename NumTraits<Scalar>::Real precision = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::DiagonalBase
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    bool isApprox(const MatrixBase<OtherDerived>& other, typename NumTraits<Scalar>::Real precision = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::DiagonalBase
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Core/Fuzzy.h	/^bool DenseBase<Derived>::isApprox($/;"	f	class:Eigen::DenseBase
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApprox(bool x, bool y, bool)$/;"	f	struct:Eigen::internal::scalar_fuzzy_impl
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApprox(const Scalar& x, const Scalar& y, const RealScalar& prec)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApprox(const Scalar& x, const Scalar& y, const RealScalar&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline bool isApprox(const Scalar& x, const Scalar& y,$/;"	f	namespace:Eigen::internal
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    bool isApprox(const MatrixBase<OtherDerived>& other, typename NumTraits<Scalar>::Real precision = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::TriangularView
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    bool isApprox(const TriangularView<OtherMatrixType, Mode>& other, typename NumTraits<Scalar>::Real precision = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::TriangularView
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  bool isApprox(const AlignedBox& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::AlignedBox
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  bool isApprox(const AngleAxis& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::AngleAxis
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  bool isApprox(const Hyperplane& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::Hyperplane
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  bool isApprox(const ParametrizedLine& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::ParametrizedLine
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  bool isApprox(const Quaternion& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::Quaternion
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  bool isApprox(const Rotation2D& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::Rotation2D
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  bool isApprox(const Scaling& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::Scaling
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  bool isApprox(const Transform& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::Transform
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  bool isApprox(const Translation& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::Translation
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  bool isApprox(const AlignedBox& other, const RealScalar& prec = ScalarTraits::dummy_precision()) const$/;"	f	class:Eigen::AlignedBox
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  bool isApprox(const AngleAxis& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::AngleAxis
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  bool isApprox(const Hyperplane<Scalar,AmbientDimAtCompileTime,OtherOptions>& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Hyperplane
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  bool isApprox(const ParametrizedLine& other, typename NumTraits<Scalar>::Real prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::ParametrizedLine
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  bool isApprox(const QuaternionBase<OtherDerived>& other, const RealScalar& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::QuaternionBase
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  bool isApprox(const Rotation2D& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Rotation2D
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^  bool isApprox(const UniformScaling& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::UniformScaling
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  bool isApprox(const Transform& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Transform
isApprox	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  bool isApprox(const Translation& other, typename NumTraits<Scalar>::Real prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Translation
isApprox	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    bool isApprox(const MatrixBase<OtherDerived>& other,$/;"	f	class:Eigen::SparseMatrixBase
isApprox	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    bool isApprox(const SparseMatrixBase<OtherDerived>& other,$/;"	f	class:Eigen::SparseMatrixBase
isApproxOrLessThan	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApproxOrLessThan(const Scalar& x, const Scalar& y, const RealScalar& prec)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApproxOrLessThan	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApproxOrLessThan(const Scalar& x, const Scalar& y, const RealScalar&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApproxOrLessThan	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApproxOrLessThan(const bool& x, const bool& y, const bool&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_impl
isApproxOrLessThan	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline bool isApproxOrLessThan(const Scalar& x, const Scalar& y,$/;"	f	namespace:Eigen::internal
isApproxToConstant	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^bool DenseBase<Derived>::isApproxToConstant$/;"	f	class:Eigen::DenseBase
isApprox_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Fuzzy.h	/^struct isApprox_selector$/;"	s	namespace:Eigen::internal
isApprox_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Fuzzy.h	/^struct isApprox_selector<Derived, OtherDerived, true>$/;"	s	namespace:Eigen::internal
isBad	./src/KeyFrame.cc	/^bool KeyFrame::isBad()$/;"	f	class:ORB_SLAM2::KeyFrame
isBad	./src/MapPoint.cc	/^bool MapPoint::isBad()$/;"	f	class:ORB_SLAM2::MapPoint
isCompressed	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    bool isCompressed() const { return true; }$/;"	f	class:Eigen::MappedSparseMatrix
isCompressed	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline bool isCompressed() const { return m_innerNonZeros==0; }$/;"	f	class:Eigen::SparseMatrix
isConstant	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^bool DenseBase<Derived>::isConstant$/;"	f	class:Eigen::DenseBase
isDepthPositive	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  bool isDepthPositive() {$/;"	f	class:g2o::EdgeSE3ProjectXYZ
isDepthPositive	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  bool isDepthPositive() {$/;"	f	class:g2o::EdgeSE3ProjectXYZOnlyPose
isDepthPositive	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  bool isDepthPositive() {$/;"	f	class:g2o::EdgeStereoSE3ProjectXYZ
isDepthPositive	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  bool isDepthPositive() {$/;"	f	class:g2o::EdgeStereoSE3ProjectXYZOnlyPose
isDiagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^bool MatrixBase<Derived>::isDiagonal(const RealScalar& prec) const$/;"	f	class:Eigen::MatrixBase
isEmpty	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline bool isEmpty() const { return (m_min.array() > m_max.array()).any(); }$/;"	f	class:Eigen::AlignedBox
isFinished	./src/LocalMapping.cc	/^bool LocalMapping::isFinished()$/;"	f	class:ORB_SLAM2::LocalMapping
isFinished	./src/LoopClosing.cc	/^bool LoopClosing::isFinished()$/;"	f	class:ORB_SLAM2::LoopClosing
isFinished	./src/Viewer.cc	/^bool Viewer::isFinished()$/;"	f	class:ORB_SLAM2::Viewer
isFinishedGBA	./include/LoopClosing.h	/^    bool isFinishedGBA(){$/;"	f	class:ORB_SLAM2::LoopClosing
isFullRank	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/QR.h	/^    bool isFullRank() const {$/;"	f	class:Eigen::QR
isIdentity	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^bool MatrixBase<Derived>::isIdentity$/;"	f	class:Eigen::MatrixBase
isInFrustum	./src/Frame.cc	/^bool Frame::isInFrustum(MapPoint *pMP, float viewingCosLimit)$/;"	f	class:ORB_SLAM2::Frame
isInjective	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    inline bool isInjective() const$/;"	f	class:Eigen::FullPivLU
isInjective	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline bool isInjective() const$/;"	f	class:Eigen::ColPivHouseholderQR
isInjective	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline bool isInjective() const$/;"	f	class:Eigen::FullPivHouseholderQR
isInvertible	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    inline bool isInvertible() const$/;"	f	class:Eigen::FullPivLU
isInvertible	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline bool isInvertible() const$/;"	f	class:Eigen::ColPivHouseholderQR
isInvertible	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline bool isInvertible() const$/;"	f	class:Eigen::FullPivHouseholderQR
isLast	./include/MapPoint.h	/^    bool isLast;$/;"	m	class:ORB_SLAM2::MapPoint
isLeaf	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^    inline bool isLeaf() const { return children.empty(); }$/;"	f	struct:DBoW2::TemplatedVocabulary::Node
isLowerTriangular	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^bool MatrixBase<Derived>::isLowerTriangular(const RealScalar& prec) const$/;"	f	class:Eigen::MatrixBase
isMainStorage	./Thirdparty/g2o/g2o/core/parameter_container.h	/^      bool isMainStorage() const {return _isMainStorage;}$/;"	f	class:g2o::ParameterContainer
isMuchSmallerThan	./Thirdparty/sparseicp/include/Eigen/src/Core/Fuzzy.h	/^bool DenseBase<Derived>::isMuchSmallerThan($/;"	f	class:Eigen::DenseBase
isMuchSmallerThan	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline bool isMuchSmallerThan(const Scalar& x, const OtherScalar& y, const RealScalar& prec)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isMuchSmallerThan	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline bool isMuchSmallerThan(const Scalar& x, const Scalar&, const RealScalar&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isMuchSmallerThan	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline bool isMuchSmallerThan(const bool& x, const bool&, const bool&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_impl
isMuchSmallerThan	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline bool isMuchSmallerThan(const Scalar& x, const OtherScalar& y,$/;"	f	namespace:Eigen::internal
isMuchSmallerThan_object_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_object_selector$/;"	s	namespace:Eigen::internal
isMuchSmallerThan_object_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_object_selector<Derived, OtherDerived, true>$/;"	s	namespace:Eigen::internal
isMuchSmallerThan_scalar_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_scalar_selector$/;"	s	namespace:Eigen::internal
isMuchSmallerThan_scalar_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_scalar_selector<Derived, true>$/;"	s	namespace:Eigen::internal
isNegative	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    inline bool isNegative(void) const$/;"	f	class:Eigen::LDLT
isNull	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline bool isNull() const { return (m_min.cwise() > m_max).any(); }$/;"	f	class:Eigen::AlignedBox
isNull	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline bool isNull() const { return isEmpty(); }$/;"	f	class:Eigen::AlignedBox
isOnes	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^bool DenseBase<Derived>::isOnes$/;"	f	class:Eigen::DenseBase
isOrthogonal	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^bool MatrixBase<Derived>::isOrthogonal$/;"	f	class:Eigen::MatrixBase
isPlane	./4pcs/Registration.cc	/^        bool FPCSRegistration::isPlane(Set4 basis, const PointXYZ &last_point) {$/;"	f	class:pcl::FPCS::FPCSRegistration
isPositive	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    inline bool isPositive() const$/;"	f	class:Eigen::LDLT
isPositiveDefinite	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    inline bool isPositiveDefinite() const$/;"	f	class:Eigen::LDLT
isPositiveDefinite	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    bool isPositiveDefinite() const { return true; }$/;"	f	class:Eigen::LLT
isRValue	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    bool isRValue() const { return m_isRValue; }$/;"	f	class:Eigen::SparseMatrixBase
isRunningGBA	./include/LoopClosing.h	/^    bool isRunningGBA(){$/;"	f	class:ORB_SLAM2::LoopClosing
isSolverSuitable	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::isSolverSuitable(const OptimizationAlgorithmProperty& solverProperty, const std::set<int>& vertDims_) const$/;"	f	class:g2o::OptimizableGraph
isStopped	./src/LocalMapping.cc	/^bool LocalMapping::isStopped()$/;"	f	class:ORB_SLAM2::LocalMapping
isStopped	./src/Viewer.cc	/^bool Viewer::isStopped()$/;"	f	class:ORB_SLAM2::Viewer
isSurjective	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    inline bool isSurjective() const$/;"	f	class:Eigen::FullPivLU
isSurjective	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline bool isSurjective() const$/;"	f	class:Eigen::ColPivHouseholderQR
isSurjective	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline bool isSurjective() const$/;"	f	class:Eigen::FullPivHouseholderQR
isSymmetric	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    void isSymmetric(bool sym)$/;"	f	class:Eigen::SparseLU
isUnitary	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^bool MatrixBase<Derived>::isUnitary(const RealScalar& prec) const$/;"	f	class:Eigen::MatrixBase
isUpperTriangular	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^bool MatrixBase<Derived>::isUpperTriangular(const RealScalar& prec) const$/;"	f	class:Eigen::MatrixBase
isVector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline bool isVector() const { return rows()==1 || cols()==1; }$/;"	f	class:Eigen::SparseMatrixBase
isZero	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^bool DenseBase<Derived>::isZero(const RealScalar& prec) const$/;"	f	class:Eigen::DenseBase
is_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128d> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128i> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<bool>          { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<char>          { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<double>        { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<float>         { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<long double>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed char>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed int>    { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed long>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed short>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned char> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned int>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned long> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned short>{ enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_arithmetic      { enum { value = false }; };$/;"	s	namespace:Eigen::internal
is_const	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const { enum { value = 0 }; };$/;"	s	namespace:Eigen::internal
is_const	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const<T const> { enum { value = 1 }; };$/;"	s	namespace:Eigen::internal
is_diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T, int S> struct is_diagonal<DiagonalMatrix<T,S> >$/;"	s	namespace:Eigen
is_diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_diagonal$/;"	s	namespace:Eigen
is_diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_diagonal<DiagonalBase<T> >$/;"	s	namespace:Eigen
is_diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_diagonal<DiagonalWrapper<T> >$/;"	s	namespace:Eigen
is_large	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  enum { is_large = MaxSize == Dynamic ||$/;"	e	enum:Eigen::internal::product_size_category::__anon144
is_malloc_allowed	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline bool is_malloc_allowed() { return is_malloc_allowed_impl(false); }$/;"	f	namespace:Eigen::internal
is_malloc_allowed_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline bool is_malloc_allowed_impl(bool update, bool new_value = false)$/;"	f	namespace:Eigen::internal
is_same	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T, typename U> struct is_same { enum { value = 0 }; };$/;"	s	namespace:Eigen::internal
is_same	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_same<T,T> { enum { value = 1 }; };$/;"	s	namespace:Eigen::internal
isfinite	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^template<typename T> bool (isfinite)(const T& x)$/;"	f	namespace:Eigen::numext
iterate	./src/PnPsolver.cc	/^cv::Mat PnPsolver::iterate(int nIterations, bool &bNoMore, vector<bool> &vbInliers, int &nInliers)$/;"	f	class:ORB_SLAM2::PnPsolver
iterate	./src/PoseSolver.cc	/^cv::Mat PoseSolver::iterate(int nIterations, bool &bNoMore, vector<bool> &vbInliers, int &nInliers)$/;"	f	class:ORB_SLAM2::PoseSolver
iterate	./src/Sim3Solver.cc	/^cv::Mat Sim3Solver::iterate(int nIterations, bool &bNoMore, vector<bool> &vbInliers, int &nInliers)$/;"	f	class:ORB_SLAM2::Sim3Solver
iteration	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    int iteration;                    \/\/\/< which iteration$/;"	m	struct:g2o::G2OBatchStatistics
iteration	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^          int iteration;$/;"	m	class:g2o::HyperGraphAction::ParametersIteration
iterations	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      Index iterations() const$/;"	f	class:Eigen::RealQZ
iterations	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  int iterations() const$/;"	f	class:Eigen::IterativeSolverBase
iterationsLinearSolver	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    int    iterationsLinearSolver;    \/\/\/< iterations of PCG, (0 if not used, i.e., Cholesky)$/;"	m	struct:g2o::G2OBatchStatistics
iterations_	./4pcs/Registration.h	/^            int iterations_;$/;"	m	class:pcl::FPCS::FPCSRegistration
jacobiSvd	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^MatrixBase<Derived>::jacobiSvd(unsigned int computationOptions) const$/;"	f	class:Eigen::MatrixBase
jacobianOplusXi	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      const JacobianXiOplusType& jacobianOplusXi() const { return _jacobianOplusXi;}$/;"	f	class:g2o::BaseBinaryEdge
jacobianOplusXi	./Thirdparty/g2o/g2o/core/base_unary_edge.h	/^      const JacobianXiOplusType& jacobianOplusXi() const { return _jacobianOplusXi;}$/;"	f	class:g2o::BaseUnaryEdge
jacobianOplusXj	./Thirdparty/g2o/g2o/core/base_binary_edge.h	/^      const JacobianXjOplusType& jacobianOplusXj() const { return _jacobianOplusXj;}$/;"	f	class:g2o::BaseBinaryEdge
jacobianWorkspace	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    JacobianWorkspace& jacobianWorkspace() { return _jacobianWorkspace;}$/;"	f	struct:g2o::OptimizableGraph
jacobianWorkspace	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    const JacobianWorkspace& jacobianWorkspace() const { return _jacobianWorkspace;}$/;"	f	struct:g2o::OptimizableGraph
kc	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline DenseIndex kc() const { return m_kc; }$/;"	f	class:Eigen::internal::level3_blocking
kdtree_distance	./Thirdparty/sparseicp/ICP.h	/^        inline num_t kdtree_distance(const num_t *p1, const size_t idx_p2,size_t size) const {$/;"	f	struct:nanoflann::KDTreeAdaptor
kdtree_distance	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline num_t kdtree_distance(const num_t *p1, const size_t idx_p2,size_t size) const$/;"	f	struct:nanoflann::KDTreeEigenMatrixAdaptor
kdtree_get_bbox	./Thirdparty/sparseicp/ICP.h	/^        template <class BBOX> bool kdtree_get_bbox(BBOX&) const {return false;}$/;"	f	struct:nanoflann::KDTreeAdaptor
kdtree_get_bbox	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		bool kdtree_get_bbox(BBOX &bb) const {$/;"	f	struct:nanoflann::KDTreeEigenMatrixAdaptor
kdtree_get_point_count	./Thirdparty/sparseicp/ICP.h	/^        inline size_t kdtree_get_point_count() const {return m_data_matrix.cols();}$/;"	f	struct:nanoflann::KDTreeAdaptor
kdtree_get_point_count	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline size_t kdtree_get_point_count() const {$/;"	f	struct:nanoflann::KDTreeEigenMatrixAdaptor
kdtree_get_pt	./Thirdparty/sparseicp/ICP.h	/^        inline num_t kdtree_get_pt(const size_t idx, int dim) const {$/;"	f	struct:nanoflann::KDTreeAdaptor
kdtree_get_pt	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline num_t kdtree_get_pt(const size_t idx, int dim) const {$/;"	f	struct:nanoflann::KDTreeEigenMatrixAdaptor
keep_diag	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    struct keep_diag {$/;"	s	class:Eigen::IncompleteLUT
keep_diag	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    struct keep_diag {$/;"	s	class:Eigen::SimplicialCholeskyBase
kernel	./Thirdparty/g2o/g2o/core/robust_kernel_impl.h	/^      const RobustKernelPtr kernel() const { return _kernel;}$/;"	f	class:g2o::RobustKernelScaleDelta
kernel	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    inline const internal::kernel_retval<FullPivLU> kernel() const$/;"	f	class:Eigen::FullPivLU
kernel_retval	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^struct kernel_retval<FullPivLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
kernel_retval_base	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^  kernel_retval_base(const DecompositionType& dec)$/;"	f	struct:Eigen::internal::kernel_retval_base
kernel_retval_base	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^template<typename _DecompositionType> struct kernel_retval_base$/;"	s	namespace:Eigen::internal
key	./Thirdparty/g2o/g2o/core/cache.cpp	/^  Cache::CacheKey Cache::key() const {$/;"	f	class:g2o::Cache
knnSearch	./Thirdparty/sparseicp/include/nanoflann.hpp	/^        inline void knnSearch(const ElementType *query_point, const size_t num_closest, IndexType *out_indices, DistanceType *out_distances_sq) const$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
knowsTag	./Thirdparty/g2o/g2o/core/factory.cpp	/^bool Factory::knowsTag(const std::string& tag, int* elementType) const$/;"	f	class:g2o::Factory
l1CacheSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline std::ptrdiff_t l1CacheSize()$/;"	f	namespace:Eigen
l2CacheSize	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline std::ptrdiff_t l2CacheSize()$/;"	f	namespace:Eigen
lId	./include/KeyFrame.h	/^    static bool lId(KeyFrame* pKF1, KeyFrame* pKF2){$/;"	f	class:ORB_SLAM2::KeyFrame
landmarkDim	./Thirdparty/g2o/g2o/core/optimization_algorithm_property.h	/^  int landmarkDim;            \/\/\/< dimension of the landmar vertices (-1 if variable)$/;"	m	struct:g2o::OptimizationAlgorithmProperty
last	./4pcs/Registration.h	/^            vector<MapPoint*> last;$/;"	m	class:pcl::FPCS::FPCSRegistration
lastCoeff	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    const Scalar& lastCoeff() const$/;"	f	class:Eigen::BlockImpl
lastErrorMessage	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    std::string lastErrorMessage() const$/;"	f	class:Eigen::SparseLU
lastErrorMessage	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    std::string lastErrorMessage() const { return m_lastError; }$/;"	f	class:Eigen::SparseQR
lastStep	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      int lastStep() const { return _lastStep;}$/;"	f	class:g2o::OptimizationAlgorithmDogleg
last_map	./4pcs/Registration.h	/^            Map *last_map;$/;"	m	class:pcl::FPCS::FPCSRegistration
lazy	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Lazy.h	/^MatrixBase<Derived>::lazy() const$/;"	f	class:Eigen::MatrixBase
lazyAssign	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  ::lazyAssign(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
lazyAssign	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    Derived& lazyAssign(const Flagged<OtherDerived, 0, EvalBeforeAssigningBit>& other)$/;"	f	class:Eigen::MatrixBase
lazyAssign	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& lazyAssign(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
lazyAssign	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^Derived& MatrixBase<Derived>::lazyAssign(const ProductBase<ProductDerived, Lhs,Rhs>& other)$/;"	f	class:Eigen::MatrixBase
lazyAssign	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE SelfCwiseBinaryOp& lazyAssign(const DenseBase<RhsDerived>& rhs)$/;"	f	class:Eigen::SelfCwiseBinaryOp
lazyAssign	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^void TriangularView<MatrixType, Mode>::lazyAssign(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularView
lazyAssign	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^void TriangularView<MatrixType, Mode>::lazyAssign(const TriangularBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularView
lazyProduct	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^MatrixBase<Derived>::lazyProduct(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::MatrixBase
lda	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    union {int nnz;int lda;};$/;"	m	union:Eigen::SluMatrix::__anon460::__anon461
ldlt	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^MatrixBase<Derived>::ldlt() const$/;"	f	class:Eigen::MatrixBase
ldlt	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^SelfAdjointView<MatrixType, UpLo>::ldlt() const$/;"	f	class:Eigen::SelfAdjointView
ldlt_inplace	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^template<> struct ldlt_inplace<Lower>$/;"	s	namespace:Eigen::internal
ldlt_inplace	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^template<> struct ldlt_inplace<Upper>$/;"	s	namespace:Eigen::internal
leaf_max_size	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		size_t leaf_max_size;$/;"	m	struct:nanoflann::KDTreeSingleIndexAdaptorParams
left	./Thirdparty/DBoW2/DUtils/Random.h	/^  inline unsigned int left() const { return m_values.size(); }$/;"	f	class:DUtils::Random::UnrepeatedRandomizer
left	./Thirdparty/sparseicp/include/nanoflann.hpp	/^					IndexType left, right;$/;"	m	struct:nanoflann::KDTreeSingleIndexAdaptor::Node::__anon463::__anon464
leftCols	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline ColsBlockXpr leftCols(Index n)$/;"	f
leftCols	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline ConstColsBlockXpr leftCols(Index n) const$/;"	f
leftCols	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNColsBlockXpr<N>::Type leftCols(Index n = N) const$/;"	f
leftCols	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename NColsBlockXpr<N>::Type leftCols(Index n = N)$/;"	f
length	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    Index length() const { return m_length; }  \/**< \\brief Returns the length of the Householder sequence. *\/$/;"	f	class:Eigen::HouseholderSequence
length	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  Index length ;  \/* number of principal columns in this row *\/$/;"	m	struct:internal::Colamd_Row
length	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  Index length ;  \/* number of rows in this column *\/$/;"	m	struct:internal::colamd_col
level	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        int level() const { return _level;}$/;"	f	class:g2o::OptimizableGraph::Edge
level3_blocking	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    level3_blocking()$/;"	f	class:Eigen::internal::level3_blocking
level3_blocking	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^class level3_blocking$/;"	c	namespace:Eigen::internal
levenberg	./Thirdparty/g2o/g2o/core/solver.h	/^      bool levenberg() const { return _isLevenberg;}$/;"	f	class:g2o::Solver
levenbergIteration	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      int levenbergIteration() { return _levenbergIterations;}$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
levenbergIterations	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    int levenbergIterations;          \/\/\/< number of iterations performed by LM$/;"	m	struct:g2o::G2OBatchStatistics
lhs	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    const _LhsNested& lhs() const { return m_lhs; }$/;"	f	class:Eigen::CwiseBinaryOp
lhs	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    const _LhsNested& lhs() const { return m_lhs; }$/;"	f	class:Eigen::ProductBase
lhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    const _LhsNested& lhs() const { return m_lhs; }$/;"	f	class:Eigen::CoeffBasedProduct
lhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE const _LhsNested& lhs() const { return m_lhs; }$/;"	f	class:Eigen::SparseDenseOuterProduct
lhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    EIGEN_STRONG_INLINE const _LhsNested& lhs() const { return m_lhs; }$/;"	f	class:Eigen::SparseDiagonalProduct
lhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    EIGEN_STRONG_INLINE const _LhsNested& lhs() const { return m_lhs; }$/;"	f	class:Eigen::SparseSparseProduct
linear	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline ConstLinearPart linear() const { return m_matrix.template block<Dim,Dim>(0,0); }$/;"	f	class:Eigen::Transform
linear	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline LinearPart linear() { return m_matrix.template block<Dim,Dim>(0,0); }$/;"	f	class:Eigen::Transform
linear	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline ConstLinearPart linear() const { return ConstLinearPart(m_matrix,0,0); }$/;"	f	class:Eigen::Transform
linear	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline LinearPart linear() { return LinearPart(m_matrix,0,0); }$/;"	f	class:Eigen::Transform
linearExt	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,Dim> linearExt()$/;"	f	class:Eigen::Transform
linearExt	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline const Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,Dim> linearExt() const$/;"	f	class:Eigen::Transform
linearRegression	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LeastSquares.h	/^void linearRegression(int numPoints,$/;"	f	namespace:Eigen
linearSolver	./Thirdparty/g2o/g2o/core/block_solver.h	/^      LinearSolver<PoseMatrixType>* linearSolver() const { return _linearSolver;}$/;"	f	class:g2o::BlockSolver
linearizeOplus	./Thirdparty/g2o/g2o/core/base_binary_edge.hpp	/^void BaseBinaryEdge<D, E, VertexXiType, VertexXjType>::linearizeOplus()$/;"	f	class:BaseBinaryEdge
linearizeOplus	./Thirdparty/g2o/g2o/core/base_binary_edge.hpp	/^void BaseBinaryEdge<D, E, VertexXiType, VertexXjType>::linearizeOplus(JacobianWorkspace& jacobianWorkspace)$/;"	f	class:BaseBinaryEdge
linearizeOplus	./Thirdparty/g2o/g2o/core/base_multi_edge.hpp	/^void BaseMultiEdge<D, E>::linearizeOplus()$/;"	f	class:BaseMultiEdge
linearizeOplus	./Thirdparty/g2o/g2o/core/base_multi_edge.hpp	/^void BaseMultiEdge<D, E>::linearizeOplus(JacobianWorkspace& jacobianWorkspace)$/;"	f	class:BaseMultiEdge
linearizeOplus	./Thirdparty/g2o/g2o/core/base_unary_edge.hpp	/^void BaseUnaryEdge<D, E, VertexXiType>::linearizeOplus()$/;"	f	class:BaseUnaryEdge
linearizeOplus	./Thirdparty/g2o/g2o/core/base_unary_edge.hpp	/^void BaseUnaryEdge<D, E, VertexXiType>::linearizeOplus(JacobianWorkspace& jacobianWorkspace)$/;"	f	class:BaseUnaryEdge
linearizeOplus	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^void EdgeSE3ProjectXYZ::linearizeOplus() {$/;"	f	class:g2o::EdgeSE3ProjectXYZ
linearizeOplus	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^void EdgeSE3ProjectXYZOnlyPose::linearizeOplus() {$/;"	f	class:g2o::EdgeSE3ProjectXYZOnlyPose
linearizeOplus	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^void EdgeStereoSE3ProjectXYZ::linearizeOplus() {$/;"	f	class:g2o::EdgeStereoSE3ProjectXYZ
linearizeOplus	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^void EdgeStereoSE3ProjectXYZOnlyPose::linearizeOplus() {$/;"	f	class:g2o::EdgeStereoSE3ProjectXYZOnlyPose
linspaced_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  linspaced_op(const Scalar& low, const Scalar& high, DenseIndex num_steps) : impl((num_steps==1 ? high : low), (num_steps==1 ? Scalar() : (high-low)\/(num_steps-1))) {}$/;"	f	struct:Eigen::internal::linspaced_op
linspaced_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template <typename Scalar, bool RandomAccess> struct linspaced_op$/;"	s	namespace:Eigen::internal
linspaced_op_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  linspaced_op_impl(const Scalar& low, const Scalar& step) :$/;"	f	struct:Eigen::internal::linspaced_op_impl
linspaced_op_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct linspaced_op_impl<Scalar,false>$/;"	s	namespace:Eigen::internal
linspaced_op_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct linspaced_op_impl<Scalar,true>$/;"	s	namespace:Eigen::internal
list	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdList.h	/^  class list<T,EIGEN_ALIGNED_ALLOCATOR<T> >$/;"	c	namespace:std
listSolvers	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  void OptimizationAlgorithmFactory::listSolvers(std::ostream& os) const$/;"	f	class:g2o::OptimizationAlgorithmFactory
list_base	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdList.h	/^                 Eigen::aligned_allocator_indirection<EIGEN_WORKAROUND_MSVC_STL_SUPPORT(T)> > list_base;$/;"	t	class:std::list
lit	./include/ORBextractor.h	/^    std::list<ExtractorNode>::iterator lit;$/;"	m	class:ORB_SLAM2::ExtractorNode
llt	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^MatrixBase<Derived>::llt() const$/;"	f	class:Eigen::MatrixBase
llt	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^SelfAdjointView<MatrixType, UpLo>::llt() const$/;"	f	class:Eigen::SelfAdjointView
llt_inplace	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^template<typename Scalar> struct llt_inplace<Scalar, Lower>$/;"	s	namespace:Eigen::internal
llt_inplace	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^template<typename Scalar> struct llt_inplace<Scalar, Upper>$/;"	s	namespace:Eigen::internal
llt_rank_update_lower	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^static typename MatrixType::Index llt_rank_update_lower(MatrixType& mat, const VectorType& vec, const typename MatrixType::RealScalar& sigma)$/;"	f	namespace:Eigen::internal
load	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::load(const cv::FileStorage &fs,$/;"	f	class:DBoW2::TemplatedVocabulary
load	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::load(const std::string &filename)$/;"	f	class:DBoW2::TemplatedVocabulary
load	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::load(const char* filename, bool createEdges)$/;"	f	class:g2o::OptimizableGraph
load	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::load(istream& is, bool createEdges)$/;"	f	class:g2o::OptimizableGraph
loadFromTextFile	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^bool TemplatedVocabulary<TDescriptor,F>::loadFromTextFile(const std::string &filename)$/;"	f	class:DBoW2::TemplatedVocabulary
loadIndex	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		void loadIndex(FILE* stream)$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
loadLhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadLhs(const LhsScalar* a, LhsPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, DoublePacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, ResPacket& dest) const { dest = *b; }$/;"	f	class:Eigen::internal::gebp_traits
loadRhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, RhsPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
load_tree	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		void load_tree(FILE* stream, NodePtr& tree)$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
load_value	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	void load_value(FILE* stream, T& value, size_t count = 1)$/;"	f	namespace:nanoflann
load_value	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	void load_value(FILE* stream, std::vector<T>& value)$/;"	f	namespace:nanoflann
loc	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		void*   loc;      \/* Current location in block to next allocate memory. *\/$/;"	m	class:nanoflann::PooledAllocator
lock	./Thirdparty/g2o/g2o/core/openmp_mutex.h	/^      void lock() { omp_set_lock(&_lock); }$/;"	f	class:g2o::OpenMPMutex
lockQuadraticForm	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        void lockQuadraticForm() { _quadraticFormMutex.lock();}$/;"	f	class:g2o::OptimizableGraph::Vertex
log	./Thirdparty/g2o/g2o/types/se3quat.h	/^      Vector6d log() const {$/;"	f	class:g2o::SE3Quat
log	./Thirdparty/g2o/g2o/types/sim3.h	/^    Vector7d log() const$/;"	f	struct:g2o::Sim3
log	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::log() const$/;"	f	class:Eigen::Cwise
log	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^log() const$/;"	f
logAbsDeterminant	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^typename MatrixType::RealScalar ColPivHouseholderQR<MatrixType>::logAbsDeterminant() const$/;"	f	class:Eigen::ColPivHouseholderQR
logAbsDeterminant	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^typename MatrixType::RealScalar FullPivHouseholderQR<MatrixType>::logAbsDeterminant() const$/;"	f	class:Eigen::FullPivHouseholderQR
logAbsDeterminant	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^typename MatrixType::RealScalar HouseholderQR<MatrixType>::logAbsDeterminant() const$/;"	f	class:Eigen::HouseholderQR
logAbsDeterminant	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^     Scalar logAbsDeterminant() const$/;"	f	class:Eigen::SparseLU
logistic_weight	./Thirdparty/sparseicp/ICP.h	/^    void logistic_weight(Eigen::VectorXd& r, double p) {$/;"	f	namespace:ICP
low	./Thirdparty/sparseicp/include/nanoflann.hpp	/^			ElementType low, high;$/;"	m	struct:nanoflann::KDTreeSingleIndexAdaptor::Interval
lpNorm	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::lpNorm() const$/;"	f	class:Eigen::MatrixBase
lpNorm_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^struct lpNorm_selector$/;"	s	namespace:Eigen::internal
lpNorm_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^struct lpNorm_selector<Derived, 1>$/;"	s	namespace:Eigen::internal
lpNorm_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^struct lpNorm_selector<Derived, 2>$/;"	s	namespace:Eigen::internal
lpNorm_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^struct lpNorm_selector<Derived, Infinity>$/;"	s	namespace:Eigen::internal
lr	./Thirdparty/sparseicp/include/nanoflann.hpp	/^				} lr;$/;"	m	union:nanoflann::KDTreeSingleIndexAdaptor::Node::__anon463	typeref:struct:nanoflann::KDTreeSingleIndexAdaptor::Node::__anon463::__anon464
lsub	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector lsub; \/\/ Compressed row indices of L rectangular supernodes. $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
lu	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^MatrixBase<Derived>::lu() const$/;"	f	class:Eigen::MatrixBase
lu	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^MatrixBase<Derived>::lu() const$/;"	f	class:Eigen::MatrixBase
lusup	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  ScalarVector  lusup; \/\/ nonzero values of L ordered by columns $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
m	./Thirdparty/g2o/g2o/core/matrix_structure.h	/^    int m;    \/\/\/< A is m-by-n.  m must be >= 0.$/;"	m	class:g2o::MatrixStructure
mBestRotation	./include/Sim3Solver.h	/^    cv::Mat mBestRotation;$/;"	m	class:ORB_SLAM2::Sim3Solver
mBestScale	./include/Sim3Solver.h	/^    float mBestScale;$/;"	m	class:ORB_SLAM2::Sim3Solver
mBestT12	./include/Sim3Solver.h	/^    cv::Mat mBestT12;$/;"	m	class:ORB_SLAM2::Sim3Solver
mBestTcw	./include/PnPsolver.h	/^  cv::Mat mBestTcw;$/;"	m	class:ORB_SLAM2::PnPsolver
mBestTcw	./include/PoseSolver.h	/^  cv::Mat mBestTcw;$/;"	m	class:ORB_SLAM2::PoseSolver
mBestTranslation	./include/Sim3Solver.h	/^    cv::Mat mBestTranslation;$/;"	m	class:ORB_SLAM2::Sim3Solver
mBowVec	./include/Frame.h	/^    DBoW2::BowVector mBowVec;$/;"	m	class:ORB_SLAM2::Frame
mBowVec	./include/KeyFrame.h	/^    DBoW2::BowVector mBowVec;$/;"	m	class:ORB_SLAM2::KeyFrame
mBowVec	./include/Map.h	/^	DBoW2::BowVector mBowVec;$/;"	m	class:ORB_SLAM2::Map
mCameraLineWidth	./include/MapDrawer.h	/^    float mCameraLineWidth;$/;"	m	class:ORB_SLAM2::MapDrawer
mCameraPose	./include/MapDrawer.h	/^    cv::Mat mCameraPose;$/;"	m	class:ORB_SLAM2::MapDrawer
mCameraSize	./include/MapDrawer.h	/^    float mCameraSize;$/;"	m	class:ORB_SLAM2::MapDrawer
mCanInitWithLastMap	./include/Tracking.h	/^	int mCanInitWithLastMap = 5;$/;"	m	class:ORB_SLAM2::Tracking
mConnectedKeyFrameWeights	./include/KeyFrame.h	/^    std::map<KeyFrame*,int> mConnectedKeyFrameWeights;$/;"	m	class:ORB_SLAM2::KeyFrame
mCurrentFrame	./include/Tracking.h	/^    Frame mCurrentFrame;$/;"	m	class:ORB_SLAM2::Tracking
mCurrentPoints	./include/Registrating.h	/^		float mCurrentPoints[3][MAX_POINT_NUM];$/;"	m	class:ORB_SLAM2::Registrating
mCurrentPointsNum	./include/Registrating.h	/^		int mCurrentPointsNum;$/;"	m	class:ORB_SLAM2::Registrating
mDepthMapFactor	./include/Tracking.h	/^    float mDepthMapFactor;$/;"	m	class:ORB_SLAM2::Tracking
mDescriptor	./include/MapPoint.h	/^     cv::Mat mDescriptor;$/;"	m	class:ORB_SLAM2::MapPoint
mDescriptors	./include/Frame.h	/^    cv::Mat mDescriptors, mDescriptorsRight;$/;"	m	class:ORB_SLAM2::Frame
mDescriptors	./include/KeyFrame.h	/^    const cv::Mat mDescriptors;$/;"	m	class:ORB_SLAM2::KeyFrame
mDescriptorsRight	./include/Frame.h	/^    cv::Mat mDescriptors, mDescriptorsRight;$/;"	m	class:ORB_SLAM2::Frame
mDistCoef	./include/Frame.h	/^    cv::Mat mDistCoef;$/;"	m	class:ORB_SLAM2::Frame
mDistCoef	./include/Tracking.h	/^    cv::Mat mDistCoef;$/;"	m	class:ORB_SLAM2::Tracking
mEnoughTh	./include/Registrating.h	/^		int mEnoughTh;$/;"	m	class:ORB_SLAM2::Registrating
mFeatVec	./include/Frame.h	/^    DBoW2::FeatureVector mFeatVec;$/;"	m	class:ORB_SLAM2::Frame
mFeatVec	./include/KeyFrame.h	/^    DBoW2::FeatureVector mFeatVec;$/;"	m	class:ORB_SLAM2::KeyFrame
mFeatVec	./include/Map.h	/^	DBoW2::FeatureVector mFeatVec;$/;"	m	class:ORB_SLAM2::Map
mGlobalMutex	./include/MapPoint.h	/^    static std::mutex mGlobalMutex;$/;"	m	class:ORB_SLAM2::MapPoint
mGlobalMutex	./src/MapPoint.cc	/^mutex MapPoint::mGlobalMutex;$/;"	m	class:ORB_SLAM2::MapPoint	file:
mGraphLineWidth	./include/MapDrawer.h	/^    float mGraphLineWidth;$/;"	m	class:ORB_SLAM2::MapDrawer
mGrid	./include/Frame.h	/^    std::vector<std::size_t> mGrid[FRAME_GRID_COLS][FRAME_GRID_ROWS];$/;"	m	class:ORB_SLAM2::Frame
mGrid	./include/KeyFrame.h	/^    std::vector< std::vector <std::vector<size_t> > > mGrid;$/;"	m	class:ORB_SLAM2::KeyFrame
mHalfBaseline	./include/KeyFrame.h	/^    float mHalfBaseline; \/\/ Only for visualization$/;"	m	class:ORB_SLAM2::KeyFrame
mHaveMatch	./include/Initializer.h	/^	vector<bool>mHaveMatch;$/;"	m	class:ORB_SLAM2::Initializer
mIm	./include/FrameDrawer.h	/^    cv::Mat mIm;$/;"	m	class:ORB_SLAM2::FrameDrawer
mImGray	./include/Tracking.h	/^    cv::Mat mImGray;$/;"	m	class:ORB_SLAM2::Tracking
mImageHeight	./include/Viewer.h	/^    float mImageWidth, mImageHeight;$/;"	m	class:ORB_SLAM2::Viewer
mImageWidth	./include/Viewer.h	/^    float mImageWidth, mImageHeight;$/;"	m	class:ORB_SLAM2::Viewer
mInitFixedPointNum	./include/Tracking.h	/^	int mInitFixedPointNum;$/;"	m	class:ORB_SLAM2::Tracking
mInitFrame	./include/Initializer.h	/^	Frame *mInitFrame;$/;"	m	class:ORB_SLAM2::Initializer
mInitialFrame	./include/Tracking.h	/^    Frame mInitialFrame;$/;"	m	class:ORB_SLAM2::Tracking
mInitialFrameLastMap	./include/Tracking.h	/^    Frame mInitialFrameLastMap;$/;"	m	class:ORB_SLAM2::Tracking
mK	./include/Frame.h	/^    cv::Mat mK;$/;"	m	class:ORB_SLAM2::Frame
mK	./include/Initializer.h	/^    cv::Mat mK;$/;"	m	class:ORB_SLAM2::Initializer
mK	./include/KeyFrame.h	/^    const cv::Mat mK;$/;"	m	class:ORB_SLAM2::KeyFrame
mK	./include/Tracking.h	/^    cv::Mat mK;$/;"	m	class:ORB_SLAM2::Tracking
mK1	./include/Sim3Solver.h	/^    cv::Mat mK1;$/;"	m	class:ORB_SLAM2::Sim3Solver
mK2	./include/Sim3Solver.h	/^    cv::Mat mK2;$/;"	m	class:ORB_SLAM2::Sim3Solver
mKeyFrameLineWidth	./include/MapDrawer.h	/^    float mKeyFrameLineWidth;$/;"	m	class:ORB_SLAM2::MapDrawer
mKeyFrameSize	./include/MapDrawer.h	/^    float mKeyFrameSize;$/;"	m	class:ORB_SLAM2::MapDrawer
mLastFrame	./include/Tracking.h	/^    Frame mLastFrame;$/;"	m	class:ORB_SLAM2::Tracking
mLastLoopKFid	./include/LoopClosing.h	/^    long unsigned int mLastLoopKFid;$/;"	m	class:ORB_SLAM2::LoopClosing
mLastPoints	./include/Registrating.h	/^		float mLastPoints[3][MAX_POINT_NUM];$/;"	m	class:ORB_SLAM2::Registrating
mLastPointsNum	./include/Registrating.h	/^		int mLastPointsNum;$/;"	m	class:ORB_SLAM2::Registrating
mLastProcessedState	./include/Tracking.h	/^    eTrackingState mLastProcessedState;$/;"	m	class:ORB_SLAM2::Tracking
mLoopScore	./include/KeyFrame.h	/^    float mLoopScore;$/;"	m	class:ORB_SLAM2::KeyFrame
mMatches12	./include/Registrating.h	/^		std::vector<std::pair<int, int> > mMatches12;$/;"	m	class:ORB_SLAM2::Registrating
mMaxFrames	./include/Tracking.h	/^    int mMaxFrames;$/;"	m	class:ORB_SLAM2::Tracking
mMaxIterations	./include/Initializer.h	/^    int mMaxIterations;$/;"	m	class:ORB_SLAM2::Initializer
mMinFrames	./include/Tracking.h	/^    int mMinFrames;$/;"	m	class:ORB_SLAM2::Tracking
mMutex	./include/FrameDrawer.h	/^    std::mutex mMutex;$/;"	m	class:ORB_SLAM2::FrameDrawer
mMutex	./include/KeyFrameDatabase.h	/^  std::mutex mMutex;$/;"	m	class:ORB_SLAM2::KeyFrameDatabase
mMutexAccept	./include/LocalMapping.h	/^    std::mutex mMutexAccept;$/;"	m	class:ORB_SLAM2::LocalMapping
mMutexCamera	./include/MapDrawer.h	/^    std::mutex mMutexCamera;$/;"	m	class:ORB_SLAM2::MapDrawer
mMutexConnections	./include/KeyFrame.h	/^    std::mutex mMutexConnections;$/;"	m	class:ORB_SLAM2::KeyFrame
mMutexFeatures	./include/KeyFrame.h	/^    std::mutex mMutexFeatures;$/;"	m	class:ORB_SLAM2::KeyFrame
mMutexFeatures	./include/MapPoint.h	/^     std::mutex mMutexFeatures;$/;"	m	class:ORB_SLAM2::MapPoint
mMutexFinish	./include/LocalMapping.h	/^    std::mutex mMutexFinish;$/;"	m	class:ORB_SLAM2::LocalMapping
mMutexFinish	./include/LoopClosing.h	/^    std::mutex mMutexFinish;$/;"	m	class:ORB_SLAM2::LoopClosing
mMutexFinish	./include/Viewer.h	/^    std::mutex mMutexFinish;$/;"	m	class:ORB_SLAM2::Viewer
mMutexGBA	./include/LoopClosing.h	/^    std::mutex mMutexGBA;$/;"	m	class:ORB_SLAM2::LoopClosing
mMutexLoopQueue	./include/LoopClosing.h	/^    std::mutex mMutexLoopQueue;$/;"	m	class:ORB_SLAM2::LoopClosing
mMutexMap	./include/Map.h	/^    std::mutex mMutexMap;$/;"	m	class:ORB_SLAM2::Map
mMutexMapUpdate	./include/Map.h	/^    std::mutex mMutexMapUpdate;$/;"	m	class:ORB_SLAM2::Map
mMutexMode	./include/System.h	/^    std::mutex mMutexMode;$/;"	m	class:ORB_SLAM2::System
mMutexNewKFs	./include/LocalMapping.h	/^    std::mutex mMutexNewKFs;$/;"	m	class:ORB_SLAM2::LocalMapping
mMutexNewMap	./include/Registrating.h	/^		std::mutex mMutexNewMap, mMutexStop, mMutexSetMap;$/;"	m	class:ORB_SLAM2::Registrating
mMutexPointCreation	./include/Map.h	/^    std::mutex mMutexPointCreation;$/;"	m	class:ORB_SLAM2::Map
mMutexPos	./include/MapPoint.h	/^     std::mutex mMutexPos;$/;"	m	class:ORB_SLAM2::MapPoint
mMutexPose	./include/KeyFrame.h	/^    std::mutex mMutexPose;$/;"	m	class:ORB_SLAM2::KeyFrame
mMutexReset	./include/LocalMapping.h	/^    std::mutex mMutexReset;$/;"	m	class:ORB_SLAM2::LocalMapping
mMutexReset	./include/LoopClosing.h	/^    std::mutex mMutexReset;$/;"	m	class:ORB_SLAM2::LoopClosing
mMutexReset	./include/System.h	/^    std::mutex mMutexReset;$/;"	m	class:ORB_SLAM2::System
mMutexSetMap	./include/Registrating.h	/^		std::mutex mMutexNewMap, mMutexStop, mMutexSetMap;$/;"	m	class:ORB_SLAM2::Registrating
mMutexState	./include/System.h	/^    std::mutex mMutexState;$/;"	m	class:ORB_SLAM2::System
mMutexStop	./include/LocalMapping.h	/^    std::mutex mMutexStop;$/;"	m	class:ORB_SLAM2::LocalMapping
mMutexStop	./include/Registrating.h	/^		std::mutex mMutexNewMap, mMutexStop, mMutexSetMap;$/;"	m	class:ORB_SLAM2::Registrating
mMutexStop	./include/Viewer.h	/^    std::mutex mMutexStop;$/;"	m	class:ORB_SLAM2::Viewer
mN1	./include/Sim3Solver.h	/^    int mN1;$/;"	m	class:ORB_SLAM2::Sim3Solver
mNormalVector	./include/MapPoint.h	/^     cv::Mat mNormalVector;$/;"	m	class:ORB_SLAM2::MapPoint
mObservations	./include/MapPoint.h	/^     std::map<KeyFrame*,size_t> mObservations;$/;"	m	class:ORB_SLAM2::MapPoint
mOw	./include/Frame.h	/^    cv::Mat mOw; \/\/==mtwc$/;"	m	class:ORB_SLAM2::Frame
mPointSize	./include/MapDrawer.h	/^    float mPointSize;$/;"	m	class:ORB_SLAM2::MapDrawer
mPosGBA	./include/MapPoint.h	/^    cv::Mat mPosGBA;$/;"	m	class:ORB_SLAM2::MapPoint
mR12i	./include/Sim3Solver.h	/^    cv::Mat mR12i;$/;"	m	class:ORB_SLAM2::Sim3Solver
mRansacEpsilon	./include/PnPsolver.h	/^  float mRansacEpsilon;$/;"	m	class:ORB_SLAM2::PnPsolver
mRansacEpsilon	./include/PoseSolver.h	/^  float mRansacEpsilon;$/;"	m	class:ORB_SLAM2::PoseSolver
mRansacMaxIts	./include/PnPsolver.h	/^  int mRansacMaxIts;$/;"	m	class:ORB_SLAM2::PnPsolver
mRansacMaxIts	./include/PoseSolver.h	/^  int mRansacMaxIts;$/;"	m	class:ORB_SLAM2::PoseSolver
mRansacMaxIts	./include/Sim3Solver.h	/^    int mRansacMaxIts;$/;"	m	class:ORB_SLAM2::Sim3Solver
mRansacMinInliers	./include/PnPsolver.h	/^  int mRansacMinInliers;$/;"	m	class:ORB_SLAM2::PnPsolver
mRansacMinInliers	./include/PoseSolver.h	/^  int mRansacMinInliers;$/;"	m	class:ORB_SLAM2::PoseSolver
mRansacMinInliers	./include/Sim3Solver.h	/^    int mRansacMinInliers;$/;"	m	class:ORB_SLAM2::Sim3Solver
mRansacMinSet	./include/PnPsolver.h	/^  int mRansacMinSet;$/;"	m	class:ORB_SLAM2::PnPsolver
mRansacMinSet	./include/PoseSolver.h	/^  int mRansacMinSet;$/;"	m	class:ORB_SLAM2::PoseSolver
mRansacProb	./include/PnPsolver.h	/^  double mRansacProb;$/;"	m	class:ORB_SLAM2::PnPsolver
mRansacProb	./include/PoseSolver.h	/^  double mRansacProb;$/;"	m	class:ORB_SLAM2::PoseSolver
mRansacProb	./include/Sim3Solver.h	/^    double mRansacProb;$/;"	m	class:ORB_SLAM2::Sim3Solver
mRansacTh	./include/PnPsolver.h	/^  float mRansacTh;$/;"	m	class:ORB_SLAM2::PnPsolver
mRansacTh	./include/PoseSolver.h	/^  float mRansacTh;$/;"	m	class:ORB_SLAM2::PoseSolver
mRcw	./include/Frame.h	/^    cv::Mat mRcw;$/;"	m	class:ORB_SLAM2::Frame
mRefinedTcw	./include/PnPsolver.h	/^  cv::Mat mRefinedTcw;$/;"	m	class:ORB_SLAM2::PnPsolver
mRefinedTcw	./include/PoseSolver.h	/^  cv::Mat mRefinedTcw;$/;"	m	class:ORB_SLAM2::PoseSolver
mRelocScore	./include/KeyFrame.h	/^    float mRelocScore;$/;"	m	class:ORB_SLAM2::KeyFrame
mRi	./include/PnPsolver.h	/^  double mRi[3][3];$/;"	m	class:ORB_SLAM2::PnPsolver
mRi	./include/PoseSolver.h	/^  double mRi[3][3];$/;"	m	class:ORB_SLAM2::PoseSolver
mRwc	./include/Frame.h	/^    cv::Mat mRwc;$/;"	m	class:ORB_SLAM2::Frame
mScw	./include/LoopClosing.h	/^    cv::Mat mScw;$/;"	m	class:ORB_SLAM2::LoopClosing
mSensor	./include/System.h	/^    eSensor mSensor;$/;"	m	class:ORB_SLAM2::System
mSensor	./include/Tracking.h	/^    int mSensor;$/;"	m	class:ORB_SLAM2::Tracking
mSetMap	./include/Registrating.h	/^		bool mStop, mSetMap;$/;"	m	class:ORB_SLAM2::Registrating
mSigma	./include/Initializer.h	/^    float mSigma, mSigma2;$/;"	m	class:ORB_SLAM2::Initializer
mSigma2	./include/Initializer.h	/^    float mSigma, mSigma2;$/;"	m	class:ORB_SLAM2::Initializer
mSigma2	./include/Sim3Solver.h	/^    float mSigma2;$/;"	m	class:ORB_SLAM2::Sim3Solver
mState	./include/FrameDrawer.h	/^    int mState;$/;"	m	class:ORB_SLAM2::FrameDrawer
mState	./include/Tracking.h	/^    eTrackingState mState;$/;"	m	class:ORB_SLAM2::Tracking
mStop	./include/Registrating.h	/^		bool mStop, mSetMap;$/;"	m	class:ORB_SLAM2::Registrating
mT	./include/Viewer.h	/^    double mT;$/;"	m	class:ORB_SLAM2::Viewer
mT12i	./include/Sim3Solver.h	/^    cv::Mat mT12i;$/;"	m	class:ORB_SLAM2::Sim3Solver
mT21i	./include/Sim3Solver.h	/^    cv::Mat mT21i;$/;"	m	class:ORB_SLAM2::Sim3Solver
mTcp	./include/KeyFrame.h	/^    cv::Mat mTcp;$/;"	m	class:ORB_SLAM2::KeyFrame
mTcw	./include/Frame.h	/^    cv::Mat mTcw;$/;"	m	class:ORB_SLAM2::Frame
mTcwBefGBA	./include/KeyFrame.h	/^    cv::Mat mTcwBefGBA;$/;"	m	class:ORB_SLAM2::KeyFrame
mTcwGBA	./include/KeyFrame.h	/^    cv::Mat mTcwGBA;$/;"	m	class:ORB_SLAM2::KeyFrame
mTcwi	./include/PnPsolver.h	/^  cv::Mat mTcwi;$/;"	m	class:ORB_SLAM2::PnPsolver
mTcwi	./include/PoseSolver.h	/^  cv::Mat mTcwi;$/;"	m	class:ORB_SLAM2::PoseSolver
mTh	./include/Sim3Solver.h	/^    float mTh;$/;"	m	class:ORB_SLAM2::Sim3Solver
mThDepth	./include/Frame.h	/^    float mThDepth;$/;"	m	class:ORB_SLAM2::Frame
mThDepth	./include/KeyFrame.h	/^    const float fx, fy, cx, cy, invfx, invfy, mbf, mb, mThDepth;$/;"	m	class:ORB_SLAM2::KeyFrame
mThDepth	./include/Tracking.h	/^    float mThDepth;$/;"	m	class:ORB_SLAM2::Tracking
mTimeStamp	./include/Frame.h	/^    double mTimeStamp;$/;"	m	class:ORB_SLAM2::Frame
mTimeStamp	./include/KeyFrame.h	/^    const double mTimeStamp;$/;"	m	class:ORB_SLAM2::KeyFrame
mTrackProjX	./include/MapPoint.h	/^    float mTrackProjX;$/;"	m	class:ORB_SLAM2::MapPoint
mTrackProjXR	./include/MapPoint.h	/^    float mTrackProjXR;$/;"	m	class:ORB_SLAM2::MapPoint
mTrackProjY	./include/MapPoint.h	/^    float mTrackProjY;$/;"	m	class:ORB_SLAM2::MapPoint
mTrackViewCos	./include/MapPoint.h	/^    float mTrackViewCos;$/;"	m	class:ORB_SLAM2::MapPoint
mTrackedKeyPointsUn	./include/System.h	/^    std::vector<cv::KeyPoint> mTrackedKeyPointsUn;$/;"	m	class:ORB_SLAM2::System
mTrackedMapPoints	./include/System.h	/^    std::vector<MapPoint*> mTrackedMapPoints;$/;"	m	class:ORB_SLAM2::System
mTrackingState	./include/System.h	/^    int mTrackingState;$/;"	m	class:ORB_SLAM2::System
mVelocity	./include/Tracking.h	/^    cv::Mat mVelocity;$/;"	m	class:ORB_SLAM2::Tracking
mViewpointF	./include/Viewer.h	/^    float mViewpointX, mViewpointY, mViewpointZ, mViewpointF;$/;"	m	class:ORB_SLAM2::Viewer
mViewpointX	./include/Viewer.h	/^    float mViewpointX, mViewpointY, mViewpointZ, mViewpointF;$/;"	m	class:ORB_SLAM2::Viewer
mViewpointY	./include/Viewer.h	/^    float mViewpointX, mViewpointY, mViewpointZ, mViewpointF;$/;"	m	class:ORB_SLAM2::Viewer
mViewpointZ	./include/Viewer.h	/^    float mViewpointX, mViewpointY, mViewpointZ, mViewpointF;$/;"	m	class:ORB_SLAM2::Viewer
mWorldPos	./include/MapPoint.h	/^     cv::Mat mWorldPos;$/;"	m	class:ORB_SLAM2::MapPoint
m_E	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable Index *m_E; \/\/ The permutation applied to columns$/;"	m	class:Eigen::SPQR
m_H	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable cholmod_sparse *m_H;  \/\/The householder vectors$/;"	m	class:Eigen::SPQR
m_HPinv	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable Index *m_HPinv; \/\/ The row permutation of H$/;"	m	class:Eigen::SPQR
m_HTau	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable cholmod_dense *m_HTau; \/\/ The Householder coefficients$/;"	m	class:Eigen::SPQR
m_L	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^  int m_L;$/;"	m	class:DBoW2::TemplatedVocabulary
m_LDLT	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    bool m_LDLT;$/;"	m	class:Eigen::SimplicialCholesky
m_Lstore	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    SCMatrix m_Lstore; \/\/ The lower triangular matrix (supernodal)$/;"	m	class:Eigen::SparseLU
m_P	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    PermutationMatrix<Dynamic,Dynamic,Index> m_P;     \/\/ Fill-reducing permutation$/;"	m	class:Eigen::IncompleteLUT
m_P	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    PermutationMatrix<Dynamic,Dynamic,Index> m_P;     \/\/ the permutation$/;"	m	class:Eigen::SimplicialCholeskyBase
m_Pinv	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    PermutationMatrix<Dynamic,Dynamic,Index> m_Pinv;  \/\/ Inverse permutation$/;"	m	class:Eigen::IncompleteLUT
m_Pinv	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    PermutationMatrix<Dynamic,Dynamic,Index> m_Pinv;  \/\/ the inverse permutation$/;"	m	class:Eigen::SimplicialCholeskyBase
m_Q	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      MatrixType m_S, m_T, m_Q, m_Z;$/;"	m	class:Eigen::RealQZ
m_Q	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    QRMatrixType m_Q;               \/\/ The orthogonal reflectors$/;"	m	class:Eigen::SparseQR
m_R	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable MatrixType m_R; \/\/ The sparse matrix R in Eigen format$/;"	m	class:Eigen::SPQR
m_R	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    QRMatrixType m_R;               \/\/ The triangular factor matrix$/;"	m	class:Eigen::SparseQR
m_S	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      MatrixType m_S, m_T, m_Q, m_Z;$/;"	m	class:Eigen::RealQZ
m_T	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      MatrixType m_S, m_T, m_Q, m_Z;$/;"	m	class:Eigen::RealQZ
m_Ustore	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    MappedSparseMatrix<Scalar,ColMajor,Index> m_Ustore; \/\/ The upper triangular matrix$/;"	m	class:Eigen::SparseLU
m_Z	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      MatrixType m_S, m_T, m_Q, m_Z;$/;"	m	class:Eigen::RealQZ
m_actualAlpha	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Scalar m_actualAlpha;$/;"	m	struct:Eigen::internal::gemm_functor
m_adjoint	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  TransposeTypeWithSameStorageOrder m_adjoint;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_allocatedElements	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_allocatedElements;$/;"	m	class:Eigen::internal::AmbiVector
m_allocatedSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_allocatedSize;$/;"	m	class:Eigen::internal::AmbiVector
m_allocatedSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    size_t m_allocatedSize;$/;"	m	class:Eigen::internal::CompressedStorage
m_allow_tol	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    int m_allow_tol; \/\/ Allow to use some tolerance during numerical factorization.$/;"	m	class:Eigen::SPQR
m_alpha	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    Scalar m_alpha;$/;"	m	class:Eigen::ScaledProduct
m_alphas	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    ComplexVectorType m_alphas;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_already_seeded	./Thirdparty/DBoW2/DUtils/Random.h	/^  static bool m_already_seeded;$/;"	m	class:DUtils::Random
m_analysisIsOk	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::CholmodBase
m_analysisIsOk	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::IncompleteLUT
m_analysisIsOk	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable bool m_isInitialized, m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::IterativeSolverBase
m_analysisIsOk	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::PastixBase
m_analysisIsOk	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    bool m_initialized, m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::PardisoImpl
m_analysisIsOk	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::SPQR
m_analysisIsOk	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_analysisIsOk	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::SparseLU
m_analysisIsOk	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::SuperLUBase
m_analysisIsOk	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::UmfPackLU
m_analysisIsok	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    bool m_analysisIsok;$/;"	m	class:Eigen::SparseQR
m_angle	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  Scalar m_angle;$/;"	m	class:Eigen::AngleAxis
m_angle	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  Scalar m_angle;$/;"	m	class:Eigen::Rotation2D
m_angle	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  Scalar m_angle;$/;"	m	class:Eigen::AngleAxis
m_angle	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  Scalar m_angle;$/;"	m	class:Eigen::Rotation2D
m_axis	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  Vector3 m_axis;$/;"	m	class:Eigen::AngleAxis
m_axis	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  Vector3 m_axis;$/;"	m	class:Eigen::AngleAxis
m_base	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  mutable Packet m_base;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_begin	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      Index m_begin;$/;"	m	class:Eigen::BlockImpl::ReverseInnerIterator
m_betas	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    VectorType m_betas;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_bidiagonal	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    BidiagonalType m_bidiagonal;$/;"	m	class:Eigen::internal::UpperBidiagonalization
m_block	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      const BlockType& m_block;$/;"	m	class:Eigen::BlockImpl::InnerIterator
m_block	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      const BlockType& m_block;$/;"	m	class:Eigen::BlockImpl::ReverseInnerIterator
m_blockA	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    LhsScalar* m_blockA;$/;"	m	class:Eigen::internal::level3_blocking
m_blockB	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    RhsScalar* m_blockB;$/;"	m	class:Eigen::internal::level3_blocking
m_blockCols	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_blockCols;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_blockCols	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_blockCols;$/;"	m	class:Eigen::BlockImpl
m_blockRows	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_blockRows;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_blockRows	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_blockRows;$/;"	m	class:Eigen::BlockImpl
m_blockW	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    RhsScalar* m_blockW;$/;"	m	class:Eigen::internal::level3_blocking
m_blocking	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    BlockingType& m_blocking;$/;"	m	struct:Eigen::internal::gemm_functor
m_buffer	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Scalar* m_buffer;$/;"	m	class:Eigen::internal::AmbiVector
m_c	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^    Scalar m_c, m_s;$/;"	m	class:Eigen::JacobiRotation
m_cR	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable cholmod_sparse *m_cR; \/\/ The sparse R factor in cholmod format$/;"	m	class:Eigen::SPQR
m_cachedIndex	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_cachedIndex;          \/\/ current coordinate$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_cachedValue	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Scalar m_cachedValue;       \/\/ current value$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_cc	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable cholmod_common m_cc; \/\/ Workspace and parameters$/;"	m	class:Eigen::SPQR
m_cholmod	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    mutable cholmod_common m_cholmod;$/;"	m	class:Eigen::CholmodBase
m_cholmodFactor	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    cholmod_factor* m_cholmodFactor;$/;"	m	class:Eigen::CholmodBase
m_coeffs	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    CoefficientsType m_coeffs;$/;"	m	class:Eigen::internal::BandMatrix
m_coeffs	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    const CoefficientsType& m_coeffs;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_coeffs	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  Coefficients m_coeffs;$/;"	m	class:Eigen::Hyperplane
m_coeffs	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  Coefficients m_coeffs;$/;"	m	class:Eigen::Quaternion
m_coeffs	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  VectorType m_coeffs;$/;"	m	class:Eigen::Scaling
m_coeffs	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  VectorType m_coeffs;$/;"	m	class:Eigen::Translation
m_coeffs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  Coefficients m_coeffs;$/;"	m	class:Eigen::Hyperplane
m_coeffs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    Coefficients m_coeffs;$/;"	m	class:Eigen::Map
m_coeffs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^    const Coefficients m_coeffs;$/;"	m	class:Eigen::Map
m_coeffs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  Coefficients m_coeffs;$/;"	m	class:Eigen::Quaternion
m_coeffs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  VectorType m_coeffs;$/;"	m	class:Eigen::Translation
m_coeffs	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    typename CoeffsType::Nested m_coeffs;$/;"	m	class:Eigen::HouseholderSequence
m_col	./Thirdparty/sparseicp/include/Eigen/src/Core/CommaInitializer.h	/^  Index m_col;              \/\/ current col id$/;"	m	struct:Eigen::CommaInitializer
m_col	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^    const Index m_row, m_col;$/;"	m	class:Eigen::Minor
m_col	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^  Index m_row, m_col;$/;"	m	class:Eigen::Triplet
m_col	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_col; \/\/ Number of columns $/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_colFactor	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    const internal::variable_if_dynamic<Index, ColFactor> m_colFactor;$/;"	m	class:Eigen::Replicate
m_colSqNorms	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealRowVectorType m_colSqNorms;$/;"	m	class:Eigen::ColPivHouseholderQR
m_col_to_sup	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index* m_col_to_sup; \/\/ col_to_sup[j] is the supernode number to which column j belongs$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_cols	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^    const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_cols;$/;"	m	class:Eigen::CwiseNullaryOp
m_cols	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    DenseIndex m_cols;$/;"	m	class:Eigen::DenseStorage
m_cols	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_cols;$/;"	m	class:Eigen::MapBase
m_cols	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::JacobiSVD
m_cols	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::image_retval_base
m_cols	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::kernel_retval_base
m_colsPermutation	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    PermutationType m_colsPermutation;$/;"	m	class:Eigen::ColPivHouseholderQR
m_colsTranspositions	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    IntRowVectorType m_colsTranspositions;$/;"	m	class:Eigen::FullPivLU
m_colsTranspositions	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    IntRowVectorType m_colsTranspositions;$/;"	m	class:Eigen::ColPivHouseholderQR
m_cols_permutation	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    PermutationType m_cols_permutation;$/;"	m	class:Eigen::FullPivHouseholderQR
m_cols_transpositions	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    IntDiagSizeVectorType m_cols_transpositions;$/;"	m	class:Eigen::FullPivHouseholderQR
m_comm	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable int m_comm; \/\/ The MPI communicator identifier$/;"	m	class:Eigen::PastixBase
m_computationOptions	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    unsigned int m_computationOptions;$/;"	m	class:Eigen::JacobiSVD
m_computeFullU	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    bool m_computeFullU, m_computeThinU;$/;"	m	class:Eigen::JacobiSVD
m_computeFullV	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    bool m_computeFullV, m_computeThinV;$/;"	m	class:Eigen::JacobiSVD
m_computeQZ	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      bool m_computeQZ;$/;"	m	class:Eigen::RealQZ
m_computeThinU	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    bool m_computeFullU, m_computeThinU;$/;"	m	class:Eigen::JacobiSVD
m_computeThinV	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    bool m_computeFullV, m_computeThinV;$/;"	m	class:Eigen::JacobiSVD
m_condition	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    typename ConditionMatrixType::Nested m_condition;$/;"	m	class:Eigen::Select
m_conservative	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    bool m_conservative;$/;"	m	class:Eigen::SparseSparseProduct
m_copyMatrix	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfpackMatrixType m_copyMatrix;$/;"	m	class:Eigen::UmfPackLU
m_countPerCol	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    mutable VectorI m_countPerCol;$/;"	m	class:Eigen::SparseSelfAdjointView
m_countPerRow	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    mutable VectorI m_countPerRow;$/;"	m	class:Eigen::SparseSelfAdjointView
m_currentBlockRows	./Thirdparty/sparseicp/include/Eigen/src/Core/CommaInitializer.h	/^  Index m_currentBlockRows; \/\/ current block height$/;"	m	struct:Eigen::CommaInitializer
m_currentEl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_currentEl;            \/\/ the current element in sparse\/linked-list mode$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_data	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    T *m_data;$/;"	m	class:Eigen::DenseStorage
m_data	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    internal::plain_array<T,Size,_Options> m_data;$/;"	m	class:Eigen::DenseStorage
m_data	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  internal::plain_array<Scalar,EIGEN_SIZE_MIN_PREFER_FIXED(Size,MaxSize),0> m_data;$/;"	m	struct:Eigen::internal::gemv_static_vector_if
m_data	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    PointerType m_data;$/;"	m	class:Eigen::MapBase
m_data	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^    Scalar* EIGEN_RESTRICT m_data;$/;"	m	class:Eigen::internal::blas_data_mapper
m_data	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^    const Scalar* EIGEN_RESTRICT m_data;$/;"	m	class:Eigen::internal::const_blas_data_mapper
m_data	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    Storage m_data;$/;"	m	class:Eigen::SparseMatrix
m_data	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    Storage m_data;$/;"	m	class:Eigen::SparseVector
m_data	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    const internal::CompressedStorage<Scalar,Index>& m_data;$/;"	m	class:Eigen::SparseVector::InnerIterator
m_data	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    const internal::CompressedStorage<Scalar,Index>& m_data;$/;"	m	class:Eigen::SparseVector::ReverseInnerIterator
m_data_matrix	./Thirdparty/sparseicp/ICP.h	/^        const MatrixType &m_data_matrix;$/;"	m	struct:nanoflann::KDTreeAdaptor
m_data_matrix	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		const MatrixType &m_data_matrix;$/;"	m	struct:nanoflann::KDTreeEigenMatrixAdaptor
m_deallocate	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    bool m_deallocate;$/;"	m	class:Eigen::internal::aligned_stack_memory_handler
m_dec	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^    const DecompositionType& m_dec;$/;"	m	struct:Eigen::internal::image_retval_base
m_dec	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^    const DecompositionType& m_dec;$/;"	m	struct:Eigen::internal::kernel_retval_base
m_dec	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^    const DecompositionType& m_dec;$/;"	m	struct:Eigen::internal::solve_retval_base
m_dec	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^    const DecompositionType& m_dec;$/;"	m	struct:Eigen::internal::solve_retval_with_guess
m_dec	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^    const DecompositionType& m_dec;$/;"	m	struct:Eigen::internal::sparse_solve_retval_base
m_dest	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Dest& m_dest;$/;"	m	struct:Eigen::internal::gemm_functor
m_detPermR	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    Index m_detPermR; \/\/ Determinant of the coefficient matrix$/;"	m	class:Eigen::SparseLU
m_det_p	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    Index m_det_p;$/;"	m	class:Eigen::PartialPivLU
m_det_pq	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    Index m_det_pq, m_nonzero_pivots;$/;"	m	class:Eigen::FullPivLU
m_det_pq	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    Index m_det_pq;$/;"	m	class:Eigen::ColPivHouseholderQR
m_det_pq	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    Index m_det_pq;$/;"	m	class:Eigen::FullPivHouseholderQR
m_diag	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    VectorType m_diag;                                \/\/ the diagonal coefficients (LDLT mode)$/;"	m	class:Eigen::SimplicialCholeskyBase
m_diagSize	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::JacobiSVD
m_diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    DiagonalVectorType m_diagonal;$/;"	m	class:Eigen::DiagonalMatrix
m_diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    typename DiagonalVectorType::Nested m_diagonal;$/;"	m	class:Eigen::DiagonalWrapper
m_diagonal	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    typename DiagonalType::Nested m_diagonal;$/;"	m	class:Eigen::DiagonalProduct
m_diagpivotthresh	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    RealScalar m_diagpivotthresh; \/\/ Specifies the threshold used for a diagonal entry to be an acceptable pivot$/;"	m	class:Eigen::SparseLU
m_direction	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  VectorType m_origin, m_direction;$/;"	m	class:Eigen::ParametrizedLine
m_direction	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType m_origin, m_direction;$/;"	m	class:Eigen::ParametrizedLine
m_dparm	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Matrix<double,DPARM_SIZE,1> m_dparm; \/\/ Scalar vector for the input parameters$/;"	m	class:Eigen::PastixBase
m_droptol	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    RealScalar m_droptol;$/;"	m	class:Eigen::IncompleteLUT
m_eigenvectorsOk	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    bool m_eigenvectorsOk;$/;"	m	class:Eigen::ComplexEigenSolver
m_eigenvectorsOk	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    bool m_eigenvectorsOk;$/;"	m	class:Eigen::EigenSolver
m_eigenvectorsOk	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    bool m_eigenvectorsOk;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_eigenvectorsOk	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    bool m_eigenvectorsOk;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_eivalues	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    EigenvalueType m_eivalues;$/;"	m	class:Eigen::ComplexEigenSolver
m_eivalues	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    EigenvalueType m_eivalues;$/;"	m	class:Eigen::EigenSolver
m_eivalues	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    RealVectorType m_eivalues;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_eivec	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    EigenvectorType m_eivec;$/;"	m	class:Eigen::ComplexEigenSolver
m_eivec	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    MatrixType m_eivec;$/;"	m	class:Eigen::EigenSolver
m_eivec	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    MatrixType m_eivec;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_eivec	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    MatrixType m_eivec;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_else	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    typename ElseMatrixType::Nested m_else;$/;"	m	class:Eigen::Select
m_end	./Thirdparty/sparseicp/include/Eigen/src/Core/CoreIterators.h	/^    const Index m_end;$/;"	m	class:Eigen::DenseBase::InnerIterator
m_end	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_end;$/;"	m	class:Eigen::internal::AmbiVector
m_end	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    const Index m_end;$/;"	m	class:Eigen::MappedSparseMatrix::InnerIterator
m_end	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    const Index m_end;$/;"	m	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
m_end	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      Index m_end;$/;"	m	class:Eigen::BlockImpl::InnerIterator
m_end	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    Index m_end;$/;"	m	class:Eigen::SparseMatrix::InnerIterator
m_end	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    const Index m_end;$/;"	m	class:Eigen::SparseVector::InnerIterator
m_endidrow	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_endidrow;                       \/\/ End index of row indices of the current column$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_endidval	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index m_endidval;                 \/\/ End of the column value$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_epsilon	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    RealScalar m_epsilon;       \/\/ epsilon used to prune zero coefficients$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_epsilon	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  typename NumTraits<Scalar>::Real m_epsilon;$/;"	m	class:Eigen::SparseView
m_error	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable RealScalar m_error;$/;"	m	class:Eigen::IterativeSolverBase
m_etree	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    IndexVector m_etree; \/\/ Column elimination tree $/;"	m	class:Eigen::SparseLU
m_etree	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    IndexVector m_etree;            \/\/ Column elimination tree$/;"	m	class:Eigen::SparseQR
m_exponent	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  const Scalar m_exponent;$/;"	m	struct:Eigen::internal::scalar_pow_op
m_expression	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    NestedExpressionType m_expression;$/;"	m	class:Eigen::ArrayWrapper
m_expression	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    NestedExpressionType m_expression;$/;"	m	class:Eigen::MatrixWrapper
m_expression	./Thirdparty/sparseicp/include/Eigen/src/Core/CoreIterators.h	/^    const Derived& m_expression;$/;"	m	class:Eigen::DenseBase::InnerIterator
m_expression	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^    const ExpressionType& m_expression;$/;"	m	class:Eigen::ForceAlignedAccess
m_expression	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^    const ExpressionType m_expression;$/;"	m	class:Eigen::NestByValue
m_expression	./Thirdparty/sparseicp/include/Eigen/src/Core/NoAlias.h	/^    ExpressionType& m_expression;$/;"	m	class:Eigen::NoAlias
m_expression	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    ExpressionType& m_expression;$/;"	m	class:Eigen::SwapWrapper
m_extractedDataAreDirty	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable bool m_extractedDataAreDirty;$/;"	m	class:Eigen::SuperLUBase
m_extractedDataAreDirty	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable bool m_extractedDataAreDirty;$/;"	m	class:Eigen::UmfPackLU
m_factor	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^  Scalar m_factor;$/;"	m	class:Eigen::UniformScaling
m_factor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    Scalar m_factor;$/;"	m	class:Eigen::SparseDenseOuterProduct::InnerIterator
m_factorizationIsOk	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::CholmodBase
m_factorizationIsOk	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::IncompleteLUT
m_factorizationIsOk	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable bool m_isInitialized, m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::IterativeSolverBase
m_factorizationIsOk	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::PastixBase
m_factorizationIsOk	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    bool m_initialized, m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::PardisoImpl
m_factorizationIsOk	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::SPQR
m_factorizationIsOk	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_factorizationIsOk	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::SparseLU
m_factorizationIsOk	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::SuperLUBase
m_factorizationIsOk	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::UmfPackLU
m_factorizationIsok	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    bool m_factorizationIsok;$/;"	m	class:Eigen::SparseQR
m_fillfactor	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    int m_fillfactor;$/;"	m	class:Eigen::IncompleteLUT
m_firstRowElt	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    IndexVector m_firstRowElt;      \/\/ First element in each row$/;"	m	class:Eigen::SparseQR
m_format	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^    IOFormat m_format;$/;"	m	class:Eigen::WithFormat
m_functor	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    const BinaryOp m_functor;$/;"	m	class:Eigen::CwiseBinaryOp
m_functor	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^    const NullaryOp m_functor;$/;"	m	class:Eigen::CwiseNullaryOp
m_functor	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^    const UnaryOp m_functor;$/;"	m	class:Eigen::CwiseUnaryOp
m_functor	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    ViewOp m_functor;$/;"	m	class:Eigen::CwiseUnaryView
m_functor	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    const BinaryOp& m_functor;$/;"	m	class:Eigen::SelfCwiseBinaryOp
m_functor	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    const MemberOp m_functor;$/;"	m	class:Eigen::PartialReduxExpr
m_functor	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^  const BinaryOp m_functor;$/;"	m	struct:Eigen::internal::member_redux
m_functor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const BinaryFunc m_functor;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_functor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const BinaryFunc& m_functor;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_functor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const BinaryOp& m_functor;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_functor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const UnaryOp m_functor;$/;"	m	class:Eigen::CwiseUnaryOpImpl::InnerIterator
m_functor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const UnaryOp m_functor;$/;"	m	class:Eigen::CwiseUnaryOpImpl::ReverseInnerIterator
m_functor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const ViewOp m_functor;$/;"	m	class:Eigen::CwiseUnaryViewImpl::InnerIterator
m_functor	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const ViewOp m_functor;$/;"	m	class:Eigen::CwiseUnaryViewImpl::ReverseInnerIterator
m_global_iter	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      Index m_global_iter;$/;"	m	class:Eigen::RealQZ
m_glu	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    typename Base::GlobalLU_t m_glu; $/;"	m	class:Eigen::SparseLU
m_glu	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  typename SparseLUImpl<Scalar, Index>::GlobalLU_t& m_glu;$/;"	m	struct:Eigen::internal::column_dfs_traits
m_guess	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^    const typename Guess::Nested m_guess;$/;"	m	struct:Eigen::internal::solve_retval_with_guess
m_hCoeffs	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    CoeffVectorType m_hCoeffs;$/;"	m	class:Eigen::HessenbergDecomposition
m_hCoeffs	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    CoeffVectorType m_hCoeffs;$/;"	m	class:Eigen::Tridiagonalization
m_hCoeffs	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    HCoeffsType m_hCoeffs;$/;"	m	class:Eigen::ColPivHouseholderQR
m_hCoeffs	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    HCoeffsType m_hCoeffs;$/;"	m	class:Eigen::FullPivHouseholderQR
m_hCoeffs	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^  typename HCoeffsType::Nested m_hCoeffs;$/;"	m	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
m_hCoeffs	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    HCoeffsType m_hCoeffs;$/;"	m	class:Eigen::HouseholderQR
m_hcoeffs	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    ScalarVector m_hcoeffs;         \/\/ The Householder coefficients$/;"	m	class:Eigen::SparseQR
m_hess	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    HessenbergDecomposition<MatrixType> m_hess;$/;"	m	class:Eigen::ComplexSchur
m_hess	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    const HessenbergDecomposition<MatrixType>& m_hess;$/;"	m	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
m_hess	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    HessenbergDecomposition<MatrixType> m_hess;$/;"	m	class:Eigen::RealSchur
m_householder	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    MatrixType m_householder;$/;"	m	class:Eigen::internal::UpperBidiagonalization
m_id	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    Index m_id;$/;"	m	class:Eigen::MappedSparseMatrix::InnerIterator
m_id	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    Index m_id;$/;"	m	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
m_id	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Index m_id;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_id	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    Index m_id;$/;"	m	class:Eigen::SparseMatrix::InnerIterator
m_id	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    Index m_id;$/;"	m	class:Eigen::SparseMatrix::ReverseInnerIterator
m_id	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    Index m_id;$/;"	m	class:Eigen::SparseVector::InnerIterator
m_id	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    Index m_id;$/;"	m	class:Eigen::SparseVector::ReverseInnerIterator
m_idrow	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_idrow;                          \/\/ Index to browse the row indices $/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_idval	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_idval;                          \/\/ Index to browse the values in the current column$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_index	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    const internal::variable_if_dynamicindex<Index, DiagIndex> m_index;$/;"	m	class:Eigen::Diagonal
m_index	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^        Index m_index;$/;"	m	class:Eigen::SparseMatrix::SingletonVector
m_indexPtr	./Thirdparty/sparseicp/include/Eigen/src/MetisSupport/MetisSupport.h	/^    IndexVector m_indexPtr; \/\/ Pointer to the adjacenccy list of each row\/column$/;"	m	class:Eigen::MetisOrdering
m_indices	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::Map
m_indices	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::PermutationMatrix
m_indices	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typename IndicesType::Nested m_indices;$/;"	m	class:Eigen::PermutationWrapper
m_indices	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::Map
m_indices	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::Transpositions
m_indices	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    const typename IndicesType::Nested m_indices;$/;"	m	class:Eigen::TranspositionsWrapper
m_indices	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    Index* m_indices;$/;"	m	class:Eigen::internal::CompressedStorage
m_indices	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    const Index* m_indices;$/;"	m	class:Eigen::SparseMatrix::InnerIterator
m_indices	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    const Index* m_indices;$/;"	m	class:Eigen::SparseMatrix::ReverseInnerIterator
m_indices_dists	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		std::vector<std::pair<IndexType,DistanceType> >& m_indices_dists;$/;"	m	class:nanoflann::RadiusResultSet
m_info	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::LLT
m_info	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::CholmodBase
m_info	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::ComplexSchur
m_info	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      ComputationInfo m_info;$/;"	m	class:Eigen::RealQZ
m_info	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::RealSchur
m_info	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_info	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::IncompleteLUT
m_info	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable ComputationInfo m_info;$/;"	m	class:Eigen::IterativeSolverBase
m_info	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable ComputationInfo m_info; $/;"	m	class:Eigen::PastixBase
m_info	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::PardisoImpl
m_info	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SPQR
m_info	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_info	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SparseLU
m_info	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SparseQR
m_info	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SuperLUBase
m_info	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::UmfPackLU
m_initialized	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    bool m_initialized, m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::PardisoImpl
m_initisOk	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int m_initisOk; $/;"	m	class:Eigen::PastixBase
m_inner	./Thirdparty/sparseicp/include/Eigen/src/Core/CoreIterators.h	/^    Index m_inner;$/;"	m	class:Eigen::DenseBase::InnerIterator
m_inner	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^    internal::variable_if_dynamic<Index, InnerStrideAtCompileTime> m_inner;$/;"	m	class:Eigen::Stride
m_innerIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    const int* m_innerIndexPtr;$/;"	m	class:Eigen::UmfPackLU
m_innerIndices	./Thirdparty/sparseicp/include/Eigen/src/MetisSupport/MetisSupport.h	/^    IndexVector m_innerIndices; \/\/ Adjacency list $/;"	m	class:Eigen::MetisOrdering
m_innerIndices	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    Index*  m_innerIndices;$/;"	m	class:Eigen::MappedSparseMatrix
m_innerNonZeros	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    Index* m_innerNonZeros;     \/\/ optional, if null then the data is compressed$/;"	m	class:Eigen::SparseMatrix
m_innerSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    Index   m_innerSize;$/;"	m	class:Eigen::MappedSparseMatrix
m_innerSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    Index m_innerSize;$/;"	m	class:Eigen::SparseMatrix
m_input	./main.cc	/^Input *m_input;$/;"	v
m_interPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  const Packet m_interPacket;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_invdiag	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    Vector m_invdiag;$/;"	m	class:Eigen::DiagonalPreconditioner
m_invp	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Matrix<Index,Dynamic,1> m_invp;  \/\/ Inverse permutation vector$/;"	m	class:Eigen::PastixBase
m_iparm	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Matrix<int,IPARM_SIZE,1> m_iparm; \/\/ integer vector for the input parameters$/;"	m	class:Eigen::PastixBase
m_iparm	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable ParameterType m_iparm;$/;"	m	class:Eigen::PardisoImpl
m_isAllocated	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    bool m_isInitialized, m_isAllocated;$/;"	m	class:Eigen::JacobiSVD
m_isDense	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    bool m_isDense;             \/\/ mode of the vector$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::LDLT
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::LLT
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::CholmodBase
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::ComplexEigenSolver
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::ComplexSchur
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::EigenSolver
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::HessenbergDecomposition
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      bool m_isInitialized;$/;"	m	class:Eigen::RealQZ
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::RealSchur
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::Tridiagonalization
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::DiagonalPreconditioner
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::IncompleteLUT
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable bool m_isInitialized, m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::IterativeSolverBase
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::PartialPivLU
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::PastixBase
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::ColPivHouseholderQR
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivHouseholderQR
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::HouseholderQR
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::SPQR
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    bool m_isInitialized, m_isAllocated;$/;"	m	class:Eigen::JacobiSVD
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/SVD/UpperBidiagonalization.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::internal::UpperBidiagonalization
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::SparseLU
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::SparseQR
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::SuperLUBase
m_isInitialized	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::UmfPackLU
m_isQSorted	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    bool m_isQSorted;               \/\/ whether Q is sorted or not$/;"	m	class:Eigen::SparseQR
m_isRUpToDate	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable bool m_isRUpToDate;$/;"	m	class:Eigen::SPQR
m_isRValue	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    bool m_isRValue;$/;"	m	class:Eigen::SparseMatrixBase
m_iterations	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable int m_iterations;$/;"	m	class:Eigen::IterativeSolverBase
m_jcol	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  Index m_jcol;$/;"	m	struct:Eigen::internal::column_dfs_traits
m_jcol	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  Index m_jcol;$/;"	m	struct:Eigen::internal::panel_dfs_traits
m_jsuper_ref	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  Index& m_jsuper_ref;$/;"	m	struct:Eigen::internal::column_dfs_traits
m_k	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^  int m_k;$/;"	m	class:DBoW2::TemplatedVocabulary
m_kc	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    DenseIndex m_kc;$/;"	m	class:Eigen::internal::level3_blocking
m_l	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable LUMatrixType m_l;$/;"	m	class:Eigen::SuperLUBase
m_l	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable LUMatrixType m_l;$/;"	m	class:Eigen::UmfPackLU
m_lastError	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    std::string m_lastError;$/;"	m	class:Eigen::SparseLU
m_lastError	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    std::string m_lastError;$/;"	m	class:Eigen::SparseQR
m_leaf_max_size	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		size_t m_leaf_max_size;$/;"	m	class:nanoflann::KDTreeSingleIndexAdaptor
m_length	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    Index m_length;$/;"	m	class:Eigen::HouseholderSequence
m_lhs	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::CwiseBinaryOp
m_lhs	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::ProductBase
m_lhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    typename internal::add_const_on_value_type<LhsNested>::type m_lhs;$/;"	m	class:Eigen::CoeffBasedProduct
m_lhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    const Lhs& m_lhs;$/;"	m	struct:Eigen::internal::gemm_functor
m_lhs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typename LhsMatrixTypeCleaned::Nested m_lhs;$/;"	m	struct:Eigen::internal::homogeneous_left_product_impl
m_lhs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typename MatrixType::Nested m_lhs;$/;"	m	struct:Eigen::internal::homogeneous_right_product_impl
m_lhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::SparseDenseOuterProduct
m_lhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::SparseDiagonalProduct
m_lhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::SparseSparseProduct
m_lhsIter	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    LhsIterator m_lhsIter;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_llCurrent	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_llCurrent;$/;"	m	class:Eigen::internal::AmbiVector
m_llSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_llSize;$/;"	m	class:Eigen::internal::AmbiVector
m_llStart	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_llStart;$/;"	m	class:Eigen::internal::AmbiVector
m_low	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  const Scalar m_low;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_lowPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  const Packet m_lowPacket;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_lu	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    FactorType m_lu;$/;"	m	class:Eigen::IncompleteLUT
m_lu	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    MatrixType m_lu;$/;"	m	class:Eigen::FullPivLU
m_lu	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    MatrixType m_lu;$/;"	m	class:Eigen::PartialPivLU
m_luImpl	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  SparseLUImpl<Scalar, Index>& m_luImpl;$/;"	m	struct:Eigen::internal::column_dfs_traits
m_mapL	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  const MappedSupernodalType& m_mapL;$/;"	m	struct:Eigen::SparseLUMatrixLReturnType
m_mapL	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  const MatrixLType& m_mapL;$/;"	m	struct:Eigen::SparseLUMatrixUReturnType
m_mapU	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  const MatrixUType& m_mapU;$/;"	m	struct:Eigen::SparseLUMatrixUReturnType
m_marker	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  Index* m_marker;$/;"	m	struct:Eigen::internal::panel_dfs_traits
m_mat	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    NCMatrix m_mat; \/\/ The input (permuted ) matrix $/;"	m	class:Eigen::SparseLU
m_matS	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    MatrixType m_matS;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_matT	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexMatrixType m_matT, m_matU;$/;"	m	class:Eigen::ComplexSchur
m_matT	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    MatrixType m_matT;$/;"	m	class:Eigen::EigenSolver
m_matT	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    MatrixType m_matT;$/;"	m	class:Eigen::RealSchur
m_matU	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^    MatrixUType m_matU;$/;"	m	class:Eigen::SVD
m_matU	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexMatrixType m_matT, m_matU;$/;"	m	class:Eigen::ComplexSchur
m_matU	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    MatrixType m_matU;$/;"	m	class:Eigen::RealSchur
m_matUisUptodate	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    bool m_matUisUptodate;$/;"	m	class:Eigen::ComplexSchur
m_matUisUptodate	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    bool m_matUisUptodate;$/;"	m	class:Eigen::RealSchur
m_matV	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^    MatrixVType m_matV;$/;"	m	class:Eigen::SVD
m_matX	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    EigenvectorType m_matX;$/;"	m	class:Eigen::ComplexEigenSolver
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::LDLT
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::LLT
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    typename internal::nested<MatrixType>::type m_matrix;$/;"	m	class:Eigen::CwiseUnaryView
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Diagonal
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::DiagonalProduct
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    ExpressionTypeNested m_matrix;$/;"	m	class:Eigen::Flagged
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^    const typename ExpressionType::Nested m_matrix;$/;"	m	class:Eigen::WithFormat
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	struct:Eigen::internal::permut_matrix_product_retval
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::Replicate
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Reverse
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SelfAdjointView
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    Lhs& m_matrix;$/;"	m	class:Eigen::SelfCwiseBinaryOp
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Transpose
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	struct:Eigen::internal::transposition_matrix_product_retval
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::TriangularView
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionTypeNested m_matrix;$/;"	m	class:Eigen::VectorwiseOp
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::PartialReduxExpr
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Cwise.h	/^    ExpressionTypeNested m_matrix;$/;"	m	class:Eigen::Cwise
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  MatrixType m_matrix;$/;"	m	class:Eigen::Transform
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^    const typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Minor
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::HessenbergDecomposition
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::Tridiagonalization
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Homogeneous
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  MatrixType m_matrix;$/;"	m	class:Eigen::Transform
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^  MatrixTypeNested m_matrix;$/;"	m	struct:Eigen::internal::inverse_impl
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable SparseMatrixType m_matrix;$/;"	m	class:Eigen::PardisoImpl
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    CholMatrixType m_matrix;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    const MappedSparseMatrix& m_matrix;$/;"	m	class:Eigen::MappedSparseMatrix::InnerIterator
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    const MappedSparseMatrix& m_matrix;$/;"	m	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    typename SparseMatrixType::Nested m_matrix;$/;"	m	class:Eigen::BlockImpl
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    typename XprType::Nested m_matrix;$/;"	m	class:Eigen::BlockImpl
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	struct:Eigen::internal::permut_sparsematrix_product_retval
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SparseSymmetricPermutationProduct
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::SparseSelfAdjointView
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SparseTriangularView
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SparseView
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const MappedSuperNodalMatrix& m_matrix; \/\/ Supernodal lower triangular matrix $/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_matrix	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable LUMatrixType m_matrix;  \/\/ copy of the factorized matrix$/;"	m	class:Eigen::SuperLUBase
m_matrixU	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    MatrixUType m_matrixU;$/;"	m	class:Eigen::JacobiSVD
m_matrixV	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    MatrixVType m_matrixV;$/;"	m	class:Eigen::JacobiSVD
m_max	./Thirdparty/DBoW2/DUtils/Random.h	/^  int m_max;$/;"	m	class:DUtils::Random::UnrepeatedRandomizer
m_max	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  VectorType m_min, m_max;$/;"	m	class:Eigen::AlignedBox
m_max	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  VectorType m_min, m_max;$/;"	m	class:Eigen::AlignedBox
m_maxIterations	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    static const int m_maxIterations = 30;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_maxIterations	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  int m_maxIterations;$/;"	m	class:Eigen::IterativeSolverBase
m_maxIterationsPerRow	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    static const int m_maxIterationsPerRow = 30;$/;"	m	class:Eigen::ComplexSchur
m_maxIterationsPerRow	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    static const int m_maxIterationsPerRow = 40;$/;"	m	class:Eigen::RealSchur
m_maxIters	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    Index m_maxIters;$/;"	m	class:Eigen::ComplexSchur
m_maxIters	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      Index m_maxIters;$/;"	m	class:Eigen::RealQZ
m_maxIters	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    Index m_maxIters;$/;"	m	class:Eigen::RealSchur
m_maxpivot	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    RealScalar m_maxpivot, m_prescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_maxpivot	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::ColPivHouseholderQR
m_maxpivot	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::FullPivHouseholderQR
m_mc	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    DenseIndex m_mc;$/;"	m	class:Eigen::internal::level3_blocking
m_min	./Thirdparty/DBoW2/DUtils/Random.h	/^  int m_min;$/;"	m	class:DUtils::Random::UnrepeatedRandomizer
m_min	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  VectorType m_min, m_max;$/;"	m	class:Eigen::AlignedBox
m_min	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  VectorType m_min, m_max;$/;"	m	class:Eigen::AlignedBox
m_mode	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_mode;$/;"	m	class:Eigen::internal::AmbiVector
m_msglvl	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    Index m_type, m_msglvl;$/;"	m	class:Eigen::PardisoImpl
m_nc	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    DenseIndex m_nc;$/;"	m	class:Eigen::internal::level3_blocking
m_nnz	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    Index   m_nnz;$/;"	m	class:Eigen::MappedSparseMatrix
m_nnzL	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    Index m_nnzL, m_nnzU; \/\/ Nonzeros in L and U factors $/;"	m	class:Eigen::SparseLU
m_nnzU	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    Index m_nnzL, m_nnzU; \/\/ Nonzeros in L and U factors $/;"	m	class:Eigen::SparseLU
m_nodes	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^  std::vector<Node> m_nodes;$/;"	m	class:DBoW2::TemplatedVocabulary
m_nonZerosPerCol	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    VectorXi m_nonZerosPerCol;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_nonzeroSingularValues	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::JacobiSVD
m_nonzero_pivots	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    Index m_det_pq, m_nonzero_pivots;$/;"	m	class:Eigen::FullPivLU
m_nonzero_pivots	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    Index m_nonzero_pivots;$/;"	m	class:Eigen::ColPivHouseholderQR
m_nonzero_pivots	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    Index m_nonzero_pivots;$/;"	m	class:Eigen::FullPivHouseholderQR
m_nonzeropivots	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    Index m_nonzeropivots;          \/\/ Number of non zero pivots found $/;"	m	class:Eigen::SparseQR
m_normOfS	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      Scalar m_normOfT, m_normOfS;$/;"	m	class:Eigen::RealQZ
m_normOfT	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      Scalar m_normOfT, m_normOfS;$/;"	m	class:Eigen::RealQZ
m_nsuper	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_nsuper; \/\/ Number of supernodes $/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_numeric	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void* m_numeric;$/;"	m	class:Eigen::UmfPackLU
m_nzval	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Scalar* m_nzval; \/\/array of nonzero values packed by column$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_nzval_colptr	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index* m_nzval_colptr; \/\/nzval_colptr[j] Stores the location in nzval[] which starts column j $/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_object	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^    TPlainObjectType m_object;$/;"	m	class:Eigen::Ref
m_ordering	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    int m_ordering; \/\/ Ordering method to use, see SPQR's manual$/;"	m	class:Eigen::SPQR
m_origin	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  VectorType m_origin, m_direction;$/;"	m	class:Eigen::ParametrizedLine
m_origin	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType m_origin, m_direction;$/;"	m	class:Eigen::ParametrizedLine
m_originalMatrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^    const MatrixType& m_originalMatrix;$/;"	m	class:Eigen::LU
m_originalMatrix	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^    const MatrixType& m_originalMatrix;$/;"	m	struct:Eigen::internal::image_retval_base
m_other	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  Scalar m_other;$/;"	m	struct:Eigen::internal::scalar_inverse_mult_op
m_other	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  const Scalar m_other;$/;"	m	struct:Eigen::internal::scalar_add_op
m_other	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  const Scalar m_other;$/;"	m	struct:Eigen::internal::scalar_constant_op
m_other	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typename add_const_on_value_type<typename NumTraits<Scalar2>::Nested>::type m_other;$/;"	m	struct:Eigen::internal::scalar_multiple2_op
m_other	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typename add_const_on_value_type<typename NumTraits<Scalar>::Nested>::type m_other;$/;"	m	struct:Eigen::internal::scalar_multiple_op
m_other	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typename add_const_on_value_type<typename NumTraits<Scalar>::Nested>::type m_other;$/;"	m	struct:Eigen::internal::scalar_quotient1_op
m_other	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  const Derived& m_other; $/;"	m	struct:Eigen::SPQR_QProduct
m_other	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  const Derived& m_other;$/;"	m	struct:Eigen::SparseQR_QProduct
m_outer	./Thirdparty/sparseicp/include/Eigen/src/Core/CoreIterators.h	/^    const Index m_outer;$/;"	m	class:Eigen::DenseBase::InnerIterator
m_outer	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^    internal::variable_if_dynamic<Index, OuterStrideAtCompileTime> m_outer;$/;"	m	class:Eigen::Stride
m_outer	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::MappedSparseMatrix::InnerIterator
m_outer	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
m_outer	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^        Index m_outer;$/;"	m	class:Eigen::BlockImpl::InnerIterator
m_outer	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^        Index m_outer;$/;"	m	class:Eigen::BlockImpl::ReverseInnerIterator
m_outer	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const Index m_outer;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_outer	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    Index m_outer;$/;"	m	class:Eigen::SparseDenseOuterProduct::InnerIterator
m_outer	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    Index m_outer;$/;"	m	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
m_outer	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::SparseMatrix::InnerIterator
m_outer	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::SparseMatrix::ReverseInnerIterator
m_outer	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index m_outer;                    \/\/ Current column $/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_outerIndex	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    Index*  m_outerIndex;$/;"	m	class:Eigen::MappedSparseMatrix
m_outerIndex	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    Index* m_outerIndex;$/;"	m	class:Eigen::SparseMatrix
m_outerIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    const int* m_outerIndexPtr;$/;"	m	class:Eigen::UmfPackLU
m_outerSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    Index   m_outerSize;$/;"	m	class:Eigen::MappedSparseMatrix
m_outerSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, OuterSize> m_outerSize;$/;"	m	class:Eigen::BlockImpl
m_outerSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    Index m_outerSize;$/;"	m	class:Eigen::SparseMatrix
m_outerStart	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    Index m_outerStart;$/;"	m	class:Eigen::BlockImpl
m_outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    Index m_outerStride;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_outputPerm_c	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    PermutationType m_outputPerm_c; \/\/ The final column permutation$/;"	m	class:Eigen::SparseQR
m_p	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    PermutationPType m_p;$/;"	m	class:Eigen::FullPivLU
m_p	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    PermutationType m_p;$/;"	m	class:Eigen::PartialPivLU
m_p	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable IntColVectorType m_p;$/;"	m	class:Eigen::SuperLUBase
m_p	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable IntColVectorType m_p;$/;"	m	class:Eigen::UmfPackLU
m_packetStep	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  const Packet m_packetStep;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_parent	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    VectorXi m_parent;                                \/\/ elimination tree$/;"	m	class:Eigen::SimplicialCholeskyBase
m_pastixdata	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable pastix_data_t *m_pastixdata; \/\/ Data structure for pastix$/;"	m	class:Eigen::PastixBase
m_perfv	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    internal::perfvalues<Index> m_perfv; $/;"	m	class:Eigen::SparseLU
m_perm	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Matrix<Index,Dynamic,1> m_perm;  \/\/ Permutation vector$/;"	m	class:Eigen::PastixBase
m_perm	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable IntColVectorType m_perm;$/;"	m	class:Eigen::PardisoImpl
m_perm	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    const Perm& m_perm;$/;"	m	class:Eigen::SparseSymmetricPermutationProduct
m_perm_c	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    PermutationType m_perm_c; \/\/ Column permutation $/;"	m	class:Eigen::SparseLU
m_perm_c	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    PermutationType m_perm_c;       \/\/ Fill-reducing  Column  permutation$/;"	m	class:Eigen::SparseQR
m_perm_r	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    PermutationType m_perm_r ; \/\/ Row permutation$/;"	m	class:Eigen::SparseLU
m_permutation	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    const PermutationType& m_permutation;$/;"	m	class:Eigen::Transpose
m_permutation	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    const PermutationType& m_permutation;$/;"	m	struct:Eigen::internal::permut_matrix_product_retval
m_permutation	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^    const PermutationType& m_permutation;$/;"	m	struct:Eigen::internal::permut_sparsematrix_product_retval
m_pivotperm	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    PermutationType m_pivotperm;    \/\/ The permutation for rank revealing$/;"	m	class:Eigen::SparseQR
m_pmat	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    QRMatrixType m_pmat;            \/\/ Temporary matrix$/;"	m	class:Eigen::SparseQR
m_precision	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar m_precision;$/;"	m	class:Eigen::FullPivHouseholderQR
m_preconditioner	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Preconditioner m_preconditioner;$/;"	m	class:Eigen::IterativeSolverBase
m_prescribedThreshold	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    RealScalar m_maxpivot, m_prescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_prescribedThreshold	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::ColPivHouseholderQR
m_prescribedThreshold	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::FullPivHouseholderQR
m_prod	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    const NestedProduct& m_prod;$/;"	m	class:Eigen::ScaledProduct
m_pt	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable void *m_pt[64];$/;"	m	class:Eigen::PardisoImpl
m_ptr	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    T* m_ptr;$/;"	m	class:Eigen::internal::aligned_stack_memory_handler
m_q	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    PermutationQType m_q;$/;"	m	class:Eigen::FullPivLU
m_q	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable IntRowVectorType m_q;$/;"	m	class:Eigen::SuperLUBase
m_q	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable IntRowVectorType m_q;$/;"	m	class:Eigen::UmfPackLU
m_qr	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    MatrixType m_qr;$/;"	m	class:Eigen::ColPivHouseholderQR
m_qr	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    MatrixType m_qr;$/;"	m	class:Eigen::FullPivHouseholderQR
m_qr	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^  typename MatrixType::Nested m_qr;$/;"	m	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
m_qr	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    MatrixType m_qr;$/;"	m	class:Eigen::HouseholderQR
m_qr	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  QRType m_qr;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_qr	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  const SparseQRType& m_qr;$/;"	m	struct:Eigen::SparseQRMatrixQReturnType
m_qr	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  const SparseQRType& m_qr;$/;"	m	struct:Eigen::SparseQRMatrixQTransposeReturnType
m_qr	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  const SparseQRType& m_qr;$/;"	m	struct:Eigen::SparseQR_QProduct
m_qr_precond_morecols	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    internal::qr_preconditioner_impl<MatrixType, QRPreconditioner, internal::PreconditionIfMoreColsThanRows> m_qr_precond_morecols;$/;"	m	class:Eigen::JacobiSVD
m_qr_precond_morerows	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    internal::qr_preconditioner_impl<MatrixType, QRPreconditioner, internal::PreconditionIfMoreRowsThanCols> m_qr_precond_morerows;$/;"	m	class:Eigen::JacobiSVD
m_rank	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable Index m_rank; \/\/ The rank of the matrix$/;"	m	class:Eigen::SPQR
m_rank	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::image_retval_base
m_rank	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::kernel_retval_base
m_realQZ	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    RealQZ<MatrixType> m_realQZ;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_realSchur	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    RealSchur<MatrixType> m_realSchur;$/;"	m	class:Eigen::EigenSolver
m_reference	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  Scalar m_reference;$/;"	m	class:Eigen::SparseView
m_result	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    mutable PlainObject m_result;$/;"	m	class:Eigen::ProductBase
m_result	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    mutable PlainObject m_result;$/;"	m	class:Eigen::CoeffBasedProduct
m_returnOne	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    bool m_returnOne;$/;"	m	class:Eigen::SparseTriangularView::InnerIterator
m_rhs	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::CwiseBinaryOp
m_rhs	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::ProductBase
m_rhs	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^    typename Rhs::Nested m_rhs;$/;"	m	struct:Eigen::internal::triangular_solve_retval
m_rhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    typename internal::add_const_on_value_type<RhsNested>::type m_rhs;$/;"	m	class:Eigen::CoeffBasedProduct
m_rhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    const Rhs& m_rhs;$/;"	m	struct:Eigen::internal::gemm_functor
m_rhs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typename MatrixType::Nested m_rhs;$/;"	m	struct:Eigen::internal::homogeneous_left_product_impl
m_rhs	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typename Rhs::Nested m_rhs;$/;"	m	struct:Eigen::internal::homogeneous_right_product_impl
m_rhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_rhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::SparseDenseOuterProduct
m_rhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::SparseDiagonalProduct
m_rhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::SparseSparseProduct
m_rhs	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^    typename Rhs::Nested m_rhs;$/;"	m	struct:Eigen::internal::solve_retval_base
m_rhs	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^    const typename Rhs::Nested m_rhs;$/;"	m	struct:Eigen::internal::solve_retval_with_guess
m_rhs	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^    typename Rhs::Nested m_rhs;$/;"	m	struct:Eigen::internal::sparse_solve_retval_base
m_rhsIter	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    RhsIterator m_rhsIter;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_row	./Thirdparty/sparseicp/include/Eigen/src/Core/CommaInitializer.h	/^  Index m_row;              \/\/ current row id$/;"	m	struct:Eigen::CommaInitializer
m_row	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^    const Index m_row, m_col;$/;"	m	class:Eigen::Minor
m_row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^  Index m_row, m_col;$/;"	m	class:Eigen::Triplet
m_row	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_row; \/\/ Number of rows$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_rowFactor	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    const internal::variable_if_dynamic<Index, RowFactor> m_rowFactor;$/;"	m	class:Eigen::Replicate
m_rowind	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index* m_rowind; \/\/ Array of compressed row indices of rectangular supernodes$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_rowind_colptr	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index* m_rowind_colptr; \/\/rowind_colptr[j] stores the location in rowind[] which starts column j$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_rows	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, Rows>   m_rows;$/;"	m	class:Eigen::internal::BandMatrix
m_rows	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, _Rows>   m_rows;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_rows	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^    const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_rows;$/;"	m	class:Eigen::CwiseNullaryOp
m_rows	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    DenseIndex m_rows;$/;"	m	class:Eigen::DenseStorage
m_rows	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_rows;$/;"	m	class:Eigen::MapBase
m_rows	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::JacobiSVD
m_rowsTranspositions	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    IntColVectorType m_rowsTranspositions;$/;"	m	class:Eigen::FullPivLU
m_rowsTranspositions	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    TranspositionType m_rowsTranspositions;$/;"	m	class:Eigen::PartialPivLU
m_rowsTranspositions	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^  typename IntDiagSizeVectorType::Nested m_rowsTranspositions;$/;"	m	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
m_rows_transpositions	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    IntDiagSizeVectorType m_rows_transpositions;$/;"	m	class:Eigen::FullPivHouseholderQR
m_s	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^    Scalar m_c, m_s;$/;"	m	class:Eigen::JacobiRotation
m_scale	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^      Scalar m_scale;$/;"	m	struct:Eigen::GeneralProduct::adds
m_schur	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComplexSchur<MatrixType> m_schur;$/;"	m	class:Eigen::ComplexEigenSolver
m_scoring	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^  ScoringType m_scoring;$/;"	m	class:DBoW2::TemplatedVocabulary
m_scoring_object	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^  GeneralScoring* m_scoring_object;$/;"	m	class:DBoW2::TemplatedVocabulary
m_secs	./Thirdparty/DBoW2/DUtils/Timestamp.h	/^	unsigned long m_secs;	\/\/ seconds$/;"	m	class:DUtils::Timestamp
m_shift	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    Index m_shift;$/;"	m	class:Eigen::HouseholderSequence
m_shiftOffset	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    RealScalar m_shiftOffset[2];$/;"	m	class:Eigen::CholmodBase
m_shiftOffset	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    RealScalar m_shiftOffset;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_shiftScale	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    RealScalar m_shiftScale;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_sigma	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^    SingularValuesType m_sigma;$/;"	m	class:Eigen::SVD
m_sign	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    internal::SignMatrix m_sign;$/;"	m	class:Eigen::LDLT
m_singularValues	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    SingularValuesType m_singularValues;$/;"	m	class:Eigen::JacobiSVD
m_size	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    size_t m_size;$/;"	m	class:Eigen::internal::aligned_stack_memory_handler
m_size	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable int m_size; \/\/ Size of the matrix $/;"	m	class:Eigen::PastixBase
m_size	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    Index m_size;$/;"	m	class:Eigen::PardisoImpl
m_size	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_size;$/;"	m	class:Eigen::internal::AmbiVector
m_size	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    size_t m_size;$/;"	m	class:Eigen::internal::CompressedStorage
m_size	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    Index m_size;$/;"	m	class:Eigen::SparseVector
m_size	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		size_t m_size;$/;"	m	class:nanoflann::KDTreeSingleIndexAdaptor
m_sizeA	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    DenseIndex m_sizeA;$/;"	m	class:Eigen::internal::gemm_blocking_space
m_sizeB	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    DenseIndex m_sizeB;$/;"	m	class:Eigen::internal::gemm_blocking_space
m_sizeW	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    DenseIndex m_sizeW;$/;"	m	class:Eigen::internal::gemm_blocking_space
m_sluA	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SluMatrix m_sluA;$/;"	m	class:Eigen::SuperLUBase
m_sluB	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SluMatrix m_sluB, m_sluX;$/;"	m	class:Eigen::SuperLUBase
m_sluBerr	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluFerr, m_sluBerr;$/;"	m	class:Eigen::SuperLUBase
m_sluCscale	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluRscale, m_sluCscale;$/;"	m	class:Eigen::SuperLUBase
m_sluEqued	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable char m_sluEqued;$/;"	m	class:Eigen::SuperLUBase
m_sluEtree	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable std::vector<int> m_sluEtree;$/;"	m	class:Eigen::SuperLUBase
m_sluFerr	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluFerr, m_sluBerr;$/;"	m	class:Eigen::SuperLUBase
m_sluL	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SuperMatrix m_sluL, m_sluU;$/;"	m	class:Eigen::SuperLUBase
m_sluOptions	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable superlu_options_t m_sluOptions;$/;"	m	class:Eigen::SuperLUBase
m_sluRscale	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluRscale, m_sluCscale;$/;"	m	class:Eigen::SuperLUBase
m_sluStat	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SuperLUStat_t m_sluStat;$/;"	m	class:Eigen::SuperLUBase
m_sluU	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SuperMatrix m_sluL, m_sluU;$/;"	m	class:Eigen::SuperLUBase
m_sluX	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SluMatrix m_sluB, m_sluX;$/;"	m	class:Eigen::SuperLUBase
m_spqr	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  const SPQRType& m_spqr; $/;"	m	struct:Eigen::SPQR_QProduct
m_spqr	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  const SPQRType& m_spqr;$/;"	m	struct:Eigen::SPQRMatrixQReturnType
m_spqr	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  const SPQRType& m_spqr;$/;"	m	struct:Eigen::SPQRMatrixQTransposeReturnType
m_start	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_start;$/;"	m	class:Eigen::internal::AmbiVector
m_start	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    const Index m_start;$/;"	m	class:Eigen::MappedSparseMatrix::InnerIterator
m_start	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    const Index m_start;$/;"	m	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
m_start	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    const Index m_start;$/;"	m	class:Eigen::SparseMatrix::ReverseInnerIterator
m_start	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    const Index m_start;$/;"	m	class:Eigen::SparseVector::ReverseInnerIterator
m_startCol	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<Index, XprType::ColsAtCompileTime == 1 ? 0 : Dynamic> m_startCol;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_startCol	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, XprType::ColsAtCompileTime == 1 ? 0 : Dynamic> m_startCol;$/;"	m	class:Eigen::BlockImpl
m_startRow	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<Index, XprType::RowsAtCompileTime == 1 ? 0 : Dynamic> m_startRow;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_startRow	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, XprType::RowsAtCompileTime == 1 ? 0 : Dynamic> m_startRow;$/;"	m	class:Eigen::BlockImpl
m_startidval	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index m_startidval;               \/\/ Start of the column value$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_staticA	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN16 LhsScalar m_staticA[SizeA];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_staticB	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN16 RhsScalar m_staticB[SizeB];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_staticW	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN16 RhsScalar m_staticW[SizeW];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_step	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  const Scalar m_step;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_stepPacket	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  const Packet m_stepPacket;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_storage	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    DenseStorage<Scalar, Base::MaxSizeAtCompileTime, Base::RowsAtCompileTime, Base::ColsAtCompileTime, Options> m_storage;$/;"	m	class:Eigen::PlainObjectBase
m_stride	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    StrideType m_stride;$/;"	m	class:Eigen::Map
m_stride	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^  StrideBase m_stride;$/;"	m	class:Eigen::RefBase
m_stride	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^    Index m_stride;$/;"	m	class:Eigen::internal::blas_data_mapper
m_stride	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^    Index m_stride;$/;"	m	class:Eigen::internal::const_blas_data_mapper
m_structureIsUptodate	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    bool m_structureIsUptodate;$/;"	m	class:Eigen::PastixLU
m_subdiag	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typename TridiagonalizationType::SubDiagonalType m_subdiag;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_subs	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, Subs>   m_subs;$/;"	m	class:Eigen::internal::BandMatrix
m_subs	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, _Subs>   m_subs;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_sup_to_col	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index* m_sup_to_col; \/\/sup_to_col[s] points to the starting column of the s-th supernode$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_supers	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, Supers> m_supers;$/;"	m	class:Eigen::internal::BandMatrix
m_supers	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, _Supers> m_supers;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_supno	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index m_supno;                    \/\/ Current SuperNode number$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_symbolic	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void* m_symbolic;$/;"	m	class:Eigen::UmfPackLU
m_symmetricmode	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    bool m_symmetricmode;$/;"	m	class:Eigen::SparseLU
m_temp	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    VectorType m_temp;$/;"	m	class:Eigen::HessenbergDecomposition
m_temp	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    RowVectorType m_temp;$/;"	m	class:Eigen::ColPivHouseholderQR
m_temp	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    RowVectorType m_temp;$/;"	m	class:Eigen::FullPivHouseholderQR
m_temp	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    RowVectorType m_temp;$/;"	m	class:Eigen::HouseholderQR
m_temporary	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    TmpMatrixType m_temporary;$/;"	m	class:Eigen::LDLT
m_then	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    typename ThenMatrixType::Nested m_then;$/;"	m	class:Eigen::Select
m_threshold	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    RealScalar m_threshold;         \/\/ Threshold to determine null Householder reflections$/;"	m	class:Eigen::SparseQR
m_tmp	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    ColumnVectorType m_tmp;$/;"	m	class:Eigen::EigenSolver
m_tmp	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    ColumnVectorType m_tmp;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_tolerance	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  RealScalar m_tolerance;$/;"	m	class:Eigen::IterativeSolverBase
m_tolerance	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    RealScalar m_tolerance; \/\/ treat columns with 2-norm below this tolerance as zero$/;"	m	class:Eigen::SPQR
m_tolerance	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    RealScalar m_tolerance;$/;"	m	class:Eigen::SparseSparseProduct
m_trans	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    bool m_trans;$/;"	m	class:Eigen::HouseholderSequence
m_transpose	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  bool m_transpose; $/;"	m	struct:Eigen::SPQR_QProduct
m_transpose	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  bool m_transpose;$/;"	m	struct:Eigen::SparseQR_QProduct
m_transpositions	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    TranspositionType m_transpositions;$/;"	m	class:Eigen::LDLT
m_transpositions	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    const TranspositionType& m_transpositions;$/;"	m	class:Eigen::Transpose
m_transpositions	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    const TranspositionType& m_transpositions;$/;"	m	struct:Eigen::internal::transposition_matrix_product_retval
m_triangularMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^    const TriangularType& m_triangularMatrix;$/;"	m	struct:Eigen::internal::triangular_solve_retval
m_type	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    Index m_type, m_msglvl;$/;"	m	class:Eigen::PardisoImpl
m_u	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable LUMatrixType m_u;$/;"	m	class:Eigen::SuperLUBase
m_u	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable LUMatrixType m_u;$/;"	m	class:Eigen::UmfPackLU
m_useDefaultThreshold	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    bool m_useDefaultThreshold;     \/\/ Use default threshold$/;"	m	class:Eigen::SparseQR
m_usePrescribedThreshold	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_usePrescribedThreshold	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::ColPivHouseholderQR
m_usePrescribedThreshold	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivHouseholderQR
m_usecs	./Thirdparty/DBoW2/DUtils/Timestamp.h	/^	unsigned long m_usecs;	\/\/ microseconds$/;"	m	class:DUtils::Timestamp
m_value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Scalar m_value;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^        Index m_value;$/;"	m	class:Eigen::SparseMatrix::SingletonVector
m_value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^  Scalar m_value;$/;"	m	class:Eigen::Triplet
m_valuePtr	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    const Scalar* m_valuePtr;$/;"	m	class:Eigen::UmfPackLU
m_values	./Thirdparty/DBoW2/DUtils/Random.h	/^  std::vector<int> m_values;$/;"	m	class:DUtils::Random::UnrepeatedRandomizer
m_values	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    Scalar* m_values;$/;"	m	class:Eigen::internal::CompressedStorage
m_values	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    Scalar* m_values;$/;"	m	class:Eigen::MappedSparseMatrix
m_values	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    const Scalar* m_values;$/;"	m	class:Eigen::SparseMatrix::InnerIterator
m_values	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    const Scalar* m_values;$/;"	m	class:Eigen::SparseMatrix::ReverseInnerIterator
m_vector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    const AmbiVector& m_vector; \/\/ the target vector$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_vectors	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    typename VectorsType::Nested m_vectors;$/;"	m	class:Eigen::HouseholderSequence
m_view	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  const SparseView& m_view;$/;"	m	class:Eigen::SparseView::InnerIterator
m_weighting	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^  WeightingType m_weighting;$/;"	m	class:DBoW2::TemplatedVocabulary
m_words	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^  std::vector<Node*> m_words;$/;"	m	class:DBoW2::TemplatedVocabulary
m_workMatrix	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    WorkMatrixType m_workMatrix;$/;"	m	class:Eigen::JacobiSVD
m_workspace	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      Matrix<Scalar,Dynamic,1> m_workspace;$/;"	m	class:Eigen::RealQZ
m_workspace	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  WorkspaceType m_workspace;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_workspace	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  typename internal::plain_col_type<MatrixType>::type m_workspace;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_workspace	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  typename internal::plain_row_type<MatrixType>::type m_workspace;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_workspaceVector	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    ColumnVectorType m_workspaceVector;$/;"	m	class:Eigen::RealSchur
m_xpr	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    const typename XprType::Nested m_xpr;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_xpr	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_xpr	./Thirdparty/sparseicp/include/Eigen/src/Core/CommaInitializer.h	/^  XprType& m_xpr;   \/\/ target expression$/;"	m	struct:Eigen::CommaInitializer
m_xpr	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::CwiseUnaryOp
m_xpr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const CwiseBinaryXpr& m_xpr;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_zero	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Scalar m_zero;$/;"	m	class:Eigen::internal::AmbiVector
machine_epsilon	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T machine_epsilon () { return NumTraits<T>::epsilon(); }$/;"	f	namespace:Eigen
madd	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, AccPacket& c, AccPacket& tmp) const$/;"	f	class:Eigen::internal::gebp_traits
madd	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, AccPacket& c, RhsPacket& tmp) const$/;"	f	class:Eigen::internal::gebp_traits
madd	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, DoublePacket& c, RhsPacket& \/*tmp*\/) const$/;"	f	class:Eigen::internal::gebp_traits
madd	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, ResPacket& c, RhsPacket& \/*tmp*\/) const$/;"	f	class:Eigen::internal::gebp_traits
madd_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd_impl(const LhsPacket& a, const RhsPacket& b, AccPacket& c, RhsPacket& tmp, const true_type&) const$/;"	f	class:Eigen::internal::gebp_traits
madd_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd_impl(const LhsScalar& a, const RhsScalar& b, ResScalar& c, RhsScalar& \/*tmp*\/, const false_type&) const$/;"	f	class:Eigen::internal::gebp_traits
main	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	./Thirdparty/DBoW2/build/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	./Thirdparty/DBoW2/build/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	./Thirdparty/g2o/build/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	./Thirdparty/g2o/build/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	./Thirdparty/g2o/g2o/core/sparse_block_matrix_test.cpp	/^int main (int argc, char** argv){$/;"	f
main	./Thirdparty/sparseicp/main.cpp	/^int main (int argc, char const ** argv)$/;"	f
main	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	./build/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	./build/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	./cmake-build-debug/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	./cmake-build-debug/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	./main.cc	/^int main(int argc, char *argv[]) {$/;"	f
makeAffine	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  void makeAffine()$/;"	f	class:Eigen::Transform
makeCompressed	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    void makeCompressed()$/;"	f	class:Eigen::SparseMatrix
makeGivens	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* r, internal::false_type)$/;"	f	class:Eigen::JacobiRotation
makeGivens	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* r, internal::true_type)$/;"	f	class:Eigen::JacobiRotation
makeGivens	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* z)$/;"	f	class:Eigen::JacobiRotation
makeHouseholder	./Thirdparty/sparseicp/include/Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::makeHouseholder($/;"	f	class:Eigen::MatrixBase
makeHouseholderInPlace	./Thirdparty/sparseicp/include/Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::makeHouseholderInPlace(Scalar& tau, RealScalar& beta)$/;"	f	class:Eigen::MatrixBase
makeJacobi	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^bool JacobiRotation<Scalar>::makeJacobi(const RealScalar& x, const Scalar& y, const RealScalar& z)$/;"	f	class:Eigen::JacobiRotation
makeJacobi	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^inline bool JacobiRotation<Scalar>::makeJacobi(const MatrixBase<Derived>& m, typename Derived::Index p, typename Derived::Index q)$/;"	f	class:Eigen::JacobiRotation
makeProperty	./Thirdparty/g2o/g2o/stuff/property.h	/^      P* makeProperty(const std::string& name_, const typename P::ValueType& v)$/;"	f	class:g2o::PropertyMap
make_block_householder_triangular_factor	./Thirdparty/sparseicp/include/Eigen/src/Householder/BlockHouseholder.h	/^void make_block_householder_triangular_factor(TriangularFactorType& triFactor, const VectorsType& vectors, const CoeffsType& hCoeffs)$/;"	f	namespace:Eigen::internal
malloc	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		void* malloc(const size_t req_size)$/;"	f	class:nanoflann::PooledAllocator
manageErrorCode	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void manageErrorCode(Index error)$/;"	f	class:Eigen::PardisoImpl
manage_caching_sizes	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline void manage_caching_sizes(Action action, std::ptrdiff_t* l1=0, std::ptrdiff_t* l2=0)$/;"	f	namespace:Eigen::internal
manage_caching_sizes_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline std::ptrdiff_t manage_caching_sizes_helper(std::ptrdiff_t a, std::ptrdiff_t b)$/;"	f	namespace:Eigen::internal
manage_multi_threading	./Thirdparty/sparseicp/include/Eigen/src/Core/products/Parallelizer.h	/^inline void manage_multi_threading(Action action, int* v)$/;"	f	namespace:Eigen::internal
map	./Thirdparty/g2o/g2o/types/se3quat.h	/^      Vector3d map(const Vector3d & xyz) const$/;"	f	class:g2o::SE3Quat
map	./Thirdparty/g2o/g2o/types/sim3.h	/^     Vector3d map (const Vector3d& xyz) const {$/;"	f	struct:g2o::Sim3
mapHessianMemory	./Thirdparty/g2o/g2o/core/base_binary_edge.hpp	/^void BaseBinaryEdge<D, E, VertexXiType, VertexXjType>::mapHessianMemory(double* d, int i, int j, bool rowMajor)$/;"	f	class:BaseBinaryEdge
mapHessianMemory	./Thirdparty/g2o/g2o/core/base_multi_edge.hpp	/^void BaseMultiEdge<D, E>::mapHessianMemory(double* d, int i, int j, bool rowMajor)$/;"	f	class:BaseMultiEdge
mapHessianMemory	./Thirdparty/g2o/g2o/core/base_unary_edge.h	/^      virtual void mapHessianMemory(double*, int, int, bool) {assert(0 && "BaseUnaryEdge does not map memory of the Hessian");}$/;"	f	class:g2o::BaseUnaryEdge
mapHessianMemory	./Thirdparty/g2o/g2o/core/base_vertex.hpp	/^void BaseVertex<D, T>::mapHessianMemory(double* d)$/;"	f	class:BaseVertex
map_file	./main.cc	/^	std::string map_file;$/;"	m	struct:__anon469	file:
map_save_file	./main.cc	/^	std::string map_save_file;$/;"	m	struct:__anon469	file:
map_superlu	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^MappedSparseMatrix<Scalar,Flags,Index> map_superlu(SluMatrix& sluMat)$/;"	f	namespace:Eigen::internal
marginalized	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        bool marginalized() const {return _marginalized;}$/;"	f	class:g2o::OptimizableGraph::Vertex
mark	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    Index mark ;  \/* for computing set differences and marking dead rows*\/$/;"	m	union:internal::Colamd_Row::__anon352
markAsRValue	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Derived& markAsRValue() { m_isRValue = true; return derived(); }$/;"	f	class:Eigen::SparseMatrixBase
marked	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Lazy.h	/^MatrixBase<Derived>::marked() const$/;"	f	class:Eigen::MatrixBase
matPrefix	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^  std::string matPrefix, matSuffix;$/;"	m	struct:Eigen::IOFormat
matSuffix	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^  std::string matPrefix, matSuffix;$/;"	m	struct:Eigen::IOFormat
mat_to_quat	./src/PnPsolver.cc	/^void PnPsolver::mat_to_quat(const double R[3][3], double q[4])$/;"	f	class:ORB_SLAM2::PnPsolver
mat_to_quat	./src/PoseSolver.cc	/^void PoseSolver::mat_to_quat(const double R[3][3], double q[4])$/;"	f	class:ORB_SLAM2::PoseSolver
match	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^  template<typename Derived> struct match {$/;"	s	struct:Eigen::internal::traits
match_points	./include/Tracking.h	/^    vector<pair<MapPoint*, MapPoint*> > match_points;$/;"	m	class:ORB_SLAM2::Tracking
matcher	./include/Initializer.h	/^	ORBmatcher matcher;$/;"	m	class:ORB_SLAM2::Initializer
matches	./include/Tracking.h	/^    vector<vector<pair<double, int> > > matches;$/;"	m	class:ORB_SLAM2::Tracking
matrix	./Thirdparty/g2o/g2o/core/base_multi_edge.h	/^        Eigen::Map<MatrixXd> matrix;     \/\/\/< the mapped memory$/;"	m	struct:g2o::BaseMultiEdge::HessianHelper
matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    MatrixWrapper<Derived> matrix() { return derived(); }$/;"	f	class:Eigen::ArrayBase
matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    const MatrixWrapper<const Derived> matrix() const { return derived(); }$/;"	f	class:Eigen::ArrayBase
matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    MatrixBase<Derived>& matrix() { return *this; }$/;"	f	class:Eigen::MatrixBase
matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    const MatrixBase<Derived>& matrix() const { return *this; }$/;"	f	class:Eigen::MatrixBase
matrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline MatrixType& matrix() { return m_matrix; }$/;"	f	class:Eigen::Transform
matrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline const MatrixType& matrix() const { return m_matrix; }$/;"	f	class:Eigen::Transform
matrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^    inline RotationMatrixType matrix() const { return derived().toRotationMatrix(); }$/;"	f	class:Eigen::RotationBase
matrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline MatrixType& matrix() { return m_matrix; }$/;"	f	class:Eigen::Transform
matrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline const MatrixType& matrix() const { return m_matrix; }$/;"	f	class:Eigen::Transform
matrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    _MatrixTypeNested& matrix() { return m_matrix.const_cast_derived(); }$/;"	f	class:Eigen::SparseSelfAdjointView
matrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    const _MatrixTypeNested& matrix() const { return m_matrix; }$/;"	f	class:Eigen::SparseSelfAdjointView
matrixH	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    MatrixHReturnType matrixH() const$/;"	f	class:Eigen::HessenbergDecomposition
matrixL	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    inline typename Traits::MatrixL matrixL() const$/;"	f	class:Eigen::LDLT
matrixL	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    inline typename Traits::MatrixL matrixL() const$/;"	f	class:Eigen::LLT
matrixL	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixL matrixL() const {$/;"	f	class:Eigen::SimplicialLDLT
matrixL	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixL matrixL() const {$/;"	f	class:Eigen::SimplicialLLT
matrixL	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    SparseLUMatrixLReturnType<SCMatrix> matrixL() const$/;"	f	class:Eigen::SparseLU
matrixL	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const LMatrixType& matrixL() const$/;"	f	class:Eigen::SuperLU
matrixL	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const LUMatrixType& matrixL() const$/;"	f	class:Eigen::UmfPackLU
matrixLDLT	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    inline const MatrixType& matrixLDLT() const$/;"	f	class:Eigen::LDLT
matrixLLT	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    inline const MatrixType& matrixLLT() const$/;"	f	class:Eigen::LLT
matrixLU	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    inline const MatrixType& matrixLU() const$/;"	f	class:Eigen::FullPivLU
matrixLU	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    inline const MatrixType& matrixLU() const$/;"	f	class:Eigen::PartialPivLU
matrixQ	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/QR.h	/^    MatrixType matrixQ(void) const {$/;"	f	class:Eigen::QR
matrixQ	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HouseholderSequenceType matrixQ() const$/;"	f	class:Eigen::HessenbergDecomposition
matrixQ	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      const MatrixType& matrixQ() const {$/;"	f	class:Eigen::RealQZ
matrixQ	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    HouseholderSequenceType matrixQ() const$/;"	f	class:Eigen::Tridiagonalization
matrixQ	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    HouseholderSequenceType matrixQ(void) const$/;"	f	class:Eigen::ColPivHouseholderQR
matrixQ	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^inline typename FullPivHouseholderQR<MatrixType>::MatrixQReturnType FullPivHouseholderQR<MatrixType>::matrixQ() const$/;"	f	class:Eigen::FullPivHouseholderQR
matrixQ	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    SPQRMatrixQReturnType<SPQR> matrixQ() const$/;"	f	class:Eigen::SPQR
matrixQ	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    SparseQRMatrixQReturnType<SparseQR> matrixQ() const $/;"	f	class:Eigen::SparseQR
matrixQR	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    const MatrixType& matrixQR() const$/;"	f	class:Eigen::ColPivHouseholderQR
matrixQR	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    const MatrixType& matrixQR() const$/;"	f	class:Eigen::FullPivHouseholderQR
matrixQR	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    const MatrixType& matrixQR() const$/;"	f	class:Eigen::HouseholderQR
matrixR	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/QR.h	/^    matrixR(void) const$/;"	f	class:Eigen::QR
matrixR	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    const MatrixType& matrixR() const$/;"	f	class:Eigen::ColPivHouseholderQR
matrixR	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    const MatrixType matrixR() const$/;"	f	class:Eigen::SPQR
matrixR	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    const QRMatrixType& matrixR() const { return m_R; }$/;"	f	class:Eigen::SparseQR
matrixS	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      const MatrixType& matrixS() const {$/;"	f	class:Eigen::RealQZ
matrixT	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    const ComplexMatrixType& matrixT() const$/;"	f	class:Eigen::ComplexSchur
matrixT	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      const MatrixType& matrixT() const {$/;"	f	class:Eigen::RealQZ
matrixT	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    const MatrixType& matrixT() const$/;"	f	class:Eigen::RealSchur
matrixT	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    MatrixTReturnType matrixT() const$/;"	f	class:Eigen::Tridiagonalization
matrixU	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    inline typename Traits::MatrixU matrixU() const$/;"	f	class:Eigen::LDLT
matrixU	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    inline typename Traits::MatrixU matrixU() const$/;"	f	class:Eigen::LLT
matrixU	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^    const MatrixUType& matrixU() const { return m_matU; }$/;"	f	class:Eigen::SVD
matrixU	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    const ComplexMatrixType& matrixU() const$/;"	f	class:Eigen::ComplexSchur
matrixU	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    const MatrixType& matrixU() const$/;"	f	class:Eigen::RealSchur
matrixU	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    const MatrixUType& matrixU() const$/;"	f	class:Eigen::JacobiSVD
matrixU	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixU matrixU() const {$/;"	f	class:Eigen::SimplicialLDLT
matrixU	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixU matrixU() const {$/;"	f	class:Eigen::SimplicialLLT
matrixU	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    SparseLUMatrixUReturnType<SCMatrix,MappedSparseMatrix<Scalar,ColMajor,Index> > matrixU() const$/;"	f	class:Eigen::SparseLU
matrixU	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const UMatrixType& matrixU() const$/;"	f	class:Eigen::SuperLU
matrixU	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const LUMatrixType& matrixU() const$/;"	f	class:Eigen::UmfPackLU
matrixV	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^    const MatrixVType& matrixV() const { return m_matV; }$/;"	f	class:Eigen::SVD
matrixV	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    const MatrixVType& matrixV() const$/;"	f	class:Eigen::JacobiSVD
matrixZ	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      const MatrixType& matrixZ() const {$/;"	f	class:Eigen::RealQZ
matrix_swap_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^struct matrix_swap_impl$/;"	s	namespace:Eigen::internal
matrix_swap_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^struct matrix_swap_impl<MatrixTypeA, MatrixTypeB, true>$/;"	s	namespace:Eigen::internal
matrix_type_times_scalar_type	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^template<typename OtherScalarType, typename MatrixType> struct matrix_type_times_scalar_type$/;"	s	namespace:Eigen::internal
max	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline VectorType& (max)() { return m_max; }$/;"	f	class:Eigen::AlignedBox
max	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline const VectorType& (max)() const { return m_max; }$/;"	f	class:Eigen::AlignedBox
max	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline VectorType& (max)() { return m_max; }$/;"	f	class:Eigen::AlignedBox
max	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline const VectorType& (max)() const { return m_max; }$/;"	f	class:Eigen::AlignedBox
max	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^max$/;"	f
max	./Thirdparty/sparseicp/include/nanoflann.hpp	48;"	d
maxCoeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::maxCoeff() const$/;"	f	class:Eigen::DenseBase
maxCoeff	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_maxCoeff>::Type maxCoeff() const$/;"	f	class:Eigen::VectorwiseOp
maxCoeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::maxCoeff(IndexType* index) const$/;"	f	class:Eigen::DenseBase
maxCoeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::maxCoeff(IndexType* rowPtr, IndexType* colPtr) const$/;"	f	class:Eigen::DenseBase
maxDimension	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^int OptimizableGraph::maxDimension() const{$/;"	f	class:g2o::OptimizableGraph
maxIterations	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  int maxIterations() const$/;"	f	class:Eigen::IterativeSolverBase
maxN	./Thirdparty/g2o/g2o/core/matrix_structure.h	/^    int maxN;     \/\/\/< size of the allocated memory$/;"	m	class:g2o::MatrixStructure
maxNz	./Thirdparty/g2o/g2o/core/matrix_structure.h	/^    int maxNz;    \/\/\/< size of the allocated memory$/;"	m	class:g2o::MatrixStructure
maxPivot	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    RealScalar maxPivot() const { return m_maxpivot; }$/;"	f	class:Eigen::FullPivLU
maxPivot	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar maxPivot() const { return m_maxpivot; }$/;"	f	class:Eigen::ColPivHouseholderQR
maxPivot	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar maxPivot() const { return m_maxpivot; }$/;"	f	class:Eigen::FullPivHouseholderQR
maxTrialsAfterFailure	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      int maxTrialsAfterFailure() const { return _maxTrialsAfterFailure->value();}$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
max_coeff_visitor	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^struct max_coeff_visitor : coeff_visitor<Derived>$/;"	s	namespace:Eigen::internal
max_icp	./Thirdparty/sparseicp/ICP.h	/^        int max_icp = 100;        \/\/\/ max ICP iteration$/;"	m	struct:SICP::Parameters
max_icp	./Thirdparty/sparseicp/ICP.h	/^        int max_icp;    \/\/\/ max ICP iteration$/;"	m	class:ICP::Parameters
max_inner	./Thirdparty/sparseicp/ICP.h	/^        int max_inner = 1;        \/\/\/ max inner iteration. If max_inner=1 then ADMM else ALM$/;"	m	struct:SICP::Parameters
max_mu	./Thirdparty/sparseicp/ICP.h	/^        double max_mu = 1e5;      \/\/\/ max penalty$/;"	m	struct:SICP::Parameters
max_outer	./Thirdparty/sparseicp/ICP.h	/^        int max_outer = 100;      \/\/\/ max outer iteration$/;"	m	struct:SICP::Parameters
max_outer	./Thirdparty/sparseicp/ICP.h	/^        int max_outer;  \/\/\/ max outer iteration$/;"	m	class:ICP::Parameters
max_size	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    size_type max_size() const$/;"	f	class:Eigen::aligned_allocator
maximum_number_of_correspondences	./include/PnPsolver.h	/^  int maximum_number_of_correspondences;$/;"	m	class:ORB_SLAM2::PnPsolver
maximum_number_of_correspondences	./include/PoseSolver.h	/^  int maximum_number_of_correspondences;$/;"	m	class:ORB_SLAM2::PoseSolver
maxsuper	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index maxsuper; \/\/ The maximum size for a supernode in complete LU$/;"	m	struct:Eigen::internal::perfvalues
mb	./include/Frame.h	/^    float mb;$/;"	m	class:ORB_SLAM2::Frame
mb	./include/KeyFrame.h	/^    const float fx, fy, cx, cy, invfx, invfy, mbf, mb, mThDepth;$/;"	m	class:ORB_SLAM2::KeyFrame
mbAbortBA	./include/LocalMapping.h	/^    bool mbAbortBA;$/;"	m	class:ORB_SLAM2::LocalMapping
mbAcceptKeyFrames	./include/LocalMapping.h	/^    bool mbAcceptKeyFrames;$/;"	m	class:ORB_SLAM2::LocalMapping
mbActivateLocalizationMode	./include/System.h	/^    bool mbActivateLocalizationMode;$/;"	m	class:ORB_SLAM2::System
mbBad	./include/KeyFrame.h	/^    bool mbBad;    $/;"	m	class:ORB_SLAM2::KeyFrame
mbBad	./include/MapPoint.h	/^     bool mbBad;$/;"	m	class:ORB_SLAM2::MapPoint
mbCheckOrientation	./include/ORBmatcher.h	/^    bool mbCheckOrientation;$/;"	m	class:ORB_SLAM2::ORBmatcher
mbDeactivateLocalizationMode	./include/System.h	/^    bool mbDeactivateLocalizationMode;$/;"	m	class:ORB_SLAM2::System
mbFinishRequested	./include/LocalMapping.h	/^    bool mbFinishRequested;$/;"	m	class:ORB_SLAM2::LocalMapping
mbFinishRequested	./include/LoopClosing.h	/^    bool mbFinishRequested;$/;"	m	class:ORB_SLAM2::LoopClosing
mbFinishRequested	./include/Viewer.h	/^    bool mbFinishRequested;$/;"	m	class:ORB_SLAM2::Viewer
mbFinished	./include/LocalMapping.h	/^    bool mbFinished;$/;"	m	class:ORB_SLAM2::LocalMapping
mbFinished	./include/LoopClosing.h	/^    bool mbFinished;$/;"	m	class:ORB_SLAM2::LoopClosing
mbFinished	./include/Viewer.h	/^    bool mbFinished;$/;"	m	class:ORB_SLAM2::Viewer
mbFinishedGBA	./include/LoopClosing.h	/^    bool mbFinishedGBA;$/;"	m	class:ORB_SLAM2::LoopClosing
mbFirstConnection	./include/KeyFrame.h	/^    bool mbFirstConnection;$/;"	m	class:ORB_SLAM2::KeyFrame
mbFixScale	./include/LoopClosing.h	/^    bool mbFixScale;$/;"	m	class:ORB_SLAM2::LoopClosing
mbFixScale	./include/Sim3Solver.h	/^    bool mbFixScale;$/;"	m	class:ORB_SLAM2::Sim3Solver
mbInitialComputations	./include/Frame.h	/^    static bool mbInitialComputations;$/;"	m	class:ORB_SLAM2::Frame
mbInitialComputations	./src/Frame.cc	/^bool Frame::mbInitialComputations=true;$/;"	m	class:ORB_SLAM2::Frame	file:
mbMonocular	./include/LocalMapping.h	/^    bool mbMonocular;$/;"	m	class:ORB_SLAM2::LocalMapping
mbNotErase	./include/KeyFrame.h	/^    bool mbNotErase;$/;"	m	class:ORB_SLAM2::KeyFrame
mbNotStop	./include/LocalMapping.h	/^    bool mbNotStop;$/;"	m	class:ORB_SLAM2::LocalMapping
mbOnlyTracking	./include/FrameDrawer.h	/^    bool mbOnlyTracking;$/;"	m	class:ORB_SLAM2::FrameDrawer
mbOnlyTracking	./include/Tracking.h	/^    bool mbOnlyTracking;$/;"	m	class:ORB_SLAM2::Tracking
mbRGB	./include/Tracking.h	/^    bool mbRGB;$/;"	m	class:ORB_SLAM2::Tracking
mbReset	./include/System.h	/^    bool mbReset;$/;"	m	class:ORB_SLAM2::System
mbResetRequested	./include/LocalMapping.h	/^    bool mbResetRequested;$/;"	m	class:ORB_SLAM2::LocalMapping
mbResetRequested	./include/LoopClosing.h	/^    bool mbResetRequested;$/;"	m	class:ORB_SLAM2::LoopClosing
mbRunningGBA	./include/LoopClosing.h	/^    bool mbRunningGBA;$/;"	m	class:ORB_SLAM2::LoopClosing
mbStopGBA	./include/LoopClosing.h	/^    bool mbStopGBA;$/;"	m	class:ORB_SLAM2::LoopClosing
mbStopRequested	./include/LocalMapping.h	/^    bool mbStopRequested;$/;"	m	class:ORB_SLAM2::LocalMapping
mbStopRequested	./include/Viewer.h	/^    bool mbStopRequested;$/;"	m	class:ORB_SLAM2::Viewer
mbStopped	./include/LocalMapping.h	/^    bool mbStopped;$/;"	m	class:ORB_SLAM2::LocalMapping
mbStopped	./include/Viewer.h	/^    bool mbStopped;$/;"	m	class:ORB_SLAM2::Viewer
mbToBeErased	./include/KeyFrame.h	/^    bool mbToBeErased;$/;"	m	class:ORB_SLAM2::KeyFrame
mbTrackInView	./include/MapPoint.h	/^    bool mbTrackInView;$/;"	m	class:ORB_SLAM2::MapPoint
mbVO	./include/Tracking.h	/^    bool mbVO;$/;"	m	class:ORB_SLAM2::Tracking
mbf	./include/Frame.h	/^    float mbf;$/;"	m	class:ORB_SLAM2::Frame
mbf	./include/KeyFrame.h	/^    const float fx, fy, cx, cy, invfx, invfy, mbf, mb, mThDepth;$/;"	m	class:ORB_SLAM2::KeyFrame
mbf	./include/Tracking.h	/^    float mbf;$/;"	m	class:ORB_SLAM2::Tracking
mc	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline DenseIndex mc() const { return m_mc; }$/;"	f	class:Eigen::internal::level3_blocking
mean	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::mean() const$/;"	f	class:Eigen::DenseBase
mean	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_mean>::Type mean() const$/;"	f	class:Eigen::VectorwiseOp
meanValue	./Thirdparty/DBoW2/DBoW2/FORB.cpp	/^void FORB::meanValue(const std::vector<FORB::pDescriptor> &descriptors, $/;"	f	class:DBoW2::FORB
measurement	./Thirdparty/g2o/g2o/core/base_edge.h	/^      const Measurement& measurement() const { return _measurement;}$/;"	f	class:g2o::BaseEdge
measurementDimension	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  int OptimizableGraph::Edge::measurementDimension() const$/;"	f	class:g2o::OptimizableGraph::Edge
memInit	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Memory.h	/^Index SparseLUImpl<Scalar,Index>::memInit(Index m, Index n, Index annz, Index lwork, Index fillratio, Index panel_size,  GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
memXpand	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Memory.h	/^Index SparseLUImpl<Scalar,Index>::memXpand(VectorType& vec, Index& maxlen, Index nbElts, MemType memtype, Index& num_expansions)$/;"	f	class:Eigen::internal::SparseLUImpl
mem_expand	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  void mem_expand(IndexVector& lsub, Index& nextl, Index chmark)$/;"	f	struct:Eigen::internal::column_dfs_traits
mem_expand	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  void mem_expand(IndexVector& \/*glu.lsub*\/, Index \/*nextl*\/, Index \/*chmark*\/) {}$/;"	f	struct:Eigen::internal::panel_dfs_traits
member_redux	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^  member_redux(const BinaryOp func) : m_functor(func) {}$/;"	f	struct:Eigen::internal::member_redux
member_redux	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^struct member_redux {$/;"	s	namespace:Eigen::internal
merged	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox merged(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
meta_sqrt	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^class meta_sqrt<Y, InfX, SupX, true> { public:  enum { ret = (SupX*SupX <= Y) ? SupX : InfX }; };$/;"	c	namespace:Eigen
metric_L1	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	struct metric_L1 {$/;"	s	namespace:nanoflann
metric_L2	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	struct metric_L2 {$/;"	s	namespace:nanoflann
metric_L2_Simple	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	struct metric_L2_Simple {$/;"	s	namespace:nanoflann
metric_t	./Thirdparty/sparseicp/ICP.h	/^        typedef typename Distance::template traits<num_t,self_t>::distance_t metric_t;$/;"	t	struct:nanoflann::KDTreeAdaptor
metric_t	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		typedef typename Distance::template traits<num_t,self_t>::distance_t metric_t;$/;"	t	struct:nanoflann::KDTreeEigenMatrixAdaptor
mfGridElementHeightInv	./include/Frame.h	/^    static float mfGridElementHeightInv;$/;"	m	class:ORB_SLAM2::Frame
mfGridElementHeightInv	./include/KeyFrame.h	/^    const float mfGridElementHeightInv;$/;"	m	class:ORB_SLAM2::KeyFrame
mfGridElementHeightInv	./src/Frame.cc	/^float Frame::mfGridElementWidthInv, Frame::mfGridElementHeightInv;$/;"	m	class:ORB_SLAM2::Frame	file:
mfGridElementWidthInv	./include/Frame.h	/^    static float mfGridElementWidthInv;$/;"	m	class:ORB_SLAM2::Frame
mfGridElementWidthInv	./include/KeyFrame.h	/^    const float mfGridElementWidthInv;$/;"	m	class:ORB_SLAM2::KeyFrame
mfGridElementWidthInv	./src/Frame.cc	/^float Frame::mfGridElementWidthInv, Frame::mfGridElementHeightInv;$/;"	m	class:ORB_SLAM2::Frame	file:
mfLogScaleFactor	./include/Frame.h	/^    float mfLogScaleFactor;$/;"	m	class:ORB_SLAM2::Frame
mfLogScaleFactor	./include/KeyFrame.h	/^    const float mfLogScaleFactor;$/;"	m	class:ORB_SLAM2::KeyFrame
mfMaxDistance	./include/MapPoint.h	/^     float mfMaxDistance;$/;"	m	class:ORB_SLAM2::MapPoint
mfMinDistance	./include/MapPoint.h	/^     float mfMinDistance;$/;"	m	class:ORB_SLAM2::MapPoint
mfNNratio	./include/ORBmatcher.h	/^    float mfNNratio;$/;"	m	class:ORB_SLAM2::ORBmatcher
mfScaleFactor	./include/Frame.h	/^    float mfScaleFactor;$/;"	m	class:ORB_SLAM2::Frame
mfScaleFactor	./include/KeyFrame.h	/^    const float mfScaleFactor;$/;"	m	class:ORB_SLAM2::KeyFrame
mg2oScw	./include/LoopClosing.h	/^    g2o::Sim3 mg2oScw;$/;"	m	class:ORB_SLAM2::LoopClosing
middle	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  enum { middle = (lower + upper) \/ 2,$/;"	e	enum:Eigen::internal::floor_log2_selector::__anon173
middleCols	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline ColsBlockXpr middleCols(Index startCol, Index numCols)$/;"	f
middleCols	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline ConstColsBlockXpr middleCols(Index startCol, Index numCols) const$/;"	f
middleCols	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNColsBlockXpr<N>::Type middleCols(Index startCol, Index n = N) const$/;"	f
middleCols	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename NColsBlockXpr<N>::Type middleCols(Index startCol, Index n = N)$/;"	f
middleRows	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline ConstRowsBlockXpr middleRows(Index startRow, Index n) const$/;"	f
middleRows	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline RowsBlockXpr middleRows(Index startRow, Index n)$/;"	f
middleRows	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNRowsBlockXpr<N>::Type middleRows(Index startRow, Index n = N) const$/;"	f
middleRows	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename NRowsBlockXpr<N>::Type middleRows(Index startRow, Index n = N)$/;"	f
middleSplit	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		void middleSplit(IndexType* ind, IndexType count, IndexType& index, int& cutfeat, DistanceType& cutval, const BoundingBox& bbox)$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
middleSplit_	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		void middleSplit_(IndexType* ind, IndexType count, IndexType& index, int& cutfeat, DistanceType& cutval, const BoundingBox& bbox)$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
min	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline VectorType& (min)() { return m_min; }$/;"	f	class:Eigen::AlignedBox
min	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline const VectorType& (min)() const { return m_min; }$/;"	f	class:Eigen::AlignedBox
min	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline VectorType& (min)() { return m_min; }$/;"	f	class:Eigen::AlignedBox
min	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline const VectorType& (min)() const { return m_min; }$/;"	f	class:Eigen::AlignedBox
min	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^min$/;"	f
min	./Thirdparty/sparseicp/include/nanoflann.hpp	49;"	d
minCoeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::minCoeff() const$/;"	f	class:Eigen::DenseBase
minCoeff	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_minCoeff>::Type minCoeff() const$/;"	f	class:Eigen::VectorwiseOp
minCoeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::minCoeff(IndexType* index) const$/;"	f	class:Eigen::DenseBase
minCoeff	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::minCoeff(IndexType* rowId, IndexType* colId) const$/;"	f	class:Eigen::DenseBase
minThFAST	./include/ORBextractor.h	/^    int minThFAST;$/;"	m	class:ORB_SLAM2::ORBextractor
min_coeff_visitor	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^struct min_coeff_visitor : coeff_visitor<Derived>$/;"	s	namespace:Eigen::internal
mindist	./Thirdparty/sparseicp/include/nanoflann.hpp	/^			DistanceType mindist;     \/* Minimum distance to query for all nodes below. *\/$/;"	m	struct:nanoflann::KDTreeSingleIndexAdaptor::BranchStruct
minimalEstimateDimension	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  int OptimizableGraph::Vertex::minimalEstimateDimension() const$/;"	f	class:g2o::OptimizableGraph::Vertex
minimum_degree_ordering	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Amd.h	/^void minimum_degree_ordering(SparseMatrix<Scalar,ColMajor,Index>& C, PermutationMatrix<Dynamic,Dynamic,Index>& perm)$/;"	f	namespace:Eigen::internal
minor	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^MatrixBase<Derived>::minor(Index row, Index col) const$/;"	f	class:Eigen::MatrixBase
minor	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^MatrixBase<Derived>::minor(Index row, Index col)$/;"	f	class:Eigen::MatrixBase
minus	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^Timestamp Timestamp::minus(unsigned long secs, unsigned long usecs) const$/;"	f	class:Timestamp
mlFrameTimes	./include/Tracking.h	/^    list<double> mlFrameTimes;$/;"	m	class:ORB_SLAM2::Tracking
mlNewKeyFrames	./include/LocalMapping.h	/^    std::list<KeyFrame*> mlNewKeyFrames;$/;"	m	class:ORB_SLAM2::LocalMapping
mlRelativeFramePoses	./include/Tracking.h	/^    list<cv::Mat> mlRelativeFramePoses;$/;"	m	class:ORB_SLAM2::Tracking
mlbLost	./include/Tracking.h	/^    list<bool> mlbLost;$/;"	m	class:ORB_SLAM2::Tracking
mlpLoopKeyFrameQueue	./include/LoopClosing.h	/^    std::list<KeyFrame*> mlpLoopKeyFrameQueue;$/;"	m	class:ORB_SLAM2::LoopClosing
mlpRecentAddedMapPoints	./include/LocalMapping.h	/^    std::list<MapPoint*> mlpRecentAddedMapPoints;$/;"	m	class:ORB_SLAM2::LocalMapping
mlpReferences	./include/Tracking.h	/^    list<KeyFrame*> mlpReferences;$/;"	m	class:ORB_SLAM2::Tracking
mlpTemporalPoints	./include/Tracking.h	/^    list<MapPoint*> mlpTemporalPoints;$/;"	m	class:ORB_SLAM2::Tracking
mnBAFixedForKF	./include/KeyFrame.h	/^    long unsigned int mnBAFixedForKF;$/;"	m	class:ORB_SLAM2::KeyFrame
mnBAGlobalForKF	./include/KeyFrame.h	/^    long unsigned int mnBAGlobalForKF;$/;"	m	class:ORB_SLAM2::KeyFrame
mnBAGlobalForKF	./include/MapPoint.h	/^    long unsigned int mnBAGlobalForKF;$/;"	m	class:ORB_SLAM2::MapPoint
mnBALocalForKF	./include/KeyFrame.h	/^    long unsigned int mnBALocalForKF;$/;"	m	class:ORB_SLAM2::KeyFrame
mnBALocalForKF	./include/MapPoint.h	/^    long unsigned int mnBALocalForKF;$/;"	m	class:ORB_SLAM2::MapPoint
mnBestInliers	./include/PnPsolver.h	/^  int mnBestInliers;$/;"	m	class:ORB_SLAM2::PnPsolver
mnBestInliers	./include/PoseSolver.h	/^  int mnBestInliers;$/;"	m	class:ORB_SLAM2::PoseSolver
mnBestInliers	./include/Sim3Solver.h	/^    int mnBestInliers;$/;"	m	class:ORB_SLAM2::Sim3Solver
mnBigChangeIdx	./include/Map.h	/^    int mnBigChangeIdx;$/;"	m	class:ORB_SLAM2::Map
mnCorrectedByKF	./include/MapPoint.h	/^    long unsigned int mnCorrectedByKF;$/;"	m	class:ORB_SLAM2::MapPoint
mnCorrectedReference	./include/MapPoint.h	/^    long unsigned int mnCorrectedReference;    $/;"	m	class:ORB_SLAM2::MapPoint
mnCovisibilityConsistencyTh	./include/LoopClosing.h	/^    float mnCovisibilityConsistencyTh;$/;"	m	class:ORB_SLAM2::LoopClosing
mnFeaturesPerLevel	./include/ORBextractor.h	/^    std::vector<int> mnFeaturesPerLevel;$/;"	m	class:ORB_SLAM2::ORBextractor
mnFirstFrame	./include/MapPoint.h	/^    long int mnFirstFrame;$/;"	m	class:ORB_SLAM2::MapPoint
mnFirstKFid	./include/MapPoint.h	/^    long int mnFirstKFid;$/;"	m	class:ORB_SLAM2::MapPoint
mnFound	./include/MapPoint.h	/^     int mnFound;$/;"	m	class:ORB_SLAM2::MapPoint
mnFrameId	./include/KeyFrame.h	/^    const long unsigned int mnFrameId;$/;"	m	class:ORB_SLAM2::KeyFrame
mnFullBAIdx	./include/LoopClosing.h	/^    bool mnFullBAIdx;$/;"	m	class:ORB_SLAM2::LoopClosing
mnFuseCandidateForKF	./include/MapPoint.h	/^    long unsigned int mnFuseCandidateForKF;$/;"	m	class:ORB_SLAM2::MapPoint
mnFuseTargetForKF	./include/KeyFrame.h	/^    long unsigned int mnFuseTargetForKF;$/;"	m	class:ORB_SLAM2::KeyFrame
mnGridCols	./include/KeyFrame.h	/^    const int mnGridCols;$/;"	m	class:ORB_SLAM2::KeyFrame
mnGridRows	./include/KeyFrame.h	/^    const int mnGridRows;$/;"	m	class:ORB_SLAM2::KeyFrame
mnId	./include/Frame.h	/^    long unsigned int mnId;$/;"	m	class:ORB_SLAM2::Frame
mnId	./include/KeyFrame.h	/^    long unsigned int mnId;$/;"	m	class:ORB_SLAM2::KeyFrame
mnId	./include/MapPoint.h	/^    long unsigned int mnId;$/;"	m	class:ORB_SLAM2::MapPoint
mnInliersi	./include/PnPsolver.h	/^  int mnInliersi;$/;"	m	class:ORB_SLAM2::PnPsolver
mnInliersi	./include/PoseSolver.h	/^  int mnInliersi;$/;"	m	class:ORB_SLAM2::PoseSolver
mnInliersi	./include/Sim3Solver.h	/^    int mnInliersi;$/;"	m	class:ORB_SLAM2::Sim3Solver
mnIterations	./include/PnPsolver.h	/^  int mnIterations;$/;"	m	class:ORB_SLAM2::PnPsolver
mnIterations	./include/PoseSolver.h	/^  int mnIterations;$/;"	m	class:ORB_SLAM2::PoseSolver
mnIterations	./include/Sim3Solver.h	/^    int mnIterations;$/;"	m	class:ORB_SLAM2::Sim3Solver
mnLastFrameSeen	./include/MapPoint.h	/^    long unsigned int mnLastFrameSeen;$/;"	m	class:ORB_SLAM2::MapPoint
mnLastKeyFrameId	./include/Tracking.h	/^    unsigned int mnLastKeyFrameId;$/;"	m	class:ORB_SLAM2::Tracking
mnLastRelocFrameId	./include/Tracking.h	/^    unsigned int mnLastRelocFrameId;$/;"	m	class:ORB_SLAM2::Tracking
mnLoopPointForKF	./include/MapPoint.h	/^    long unsigned int mnLoopPointForKF;$/;"	m	class:ORB_SLAM2::MapPoint
mnLoopQuery	./include/KeyFrame.h	/^    long unsigned int mnLoopQuery;$/;"	m	class:ORB_SLAM2::KeyFrame
mnLoopWords	./include/KeyFrame.h	/^    int mnLoopWords;$/;"	m	class:ORB_SLAM2::KeyFrame
mnMatchesInliers	./include/Tracking.h	/^    int mnMatchesInliers;$/;"	m	class:ORB_SLAM2::Tracking
mnMaxKFid	./include/Map.h	/^    long unsigned int mnMaxKFid;$/;"	m	class:ORB_SLAM2::Map
mnMaxX	./include/Frame.h	/^    static float mnMaxX;$/;"	m	class:ORB_SLAM2::Frame
mnMaxX	./include/KeyFrame.h	/^    const int mnMaxX;$/;"	m	class:ORB_SLAM2::KeyFrame
mnMaxX	./src/Frame.cc	/^float Frame::mnMinX, Frame::mnMinY, Frame::mnMaxX, Frame::mnMaxY;$/;"	m	class:ORB_SLAM2::Frame	file:
mnMaxY	./include/Frame.h	/^    static float mnMaxY;$/;"	m	class:ORB_SLAM2::Frame
mnMaxY	./include/KeyFrame.h	/^    const int mnMaxY;$/;"	m	class:ORB_SLAM2::KeyFrame
mnMaxY	./src/Frame.cc	/^float Frame::mnMinX, Frame::mnMinY, Frame::mnMaxX, Frame::mnMaxY;$/;"	m	class:ORB_SLAM2::Frame	file:
mnMinX	./include/Frame.h	/^    static float mnMinX;$/;"	m	class:ORB_SLAM2::Frame
mnMinX	./include/KeyFrame.h	/^    const int mnMinX;$/;"	m	class:ORB_SLAM2::KeyFrame
mnMinX	./src/Frame.cc	/^float Frame::mnMinX, Frame::mnMinY, Frame::mnMaxX, Frame::mnMaxY;$/;"	m	class:ORB_SLAM2::Frame	file:
mnMinY	./include/Frame.h	/^    static float mnMinY;$/;"	m	class:ORB_SLAM2::Frame
mnMinY	./include/KeyFrame.h	/^    const int mnMinY;$/;"	m	class:ORB_SLAM2::KeyFrame
mnMinY	./src/Frame.cc	/^float Frame::mnMinX, Frame::mnMinY, Frame::mnMaxX, Frame::mnMaxY;$/;"	m	class:ORB_SLAM2::Frame	file:
mnRefinedInliers	./include/PnPsolver.h	/^  int mnRefinedInliers;$/;"	m	class:ORB_SLAM2::PnPsolver
mnRefinedInliers	./include/PoseSolver.h	/^  int mnRefinedInliers;$/;"	m	class:ORB_SLAM2::PoseSolver
mnRelocQuery	./include/KeyFrame.h	/^    long unsigned int mnRelocQuery;$/;"	m	class:ORB_SLAM2::KeyFrame
mnRelocWords	./include/KeyFrame.h	/^    int mnRelocWords;$/;"	m	class:ORB_SLAM2::KeyFrame
mnScaleLevels	./include/Frame.h	/^    int mnScaleLevels;$/;"	m	class:ORB_SLAM2::Frame
mnScaleLevels	./include/KeyFrame.h	/^    const int mnScaleLevels;$/;"	m	class:ORB_SLAM2::KeyFrame
mnTrackReferenceForFrame	./include/KeyFrame.h	/^    long unsigned int mnTrackReferenceForFrame;$/;"	m	class:ORB_SLAM2::KeyFrame
mnTrackReferenceForFrame	./include/MapPoint.h	/^    long unsigned int mnTrackReferenceForFrame;$/;"	m	class:ORB_SLAM2::MapPoint
mnTrackScaleLevel	./include/MapPoint.h	/^    int mnTrackScaleLevel;$/;"	m	class:ORB_SLAM2::MapPoint
mnTracked	./include/FrameDrawer.h	/^    int mnTracked, mnTrackedVO;$/;"	m	class:ORB_SLAM2::FrameDrawer
mnTrackedVO	./include/FrameDrawer.h	/^    int mnTracked, mnTrackedVO;$/;"	m	class:ORB_SLAM2::FrameDrawer
mnVisible	./include/MapPoint.h	/^     int mnVisible;$/;"	m	class:ORB_SLAM2::MapPoint
mpCurrentKF	./include/LoopClosing.h	/^    KeyFrame* mpCurrentKF;$/;"	m	class:ORB_SLAM2::LoopClosing
mpCurrentKeyFrame	./include/LocalMapping.h	/^    KeyFrame* mpCurrentKeyFrame;$/;"	m	class:ORB_SLAM2::LocalMapping
mpFrameDrawer	./include/System.h	/^    FrameDrawer* mpFrameDrawer;$/;"	m	class:ORB_SLAM2::System
mpFrameDrawer	./include/Tracking.h	/^    FrameDrawer* mpFrameDrawer;$/;"	m	class:ORB_SLAM2::Tracking
mpFrameDrawer	./include/Viewer.h	/^    FrameDrawer* mpFrameDrawer;$/;"	m	class:ORB_SLAM2::Viewer
mpIniORBextractor	./include/Tracking.h	/^    ORBextractor* mpIniORBextractor;$/;"	m	class:ORB_SLAM2::Tracking
mpInitializer	./include/Tracking.h	/^    Initializer* mpInitializer;$/;"	m	class:ORB_SLAM2::Tracking
mpInitializerLastMap	./include/Tracking.h	/^    Initializer* mpInitializerLastMap;$/;"	m	class:ORB_SLAM2::Tracking
mpKF1	./include/Sim3Solver.h	/^    KeyFrame* mpKF1;$/;"	m	class:ORB_SLAM2::Sim3Solver
mpKF2	./include/Sim3Solver.h	/^    KeyFrame* mpKF2;$/;"	m	class:ORB_SLAM2::Sim3Solver
mpKeyFrameDB	./include/KeyFrame.h	/^    KeyFrameDatabase* mpKeyFrameDB;$/;"	m	class:ORB_SLAM2::KeyFrame
mpKeyFrameDB	./include/LoopClosing.h	/^    KeyFrameDatabase* mpKeyFrameDB;$/;"	m	class:ORB_SLAM2::LoopClosing
mpKeyFrameDB	./include/Tracking.h	/^    KeyFrameDatabase* mpKeyFrameDB;$/;"	m	class:ORB_SLAM2::Tracking
mpKeyFrameDatabase	./include/System.h	/^    KeyFrameDatabase* mpKeyFrameDatabase;$/;"	m	class:ORB_SLAM2::System
mpLastKeyFrame	./include/Tracking.h	/^    KeyFrame* mpLastKeyFrame;$/;"	m	class:ORB_SLAM2::Tracking
mpLastMap	./include/Initializer.h	/^	Map *mpLastMap;$/;"	m	class:ORB_SLAM2::Initializer
mpLastMap	./include/MapDrawer.h	/^    Map *mpLastMap;$/;"	m	class:ORB_SLAM2::MapDrawer
mpLastMap	./include/Relocal.h	/^        Map *mpLastMap;$/;"	m	class:ORB_SLAM2::Relocal
mpLastMap	./include/System.h	/^    Map* mpLastMap;$/;"	m	class:ORB_SLAM2::System
mpLastMap	./include/Tracking.h	/^    Map* mpLastMap;$/;"	m	class:ORB_SLAM2::Tracking
mpLocalMapper	./include/LoopClosing.h	/^    LocalMapping *mpLocalMapper;$/;"	m	class:ORB_SLAM2::LoopClosing
mpLocalMapper	./include/System.h	/^    LocalMapping* mpLocalMapper;$/;"	m	class:ORB_SLAM2::System
mpLocalMapper	./include/Tracking.h	/^    LocalMapping* mpLocalMapper;$/;"	m	class:ORB_SLAM2::Tracking
mpLoopCloser	./include/LocalMapping.h	/^    LoopClosing* mpLoopCloser;$/;"	m	class:ORB_SLAM2::LocalMapping
mpLoopCloser	./include/System.h	/^    LoopClosing* mpLoopCloser;$/;"	m	class:ORB_SLAM2::System
mpLoopClosing	./include/Tracking.h	/^    LoopClosing* mpLoopClosing;$/;"	m	class:ORB_SLAM2::Tracking
mpMap	./include/FrameDrawer.h	/^    Map* mpMap;$/;"	m	class:ORB_SLAM2::FrameDrawer
mpMap	./include/KeyFrame.h	/^    Map* mpMap;$/;"	m	class:ORB_SLAM2::KeyFrame
mpMap	./include/LocalMapping.h	/^    Map* mpMap;$/;"	m	class:ORB_SLAM2::LocalMapping
mpMap	./include/LoopClosing.h	/^    Map* mpMap;$/;"	m	class:ORB_SLAM2::LoopClosing
mpMap	./include/MapDrawer.h	/^    Map* mpMap;$/;"	m	class:ORB_SLAM2::MapDrawer
mpMap	./include/MapPoint.h	/^     Map* mpMap;$/;"	m	class:ORB_SLAM2::MapPoint
mpMap	./include/System.h	/^    Map* mpMap;$/;"	m	class:ORB_SLAM2::System
mpMap	./include/Tracking.h	/^    Map* mpMap;$/;"	m	class:ORB_SLAM2::Tracking
mpMapDrawer	./include/System.h	/^    MapDrawer* mpMapDrawer;$/;"	m	class:ORB_SLAM2::System
mpMapDrawer	./include/Tracking.h	/^    MapDrawer* mpMapDrawer;$/;"	m	class:ORB_SLAM2::Tracking
mpMapDrawer	./include/Viewer.h	/^    MapDrawer* mpMapDrawer;$/;"	m	class:ORB_SLAM2::Viewer
mpMatchedKF	./include/LoopClosing.h	/^    KeyFrame* mpMatchedKF;$/;"	m	class:ORB_SLAM2::LoopClosing
mpORBVocabulary	./include/LoopClosing.h	/^    ORBVocabulary* mpORBVocabulary;$/;"	m	class:ORB_SLAM2::LoopClosing
mpORBVocabulary	./include/Tracking.h	/^    ORBVocabulary* mpORBVocabulary;$/;"	m	class:ORB_SLAM2::Tracking
mpORBextractorLeft	./include/Frame.h	/^    ORBextractor* mpORBextractorLeft, *mpORBextractorRight;$/;"	m	class:ORB_SLAM2::Frame
mpORBextractorLeft	./include/Tracking.h	/^    ORBextractor* mpORBextractorLeft, *mpORBextractorRight;$/;"	m	class:ORB_SLAM2::Tracking
mpORBextractorRight	./include/Frame.h	/^    ORBextractor* mpORBextractorLeft, *mpORBextractorRight;$/;"	m	class:ORB_SLAM2::Frame
mpORBextractorRight	./include/Tracking.h	/^    ORBextractor* mpORBextractorLeft, *mpORBextractorRight;$/;"	m	class:ORB_SLAM2::Tracking
mpORBvocabulary	./include/Frame.h	/^    ORBVocabulary* mpORBvocabulary;$/;"	m	class:ORB_SLAM2::Frame
mpORBvocabulary	./include/KeyFrame.h	/^    ORBVocabulary* mpORBvocabulary;$/;"	m	class:ORB_SLAM2::KeyFrame
mpParent	./include/KeyFrame.h	/^    KeyFrame* mpParent;$/;"	m	class:ORB_SLAM2::KeyFrame
mpRefKF	./include/MapPoint.h	/^    KeyFrame* mpRefKF;$/;"	m	class:ORB_SLAM2::MapPoint
mpReferenceKF	./include/Frame.h	/^    KeyFrame* mpReferenceKF;$/;"	m	class:ORB_SLAM2::Frame
mpReferenceKF	./include/Tracking.h	/^    KeyFrame* mpReferenceKF;$/;"	m	class:ORB_SLAM2::Tracking
mpRegistrator	./include/LocalMapping.h	/^	Registrating *mpRegistrator;$/;"	m	class:ORB_SLAM2::LocalMapping
mpRegistrator	./include/System.h	/^	Registrating *mpRegistrator;$/;"	m	class:ORB_SLAM2::System
mpRegistrator	./include/Tracking.h	/^	Registrating *mpRegistrator;$/;"	m	class:ORB_SLAM2::Tracking
mpReplaced	./include/MapPoint.h	/^     MapPoint* mpReplaced;$/;"	m	class:ORB_SLAM2::MapPoint
mpSystem	./include/Tracking.h	/^    System* mpSystem;$/;"	m	class:ORB_SLAM2::Tracking
mpSystem	./include/Viewer.h	/^    System* mpSystem;$/;"	m	class:ORB_SLAM2::Viewer
mpThreadGBA	./include/LoopClosing.h	/^    std::thread* mpThreadGBA;$/;"	m	class:ORB_SLAM2::LoopClosing
mpTracker	./include/LocalMapping.h	/^    Tracking* mpTracker;$/;"	m	class:ORB_SLAM2::LocalMapping
mpTracker	./include/LoopClosing.h	/^    Tracking* mpTracker;$/;"	m	class:ORB_SLAM2::LoopClosing
mpTracker	./include/System.h	/^    Tracking* mpTracker;$/;"	m	class:ORB_SLAM2::System
mpTracker	./include/Viewer.h	/^    Tracking* mpTracker;$/;"	m	class:ORB_SLAM2::Viewer
mpViewer	./include/System.h	/^    Viewer* mpViewer;$/;"	m	class:ORB_SLAM2::System
mpViewer	./include/Tracking.h	/^    Viewer* mpViewer;$/;"	m	class:ORB_SLAM2::Tracking
mpVoc	./include/KeyFrameDatabase.h	/^  const ORBVocabulary* mpVoc;$/;"	m	class:ORB_SLAM2::KeyFrameDatabase
mpVocabulary	./include/System.h	/^    ORBVocabulary* mpVocabulary;$/;"	m	class:ORB_SLAM2::System
mp_matrix	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  const MatrixType* mp_matrix;$/;"	m	class:Eigen::IterativeSolverBase
mptLocalMapping	./include/System.h	/^    std::thread* mptLocalMapping;$/;"	m	class:ORB_SLAM2::System
mptLoopClosing	./include/System.h	/^    std::thread* mptLoopClosing;$/;"	m	class:ORB_SLAM2::System
mptRegistrating	./include/System.h	/^	std::thread *mptRegistrating;$/;"	m	class:ORB_SLAM2::System
mptViewer	./include/System.h	/^    std::thread* mptViewer;$/;"	m	class:ORB_SLAM2::System
mr	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = 2 * LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon51
mr	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = 2 * LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon52
mr	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = 2 * ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon53
mr	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = 2*ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon54
ms12i	./include/Sim3Solver.h	/^    float ms12i;$/;"	m	class:ORB_SLAM2::Sim3Solver
mspChildrens	./include/KeyFrame.h	/^    std::set<KeyFrame*> mspChildrens;$/;"	m	class:ORB_SLAM2::KeyFrame
mspKeyFrames	./include/Map.h	/^    std::set<KeyFrame*> mspKeyFrames;$/;"	m	class:ORB_SLAM2::Map
mspLoopEdges	./include/KeyFrame.h	/^    std::set<KeyFrame*> mspLoopEdges;$/;"	m	class:ORB_SLAM2::KeyFrame
mspMapPoints	./include/Map.h	/^    std::set<MapPoint*> mspMapPoints;$/;"	m	class:ORB_SLAM2::Map
mt12i	./include/Sim3Solver.h	/^    cv::Mat mt12i;$/;"	m	class:ORB_SLAM2::Sim3Solver
mtcw	./include/Frame.h	/^    cv::Mat mtcw;$/;"	m	class:ORB_SLAM2::Frame
mti	./include/PnPsolver.h	/^  double mti[3];$/;"	m	class:ORB_SLAM2::PnPsolver
mti	./include/PoseSolver.h	/^  double mti[3];$/;"	m	class:ORB_SLAM2::PoseSolver
mu	./Thirdparty/sparseicp/ICP.h	/^        double mu = 10.0;         \/\/\/ penalty weight$/;"	m	struct:SICP::Parameters
multiply	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  bool SparseBlockMatrix<MatrixType>::multiply(SparseBlockMatrix<MatrixResultType>*& dest, const SparseBlockMatrix<MatrixFactorType> * M) const {$/;"	f	class:g2o::SparseBlockMatrix
multiply	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  void SparseBlockMatrix<MatrixType>::multiply(double*& dest, const double* src) const {$/;"	f	class:g2o::SparseBlockMatrix
multiply	./Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      void multiply(double*& dest, const double* src) const$/;"	f	class:g2o::SparseBlockMatrixDiagonal
multiplyHessian	./Thirdparty/g2o/g2o/core/block_solver.h	/^      virtual void multiplyHessian(double* dest, const double* src) const { _Hpp->multiplySymmetricUpperTriangle(dest, src);}$/;"	f	class:g2o::BlockSolver
multiplySymmetricUpperTriangle	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  void SparseBlockMatrix<MatrixType>::multiplySymmetricUpperTriangle(double*& dest, const double* src) const$/;"	f	class:g2o::SparseBlockMatrix
mvAllIndices	./include/PnPsolver.h	/^  vector<size_t> mvAllIndices;$/;"	m	class:ORB_SLAM2::PnPsolver
mvAllIndices	./include/PoseSolver.h	/^  vector<size_t> mvAllIndices;$/;"	m	class:ORB_SLAM2::PoseSolver
mvAllIndices	./include/Sim3Solver.h	/^    std::vector<size_t> mvAllIndices;$/;"	m	class:ORB_SLAM2::Sim3Solver
mvConsistentGroups	./include/LoopClosing.h	/^    std::vector<ConsistentGroup> mvConsistentGroups;$/;"	m	class:ORB_SLAM2::LoopClosing
mvCurrentKeys	./include/FrameDrawer.h	/^    vector<cv::KeyPoint> mvCurrentKeys;$/;"	m	class:ORB_SLAM2::FrameDrawer
mvDepth	./include/Frame.h	/^    std::vector<float> mvDepth;$/;"	m	class:ORB_SLAM2::Frame
mvDepth	./include/KeyFrame.h	/^    const std::vector<float> mvDepth; \/\/ negative value for monocular points$/;"	m	class:ORB_SLAM2::KeyFrame
mvImagePyramid	./include/ORBextractor.h	/^    std::vector<cv::Mat> mvImagePyramid;$/;"	m	class:ORB_SLAM2::ORBextractor
mvIniKeys	./include/FrameDrawer.h	/^    vector<cv::KeyPoint> mvIniKeys;$/;"	m	class:ORB_SLAM2::FrameDrawer
mvIniLastMatches	./include/Tracking.h	/^    std::vector<int> mvIniLastMatches;$/;"	m	class:ORB_SLAM2::Tracking
mvIniMatches	./include/FrameDrawer.h	/^    vector<int> mvIniMatches;$/;"	m	class:ORB_SLAM2::FrameDrawer
mvIniMatches	./include/Tracking.h	/^    std::vector<int> mvIniMatches;$/;"	m	class:ORB_SLAM2::Tracking
mvIniMatchesLastMap	./include/Tracking.h	/^	vector<int> mvIniMatchesLastMap;$/;"	m	class:ORB_SLAM2::Tracking
mvIniP3D	./include/Tracking.h	/^    std::vector<cv::Point3f> mvIniP3D;$/;"	m	class:ORB_SLAM2::Tracking
mvIniP3DLastMap	./include/Tracking.h	/^	vector<cv::Point3f> mvIniP3DLastMap;$/;"	m	class:ORB_SLAM2::Tracking
mvInvLevelSigma2	./include/Frame.h	/^    vector<float> mvInvLevelSigma2;$/;"	m	class:ORB_SLAM2::Frame
mvInvLevelSigma2	./include/KeyFrame.h	/^    const std::vector<float> mvInvLevelSigma2;$/;"	m	class:ORB_SLAM2::KeyFrame
mvInvLevelSigma2	./include/ORBextractor.h	/^    std::vector<float> mvInvLevelSigma2;$/;"	m	class:ORB_SLAM2::ORBextractor
mvInvScaleFactor	./include/ORBextractor.h	/^    std::vector<float> mvInvScaleFactor;    $/;"	m	class:ORB_SLAM2::ORBextractor
mvInvScaleFactors	./include/Frame.h	/^    vector<float> mvInvScaleFactors;$/;"	m	class:ORB_SLAM2::Frame
mvInvertedFile	./include/KeyFrameDatabase.h	/^  std::vector<list<KeyFrame*> > mvInvertedFile;$/;"	m	class:ORB_SLAM2::KeyFrameDatabase
mvKeyPointIndices	./include/PnPsolver.h	/^  vector<size_t> mvKeyPointIndices;$/;"	m	class:ORB_SLAM2::PnPsolver
mvKeyPointIndices	./include/PoseSolver.h	/^  vector<size_t> mvKeyPointIndices;$/;"	m	class:ORB_SLAM2::PoseSolver
mvKeys	./include/Frame.h	/^    std::vector<cv::KeyPoint> mvKeys, mvKeysRight;$/;"	m	class:ORB_SLAM2::Frame
mvKeys	./include/KeyFrame.h	/^    const std::vector<cv::KeyPoint> mvKeys;$/;"	m	class:ORB_SLAM2::KeyFrame
mvKeys1	./include/Initializer.h	/^    vector<cv::KeyPoint> mvKeys1;$/;"	m	class:ORB_SLAM2::Initializer
mvKeys2	./include/Initializer.h	/^    vector<cv::KeyPoint> mvKeys2;$/;"	m	class:ORB_SLAM2::Initializer
mvKeysRight	./include/Frame.h	/^    std::vector<cv::KeyPoint> mvKeys, mvKeysRight;$/;"	m	class:ORB_SLAM2::Frame
mvKeysUn	./include/Frame.h	/^    std::vector<cv::KeyPoint> mvKeysUn;$/;"	m	class:ORB_SLAM2::Frame
mvKeysUn	./include/KeyFrame.h	/^    const std::vector<cv::KeyPoint> mvKeysUn;$/;"	m	class:ORB_SLAM2::KeyFrame
mvLevelSigma2	./include/Frame.h	/^    vector<float> mvLevelSigma2;$/;"	m	class:ORB_SLAM2::Frame
mvLevelSigma2	./include/KeyFrame.h	/^    const std::vector<float> mvLevelSigma2;$/;"	m	class:ORB_SLAM2::KeyFrame
mvLevelSigma2	./include/ORBextractor.h	/^    std::vector<float> mvLevelSigma2;$/;"	m	class:ORB_SLAM2::ORBextractor
mvMatches12	./include/Initializer.h	/^    vector<Match> mvMatches12;$/;"	m	class:ORB_SLAM2::Initializer
mvMaxError	./include/PnPsolver.h	/^  vector<float> mvMaxError;$/;"	m	class:ORB_SLAM2::PnPsolver
mvMaxError	./include/PoseSolver.h	/^  vector<float> mvMaxError;$/;"	m	class:ORB_SLAM2::PoseSolver
mvOrderedWeights	./include/KeyFrame.h	/^    std::vector<int> mvOrderedWeights;$/;"	m	class:ORB_SLAM2::KeyFrame
mvP1im1	./include/Sim3Solver.h	/^    std::vector<cv::Mat> mvP1im1;$/;"	m	class:ORB_SLAM2::Sim3Solver
mvP2D	./include/PnPsolver.h	/^  vector<cv::Point2f> mvP2D;$/;"	m	class:ORB_SLAM2::PnPsolver
mvP2D	./include/PoseSolver.h	/^  vector<cv::Point2f> mvP2D;$/;"	m	class:ORB_SLAM2::PoseSolver
mvP2im2	./include/Sim3Solver.h	/^    std::vector<cv::Mat> mvP2im2;$/;"	m	class:ORB_SLAM2::Sim3Solver
mvP3Dw	./include/PnPsolver.h	/^  vector<cv::Point3f> mvP3Dw;$/;"	m	class:ORB_SLAM2::PnPsolver
mvP3Dw	./include/PoseSolver.h	/^  vector<cv::Point3f> mvP3Dw;$/;"	m	class:ORB_SLAM2::PoseSolver
mvScaleFactor	./include/ORBextractor.h	/^    std::vector<float> mvScaleFactor;$/;"	m	class:ORB_SLAM2::ORBextractor
mvScaleFactors	./include/Frame.h	/^    vector<float> mvScaleFactors;$/;"	m	class:ORB_SLAM2::Frame
mvScaleFactors	./include/KeyFrame.h	/^    const std::vector<float> mvScaleFactors;$/;"	m	class:ORB_SLAM2::KeyFrame
mvSets	./include/Initializer.h	/^    vector<vector<size_t> > mvSets;   $/;"	m	class:ORB_SLAM2::Initializer
mvSigma2	./include/PnPsolver.h	/^  vector<float> mvSigma2;$/;"	m	class:ORB_SLAM2::PnPsolver
mvSigma2	./include/PoseSolver.h	/^  vector<float> mvSigma2;$/;"	m	class:ORB_SLAM2::PoseSolver
mvSigmaSquare1	./include/Sim3Solver.h	/^    std::vector<size_t> mvSigmaSquare1;$/;"	m	class:ORB_SLAM2::Sim3Solver
mvSigmaSquare2	./include/Sim3Solver.h	/^    std::vector<size_t> mvSigmaSquare2;$/;"	m	class:ORB_SLAM2::Sim3Solver
mvX3Dc1	./include/Sim3Solver.h	/^    std::vector<cv::Mat> mvX3Dc1;$/;"	m	class:ORB_SLAM2::Sim3Solver
mvX3Dc2	./include/Sim3Solver.h	/^    std::vector<cv::Mat> mvX3Dc2;$/;"	m	class:ORB_SLAM2::Sim3Solver
mvbBestInliers	./include/PnPsolver.h	/^  vector<bool> mvbBestInliers;$/;"	m	class:ORB_SLAM2::PnPsolver
mvbBestInliers	./include/PoseSolver.h	/^  vector<bool> mvbBestInliers;$/;"	m	class:ORB_SLAM2::PoseSolver
mvbBestInliers	./include/Sim3Solver.h	/^    std::vector<bool> mvbBestInliers;$/;"	m	class:ORB_SLAM2::Sim3Solver
mvbInliersi	./include/PnPsolver.h	/^  vector<bool> mvbInliersi;$/;"	m	class:ORB_SLAM2::PnPsolver
mvbInliersi	./include/PoseSolver.h	/^  vector<bool> mvbInliersi;$/;"	m	class:ORB_SLAM2::PoseSolver
mvbInliersi	./include/Sim3Solver.h	/^    std::vector<bool> mvbInliersi;$/;"	m	class:ORB_SLAM2::Sim3Solver
mvbMap	./include/FrameDrawer.h	/^    vector<bool> mvbMap, mvbVO;$/;"	m	class:ORB_SLAM2::FrameDrawer
mvbMatched1	./include/Initializer.h	/^    vector<bool> mvbMatched1;$/;"	m	class:ORB_SLAM2::Initializer
mvbOutlier	./include/Frame.h	/^    std::vector<bool> mvbOutlier;$/;"	m	class:ORB_SLAM2::Frame
mvbPrevMatched	./include/Tracking.h	/^    std::vector<cv::Point2f> mvbPrevMatched;$/;"	m	class:ORB_SLAM2::Tracking
mvbPrevMatchedLastMap	./include/Tracking.h	/^	vector<cv::Point2f> mvbPrevMatchedLastMap;$/;"	m	class:ORB_SLAM2::Tracking
mvbRefinedInliers	./include/PnPsolver.h	/^  vector<bool> mvbRefinedInliers;$/;"	m	class:ORB_SLAM2::PnPsolver
mvbRefinedInliers	./include/PoseSolver.h	/^  vector<bool> mvbRefinedInliers;$/;"	m	class:ORB_SLAM2::PoseSolver
mvbVO	./include/FrameDrawer.h	/^    vector<bool> mvbMap, mvbVO;$/;"	m	class:ORB_SLAM2::FrameDrawer
mvnIndices1	./include/Sim3Solver.h	/^    std::vector<size_t> mvnIndices1;$/;"	m	class:ORB_SLAM2::Sim3Solver
mvnMaxError1	./include/Sim3Solver.h	/^    std::vector<size_t> mvnMaxError1;$/;"	m	class:ORB_SLAM2::Sim3Solver
mvnMaxError2	./include/Sim3Solver.h	/^    std::vector<size_t> mvnMaxError2;$/;"	m	class:ORB_SLAM2::Sim3Solver
mvpCurrentConnectedKFs	./include/LoopClosing.h	/^    std::vector<KeyFrame*> mvpCurrentConnectedKFs;$/;"	m	class:ORB_SLAM2::LoopClosing
mvpCurrentMap	./include/Registrating.h	/^		std::vector<MapPoint*> mvpCurrentMap;$/;"	m	class:ORB_SLAM2::Registrating
mvpCurrentMatchedPoints	./include/LoopClosing.h	/^    std::vector<MapPoint*> mvpCurrentMatchedPoints;$/;"	m	class:ORB_SLAM2::LoopClosing
mvpEnoughConsistentCandidates	./include/LoopClosing.h	/^    std::vector<KeyFrame*> mvpEnoughConsistentCandidates;$/;"	m	class:ORB_SLAM2::LoopClosing
mvpKeyFrameOrigins	./include/Map.h	/^    vector<KeyFrame*> mvpKeyFrameOrigins;$/;"	m	class:ORB_SLAM2::Map
mvpLastMap	./include/Registrating.h	/^		std::vector<MapPoint*> mvpLastMap;$/;"	m	class:ORB_SLAM2::Registrating
mvpLastMapPoints	./include/Frame.h	/^	std::vector<MapPoint*> mvpLastMapPoints;$/;"	m	class:ORB_SLAM2::Frame
mvpLocalKeyFrames	./include/Tracking.h	/^    std::vector<KeyFrame*> mvpLocalKeyFrames;$/;"	m	class:ORB_SLAM2::Tracking
mvpLocalMapPoints	./include/Tracking.h	/^    std::vector<MapPoint*> mvpLocalMapPoints;$/;"	m	class:ORB_SLAM2::Tracking
mvpLoopMapPoints	./include/LoopClosing.h	/^    std::vector<MapPoint*> mvpLoopMapPoints;$/;"	m	class:ORB_SLAM2::LoopClosing
mvpMapPointMatches	./include/PnPsolver.h	/^  vector<MapPoint*> mvpMapPointMatches;$/;"	m	class:ORB_SLAM2::PnPsolver
mvpMapPointMatches	./include/PoseSolver.h	/^  vector<MapPoint*> mvpMapPointMatches;$/;"	m	class:ORB_SLAM2::PoseSolver
mvpMapPoints	./include/Frame.h	/^    std::vector<MapPoint*> mvpMapPoints;$/;"	m	class:ORB_SLAM2::Frame
mvpMapPoints	./include/KeyFrame.h	/^    std::vector<MapPoint*> mvpMapPoints;$/;"	m	class:ORB_SLAM2::KeyFrame
mvpMapPoints1	./include/Sim3Solver.h	/^    std::vector<MapPoint*> mvpMapPoints1;$/;"	m	class:ORB_SLAM2::Sim3Solver
mvpMapPoints2	./include/Sim3Solver.h	/^    std::vector<MapPoint*> mvpMapPoints2;$/;"	m	class:ORB_SLAM2::Sim3Solver
mvpMatches12	./include/Sim3Solver.h	/^    std::vector<MapPoint*> mvpMatches12;$/;"	m	class:ORB_SLAM2::Sim3Solver
mvpNewMap	./include/Registrating.h	/^		std::vector<MapPoint*> mvpNewMap;$/;"	m	class:ORB_SLAM2::Registrating
mvpOrderedConnectedKeyFrames	./include/KeyFrame.h	/^    std::vector<KeyFrame*> mvpOrderedConnectedKeyFrames;$/;"	m	class:ORB_SLAM2::KeyFrame
mvpReferenceMapPoints	./include/Map.h	/^    std::vector<MapPoint*> mvpReferenceMapPoints;$/;"	m	class:ORB_SLAM2::Map
mvuRight	./include/Frame.h	/^    std::vector<float> mvuRight;$/;"	m	class:ORB_SLAM2::Frame
mvuRight	./include/KeyFrame.h	/^    const std::vector<float> mvuRight; \/\/ negative value for monocular points$/;"	m	class:ORB_SLAM2::KeyFrame
n	./Thirdparty/g2o/g2o/core/matrix_structure.h	/^    int n;    \/\/\/< A is m-by-n.  n must be >= 0.$/;"	m	class:g2o::MatrixStructure
n	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   n; \/\/ Number of columns in the matrix  $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
nNextId	./include/Frame.h	/^    static long unsigned int nNextId;$/;"	m	class:ORB_SLAM2::Frame
nNextId	./include/KeyFrame.h	/^    static long unsigned int nNextId;$/;"	m	class:ORB_SLAM2::KeyFrame
nNextId	./include/MapPoint.h	/^    static long unsigned int nNextId;$/;"	m	class:ORB_SLAM2::MapPoint
nNextId	./src/Frame.cc	/^long unsigned int Frame::nNextId=0;$/;"	m	class:ORB_SLAM2::Frame	file:
nNextId	./src/KeyFrame.cc	/^long unsigned int KeyFrame::nNextId=0;$/;"	m	class:ORB_SLAM2::KeyFrame	file:
nNextId	./src/MapPoint.cc	/^long unsigned int MapPoint::nNextId=0;$/;"	m	class:ORB_SLAM2::MapPoint	file:
nObs	./include/MapPoint.h	/^    int nObs;$/;"	m	class:ORB_SLAM2::MapPoint
name	./Thirdparty/g2o/g2o/core/creators.h	/^      virtual const std::string& name() const { return _name;}$/;"	f	class:g2o::HyperGraphElementCreator
name	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^      virtual const char* name() const { return "odometry";}$/;"	f	class:g2o::EstimatePropagatorCostOdometry
name	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^      virtual const char* name() const { return "spanning tree";}$/;"	f	class:g2o::EstimatePropagatorCost
name	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^      const std::string& name() const{ return _name;}$/;"	f	class:g2o::HyperGraphElementAction
name	./Thirdparty/g2o/g2o/core/optimization_algorithm_property.h	/^  std::string name;           \/\/\/< name of the solver, e.g., var$/;"	m	struct:g2o::OptimizationAlgorithmProperty
name	./Thirdparty/g2o/g2o/stuff/property.h	/^      const std::string& name() {return _name;}$/;"	f	class:g2o::BaseProperty
nanoflann	./Thirdparty/sparseicp/ICP.h	/^namespace nanoflann {$/;"	n
nanoflann	./Thirdparty/sparseicp/include/nanoflann.hpp	/^namespace nanoflann$/;"	n
nbThreads	./Thirdparty/sparseicp/include/Eigen/src/Core/products/Parallelizer.h	/^inline int nbThreads()$/;"	f	namespace:Eigen
nc	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline DenseIndex nc() const { return m_nc; }$/;"	f	class:Eigen::internal::level3_blocking
nestByValue	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^DenseBase<Derived>::nestByValue() const$/;"	f	class:Eigen::DenseBase
nested	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^struct nested<GeneralProduct<Lhs,Rhs,Mode>, N, PlainObject>$/;"	s	namespace:Eigen::internal
nested	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^struct nested<ReturnByValue<Derived>, n, PlainObject>$/;"	s	namespace:Eigen::internal
nested	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct nested<CoeffBasedProduct<Lhs,Rhs,EvalBeforeNestingBit|EvalBeforeAssigningBit>, N, PlainObject>$/;"	s	namespace:Eigen::internal
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    nestedExpression() const $/;"	f	class:Eigen::ArrayWrapper
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    nestedExpression() const $/;"	f	class:Eigen::MatrixWrapper
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    const typename internal::remove_all<typename XprType::Nested>::type& nestedExpression() const $/;"	f	class:Eigen::internal::BlockImpl_dense
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^    nestedExpression() const { return m_xpr; }$/;"	f	class:Eigen::CwiseUnaryOp
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^    nestedExpression() { return m_xpr.const_cast_derived(); }$/;"	f	class:Eigen::CwiseUnaryOp
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::CwiseUnaryView
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    nestedExpression() { return m_matrix.const_cast_derived(); }$/;"	f	class:Eigen::CwiseUnaryView
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    nestedExpression() const $/;"	f	class:Eigen::Diagonal
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    const _MatrixTypeNested& nestedExpression() const$/;"	f	class:Eigen::Replicate
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    nestedExpression() const $/;"	f	class:Eigen::Reverse
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    MatrixTypeNestedCleaned& nestedExpression() { return *const_cast<MatrixTypeNestedCleaned*>(&m_matrix); }$/;"	f	class:Eigen::SelfAdjointView
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    const MatrixTypeNestedCleaned& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::SelfAdjointView
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::Transpose
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    nestedExpression() { return m_matrix.const_cast_derived(); }$/;"	f	class:Eigen::Transpose
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    MatrixTypeNestedCleaned& nestedExpression() { return *const_cast<MatrixTypeNestedCleaned*>(&m_matrix); }$/;"	f	class:Eigen::TriangularView
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    const MatrixTypeNestedCleaned& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::TriangularView
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline const _MatrixTypeNested& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::BlockImpl
nestedExpression	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline const MatrixTypeNestedCleaned& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::SparseTriangularView
nestedPermutation	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    const PermutationType& nestedPermutation() const { return m_permutation; }$/;"	f	class:Eigen::Transpose
new_map	./4pcs/Registration.h	/^            Map *new_map;$/;"	m	class:pcl::FPCS::FPCSRegistration
next	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        Data* next() {return _next;}$/;"	f	class:g2o::OptimizableGraph::Data
next	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        const Data* next() const {return _next;}$/;"	f	class:g2o::OptimizableGraph::Data
next	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^      Index next;$/;"	m	struct:Eigen::internal::AmbiVector::ListEl
nfeatures	./include/ORBextractor.h	/^    int nfeatures;$/;"	m	class:ORB_SLAM2::ORBextractor
nlevels	./include/ORBextractor.h	/^    int nlevels;$/;"	m	class:ORB_SLAM2::ORBextractor
nnz	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    union {int nnz;int lda;};$/;"	m	union:Eigen::SluMatrix::__anon460::__anon461
no_assignment_operator	./Thirdparty/sparseicp/include/Eigen/src/Core/util/XprHelper.h	/^class no_assignment_operator$/;"	c	namespace:Eigen::internal
noalias	./Thirdparty/sparseicp/include/Eigen/src/Core/NoAlias.h	/^NoAlias<Derived,MatrixBase> MatrixBase<Derived>::noalias()$/;"	f	class:Eigen::MatrixBase
node	./Thirdparty/sparseicp/include/nanoflann.hpp	/^			T node;           \/* Tree node at which search resumes *\/$/;"	m	struct:nanoflann::KDTreeSingleIndexAdaptor::BranchStruct
nonZeroBlocks	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  size_t SparseBlockMatrix<MatrixType>::nonZeroBlocks() const {$/;"	f	class:g2o::SparseBlockMatrix
nonZeros	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  size_t SparseBlockMatrix<MatrixType>::nonZeros() const{$/;"	f	class:g2o::SparseBlockMatrix
nonZeros	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    inline Index nonZeros() const { return size(); }$/;"	f	class:Eigen::DenseBase
nonZeros	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^_Index AmbiVector<_Scalar,_Index>::nonZeros() const$/;"	f	class:Eigen::internal::AmbiVector
nonZeros	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index nonZeros() const  { return m_nnz; }$/;"	f	class:Eigen::MappedSparseMatrix
nonZeros	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    Index nonZeros() const$/;"	f	class:Eigen::BlockImpl
nonZeros	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index nonZeros() const$/;"	f	class:Eigen::SparseMatrix
nonZeros	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Index nonZeros() const { return derived().nonZeros(); }$/;"	f	class:Eigen::SparseMatrixBase
nonZeros	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTranspose.h	/^    inline Index nonZeros() const { return derived().nestedExpression().nonZeros(); }$/;"	f	class:Eigen::TransposeImpl
nonZeros	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Index nonZeros() const  { return static_cast<Index>(m_data.size()); }$/;"	f	class:Eigen::SparseVector
noncopyable	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^  noncopyable() {}$/;"	f	class:Eigen::internal::noncopyable
noncopyable	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^class noncopyable$/;"	c	namespace:Eigen::internal
nonzeroPivots	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    inline Index nonzeroPivots() const$/;"	f	class:Eigen::FullPivLU
nonzeroPivots	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index nonzeroPivots() const$/;"	f	class:Eigen::ColPivHouseholderQR
nonzeroPivots	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index nonzeroPivots() const$/;"	f	class:Eigen::FullPivHouseholderQR
nonzeroSingularValues	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    Index nonzeroSingularValues() const$/;"	f	class:Eigen::JacobiSVD
norm	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^inline typename NumTraits<typename internal::traits<Derived>::Scalar>::Real MatrixBase<Derived>::norm() const$/;"	f	class:Eigen::MatrixBase
norm	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_norm,RealScalar>::Type norm() const$/;"	f	class:Eigen::VectorwiseOp
norm	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar norm() const { return m_coeffs.norm(); }$/;"	f	class:Eigen::Quaternion
norm	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar norm() const { return coeffs().norm(); }$/;"	f	class:Eigen::QuaternionBase
norm	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::norm() const$/;"	f	class:Eigen::SparseMatrixBase
norm1	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(norm1, Scalar) norm1(const Scalar& x)$/;"	f	namespace:Eigen::numext
norm1_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct norm1_default_impl$/;"	s	namespace:Eigen::internal
norm1_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct norm1_default_impl<Scalar, false>$/;"	s	namespace:Eigen::internal
norm1_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct norm1_impl : norm1_default_impl<Scalar, NumTraits<Scalar>::IsComplex> {};$/;"	s	namespace:Eigen::internal
norm1_retval	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct norm1_retval$/;"	s	namespace:Eigen::internal
normal	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline NormalReturnType normal() { return NormalReturnType(m_coeffs,0,0,dim(),1); }$/;"	f	class:Eigen::Hyperplane
normal	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline const NormalReturnType normal() const { return NormalReturnType(*const_cast<Coefficients*>(&m_coeffs),0,0,dim(),1); }$/;"	f	class:Eigen::Hyperplane
normal	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  inline ConstNormalReturnType normal() const { return ConstNormalReturnType(m_coeffs,0,0,dim(),1); }$/;"	f	class:Eigen::Hyperplane
normal	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  inline NormalReturnType normal() { return NormalReturnType(m_coeffs,0,0,dim(),1); }$/;"	f	class:Eigen::Hyperplane
normalize	./Thirdparty/DBoW2/DBoW2/BowVector.cpp	/^void BowVector::normalize(LNorm norm_type)$/;"	f	class:DBoW2::BowVector
normalize	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^inline void MatrixBase<Derived>::normalize()$/;"	f	class:Eigen::MatrixBase
normalize	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    void normalize() {$/;"	f	class:Eigen::VectorwiseOp
normalize	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  void normalize(void)$/;"	f	class:Eigen::Hyperplane
normalize	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline void normalize() { m_coeffs.normalize(); }$/;"	f	class:Eigen::Quaternion
normalize	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  void normalize(void)$/;"	f	class:Eigen::Hyperplane
normalize	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline void normalize() { coeffs().normalize(); }$/;"	f	class:Eigen::QuaternionBase
normalizeRotation	./Thirdparty/g2o/g2o/types/se3quat.h	/^      void normalizeRotation(){$/;"	f	class:g2o::SE3Quat
normalize_theta	./Thirdparty/g2o/g2o/stuff/misc.h	/^inline double normalize_theta(double theta)$/;"	f	namespace:g2o
normalized	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::normalized() const$/;"	f	class:Eigen::MatrixBase
normalized	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    normalized() const { return m_matrix.cwiseQuotient(extendedToOpposite(this->norm())); }$/;"	f	class:Eigen::VectorwiseOp
normalized	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Quaternion normalized() const { return Quaternion(m_coeffs.normalized()); }$/;"	f	class:Eigen::Quaternion
normalized	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline Quaternion<Scalar> normalized() const { return Quaternion<Scalar>(coeffs().normalized()); }$/;"	f	class:Eigen::QuaternionBase
nr	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = 2,$/;"	e	enum:Eigen::internal::gebp_traits::__anon53
nr	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = 4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon54
nr	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = NumberOfRegisters\/4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon51
nr	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = NumberOfRegisters\/4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon52
nr_etdfs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseColEtree.h	/^void nr_etdfs (Index n, IndexVector& parent, IndexVector& first_kid, IndexVector& next_kid, IndexVector& post, Index postnum)$/;"	f	namespace:Eigen::internal
nsuper	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index nsuper() const $/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
numEdges	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    int numEdges;                     \/\/\/< how many edges$/;"	m	struct:g2o::G2OBatchStatistics
numParameters	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        inline size_t numParameters() const {return _parameters.size();}$/;"	f	class:g2o::OptimizableGraph::Edge
numVertices	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    int numVertices;                  \/\/\/< how many vertices are involved$/;"	m	struct:g2o::G2OBatchStatistics
num_expansions	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   num_expansions; $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
num_t	./Thirdparty/sparseicp/ICP.h	/^        typedef typename MatrixType::Scalar              num_t;$/;"	t	struct:nanoflann::KDTreeAdaptor
num_t	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		typedef typename MatrixType::Scalar              num_t;$/;"	t	struct:nanoflann::KDTreeEigenMatrixAdaptor
number_of_correspondences	./include/PnPsolver.h	/^  int number_of_correspondences;$/;"	m	class:ORB_SLAM2::PnPsolver
number_of_correspondences	./include/PoseSolver.h	/^  int number_of_correspondences;$/;"	m	class:ORB_SLAM2::PoseSolver
numext	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^namespace numext {$/;"	n	namespace:Eigen
nzMax	./Thirdparty/g2o/g2o/core/matrix_structure.h	/^    int nzMax() const { return maxNz;}$/;"	f	class:g2o::MatrixStructure
nzlmax	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   nzlmax; \/\/ Current max size of lsub$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
nzlumax	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   nzlumax; \/\/ Current max size of lusup$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
nzumax	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   nzumax; \/\/ Current max size of ucol$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
offset	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline Scalar& offset() { return m_coeffs(dim()); }$/;"	f	class:Eigen::Hyperplane
offset	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline const Scalar& offset() const { return m_coeffs.coeff(dim()); }$/;"	f	class:Eigen::Hyperplane
offset	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  inline Scalar& offset() { return m_coeffs(dim()); }$/;"	f	class:Eigen::Hyperplane
offset	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  inline const Scalar& offset() const { return m_coeffs.coeff(dim()); }$/;"	f	class:Eigen::Hyperplane
offset_	./4pcs/Registration.h	/^            Eigen::Vector3f offset_;$/;"	m	class:pcl::FPCS::FPCSRegistration
offset_gt_	./4pcs/Registration.h	/^            Eigen::Vector3f offset_gt_;$/;"	m	class:pcl::FPCS::FPCSRegistration
operator !=	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    inline bool operator!=(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
operator !=	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    bool operator!=(const aligned_allocator<T>& ) const$/;"	f	class:Eigen::aligned_allocator
operator !=	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator!=(Scalar s) const$/;"	f	class:Eigen::Cwise
operator !=	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator!=(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Cwise
operator &&	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator&&(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator ()	./Thirdparty/g2o/g2o/core/estimate_propagator.cpp	/^    bool operator()(EstimatePropagator::AdjacencyMapEntry* e1, EstimatePropagator::AdjacencyMapEntry* e2) const$/;"	f	struct:g2o::FrontierLevelCmp
operator ()	./Thirdparty/g2o/g2o/core/estimate_propagator.cpp	/^  double EstimatePropagatorCost::operator()(OptimizableGraph::Edge* edge, const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* to_) const$/;"	f	class:g2o::EstimatePropagatorCost
operator ()	./Thirdparty/g2o/g2o/core/estimate_propagator.cpp	/^  double EstimatePropagatorCostOdometry::operator()(OptimizableGraph::Edge* edge, const OptimizableGraph::VertexSet& from_, OptimizableGraph::Vertex* to_) const$/;"	f	class:g2o::EstimatePropagatorCostOdometry
operator ()	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^          size_t operator ()(const OptimizableGraph::Vertex* v) const { return v->id();}$/;"	f	class:g2o::EstimatePropagator::VertexIDHashFunction
operator ()	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^        virtual void operator()(OptimizableGraph::Edge* e, const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* to) const$/;"	f	struct:g2o::EstimatePropagator::PropagateAction
operator ()	./Thirdparty/g2o/g2o/core/hyper_dijkstra.cpp	/^  double UniformCostFunction::operator () (HyperGraph::Edge* \/*edge*\/, HyperGraph::Vertex* \/*from*\/, HyperGraph::Vertex* \/*to*\/)$/;"	f	class:g2o::UniformCostFunction
operator ()	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphAction* HyperGraphAction::operator()(const HyperGraph*, Parameters*)$/;"	f	class:g2o::HyperGraphAction
operator ()	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementAction* HyperGraphElementAction::operator()(HyperGraph::HyperGraphElement* , HyperGraphElementAction::Parameters* )$/;"	f	class:g2o::HyperGraphElementAction
operator ()	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementAction* HyperGraphElementAction::operator()(const HyperGraph::HyperGraphElement* , HyperGraphElementAction::Parameters* )$/;"	f	class:g2o::HyperGraphElementAction
operator ()	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementAction* HyperGraphElementActionCollection::operator()(HyperGraph::HyperGraphElement* element, HyperGraphElementAction::Parameters* params)$/;"	f	class:g2o::HyperGraphElementActionCollection
operator ()	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementAction* HyperGraphElementActionCollection::operator()(const HyperGraph::HyperGraphElement* element, HyperGraphElementAction::Parameters* params)$/;"	f	class:g2o::HyperGraphElementActionCollection
operator ()	./Thirdparty/g2o/g2o/core/matrix_structure.cpp	/^  bool operator()(const pair<int, int>& e1, const pair<int, int>& e2) const$/;"	f	struct:g2o::ColSort
operator ()	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^      bool operator() (const Edge* e1, const Edge* e2) const$/;"	f	struct:g2o::OptimizableGraph::EdgeIDCompare
operator ()	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^      bool operator() (const Vertex* v1, const Vertex* v2) const$/;"	f	struct:g2o::OptimizableGraph::VertexIDCompare
operator ()	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^      bool operator()(const TripletEntry& e1, const TripletEntry& e2) const$/;"	f	struct:g2o::__anon468::TripletColSort
operator ()	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^      bool operator()(const std::pair<T1,T2>& left, const std::pair<T1,T2>& right) {$/;"	f	struct:g2o::__anon468::CmpPairFirst
operator ()	./Thirdparty/sparseicp/ICP.h	/^        bool operator()(const std::pair<int,double> &left,$/;"	f	struct:ICP::sort_pred
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE CoeffReturnType operator()(Index row, Index col) const$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    operator()(Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    operator()(Index index)$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    operator()(Index row, Index col)$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE Scalar operator() (const Scalar& a) const { return a * m_other; }$/;"	f	struct:Eigen::internal::scalar_multiple_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE Scalar operator() (const Scalar& a) const { return a \/ m_other; }$/;"	f	struct:Eigen::internal::scalar_quotient1_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE bool operator() (const bool& a, const bool& b) const { return a && b; }$/;"	f	struct:Eigen::internal::scalar_boolean_and_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE bool operator() (const bool& a, const bool& b) const { return a || b; }$/;"	f	struct:Eigen::internal::scalar_boolean_or_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const NewType operator() (const Scalar& a) const { return cast<Scalar, NewType>(a); }$/;"	f	struct:Eigen::internal::scalar_cast_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (Index i) const $/;"	f	struct:Eigen::internal::linspaced_op_impl
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (Index i) const { return impl(i); }$/;"	f	struct:Eigen::internal::linspaced_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (Index i) const { return m_low+i*m_step; }$/;"	f	struct:Eigen::internal::linspaced_op_impl
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (Index row, Index col) const $/;"	f	struct:Eigen::internal::linspaced_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (Index row, Index col) const { return row==col ? Scalar(1) : Scalar(0); }$/;"	f	struct:Eigen::internal::scalar_identity_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (Index, Index = 0) const { return m_other; }$/;"	f	struct:Eigen::internal::scalar_constant_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& _x, const Scalar& _y) const$/;"	f	struct:Eigen::internal::scalar_hypot_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { return -a; }$/;"	f	struct:Eigen::internal::scalar_opposite_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { using numext::conj; return conj(a); }$/;"	f	struct:Eigen::internal::scalar_conjugate_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { return a + b; }$/;"	f	struct:Eigen::internal::scalar_sum_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { return a - b; }$/;"	f	struct:Eigen::internal::scalar_difference_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { using std::max; return (max)(a, b); }$/;"	f	struct:Eigen::internal::scalar_max_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { using std::min; return (min)(a, b); }$/;"	f	struct:Eigen::internal::scalar_min_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return a * b; }$/;"	f	struct:Eigen::internal::scalar_product_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return a \/ b; }$/;"	f	struct:Eigen::internal::scalar_quotient_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const$/;"	f	struct:Eigen::internal::scalar_conj_product_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a) const { return numext::abs2(a); }$/;"	f	struct:Eigen::internal::scalar_abs2_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a) const { using std::abs; return abs(a); }$/;"	f	struct:Eigen::internal::scalar_abs_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const { return numext::imag(a); }$/;"	f	struct:Eigen::internal::scalar_imag_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const { return numext::real(a); }$/;"	f	struct:Eigen::internal::scalar_real_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE result_type operator() (const Scalar1& a) const { return a * m_other; }$/;"	f	struct:Eigen::internal::scalar_multiple2_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE result_type& operator() (const Scalar& a) const { return numext::imag_ref(*const_cast<Scalar*>(&a)); }$/;"	f	struct:Eigen::internal::scalar_imag_ref_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE result_type& operator() (const Scalar& a) const { return numext::real_ref(*const_cast<Scalar*>(&a)); }$/;"	f	struct:Eigen::internal::scalar_real_ref_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline Scalar operator() (const Scalar& a) const { return Scalar(1)\/a; }$/;"	f	struct:Eigen::internal::scalar_inverse_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline Scalar operator() (const Scalar& a) const { return a + m_other; }$/;"	f	struct:Eigen::internal::scalar_add_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline Scalar operator() (const Scalar& a) const { return a*a*a; }$/;"	f	struct:Eigen::internal::scalar_cube_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline Scalar operator() (const Scalar& a) const { return a*a; }$/;"	f	struct:Eigen::internal::scalar_square_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline Scalar operator() (const Scalar& a) const { return m_other \/ a; }$/;"	f	struct:Eigen::internal::scalar_inverse_mult_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline Scalar operator() (const Scalar& a) const { return numext::pow(a, m_exponent); }$/;"	f	struct:Eigen::internal::scalar_pow_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline Scalar operator() (const Scalar& a) const { using std::cos; return cos(a); }$/;"	f	struct:Eigen::internal::scalar_cos_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline Scalar operator() (const Scalar& a, const OtherScalar& b) const { return numext::pow(a, b); }$/;"	f	struct:Eigen::internal::scalar_binary_pow_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline const Scalar operator() (const Scalar& a) const { using std::acos; return acos(a); }$/;"	f	struct:Eigen::internal::scalar_acos_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline const Scalar operator() (const Scalar& a) const { using std::asin; return asin(a); }$/;"	f	struct:Eigen::internal::scalar_asin_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline const Scalar operator() (const Scalar& a) const { using std::exp; return exp(a); }$/;"	f	struct:Eigen::internal::scalar_exp_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline const Scalar operator() (const Scalar& a) const { using std::log; return log(a); }$/;"	f	struct:Eigen::internal::scalar_log_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline const Scalar operator() (const Scalar& a) const { using std::sin; return sin(a); }$/;"	f	struct:Eigen::internal::scalar_sin_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline const Scalar operator() (const Scalar& a) const { using std::sqrt; return sqrt(a); }$/;"	f	struct:Eigen::internal::scalar_sqrt_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline const Scalar operator() (const Scalar& a) const { using std::tan; return tan(a); }$/;"	f	struct:Eigen::internal::scalar_tan_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^      template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const {$/;"	f	struct:Eigen::GeneralProduct::adds
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    struct add  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() += src; } };$/;"	f	struct:Eigen::GeneralProduct::add
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    struct set  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived()  = src; } };$/;"	f	struct:Eigen::GeneralProduct::set
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    struct sub  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() -= src; } };$/;"	f	struct:Eigen::GeneralProduct::sub
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Random.h	/^  inline const Scalar operator() (Index, Index = 0) const { return random<Scalar>(); }$/;"	f	struct:Eigen::internal::scalar_random_op
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    inline Scalar& operator()(Index index)$/;"	f	class:Eigen::Reverse
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    inline Scalar& operator()(Index row, Index col)$/;"	f	class:Eigen::Reverse
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline Index& operator()(Index i) { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline const Index& operator()(Index i) const { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar operator()(Index row, Index col) const$/;"	f	class:Eigen::TriangularBase
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar& operator()(Index row, Index col)$/;"	f	class:Eigen::TriangularBase
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^  inline result_type operator()(const DenseBase<Derived>& mat) const$/;"	f	struct:Eigen::internal::member_redux
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^  void operator() (const Scalar& value, Index i, Index j)$/;"	f	struct:Eigen::internal::max_coeff_visitor
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^  void operator() (const Scalar& value, Index i, Index j)$/;"	f	struct:Eigen::internal::min_coeff_visitor
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  ::operator()(ResScalar* res, Index resStride, const LhsScalar* blockA, const RhsScalar* blockB, Index rows, Index depth, Index cols, ResScalar alpha,$/;"	f	class:Eigen::internal::gebp_kernel
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  ::operator()(Scalar* blockA, const Scalar* EIGEN_RESTRICT _lhs, Index lhsStride, Index depth, Index rows, Index stride, Index offset)$/;"	f	class:Eigen::internal::gemm_pack_lhs
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  ::operator()(Scalar* blockB, const Scalar* rhs, Index rhsStride, Index depth, Index cols, Index stride, Index offset)$/;"	f	class:Eigen::internal::gemm_pack_rhs
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  void operator() (Index row, Index rows, Index col=0, Index cols=-1, GemmParallelInfo<Index>* info=0) const$/;"	f	struct:Eigen::internal::gemm_functor
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  void operator()(ResScalar* res, Index resStride, const LhsScalar* blockA, const RhsScalar* blockB, Index size, Index depth, const ResScalar& alpha, RhsScalar* workspace)$/;"	f	struct:Eigen::internal::tribb_kernel
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  void operator()(Scalar* blockA, const Scalar* _lhs, Index lhsStride, Index cols, Index rows)$/;"	f	struct:Eigen::internal::symm_pack_lhs
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  void operator()(Scalar* blockB, const Scalar* _rhs, Index rhsStride, Index rows, Index cols, Index k2)$/;"	f	struct:Eigen::internal::symm_pack_rhs
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^    EIGEN_STRONG_INLINE Scalar& operator()(Index i, Index j)$/;"	f	class:Eigen::internal::blas_data_mapper
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^    EIGEN_STRONG_INLINE const Scalar& operator()(Index i, Index j) const$/;"	f	class:Eigen::internal::const_blas_data_mapper
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  inline T operator()(const T& x) { return numext::conj(x); }$/;"	f	struct:Eigen::internal::conj_if
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  inline const T& operator()(const T& x) { return x; }$/;"	f	struct:Eigen::internal::conj_if
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Scalar operator() (int row, int col) const { return m_matrix(row,col); }$/;"	f	class:Eigen::Transform
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Scalar& operator() (int row, int col) { return m_matrix(row,col); }$/;"	f	class:Eigen::Transform
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline Scalar operator() (Index row, Index col) const { return m_matrix(row,col); }$/;"	f	class:Eigen::Transform
operator ()	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline Scalar& operator() (Index row, Index col) { return m_matrix(row,col); }$/;"	f	class:Eigen::Transform
operator ()	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^      inline bool operator() (const Index& row, const Index& col, const Scalar&) const$/;"	f	struct:Eigen::IncompleteLUT::keep_diag
operator ()	./Thirdparty/sparseicp/include/Eigen/src/MetisSupport/MetisSupport.h	/^  void operator() (const MatrixType& A, PermutationType& matperm)$/;"	f	class:Eigen::MetisOrdering
operator ()	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Ordering.h	/^    void operator() (const MatrixType& mat, PermutationType& perm)$/;"	f	class:Eigen::COLAMDOrdering
operator ()	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Ordering.h	/^    void operator()(const MatrixType& \/*mat*\/, PermutationType& perm)$/;"	f	class:Eigen::NaturalOrdering
operator ()	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Ordering.h	/^    void operator()(const MatrixType& mat, PermutationType& perm)$/;"	f	class:Eigen::AMDOrdering
operator ()	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Ordering.h	/^    void operator()(const SparseSelfAdjointView<SrcType, SrcUpLo>& mat, PermutationType& perm)$/;"	f	class:Eigen::AMDOrdering
operator ()	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^      inline bool operator() (const Index& row, const Index& col, const Scalar&) const$/;"	f	struct:Eigen::SimplicialCholeskyBase::keep_diag
operator ()	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline bool operator() (const Index&, const Index&, const Scalar& value) const$/;"	f	struct:Eigen::SparseMatrix::default_prunning_func
operator ()	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline DistanceType operator()(const T* a, const size_t b_idx, size_t size) const {$/;"	f	struct:nanoflann::L2_Simple_Adaptor
operator ()	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline DistanceType operator()(const T* a, const size_t b_idx, size_t size, DistanceType worst_dist = -1) const$/;"	f	struct:nanoflann::L1_Adaptor
operator ()	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline DistanceType operator()(const T* a, const size_t b_idx, size_t size, DistanceType worst_dist = -1) const$/;"	f	struct:nanoflann::L2_Adaptor
operator ()	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline bool operator()(const PairType &p1, const PairType &p2) const {$/;"	f	struct:nanoflann::IndexDist_Sorter
operator ()	./src/ORBextractor.cc	/^void ORBextractor::operator()( InputArray _image, InputArray _mask, vector<KeyPoint>& _keypoints,$/;"	f	class:ORB_SLAM2::ORBextractor
operator *	./Thirdparty/g2o/g2o/types/se3quat.h	/^      inline SE3Quat operator* (const SE3Quat& tr2) const{$/;"	f	class:g2o::SE3Quat
operator *	./Thirdparty/g2o/g2o/types/se3quat.h	/^      inline Vector3d operator* (const Vector3d& v) const {$/;"	f	class:g2o::SE3Quat
operator *	./Thirdparty/g2o/g2o/types/sim3.h	/^    Sim3 operator *(const Sim3& other) const {$/;"	f	struct:g2o::Sim3
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    operator*(const MatrixBase<MatrixDerived> &matrix) const$/;"	f	class:Eigen::DiagonalBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    operator*(const Scalar& scalar) const$/;"	f	class:Eigen::DiagonalBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    operator*(const Scalar& scalar, const DiagonalBase& other)$/;"	f	class:Eigen::DiagonalBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^MatrixBase<Derived>::operator*(const DiagonalBase<DiagonalDerived> &a_diagonal) const$/;"	f	class:Eigen::MatrixBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^MatrixBase<Derived>::operator*(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::MatrixBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline PlainPermutationType operator*(const PermutationBase<Other>& other) const$/;"	f	class:Eigen::PermutationBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline PlainPermutationType operator*(const Transpose<PermutationBase<Other> >& other) const$/;"	f	class:Eigen::PermutationBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline PlainPermutationType operator*(const Transpose<PermutationBase<Other> >& other, const PermutationBase& perm)$/;"	f	class:Eigen::PermutationBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& matrix) const$/;"	f	class:Eigen::Transpose
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& matrix, const Transpose& trPerm)$/;"	f	class:Eigen::Transpose
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^operator*(const MatrixBase<Derived>& matrix,$/;"	f	namespace:Eigen
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^operator*(const PermutationBase<PermutationDerived> &permutation,$/;"	f	namespace:Eigen
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^operator*(const ProductBase<Derived,Lhs,Rhs>& prod, const typename Derived::RealScalar& x)$/;"	f	namespace:Eigen
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^operator*(const ProductBase<Derived,Lhs,Rhs>& prod, const typename Derived::Scalar& x)$/;"	f	namespace:Eigen
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^operator*(const typename Derived::RealScalar& x,const ProductBase<Derived,Lhs,Rhs>& prod)$/;"	f	namespace:Eigen
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^operator*(const typename Derived::Scalar& x,const ProductBase<Derived,Lhs,Rhs>& prod)$/;"	f	namespace:Eigen
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& lhs, const SelfAdjointView& rhs)$/;"	f	class:Eigen::SelfAdjointView
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::SelfAdjointView
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    operator*(const MatrixBase<Derived>& matrix) const$/;"	f	class:Eigen::Transpose
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    operator*(const MatrixBase<Derived>& matrix, const Transpose& trt)$/;"	f	class:Eigen::Transpose
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^operator*(const MatrixBase<Derived>& matrix,$/;"	f	namespace:Eigen
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^operator*(const TranspositionsBase<TranspositionDerived> &transpositions,$/;"	f	namespace:Eigen
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    operator*(const EigenBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::TriangularView
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& lhs, const TriangularView& rhs)$/;"	f	class:Eigen::TriangularView
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::TriangularView
operator *	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    operator*(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator*(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Cwise
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  friend inline QuaternionType operator* (const QuaternionType& a, const AngleAxis& b)$/;"	f	class:Eigen::AngleAxis
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline Matrix3 operator* (const Matrix3& other) const$/;"	f	class:Eigen::AngleAxis
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline QuaternionType operator* (const AngleAxis& other) const$/;"	f	class:Eigen::AngleAxis
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline QuaternionType operator* (const QuaternionType& other) const$/;"	f	class:Eigen::AngleAxis
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline Vector3 operator* (const Vector3& other) const$/;"	f	class:Eigen::AngleAxis
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline friend Matrix3 operator* (const Matrix3& a, const AngleAxis& b)$/;"	f	class:Eigen::AngleAxis
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^Quaternion<Scalar>::operator* (const MatrixBase<Derived>& v) const$/;"	f	class:Eigen::Quaternion
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Quaternion<Scalar> Quaternion<Scalar>::operator* (const Quaternion& other) const$/;"	f	class:Eigen::Quaternion
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  Vector2 operator* (const Vector2& vec) const$/;"	f	class:Eigen::Rotation2D
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline Rotation2D operator*(const Rotation2D& other) const$/;"	f	class:Eigen::Rotation2D
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    inline RotationMatrixType operator*(const Scaling<Scalar,Dim>& s) const$/;"	f	class:Eigen::RotationBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    inline Transform<Scalar,Dim> operator*(const Transform<Scalar,Dim>& t) const$/;"	f	class:Eigen::RotationBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    inline Transform<Scalar,Dim> operator*(const Translation<Scalar,Dim>& t) const$/;"	f	class:Eigen::RotationBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  friend inline LinearMatrixType operator* (const LinearMatrixType& other, const Scaling& s)$/;"	f	class:Eigen::Scaling
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline LinearMatrixType operator* (const LinearMatrixType& other) const$/;"	f	class:Eigen::Scaling
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline LinearMatrixType operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::Scaling
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline Scaling operator* (const Scaling& other) const$/;"	f	class:Eigen::Scaling
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline VectorType operator* (const VectorType& other) const$/;"	f	class:Eigen::Scaling
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^Scaling<Scalar,Dim>::operator* (const TransformType& t) const$/;"	f	class:Eigen::Scaling
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^Scaling<Scalar,Dim>::operator* (const TranslationType& t) const$/;"	f	class:Eigen::Scaling
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  friend inline Transform operator*(const LinearMatrixType& mat, const Transform& t)$/;"	f	class:Eigen::Transform
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  operator * (const MatrixBase<OtherDerived> &a, const Transform &b)$/;"	f	class:Eigen::Transform
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  operator * (const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Transform
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  operator * (const Transform& other) const$/;"	f	class:Eigen::Transform
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^inline Transform<Scalar,Dim> Transform<Scalar,Dim>::operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::Transform
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^inline Transform<Scalar,Dim> Transform<Scalar,Dim>::operator*(const ScalingType& s) const$/;"	f	class:Eigen::Transform
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^inline Transform<Scalar,Dim> Transform<Scalar,Dim>::operator*(const TranslationType& t) const$/;"	f	class:Eigen::Transform
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  friend inline TransformType operator* (const LinearMatrixType& linear, const Translation& t)$/;"	f	class:Eigen::Translation
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  inline TransformType operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::Translation
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  inline Translation operator* (const Translation& other) const$/;"	f	class:Eigen::Translation
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  inline VectorType operator* (const VectorType& other) const$/;"	f	class:Eigen::Translation
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^Translation<Scalar,Dim>::operator* (const LinearMatrixType& linear) const$/;"	f	class:Eigen::Translation
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^Translation<Scalar,Dim>::operator* (const ScalingType& other) const$/;"	f	class:Eigen::Translation
operator *	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^Translation<Scalar,Dim>::operator* (const TransformType& t) const$/;"	f	class:Eigen::Translation
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  friend inline QuaternionType operator* (const QuaternionType& a, const AngleAxis& b)$/;"	f	class:Eigen::AngleAxis
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  inline QuaternionType operator* (const AngleAxis& other) const$/;"	f	class:Eigen::AngleAxis
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^  inline QuaternionType operator* (const QuaternionType& other) const$/;"	f	class:Eigen::AngleAxis
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    operator* (const MatrixBase<Lhs>& lhs, const Homogeneous& rhs)$/;"	f	class:Eigen::Homogeneous
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    operator* (const MatrixBase<Rhs>& rhs) const$/;"	f	class:Eigen::Homogeneous
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    operator* (const Transform<Scalar,Dim,Mode,Options>& lhs, const Homogeneous& rhs)$/;"	f	class:Eigen::Homogeneous
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::operator* (const QuaternionBase<OtherDerived>& other) const$/;"	f	class:Eigen::QuaternionBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  Vector2 operator* (const Vector2& vec) const$/;"	f	class:Eigen::Rotation2D
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  inline Rotation2D operator*(const Rotation2D& other) const$/;"	f	class:Eigen::Rotation2D
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^    friend inline Transform<Scalar,Dim,Affine> operator*(const DiagonalMatrix<Scalar,Dim>& l, const Derived& r)$/;"	f	class:Eigen::RotationBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^    inline RotationMatrixType operator*(const EigenBase<OtherDerived>& l, const Derived& r)$/;"	f	class:Eigen::RotationBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^    inline RotationMatrixType operator*(const UniformScaling<Scalar>& s) const$/;"	f	class:Eigen::RotationBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^    inline Transform<Scalar,Dim,Isometry> operator*(const Translation<Scalar,Dim>& t) const$/;"	f	class:Eigen::RotationBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^    inline Transform<Scalar,Dim,Mode> operator*(const Transform<Scalar,Dim,Mode,Options>& t) const$/;"	f	class:Eigen::RotationBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^    operator*(const EigenBase<OtherDerived>& e) const$/;"	f	class:Eigen::RotationBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^  inline Matrix<Scalar,Dim,Dim> operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::UniformScaling
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^  inline Transform<Scalar,Dim,(int(Mode)==int(Isometry)?Affine:Mode)> operator* (const Transform<Scalar,Dim, Mode, Options>& t) const$/;"	f	class:Eigen::UniformScaling
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^  inline UniformScaling operator* (const UniformScaling& other) const$/;"	f	class:Eigen::UniformScaling
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^  inline typename internal::plain_matrix_type<Derived>::type operator* (const MatrixBase<Derived>& other) const$/;"	f	class:Eigen::UniformScaling
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^MatrixBase<Derived>::operator*(const UniformScaling<Scalar>& s) const$/;"	f	class:Eigen::MatrixBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Scaling.h	/^UniformScaling<Scalar>::operator* (const Translation<Scalar,Dim>& t) const$/;"	f	class:Eigen::UniformScaling
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    operator * (const DiagonalBase<DiagonalDerived> &a, const Transform &b)$/;"	f	class:Eigen::Transform
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    operator * (const DiagonalBase<DiagonalDerived> &b) const$/;"	f	class:Eigen::Transform
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    operator * (const EigenBase<OtherDerived> &a, const Transform &b)$/;"	f	class:Eigen::Transform
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^    operator * (const Transform<Scalar,Dim,OtherMode,OtherOptions>& other) const$/;"	f	class:Eigen::Transform
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline Transform<Scalar,Dim,(int(Mode)==int(Isometry)?int(Affine):int(Mode))> operator*(const UniformScaling<Scalar>& s) const$/;"	f	class:Eigen::Transform
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline const Transform operator * (const Transform& other) const$/;"	f	class:Eigen::Transform
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  operator * (const EigenBase<OtherDerived> &other) const$/;"	f	class:Eigen::Transform
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options> Transform<Scalar,Dim,Mode,Options>::operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::Transform
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options> Transform<Scalar,Dim,Mode,Options>::operator*(const TranslationType& t) const$/;"	f	class:Eigen::Transform
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  inline AffineTransformType operator*(const EigenBase<OtherDerived>& linear, const Translation& t)$/;"	f	class:Eigen::Translation
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  inline IsometryTransformType operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::Translation
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  inline Transform<Scalar,Dim,Mode> operator* (const Transform<Scalar,Dim,Mode,Options>& t) const$/;"	f	class:Eigen::Translation
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  inline Translation operator* (const Translation& other) const$/;"	f	class:Eigen::Translation
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  inline VectorType operator* (const VectorType& other) const$/;"	f	class:Eigen::Translation
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^Translation<Scalar,Dim>::operator* (const EigenBase<OtherDerived>& linear) const$/;"	f	class:Eigen::Translation
operator *	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^Translation<Scalar,Dim>::operator* (const UniformScaling<Scalar>& other) const$/;"	f	class:Eigen::Translation
operator *	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    typename internal::matrix_type_times_scalar_type<Scalar, OtherDerived>::Type operator*(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::HouseholderSequence
operator *	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^typename internal::matrix_type_times_scalar_type<typename VectorsType::Scalar,OtherDerived>::Type operator*(const MatrixBase<OtherDerived>& other, const HouseholderSequence<VectorsType,CoeffsType,Side>& h)$/;"	f	namespace:Eigen
operator *	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation operator*(const JacobiRotation& other)$/;"	f	class:Eigen::JacobiRotation
operator *	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQR_QProduct<SPQRType, Derived> operator*(const MatrixBase<Derived>& other)$/;"	f	struct:Eigen::SPQRMatrixQReturnType
operator *	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQR_QProduct<SPQRType,Derived> operator*(const MatrixBase<Derived>& other)$/;"	f	struct:Eigen::SPQRMatrixQTransposeReturnType
operator *	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^SparseMatrixBase<Derived>::operator*(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^SparseMatrixBase<Derived>::operator*(const DiagonalBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    operator*(const DiagonalBase<OtherDerived> &lhs, const SparseMatrixBase& rhs)$/;"	f	class:Eigen::SparseMatrixBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    operator*(const MatrixBase<OtherDerived>& lhs, const Derived& rhs)$/;"	f	class:Eigen::SparseMatrixBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^operator*( const PermutationBase<PermDerived>& perm, const SparseMatrixBase<SparseDerived>& matrix)$/;"	f	namespace:Eigen
operator *	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^operator*(const SparseMatrixBase<SparseDerived>& matrix, const PermutationBase<PermDerived>& perm)$/;"	f	namespace:Eigen
operator *	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^operator*(const SparseMatrixBase<SparseDerived>& matrix, const Transpose<PermutationBase<PermDerived> >& tperm)$/;"	f	namespace:Eigen
operator *	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^operator*(const Transpose<PermutationBase<PermDerived> >& tperm, const SparseMatrixBase<SparseDerived>& matrix)$/;"	f	namespace:Eigen
operator *	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^SparseMatrixBase<Derived>::operator*(const SparseMatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
operator *	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& lhs, const SparseSelfAdjointView& rhs)$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const SparseMatrixBase<OtherDerived>& lhs, const SparseSelfAdjointView& rhs)$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const SparseMatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  SparseQR_QProduct<SparseQRType, Derived> operator*(const MatrixBase<Derived>& other)$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
operator *	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  SparseQR_QProduct<SparseQRType,Derived> operator*(const MatrixBase<Derived>& other)$/;"	f	struct:Eigen::SparseQRMatrixQTransposeReturnType
operator *	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator*(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator *	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator*(const Scalar& scalar) const$/;"	f
operator *	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator*(const Scalar& scalar, const StorageBaseType& matrix)$/;"	f
operator *	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator*(const std::complex<Scalar>& scalar) const$/;"	f
operator *	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator*(const std::complex<Scalar>& scalar, const StorageBaseType& matrix)$/;"	f
operator *=	./Thirdparty/g2o/g2o/types/se3quat.h	/^      inline SE3Quat& operator*= (const SE3Quat& tr2){$/;"	f	class:g2o::SE3Quat
operator *=	./Thirdparty/g2o/g2o/types/sim3.h	/^    Sim3& operator *=(const Sim3& other){$/;"	f	struct:g2o::Sim3
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator*=(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::ArrayBase
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^MatrixBase<Derived>::operator*=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^inline Derived& DenseBase<Derived>::operator*=(const Scalar& other)$/;"	f	class:Eigen::DenseBase
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    TriangularView&  operator*=(const typename internal::traits<MatrixType>::Scalar& other) { return *this = m_matrix * other; }$/;"	f	class:Eigen::TriangularView
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator*=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^inline ExpressionType& Cwise<ExpressionType>::operator*=(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Cwise
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Quaternion<Scalar>& Quaternion<Scalar>::operator*= (const Quaternion& other)$/;"	f	class:Eigen::Quaternion
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline Rotation2D& operator*=(const Rotation2D& other)$/;"	f	class:Eigen::Rotation2D
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Transform& operator*=(const RotationBase<Derived,Dim>& r) { return rotate(r.toRotationMatrix()); }$/;"	f	class:Eigen::Transform
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Transform& operator*=(const ScalingType& s) { return scale(s.coeffs()); }$/;"	f	class:Eigen::Transform
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Transform& operator*=(const TranslationType& t) { return translate(t.vector()); }$/;"	f	class:Eigen::Transform
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator*= (const QuaternionBase<OtherDerived>& other)$/;"	f	class:Eigen::QuaternionBase
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  inline Rotation2D& operator*=(const Rotation2D& other)$/;"	f	class:Eigen::Rotation2D
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const DiagonalMatrix<Scalar,Dim>& s) { linear() *= s; return *this; }$/;"	f	class:Eigen::Transform
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const EigenBase<OtherDerived>& other) { return *this = *this * other; }$/;"	f	class:Eigen::Transform
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const RotationBase<Derived,Dim>& r) { return rotate(r.toRotationMatrix()); }$/;"	f	class:Eigen::Transform
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const TranslationType& t) { return translate(t.vector()); }$/;"	f	class:Eigen::Transform
operator *=	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const UniformScaling<Scalar>& s) { return scale(s.factor()); }$/;"	f	class:Eigen::Transform
operator *=	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^SparseMatrixBase<Derived>::operator*=(const Scalar& other)$/;"	f	class:Eigen::SparseMatrixBase
operator +	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^Timestamp Timestamp::operator+ (double s) const$/;"	f	class:Timestamp
operator +	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    operator+(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator +	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Cwise.h	/^    operator+(const Scalar& scalar, const Cwise& mat)$/;"	f	class:Eigen::Cwise
operator +	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator+(const Scalar& scalar) const$/;"	f	class:Eigen::Cwise
operator +	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator+(const Scalar& scalar) const$/;"	f
operator +	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator+(const Scalar& scalar,const EIGEN_CURRENT_STORAGE_BASE_CLASS<Derived>& other)$/;"	f
operator ++	./Thirdparty/sparseicp/include/Eigen/src/Core/CoreIterators.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++() { m_inner++; return *this; }$/;"	f	class:Eigen::DenseBase::InnerIterator
operator ++	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Iterator& operator++()$/;"	f	class:Eigen::internal::AmbiVector::Iterator
operator ++	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline InnerIterator& operator++() { m_id++; return *this; }$/;"	f	class:Eigen::MappedSparseMatrix::InnerIterator
operator ++	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Derived& operator++()$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
operator ++	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::CwiseUnaryOpImpl::InnerIterator
operator ++	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::CwiseUnaryViewImpl::InnerIterator
operator ++	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline InnerIterator& operator++() { m_id++; return *this; }$/;"	f	class:Eigen::SparseMatrix::InnerIterator
operator ++	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::SparseTriangularView::InnerIterator
operator ++	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline InnerIterator& operator++() { m_id++; return *this; }$/;"	f	class:Eigen::SparseVector::InnerIterator
operator ++	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::SparseView::InnerIterator
operator ++	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline InnerIterator& operator++()$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
operator +=	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^Timestamp& Timestamp::operator+= (double s)$/;"	f	class:Timestamp
operator +=	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    Derived& operator+=(const Scalar& scalar)$/;"	f	class:Eigen::ArrayBase
operator +=	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    template<typename OtherDerived> Derived& operator+=(const MatrixBase<OtherDerived>& )$/;"	f	class:Eigen::ArrayBase
operator +=	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator+=(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::ArrayBase
operator +=	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^MatrixBase<Derived>::operator+=(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator +=	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^Derived& DenseBase<Derived>::operator+=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::DenseBase
operator +=	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    template<typename OtherDerived> Derived& operator+=(const ArrayBase<OtherDerived>& )$/;"	f	class:Eigen::MatrixBase
operator +=	./Thirdparty/sparseicp/include/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator+=(const CoeffBasedProduct<Lhs,Rhs,NestingFlags>& other)$/;"	f	class:Eigen::NoAlias
operator +=	./Thirdparty/sparseicp/include/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator+=(const ProductBase<ProductDerived, Lhs,Rhs>& other)$/;"	f	class:Eigen::NoAlias
operator +=	./Thirdparty/sparseicp/include/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator+=(const StorageBase<OtherDerived>& other)$/;"	f	class:Eigen::NoAlias
operator +=	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE TriangularView& operator+=(const ProductBase<ProductDerived, Lhs,Rhs>& other)$/;"	f	class:Eigen::TriangularView
operator +=	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE TriangularView& operator+=(const ScaledProduct<ProductDerived>& other)$/;"	f	class:Eigen::TriangularView
operator +=	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    template<typename Other> TriangularView&  operator+=(const DenseBase<Other>& other) { return *this = m_matrix + other.derived(); }$/;"	f	class:Eigen::TriangularView
operator +=	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator+=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator +=	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^inline ExpressionType& Cwise<ExpressionType>::operator+=(const Scalar& scalar)$/;"	f	class:Eigen::Cwise
operator +=	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Lazy.h	/^Derived& MatrixBase<Derived>::operator+=(const Flagged<ProductBase<ProductDerived, Lhs,Rhs>, 0,$/;"	f	class:Eigen::MatrixBase
operator +=	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^SparseMatrixBase<Derived>::operator+=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator ,	./Thirdparty/sparseicp/include/Eigen/src/Core/CommaInitializer.h	/^  CommaInitializer& operator,(const DenseBase<OtherDerived>& other)$/;"	f	struct:Eigen::CommaInitializer
operator ,	./Thirdparty/sparseicp/include/Eigen/src/Core/CommaInitializer.h	/^  CommaInitializer& operator,(const Scalar& s)$/;"	f	struct:Eigen::CommaInitializer
operator -	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^Timestamp Timestamp::operator- (double s) const$/;"	f	class:Timestamp
operator -	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^double Timestamp::operator- (const Timestamp &t) const {$/;"	f	class:Timestamp
operator -	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    operator-(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator -	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator-(const Scalar& scalar) const$/;"	f	class:Eigen::Cwise
operator -	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator-(const Scalar& scalar) const$/;"	f
operator -	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator-(const Scalar& scalar,const EIGEN_CURRENT_STORAGE_BASE_CLASS<Derived>& other)$/;"	f
operator -	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator-() const { return derived(); }$/;"	f
operator --	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline ReverseInnerIterator& operator--() { m_id--; return *this; }$/;"	f	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
operator --	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE ReverseInnerIterator& operator--()$/;"	f	class:Eigen::CwiseUnaryOpImpl::ReverseInnerIterator
operator --	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE ReverseInnerIterator& operator--()$/;"	f	class:Eigen::CwiseUnaryViewImpl::ReverseInnerIterator
operator --	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline ReverseInnerIterator& operator--() { --m_id; return *this; }$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
operator --	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE ReverseInnerIterator& operator--()$/;"	f	class:Eigen::SparseTriangularView::ReverseInnerIterator
operator --	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline ReverseInnerIterator& operator--() { m_id--; return *this; }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
operator -=	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^Timestamp& Timestamp::operator-= (double s)$/;"	f	class:Timestamp
operator -=	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    Derived& operator-=(const Scalar& scalar)$/;"	f	class:Eigen::ArrayBase
operator -=	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    template<typename OtherDerived> Derived& operator-=(const MatrixBase<OtherDerived>& )$/;"	f	class:Eigen::ArrayBase
operator -=	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator-=(const ArrayBase<OtherDerived> &other)$/;"	f	class:Eigen::ArrayBase
operator -=	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^MatrixBase<Derived>::operator-=(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
operator -=	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^Derived& DenseBase<Derived>::operator-=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::DenseBase
operator -=	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    template<typename OtherDerived> Derived& operator-=(const ArrayBase<OtherDerived>& )$/;"	f	class:Eigen::MatrixBase
operator -=	./Thirdparty/sparseicp/include/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator-=(const CoeffBasedProduct<Lhs,Rhs,NestingFlags>& other)$/;"	f	class:Eigen::NoAlias
operator -=	./Thirdparty/sparseicp/include/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator-=(const ProductBase<ProductDerived, Lhs,Rhs>& other)$/;"	f	class:Eigen::NoAlias
operator -=	./Thirdparty/sparseicp/include/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator-=(const StorageBase<OtherDerived>& other)$/;"	f	class:Eigen::NoAlias
operator -=	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE TriangularView& operator-=(const ProductBase<ProductDerived, Lhs,Rhs>& other)$/;"	f	class:Eigen::TriangularView
operator -=	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE TriangularView& operator-=(const ScaledProduct<ProductDerived>& other)$/;"	f	class:Eigen::TriangularView
operator -=	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    template<typename Other> TriangularView&  operator-=(const DenseBase<Other>& other) { return *this = m_matrix - other.derived(); }$/;"	f	class:Eigen::TriangularView
operator -=	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator-=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator -=	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^inline ExpressionType& Cwise<ExpressionType>::operator-=(const Scalar& scalar)$/;"	f	class:Eigen::Cwise
operator -=	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Lazy.h	/^Derived& MatrixBase<Derived>::operator-=(const Flagged<ProductBase<ProductDerived, Lhs,Rhs>, 0,$/;"	f	class:Eigen::MatrixBase
operator -=	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^SparseMatrixBase<Derived>::operator-=(const SparseMatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::SparseMatrixBase
operator /	./Thirdparty/sparseicp/include/Eigen/src/Core/GlobalFunctions.h	/^    operator\/(const typename Derived::Scalar& s, const Eigen::ArrayBase<Derived>& a)$/;"	f	namespace:Eigen
operator /	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    operator\/(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator /	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator\/(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Cwise
operator /	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator\/(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator /	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator\/(const Scalar& scalar) const$/;"	f
operator /=	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator\/=(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::ArrayBase
operator /=	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^inline Derived& DenseBase<Derived>::operator\/=(const Scalar& other)$/;"	f	class:Eigen::DenseBase
operator /=	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    TriangularView&  operator\/=(const typename internal::traits<MatrixType>::Scalar& other) { return *this = m_matrix \/ other; }$/;"	f	class:Eigen::TriangularView
operator /=	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator\/=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator /=	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^inline ExpressionType& Cwise<ExpressionType>::operator\/=(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Cwise
operator /=	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^SparseMatrixBase<Derived>::operator\/=(const Scalar& other)$/;"	f	class:Eigen::SparseMatrixBase
operator <	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^bool Timestamp::operator< (const Timestamp &t) const$/;"	f	class:Timestamp
operator <	./Thirdparty/g2o/g2o/core/cache.cpp	/^  bool Cache::CacheKey::operator<(const Cache::CacheKey& c) const{$/;"	f	class:g2o::Cache::CacheKey
operator <	./Thirdparty/g2o/g2o/core/hyper_dijkstra.cpp	/^  bool operator<(const HyperDijkstra::AdjacencyMapEntry& a, const HyperDijkstra::AdjacencyMapEntry& b)$/;"	f	namespace:g2o
operator <	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^  bool operator<(const MatrixElem& other) const$/;"	f	struct:g2o::MatrixElem
operator <	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^        bool operator<(const RowBlock& other) const { return row < other.row;}$/;"	f	struct:g2o::SparseBlockMatrixCCS::RowBlock
operator <	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator<(Scalar s) const$/;"	f	class:Eigen::Cwise
operator <	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator<(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Cwise
operator <	./Thirdparty/sparseicp/include/nanoflann.hpp	/^			inline bool operator<(const BranchStruct<T, DistanceType>& rhs) const$/;"	f	struct:nanoflann::KDTreeSingleIndexAdaptor::BranchStruct
operator <<	./Thirdparty/DBoW2/DBoW2/BowVector.cpp	/^std::ostream& operator<< (std::ostream &out, const BowVector &v)$/;"	f	namespace:DBoW2
operator <<	./Thirdparty/DBoW2/DBoW2/FeatureVector.cpp	/^std::ostream& operator<<(std::ostream &out, $/;"	f	namespace:DBoW2
operator <<	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^std::ostream& operator<<(std::ostream &os, $/;"	f	namespace:DBoW2
operator <<	./Thirdparty/g2o/g2o/core/batch_stats.cpp	/^  std::ostream& operator << (std::ostream& os , const G2OBatchStatistics& st)$/;"	f	namespace:g2o
operator <<	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  std::ostream& operator << (std::ostream& os, const SparseBlockMatrix<MatrixType>& m){$/;"	f	namespace:g2o
operator <<	./Thirdparty/g2o/g2o/core/sparse_block_matrix_test.cpp	/^std::ostream& operator << (std::ostream& os, const SparseBlockMatrixX::SparseMatrixBlock& m) {$/;"	f
operator <<	./Thirdparty/g2o/g2o/types/se3quat.h	/^  inline std::ostream& operator <<(std::ostream& out_str, const SE3Quat& se3)$/;"	f	namespace:g2o
operator <<	./Thirdparty/g2o/g2o/types/sim3.h	/^  inline std::ostream& operator <<(std::ostream& out_str,$/;"	f	namespace:g2o
operator <<	./Thirdparty/sparseicp/include/Eigen/src/Core/CommaInitializer.h	/^DenseBase<Derived>::operator<<(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
operator <<	./Thirdparty/sparseicp/include/Eigen/src/Core/CommaInitializer.h	/^inline CommaInitializer<Derived> DenseBase<Derived>::operator<< (const Scalar& s)$/;"	f	class:Eigen::DenseBase
operator <<	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^    friend std::ostream & operator << (std::ostream & s, const WithFormat& wf)$/;"	f	class:Eigen::WithFormat
operator <<	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^std::ostream & operator <<$/;"	f	namespace:Eigen
operator <<	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    friend std::ostream & operator << (std::ostream & s, const SparseMatrix& m)$/;"	f	class:Eigen::SparseMatrix
operator <<	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    friend std::ostream & operator << (std::ostream & s, const SparseMatrixBase& m)$/;"	f	class:Eigen::SparseMatrixBase
operator <<	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    friend std::ostream & operator << (std::ostream & s, const SparseVector& m)$/;"	f	class:Eigen::SparseVector
operator <=	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^bool Timestamp::operator<= (const Timestamp &t) const$/;"	f	class:Timestamp
operator <=	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator<=(Scalar s) const$/;"	f	class:Eigen::Cwise
operator <=	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator<=(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Cwise
operator =	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^TemplatedVocabulary<TDescriptor,F>::operator=$/;"	f	class:DBoW2::TemplatedVocabulary
operator =	./Thirdparty/DBoW2/DUtils/Random.cpp	/^DUtils::Random::UnrepeatedRandomizer::operator=$/;"	f	class:DUtils::Random::UnrepeatedRandomizer
operator =	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^      HyperGraph& operator= (const HyperGraph&) { return *this; }$/;"	f	class:g2o::HyperGraph
operator =	./Thirdparty/g2o/g2o/core/optimization_algorithm.h	/^      OptimizationAlgorithm& operator= (const OptimizationAlgorithm&) { return *this; }$/;"	f	class:g2o::OptimizationAlgorithm
operator =	./Thirdparty/g2o/g2o/core/solver.h	/^      Solver& operator= (const Solver&) { return *this; }$/;"	f	class:g2o::Solver
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const Array& other)$/;"	f	class:Eigen::Array
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::Array
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Array
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayBase.h	/^    Derived& operator=(const ArrayBase& other)$/;"	f	class:Eigen::ArrayBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::operator=(const DenseBase& other)$/;"	f	class:Eigen::DenseBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const MatrixBase& other)$/;"	f	class:Eigen::MatrixBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    DiagonalMatrix& operator=(const DiagonalBase<OtherDerived>& other)$/;"	f	class:Eigen::DiagonalMatrix
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    DiagonalMatrix& operator=(const DiagonalMatrix& other)$/;"	f	class:Eigen::DiagonalMatrix
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^Derived& DenseBase<Derived>::operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::DenseBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    Derived& operator=(const MapBase& other)$/;"	f	class:Eigen::MapBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Matrix
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const Matrix& other)$/;"	f	class:Eigen::Matrix
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::Matrix
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const ReturnByValue<OtherDerived>& func)$/;"	f	class:Eigen::Matrix
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator=(const StorageBase<OtherDerived>& other)$/;"	f	class:Eigen::NoAlias
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/NoAlias.h	/^    ExpressionType& operator=(const ReturnByValue<OtherDerived>& func)$/;"	f	class:Eigen::NoAlias
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    Derived& operator=(const PermutationBase& other)$/;"	f	class:Eigen::PermutationBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    Derived& operator=(const PermutationBase<OtherDerived>& other)$/;"	f	class:Eigen::PermutationBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    Derived& operator=(const TranspositionsBase<OtherDerived>& tr)$/;"	f	class:Eigen::PermutationBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    Map& operator=(const Map& other)$/;"	f	class:Eigen::Map
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    Map& operator=(const PermutationBase<Other>& other)$/;"	f	class:Eigen::Map
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    Map& operator=(const TranspositionsBase<Other>& tr)$/;"	f	class:Eigen::Map
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix& operator=(const PermutationBase<Other>& other)$/;"	f	class:Eigen::PermutationMatrix
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix& operator=(const PermutationMatrix& other)$/;"	f	class:Eigen::PermutationMatrix
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix& operator=(const TranspositionsBase<Other>& tr)$/;"	f	class:Eigen::PermutationMatrix
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::PlainObjectBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& operator=(const PlainObjectBase& other)$/;"	f	class:Eigen::PlainObjectBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& operator=(const ReturnByValue<OtherDerived>& func)$/;"	f	class:Eigen::PlainObjectBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^      Unusable& operator=(const Unusable&) {return *this;}$/;"	f	class:Eigen::ReturnByValue::Unusable
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^Derived& DenseBase<Derived>::operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    SelfAdjointView& operator=(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SelfAdjointView
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    SelfAdjointView& operator=(const TriangularView<OtherMatrixType, OtherMode>& other)$/;"	f	class:Eigen::SelfAdjointView
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    SelfCwiseBinaryOp& operator=(const Rhs& _rhs)$/;"	f	class:Eigen::SelfCwiseBinaryOp
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    Derived& operator=(const TranspositionsBase& other)$/;"	f	class:Eigen::TranspositionsBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    Derived& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::TranspositionsBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    Map& operator=(const Map& other)$/;"	f	class:Eigen::Map
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    Map& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::Map
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    Transpositions& operator=(const Transpositions& other)$/;"	f	class:Eigen::Transpositions
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    Transpositions& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::Transpositions
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    TranspositionsWrapper& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::TranspositionsWrapper
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    TranspositionsWrapper& operator=(const TranspositionsWrapper& other)$/;"	f	class:Eigen::TranspositionsWrapper
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE TriangularView& operator=(const ProductBase<ProductDerived, Lhs,Rhs>& other)$/;"	f	class:Eigen::TriangularView
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE TriangularView& operator=(const ScaledProduct<ProductDerived>& other)$/;"	f	class:Eigen::TriangularView
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    TriangularView& operator=(const TriangularView& other)$/;"	f	class:Eigen::TriangularView
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^TriangularView<MatrixType, Mode>::operator=(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularView
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^TriangularView<MatrixType, Mode>::operator=(const TriangularBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularView
operator =	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator =	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^AngleAxis<Scalar>& AngleAxis<Scalar>::operator=(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::AngleAxis
operator =	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^AngleAxis<Scalar>& AngleAxis<Scalar>::operator=(const QuaternionType& q)$/;"	f	class:Eigen::AngleAxis
operator =	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Quaternion<Scalar>& Quaternion<Scalar>::operator=(const AngleAxisType& aa)$/;"	f	class:Eigen::Quaternion
operator =	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Quaternion<Scalar>& Quaternion<Scalar>::operator=(const MatrixBase<Derived>& xpr)$/;"	f	class:Eigen::Quaternion
operator =	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Quaternion<Scalar>& Quaternion<Scalar>::operator=(const Quaternion& other)$/;"	f	class:Eigen::Quaternion
operator =	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^::operator=(const RotationBase<OtherDerived,ColsAtCompileTime>& r)$/;"	f	class:Eigen::Matrix
operator =	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline Scaling& operator=(const Scaling& other)$/;"	f	class:Eigen::Scaling
operator =	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Transform& operator=(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::Transform
operator =	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Transform& operator=(const Transform& other)$/;"	f	class:Eigen::Transform
operator =	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>& Transform<Scalar,Dim>::operator=(const QMatrix& other)$/;"	f	class:Eigen::Transform
operator =	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>& Transform<Scalar,Dim>::operator=(const QTransform& other)$/;"	f	class:Eigen::Transform
operator =	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^inline Transform<Scalar,Dim>& Transform<Scalar,Dim>::operator=(const RotationBase<Derived,Dim>& r)$/;"	f	class:Eigen::Transform
operator =	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^inline Transform<Scalar,Dim>& Transform<Scalar,Dim>::operator=(const ScalingType& s)$/;"	f	class:Eigen::Transform
operator =	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^inline Transform<Scalar,Dim>& Transform<Scalar,Dim>::operator=(const TranslationType& t)$/;"	f	class:Eigen::Transform
operator =	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  Translation& operator=(const Translation& other)$/;"	f	class:Eigen::Translation
operator =	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^AngleAxis<Scalar>& AngleAxis<Scalar>::operator=(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::AngleAxis
operator =	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^AngleAxis<Scalar>& AngleAxis<Scalar>::operator=(const QuaternionBase<QuatDerived>& q)$/;"	f	class:Eigen::AngleAxis
operator =	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator=(const AngleAxisType& aa)$/;"	f	class:Eigen::QuaternionBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator=(const QuaternionBase<OtherDerived>& other)$/;"	f	class:Eigen::QuaternionBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^EIGEN_STRONG_INLINE QuaternionBase<Derived>& QuaternionBase<Derived>::operator=(const QuaternionBase<Derived>& other)$/;"	f	class:Eigen::QuaternionBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^inline Derived& QuaternionBase<Derived>::operator=(const MatrixBase<MatrixDerived>& xpr)$/;"	f	class:Eigen::QuaternionBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^::operator=(const RotationBase<OtherDerived,ColsAtCompileTime>& r)$/;"	f	class:Eigen::Matrix
operator =	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  Transform& operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::Transform
operator =	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator=(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::Transform
operator =	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator=(const Transform& other)$/;"	f	class:Eigen::Transform
operator =	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const QMatrix& other)$/;"	f	class:Eigen::Transform
operator =	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const QTransform& other)$/;"	f	class:Eigen::Transform
operator =	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const RotationBase<Derived,Dim>& r)$/;"	f	class:Eigen::Transform
operator =	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const TranslationType& t)$/;"	f	class:Eigen::Transform
operator =	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const UniformScaling<Scalar>& s)$/;"	f	class:Eigen::Transform
operator =	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  Translation& operator=(const Translation& other)$/;"	f	class:Eigen::Translation
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    CompressedStorage& operator=(const CompressedStorage& other)$/;"	f	class:Eigen::internal::CompressedStorage
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockType& operator=(const BlockType& other)$/;"	f	class:Eigen::BlockImpl
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockType& operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::BlockImpl
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix& operator=(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix& operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix& operator=(const SparseMatrix& other)$/;"	f	class:Eigen::SparseMatrix
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix& operator=(const SparseSparseProduct<Lhs,Rhs>& product)$/;"	f	class:Eigen::SparseMatrix
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^EIGEN_DONT_INLINE SparseMatrix<Scalar,_Options,_Index>& SparseMatrix<Scalar,_Options,_Index>::operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Derived& operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Derived& operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Derived& operator=(const Derived& other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Derived& operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^inline Derived& SparseMatrixBase<Derived>::operator=(const SparseSparseProduct<Lhs,Rhs>& product)$/;"	f	class:Eigen::SparseMatrixBase
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSelfAdjointView& operator=(const SparseSelfAdjointView& src)$/;"	f	class:Eigen::SparseSelfAdjointView
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSelfAdjointView& operator=(const SparseSelfAdjointView<SrcMatrixType,SrcUpLo>& src)$/;"	f	class:Eigen::SparseSelfAdjointView
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSelfAdjointView& operator=(const SparseSymmetricPermutationProduct<SrcMatrixType,SrcUpLo>& permutedMatrix)$/;"	f	class:Eigen::SparseSelfAdjointView
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector& operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseVector
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector& operator=(const SparseSparseProduct<Lhs,Rhs>& product)$/;"	f	class:Eigen::SparseVector
operator =	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector& operator=(const SparseVector& other)$/;"	f	class:Eigen::SparseVector
operator =	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    inline T& operator=(const OtherT& other)$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator =	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    inline workaround_msvc_stl_support& operator=(const workaround_msvc_stl_support& other)$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator =	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  SluMatrix& operator=(const SluMatrix& other)$/;"	f	struct:Eigen::SluMatrix
operator ==	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^bool Timestamp::operator== (const Timestamp &t) const$/;"	f	class:Timestamp
operator ==	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    inline bool operator==(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
operator ==	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    bool operator==(const aligned_allocator<T>& ) const$/;"	f	class:Eigen::aligned_allocator
operator ==	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator==(Scalar s) const$/;"	f	class:Eigen::Cwise
operator ==	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator==(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Cwise
operator >	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^bool Timestamp::operator> (const Timestamp &t) const$/;"	f	class:Timestamp
operator >	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator>(Scalar s) const$/;"	f	class:Eigen::Cwise
operator >	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator>(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Cwise
operator >=	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^bool Timestamp::operator>= (const Timestamp &t) const$/;"	f	class:Timestamp
operator >=	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator>=(Scalar s) const$/;"	f	class:Eigen::Cwise
operator >=	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator>=(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Cwise
operator Eigen::Isometry3d	./Thirdparty/g2o/g2o/types/se3quat.h	/^      operator Eigen::Isometry3d() const$/;"	f	class:g2o::SE3Quat
operator T&	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    inline operator T& () { return *static_cast<T*>(this); }$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator []	./4pcs/Registration.h	/^                const int &operator[](int index) {$/;"	f	struct:pcl::FPCS::FPCSRegistration::Set4
operator []	./Thirdparty/g2o/g2o/types/se3quat.h	/^      inline double operator [](int i) const {$/;"	f	class:g2o::SE3Quat
operator []	./Thirdparty/g2o/g2o/types/sim3.h	/^    double operator[](int i) const$/;"	f	struct:g2o::Sim3
operator []	./Thirdparty/g2o/g2o/types/sim3.h	/^    double& operator[](int i)$/;"	f	struct:g2o::Sim3
operator []	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    operator[](Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
operator []	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    operator[](Index index)$/;"	f	class:Eigen::DenseCoeffsBase
operator []	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline Index& operator[](Index i) { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator []	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline const Index& operator[](Index i) const { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator []	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^        Index operator[](Index i) const { return i==m_index ? m_value : 0; }$/;"	f	class:Eigen::SparseMatrix::SingletonVector
operator bool	./Thirdparty/sparseicp/include/Eigen/src/Core/CoreIterators.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_inner < m_end && m_inner>=0; }$/;"	f	class:Eigen::DenseBase::InnerIterator
operator bool	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    operator bool() const { return m_cachedIndex>=0; }$/;"	f	class:Eigen::internal::AmbiVector::Iterator
operator bool	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline operator bool() const { return (m_id < m_end) && (m_id>=m_start); }$/;"	f	class:Eigen::MappedSparseMatrix::InnerIterator
operator bool	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline operator bool() const { return (m_id <= m_end) && (m_id>m_start); }$/;"	f	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
operator bool	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      inline operator bool() const { return Base::operator bool() && Base::index() < m_end; }$/;"	f	class:Eigen::BlockImpl::InnerIterator
operator bool	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      inline operator bool() const { return Base::operator bool() && Base::index() >= m_begin; }$/;"	f	class:Eigen::BlockImpl::ReverseInnerIterator
operator bool	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return (m_lhsIter && m_rhsIter); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
operator bool	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_id>=0; }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
operator bool	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_lhsIter; }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
operator bool	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_rhsIter; }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
operator bool	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline operator bool() const { return (m_id < m_end); }$/;"	f	class:Eigen::SparseMatrix::InnerIterator
operator bool	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline operator bool() const { return (m_id > m_start); }$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
operator bool	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE operator bool() const$/;"	f	class:Eigen::SparseTriangularView::InnerIterator
operator bool	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE operator bool() const$/;"	f	class:Eigen::SparseTriangularView::ReverseInnerIterator
operator bool	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline operator bool() const { return (m_id < m_end); }$/;"	f	class:Eigen::SparseVector::InnerIterator
operator bool	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline operator bool() const { return (m_id > m_start); }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
operator bool	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline operator bool() const $/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
operator const ExpressionType&	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^    operator const ExpressionType&() const { return m_expression; }$/;"	f	class:Eigen::ForceAlignedAccess
operator const ExpressionType&	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^    operator const ExpressionType&() const { return m_expression; }$/;"	f	class:Eigen::NestByValue
operator const PlainObject&	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    operator const PlainObject& () const$/;"	f	class:Eigen::ProductBase
operator const PlainObject&	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    EIGEN_STRONG_INLINE operator const PlainObject& () const$/;"	f	class:Eigen::CoeffBasedProduct
operator const T&	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    inline operator const T& () const { return *static_cast<const T*>(this); }$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator const typename Base::Scalar	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    operator const typename Base::Scalar() const {$/;"	f	class:Eigen::GeneralProduct
operator ||	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator||(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operatorInverseSqrt	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    MatrixType operatorInverseSqrt() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
operatorNorm	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^MatrixBase<Derived>::operatorNorm() const$/;"	f	class:Eigen::MatrixBase
operatorNorm	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^SelfAdjointView<MatrixType, UpLo>::operatorNorm() const$/;"	f	class:Eigen::SelfAdjointView
operatorSqrt	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    MatrixType operatorSqrt() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
oplus	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        void oplus(const double* v)$/;"	f	class:g2o::OptimizableGraph::Vertex
oplusImpl	./Thirdparty/g2o/g2o/types/types_sba.h	/^    virtual void oplusImpl(const double* update)$/;"	f	class:g2o::VertexSBAPointXYZ
oplusImpl	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^    virtual void oplusImpl(const double* update_)$/;"	f	class:g2o::VertexSim3Expmap
oplusImpl	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  virtual void oplusImpl(const double* update_)  {$/;"	f	class:g2o::VertexSE3Expmap
optimize	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  int OptimizableGraph::optimize(int \/*iterations*\/, bool \/*online*\/) {return 0;}$/;"	f	class:g2o::OptimizableGraph
optimize	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  int SparseOptimizer::optimize(int iterations, bool online)$/;"	f	class:g2o::SparseOptimizer
optimizer	./Thirdparty/g2o/g2o/core/optimization_algorithm.h	/^      SparseOptimizer* optimizer() { return _optimizer;}$/;"	f	class:g2o::OptimizationAlgorithm
optimizer	./Thirdparty/g2o/g2o/core/optimization_algorithm.h	/^      const SparseOptimizer* optimizer() const { return _optimizer;}$/;"	f	class:g2o::OptimizationAlgorithm
optimizer	./Thirdparty/g2o/g2o/core/solver.h	/^      SparseOptimizer* optimizer() const { return _optimizer;}$/;"	f	class:g2o::Solver
options	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline superlu_options_t& options() { return m_sluOptions; }$/;"	f	class:Eigen::SuperLUBase
order	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    Index order ; \/* pivot ordering of this column, if col is dead *\/$/;"	m	union:internal::colamd_col::__anon348
order_children	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static inline  void order_children$/;"	f	namespace:internal
ordering	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^void SimplicialCholeskyBase<Derived>::ordering(const MatrixType& a, CholMatrixType& ap)$/;"	f	class:Eigen::SimplicialCholeskyBase
ordering_helper_at_plus_a	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Ordering.h	/^void ordering_helper_at_plus_a(const MatrixType& mat, MatrixType& symmat)$/;"	f	namespace:Eigen::internal
origin	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  VectorType& origin() { return m_origin; }$/;"	f	class:Eigen::ParametrizedLine
origin	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  const VectorType& origin() const { return m_origin; }$/;"	f	class:Eigen::ParametrizedLine
origin	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType& origin() { return m_origin; }$/;"	f	class:Eigen::ParametrizedLine
origin	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  const VectorType& origin() const { return m_origin; }$/;"	f	class:Eigen::ParametrizedLine
originalMatrix	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^  inline const MatrixType& originalMatrix() const { return m_originalMatrix; }$/;"	f	struct:Eigen::internal::image_retval_base
os	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^        std::ostream* os;$/;"	m	struct:g2o::WriteGnuplotAction::Parameters
other	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^        typedef aligned_allocator<U> other;$/;"	t	struct:Eigen::aligned_allocator::rebind
other	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^      typedef aligned_allocator_indirection<U> other;$/;"	t	struct:Eigen::aligned_allocator_indirection::rebind
outer	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    outer = Index \/ Derived1::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::assign_DefaultTraversal_CompleteUnrolling::__anon253
outer	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^    outer = Index \/ Derived1::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::assign_innervec_CompleteUnrolling::__anon254
outer	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    outer = Start \/ Derived::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::redux_novec_unroller::__anon193
outer	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^    outer = index \/ int(Derived::InnerSizeAtCompileTime),$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon195
outer	./Thirdparty/sparseicp/include/Eigen/src/Core/Stride.h	/^    inline Index outer() const { return m_outer.value(); }$/;"	f	class:Eigen::Stride
outer	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      inline Index outer()  const { return Base::outer() - (IsRowMajor ? m_block.m_startRow.value() : m_block.m_startCol.value()); }$/;"	f	class:Eigen::BlockImpl::InnerIterator
outer	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      inline Index outer()  const { return Base::outer() - (IsRowMajor ? m_block.m_startRow.value() : m_block.m_startCol.value()); }$/;"	f	class:Eigen::BlockImpl::ReverseInnerIterator
outer	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    inline Index outer() const { return m_outer; }$/;"	f	class:Eigen::SparseDenseOuterProduct::InnerIterator
outer	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Index outer() const { return m_outer; }$/;"	f	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
outer	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index outer() const { return m_outer; }$/;"	f	class:Eigen::SparseMatrix::InnerIterator
outer	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index outer() const { return m_outer; }$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
outerInd	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int *outerInd;$/;"	m	struct:Eigen::SluMatrix::__anon460
outerIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index* outerIndexPtr() { return m_outerIndex; }$/;"	f	class:Eigen::MappedSparseMatrix
outerIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline const Index* outerIndexPtr() const { return m_outerIndex; }$/;"	f	class:Eigen::MappedSparseMatrix
outerIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline Index* outerIndexPtr()$/;"	f	class:Eigen::BlockImpl
outerIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Index* outerIndexPtr() const$/;"	f	class:Eigen::BlockImpl
outerIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index* outerIndexPtr() { return m_outerIndex; }$/;"	f	class:Eigen::SparseMatrix
outerIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Index* outerIndexPtr() const { return m_outerIndex; }$/;"	f	class:Eigen::SparseMatrix
outerSize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    Index outerSize() const$/;"	f	class:Eigen::DenseBase
outerSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index outerSize() const { return m_outerSize; }$/;"	f	class:Eigen::MappedSparseMatrix
outerSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index outerSize() const { return m_outerSize; }$/;"	f	class:Eigen::SparseMatrix
outerSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Index outerSize() const { return (int(Flags)&RowMajorBit) ? this->rows() : this->cols(); }$/;"	f	class:Eigen::SparseMatrixBase
outerSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index outerSize() const { return 1; }$/;"	f	class:Eigen::SparseVector
outerSize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  inline Index outerSize() const { return m_matrix.outerSize(); }$/;"	f	class:Eigen::SparseView
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    inline Index outerStride() const { return this->innerSize(); }$/;"	f	class:Eigen::Array
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::ArrayWrapper
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::MatrixWrapper
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::internal::BlockImpl_dense
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::CwiseUnaryViewImpl
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::DenseCoeffsBase
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::Diagonal
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    inline Index outerStride() const { return m_matrix.outerStride(); }$/;"	f	class:Eigen::Flagged
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^    inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::ForceAlignedAccess
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::Map
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    inline Index outerStride() const { return this->innerSize(); }$/;"	f	class:Eigen::Matrix
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^    inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::NestByValue
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^  inline Index outerStride() const$/;"	f	class:Eigen::RefBase
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    inline Index outerStride() const { return m_matrix.outerStride(); }$/;"	f	class:Eigen::SelfAdjointView
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline Index outerStride() const { return m_matrix.outerStride(); }$/;"	f	class:Eigen::SelfCwiseBinaryOp
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::SwapWrapper
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    inline Index outerStride() const { return derived().nestedExpression().outerStride(); }$/;"	f	class:Eigen::TransposeImpl
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline Index outerStride() const { return derived().outerStride(); }$/;"	f	class:Eigen::TriangularBase
outerStride	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline Index outerStride() const { return m_matrix.outerStride(); }$/;"	f	class:Eigen::TriangularView
outer_product_selector_run	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^EIGEN_DONT_INLINE void outer_product_selector_run(const ProductType& prod, Dest& dest, const Func& func, const false_type&)$/;"	f	namespace:Eigen::internal
outer_product_selector_run	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^EIGEN_DONT_INLINE void outer_product_selector_run(const ProductType& prod, Dest& dest, const Func& func, const true_type&) {$/;"	f	namespace:Eigen::internal
outer_stride_at_compile_time	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^struct outer_stride_at_compile_time$/;"	s	namespace:Eigen::internal
outer_stride_at_compile_time	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^struct outer_stride_at_compile_time<Derived, false>$/;"	s	namespace:Eigen::internal
overlap_	./4pcs/Registration.h	/^            double overlap_;$/;"	m	class:pcl::FPCS::FPCSRegistration
p	./Thirdparty/sparseicp/ICP.h	/^        double p = 1.0;           \/\/\/ p norm$/;"	m	struct:SICP::Parameters
p	./Thirdparty/sparseicp/ICP.h	/^        double p;       \/\/\/ paramter of the robust function$/;"	m	class:ICP::Parameters
p	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    Index p ;   \/* used as a row pointer in init_rows_cols () *\/$/;"	m	union:internal::Colamd_Row::__anon351
p16uc_COMPLEX_IM	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet16uc p16uc_COMPLEX_IM   = vec_sld((Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 1), (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 3), 8);\/\/{ 4,5,6,7, 4,5,6,7, 12,13,14,15, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_COMPLEX_RE	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet16uc p16uc_COMPLEX_RE   = vec_sld((Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 0), (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 2), 8);\/\/{ 0,1,2,3, 0,1,2,3, 8,9,10,11, 8,9,10,11 };$/;"	m	namespace:Eigen::internal
p16uc_COMPLEX_REV	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet16uc p16uc_COMPLEX_REV  = vec_sld(p16uc_REVERSE, p16uc_REVERSE, 8);\/\/{ 4,5,6,7, 0,1,2,3, 12,13,14,15, 8,9,10,11 };$/;"	m	namespace:Eigen::internal
p16uc_COMPLEX_REV2	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet16uc p16uc_COMPLEX_REV2 = vec_sld(p16uc_FORWARD, p16uc_FORWARD, 8);\/\/{ 8,9,10,11, 12,13,14,15, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_DUPLICATE	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_DUPLICATE = {0,1,2,3, 0,1,2,3, 4,5,6,7, 4,5,6,7};$/;"	m	namespace:Eigen::internal
p16uc_FORWARD	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_FORWARD = vec_lvsl(0, (float*)0);$/;"	m	namespace:Eigen::internal
p16uc_PSET_HI	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet16uc p16uc_PSET_HI = (Packet16uc) vec_mergeh((Packet4ui) vec_splat((Packet4ui)p16uc_FORWARD, 0), (Packet4ui) vec_splat((Packet4ui)p16uc_FORWARD, 1));\/\/{ 0,1,2,3, 4,5,6,7, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_PSET_LO	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet16uc p16uc_PSET_LO = (Packet16uc) vec_mergeh((Packet4ui) vec_splat((Packet4ui)p16uc_FORWARD, 2), (Packet4ui) vec_splat((Packet4ui)p16uc_FORWARD, 3));\/\/{ 8,9,10,11, 12,13,14,15, 8,9,10,11, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_REVERSE	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_REVERSE = {12,13,14,15, 8,9,10,11, 4,5,6,7, 0,1,2,3};$/;"	m	namespace:Eigen::internal
p1_index_	./4pcs/Registration.h	/^                int p1_index_;$/;"	m	struct:pcl::FPCS::FPCSRegistration::Set4
p2_index_	./4pcs/Registration.h	/^                int p2_index_;$/;"	m	struct:pcl::FPCS::FPCSRegistration::Set4
p2ui_CONJ_XOR	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^static uint32x2_t p2ui_CONJ_XOR = EIGEN_INIT_NEON_PACKET2(0x00000000, 0x80000000);$/;"	m	namespace:Eigen::internal
p3_index_	./4pcs/Registration.h	/^                int p3_index_;$/;"	m	struct:pcl::FPCS::FPCSRegistration::Set4
p4_index_	./4pcs/Registration.h	/^                int p4_index_;$/;"	m	struct:pcl::FPCS::FPCSRegistration::Set4
p4f_COUNTDOWN	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4f p4f_COUNTDOWN = { 3.0, 2.0, 1.0, 0.0 };$/;"	m	namespace:Eigen::internal
p4f_ONE	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4f p4f_ONE = vec_ctf(p4i_ONE, 0);$/;"	m	namespace:Eigen::internal
p4f_ZERO_	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4f p4f_ZERO_ = (Packet4f) vec_sl((Packet4ui)p4i_MINUS1, (Packet4ui)p4i_MINUS1);$/;"	m	namespace:Eigen::internal
p4i_COUNTDOWN	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4i p4i_COUNTDOWN = { 3, 2, 1, 0 };$/;"	m	namespace:Eigen::internal
p4ui_CONJ_XOR	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet4ui  p4ui_CONJ_XOR = vec_mergeh((Packet4ui)p4i_ZERO, (Packet4ui)p4f_ZERO_);\/\/{ 0x00000000, 0x80000000, 0x00000000, 0x80000000 };$/;"	m	namespace:Eigen::internal
p4ui_CONJ_XOR	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^static uint32x4_t p4ui_CONJ_XOR = EIGEN_INIT_NEON_PACKET4(0x00000000, 0x80000000, 0x00000000, 0x80000000);$/;"	m	namespace:Eigen::internal
pDescriptor	./Thirdparty/DBoW2/DBoW2/FClass.h	/^  typedef const TDescriptor *pDescriptor;$/;"	t	class:DBoW2::FClass
pDescriptor	./Thirdparty/DBoW2/DBoW2/FORB.h	/^  typedef const TDescriptor *pDescriptor;$/;"	t	class:DBoW2::FORB
pDescriptor	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^  typedef const TDescriptor *pDescriptor;$/;"	t	class:DBoW2::TemplatedVocabulary
pabs	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^pabs(const Packet& a) { using std::abs; return abs(a); }$/;"	f	namespace:Eigen::internal
pabs	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs(const Packet4f& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pabs	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pabs(const Packet4i& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pabs	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs(const Packet4f& a) { return vabsq_f32(a); }$/;"	f	namespace:Eigen::internal
pabs	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pabs(const Packet4i& a) { return vabsq_s32(a); }$/;"	f	namespace:Eigen::internal
pabs	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pabs(const Packet2d& a)$/;"	f	namespace:Eigen::internal
pabs	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs(const Packet4f& a)$/;"	f	namespace:Eigen::internal
pabs	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pabs(const Packet4i& a)$/;"	f	namespace:Eigen::internal
pack	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  void pack(Scalar* blockA, const const_blas_data_mapper<Scalar,Index,StorageOrder>& lhs, Index cols, Index i, Index& count)$/;"	f	struct:Eigen::internal::symm_pack_lhs
packedMatrix	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    const MatrixType& packedMatrix() const$/;"	f	class:Eigen::HessenbergDecomposition
packedMatrix	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    inline const MatrixType& packedMatrix() const$/;"	f	class:Eigen::Tridiagonalization
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::ArrayWrapper
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::MatrixWrapper
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline const PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::ArrayWrapper
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline const PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::MatrixWrapper
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline PacketScalar packet(Index index) const$/;"	f	class:Eigen::internal::BlockImpl_dense
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::internal::BlockImpl_dense
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index index) const$/;"	f	class:Eigen::CwiseBinaryOpImpl
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::CwiseBinaryOpImpl
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index index) const$/;"	f	class:Eigen::CwiseNullaryOp
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::CwiseNullaryOp
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index index) const$/;"	f	class:Eigen::CwiseUnaryOpImpl
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::CwiseUnaryOpImpl
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE PacketReturnType packet(Index row, Index col) const$/;"	f	class:Eigen::DenseCoeffsBase
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index idx) const$/;"	f	class:Eigen::DiagonalProduct
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::DiagonalProduct
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::Flagged
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    inline const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::Flagged
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::ForceAlignedAccess
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^    inline const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::ForceAlignedAccess
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline PacketScalar packet(Index index) const$/;"	f	class:Eigen::MapBase
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::MapBase
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::NestByValue
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^    inline const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::NestByValue
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index index) const$/;"	f	class:Eigen::PlainObjectBase
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::PlainObjectBase
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    inline PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::Replicate
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::Reverse
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    inline const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::Reverse
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::TransposeImpl
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    inline const PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::TransposeImpl
packet	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    EIGEN_STRONG_INLINE const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::CoeffBasedProduct
packetByOuterInner	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE PacketReturnType packetByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(Index i) const { return impl.packetOp(i); }$/;"	f	struct:Eigen::internal::linspaced_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(Index i) const$/;"	f	struct:Eigen::internal::linspaced_op_impl
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(Index row, Index col) const$/;"	f	struct:Eigen::internal::linspaced_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(Index) const { return m_base = padd(m_base,m_packetStep); }$/;"	f	struct:Eigen::internal::linspaced_op_impl
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(Index, Index = 0) const { return internal::pset1<Packet>(m_other); }$/;"	f	struct:Eigen::internal::scalar_constant_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const { return internal::pconj(a); }$/;"	f	struct:Eigen::internal::scalar_conjugate_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_abs2_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_abs_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_multiple_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_opposite_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_quotient1_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_conj_product_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_difference_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_max_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_min_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_product_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_quotient_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_sum_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::pacos(a); }$/;"	f	struct:Eigen::internal::scalar_acos_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::pasin(a); }$/;"	f	struct:Eigen::internal::scalar_asin_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::pcos(a); }$/;"	f	struct:Eigen::internal::scalar_cos_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::pexp(a); }$/;"	f	struct:Eigen::internal::scalar_exp_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::plog(a); }$/;"	f	struct:Eigen::internal::scalar_log_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::psin(a); }$/;"	f	struct:Eigen::internal::scalar_sin_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::psqrt(a); }$/;"	f	struct:Eigen::internal::scalar_sqrt_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::ptan(a); }$/;"	f	struct:Eigen::internal::scalar_tan_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_add_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_cube_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_inverse_mult_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_inverse_op
packetOp	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_square_op
packet_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    EIGEN_STRONG_INLINE PacketScalar packet_impl(Index row, Index col, Index id, internal::false_type) const$/;"	f	class:Eigen::DiagonalProduct
packet_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    EIGEN_STRONG_INLINE PacketScalar packet_impl(Index row, Index col, Index id, internal::true_type) const$/;"	f	class:Eigen::DiagonalProduct
packet_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^template<typename T> struct packet_traits : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct packet_traits<int>    : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct packet_traits<int>    : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct packet_traits<std::complex<double> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct packet_traits<int>    : default_packet_traits$/;"	s	namespace:Eigen::internal
pacos	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^Packet pacos(const Packet& a) { using std::acos; return acos(a); }$/;"	f	namespace:Eigen::internal
padd	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^padd(const Packet& a,$/;"	f	namespace:Eigen::internal
padd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf padd<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_add(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_add(a,b); }$/;"	f	namespace:Eigen::internal
padd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_add(a,b); }$/;"	f	namespace:Eigen::internal
padd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf padd<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(padd<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return vaddq_f32(a,b); }$/;"	f	namespace:Eigen::internal
padd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return vaddq_s32(a,b); }$/;"	f	namespace:Eigen::internal
padd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd padd<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_add_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf padd<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_add_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d padd<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_add_pd(a,b); }$/;"	f	namespace:Eigen::internal
padd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_add_ps(a,b); }$/;"	f	namespace:Eigen::internal
padd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_add_epi32(a,b); }$/;"	f	namespace:Eigen::internal
palign	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^inline void palign(PacketType& first, const PacketType& second)$/;"	f	namespace:Eigen::internal
palign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^struct palign_impl$/;"	s	namespace:Eigen::internal
palign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^struct palign_impl<Offset,Packet2cf>$/;"	s	namespace:Eigen::internal
palign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^struct palign_impl<Offset,Packet4f>$/;"	s	namespace:Eigen::internal
palign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^struct palign_impl<Offset,Packet4i>$/;"	s	namespace:Eigen::internal
palign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^struct palign_impl<Offset,Packet2cf>$/;"	s	namespace:Eigen::internal
palign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^struct palign_impl<Offset,Packet1cd>$/;"	s	namespace:Eigen::internal
palign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^struct palign_impl<Offset,Packet2cf>$/;"	s	namespace:Eigen::internal
palign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^struct palign_impl<Offset,Packet2d>$/;"	s	namespace:Eigen::internal
palign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^struct palign_impl<Offset,Packet4f>$/;"	s	namespace:Eigen::internal
palign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^struct palign_impl<Offset,Packet4i>$/;"	s	namespace:Eigen::internal
pand	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^pand(const Packet& a, const Packet& b) { return a & b; }$/;"	f	namespace:Eigen::internal
pand	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pand   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_and(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pand	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pand<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pand	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pand   <Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pand	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pand	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pand<Packet4i>(const Packet4i& a, const Packet4i& b) { return vandq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pand	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pand   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_and_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pand   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_and_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pand<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_and_pd(a,b); }$/;"	f	namespace:Eigen::internal
pand	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_and_ps(a,b); }$/;"	f	namespace:Eigen::internal
pand	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pand<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_and_si128(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^pandnot(const Packet& a, const Packet& b) { return a & (!b); }$/;"	f	namespace:Eigen::internal
pandnot	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pandnot<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_and(a.v, vec_nor(b.v,b.v))); }$/;"	f	namespace:Eigen::internal
pandnot	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_and(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
pandnot	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_and(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
pandnot	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pandnot<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pandnot	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pandnot	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return vbicq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pandnot<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_andnot_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pandnot<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_andnot_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pandnot<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_andnot_pd(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_andnot_ps(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_andnot_si128(a,b); }$/;"	f	namespace:Eigen::internal
panel_bmod	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_panel_bmod.h	/^void SparseLUImpl<Scalar,Index>::panel_bmod(const Index m, const Index w, const Index jcol, $/;"	f	class:Eigen::internal::SparseLUImpl
panel_dfs	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^void SparseLUImpl<Scalar,Index>::panel_dfs(const Index m, const Index w, const Index jcol, MatrixType& A, IndexVector& perm_r, Index& nseg, ScalarVector& dense, IndexVector& panel_lsub, IndexVector& segrep, IndexVector& repfnz, IndexVector& xprune, IndexVector& marker, IndexVector& parent, IndexVector& xplore, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
panel_dfs_traits	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  panel_dfs_traits(Index jcol, Index* marker)$/;"	f	struct:Eigen::internal::panel_dfs_traits
panel_dfs_traits	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^struct panel_dfs_traits$/;"	s	namespace:Eigen::internal
panel_size	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index panel_size; \/\/ a panel consists of at most <panel_size> consecutive columns$/;"	m	struct:Eigen::internal::perfvalues
parallelize_gemm	./Thirdparty/sparseicp/include/Eigen/src/Core/products/Parallelizer.h	/^void parallelize_gemm(const Functor& func, Index rows, Index cols, bool transpose)$/;"	f	namespace:Eigen::internal
parameter	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        inline const Parameter* parameter(int argNo) const {return *_parameters.at(argNo);}$/;"	f	class:g2o::OptimizableGraph::Edge
parameter	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    Parameter* parameter(int id) {$/;"	f	struct:g2o::OptimizableGraph
parameters	./Thirdparty/g2o/g2o/core/cache.cpp	/^  ParameterVector& Cache::parameters() {$/;"	f	class:g2o::Cache
parameters	./Thirdparty/g2o/g2o/core/cache.h	/^          const ParameterVector& parameters() const { return _parameters;}$/;"	f	class:g2o::Cache::CacheKey
pardisoInit	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void pardisoInit(int type)$/;"	f	class:Eigen::PardisoImpl
pardisoParameterArray	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    ParameterType& pardisoParameterArray()$/;"	f	class:Eigen::PardisoImpl
pardisoRelease	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void pardisoRelease()$/;"	f	class:Eigen::PardisoImpl
pardiso_run_selector	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_run_selector$/;"	s	namespace:Eigen::internal
pardiso_run_selector	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_run_selector<long long int>$/;"	s	namespace:Eigen::internal
pardiso_traits	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_traits< PardisoLDLT<_MatrixType, Options> >$/;"	s	namespace:Eigen::internal
pardiso_traits	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_traits< PardisoLLT<_MatrixType, Options> >$/;"	s	namespace:Eigen::internal
pardiso_traits	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_traits< PardisoLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
parent	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^    NodeId parent;$/;"	m	struct:DBoW2::TemplatedVocabulary::Node
parent	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^          const OptimizableGraph::VertexSet& parent() const {return _parent;}$/;"	f	class:g2o::EstimatePropagator::AdjacencyMapEntry
parent	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^      HyperGraph::Vertex* parent() const {return _parent;}$/;"	f	struct:g2o::HyperDijkstra::AdjacencyMapEntry
parent	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    Index parent ;  \/* parent in parent tree super-column structure, if *\/$/;"	m	union:internal::colamd_col::__anon347
part	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^    const DiagonalWrapper<ConstDiagonalReturnType> part() const$/;"	f	class:Eigen::MatrixBase
part	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^const typename internal::eigen2_part_return_type<Derived, Mode>::type MatrixBase<Derived>::part() const$/;"	f	class:Eigen::MatrixBase
part	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^typename internal::eigen2_part_return_type<Derived, Mode>::type MatrixBase<Derived>::part()$/;"	f	class:Eigen::MatrixBase
partialPivLu	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^MatrixBase<Derived>::partialPivLu() const$/;"	f	class:Eigen::MatrixBase
partial_lu_impl	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^struct partial_lu_impl$/;"	s	namespace:Eigen::internal
partial_lu_inplace	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^void partial_lu_inplace(MatrixType& lu, TranspositionType& row_transpositions, typename TranspositionType::Index& nb_transpositions)$/;"	f	namespace:Eigen::internal
pasin	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^Packet pasin(const Packet& a) { using std::asin; return asin(a); }$/;"	f	namespace:Eigen::internal
pastix_traits	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  struct pastix_traits< PastixLDLT<_MatrixType,Options> >$/;"	s	namespace:Eigen::internal
pastix_traits	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  struct pastix_traits< PastixLLT<_MatrixType,Options> >$/;"	s	namespace:Eigen::internal
pastix_traits	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  struct pastix_traits< PastixLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
pattern	./include/ORBextractor.h	/^    std::vector<cv::Point> pattern;$/;"	m	class:ORB_SLAM2::ORBextractor
pcl	./4pcs/Registration.cc	/^namespace pcl {$/;"	n	file:
pcl	./4pcs/Registration.h	/^namespace pcl {$/;"	n
pconj	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^pconj(const Packet& a) { return numext::conj(a); }$/;"	f	namespace:Eigen::internal
pconj	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a) { return Packet2cf((Packet4f)vec_xor((Packet4ui)a.v, p4ui_CONJ_XOR)); }$/;"	f	namespace:Eigen::internal
pconj	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pconj(const Packet4f& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pconj(const Packet4i& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pconj	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pconj(const Packet4f& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pconj(const Packet4i& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pconj(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pconj	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pconj	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pconj(const Packet2d& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pconj(const Packet4f& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pconj(const Packet4i& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  inline T pconj(const T& x) { return internal::pconj(x); }$/;"	f	struct:Eigen::internal::conj_if
pconj	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  inline const T& pconj(const T& x) { return x; }$/;"	f	struct:Eigen::internal::conj_if
pcos	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^Packet pcos(const Packet& a) { using std::cos; return cos(a); }$/;"	f	namespace:Eigen::internal
pcos	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f pcos<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pcplxflip	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> inline Packet pcplxflip(const Packet& a)$/;"	f	namespace:Eigen::internal
pcplxflip	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pcplxflip<Packet2cf>(const Packet2cf& x)$/;"	f	namespace:Eigen::internal
pcplxflip	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pcplxflip<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pcplxflip	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^EIGEN_STRONG_INLINE Packet1cd pcplxflip\/*<Packet1cd>*\/(const Packet1cd& x)$/;"	f	namespace:Eigen::internal
pcplxflip	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^EIGEN_STRONG_INLINE Packet2cf pcplxflip\/*<Packet2cf>*\/(const Packet2cf& x)$/;"	f	namespace:Eigen::internal
pcs	./include/PnPsolver.h	/^  double * pws, * us, * alphas, * pcs;$/;"	m	class:ORB_SLAM2::PnPsolver
pcs	./include/PoseSolver.h	/^  double * pws, * us, * alphas, * pcs;$/;"	m	class:ORB_SLAM2::PoseSolver
pdiv	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^pdiv(const Packet& a,$/;"	f	namespace:Eigen::internal
pdiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pdiv<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pdiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pdiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pdiv<Packet4i>(const Packet4i& \/*a*\/, const Packet4i& \/*b*\/)$/;"	f	namespace:Eigen::internal
pdiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pdiv<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pdiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pdiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pdiv<Packet4i>(const Packet4i& \/*a*\/, const Packet4i& \/*b*\/)$/;"	f	namespace:Eigen::internal
pdiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pdiv<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pdiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pdiv<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pdiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pdiv<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_div_pd(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_div_ps(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pdiv<Packet4i>(const Packet4i& \/*a*\/, const Packet4i& \/*b*\/)$/;"	f	namespace:Eigen::internal
perform	./Thirdparty/g2o/g2o/core/hyper_dijkstra.cpp	/^  double HyperDijkstra::TreeAction::perform(HyperGraph::Vertex* v, HyperGraph::Vertex* vParent, HyperGraph::Edge* e){$/;"	f	class:g2o::HyperDijkstra::TreeAction
perform	./Thirdparty/g2o/g2o/core/hyper_dijkstra.cpp	/^  double HyperDijkstra::TreeAction::perform(HyperGraph::Vertex* v, HyperGraph::Vertex* vParent, HyperGraph::Edge* e, double distance){$/;"	f	class:g2o::HyperDijkstra::TreeAction
performFrancisQRStep	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::performFrancisQRStep(Index il, Index im, Index iu, bool computeU, const Vector3s& firstHouseholderVector, Scalar* workspace)$/;"	f	class:Eigen::RealSchur
perfvalues	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^struct perfvalues {$/;"	s	namespace:Eigen::internal
permut_matrix_product_retval	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    permut_matrix_product_retval(const PermutationType& perm, const MatrixType& matrix)$/;"	f	struct:Eigen::internal::permut_matrix_product_retval
permut_matrix_product_retval	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^struct permut_matrix_product_retval$/;"	s	namespace:Eigen::internal
permut_sparsematrix_product_retval	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^    permut_sparsematrix_product_retval(const PermutationType& perm, const MatrixType& matrix)$/;"	f	struct:Eigen::internal::permut_sparsematrix_product_retval
permut_sparsematrix_product_retval	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^struct permut_sparsematrix_product_retval$/;"	s	namespace:Eigen::internal
permutationP	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    inline const PermutationPType& permutationP() const$/;"	f	class:Eigen::FullPivLU
permutationP	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    inline const PermutationType& permutationP() const$/;"	f	class:Eigen::PartialPivLU
permutationP	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    const PermutationMatrix<Dynamic,Dynamic,Index>& permutationP() const$/;"	f	class:Eigen::SimplicialCholeskyBase
permutationP	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const IntColVectorType& permutationP() const$/;"	f	class:Eigen::SuperLU
permutationP	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const IntColVectorType& permutationP() const$/;"	f	class:Eigen::UmfPackLU
permutationPinv	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    const PermutationMatrix<Dynamic,Dynamic,Index>& permutationPinv() const$/;"	f	class:Eigen::SimplicialCholeskyBase
permutationQ	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    inline const PermutationQType& permutationQ() const$/;"	f	class:Eigen::FullPivLU
permutationQ	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const IntRowVectorType& permutationQ() const$/;"	f	class:Eigen::SuperLU
permutationQ	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const IntRowVectorType& permutationQ() const$/;"	f	class:Eigen::UmfPackLU
permute_symm_to_fullsymm	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^void permute_symm_to_fullsymm(const MatrixType& mat, SparseMatrix<typename MatrixType::Scalar,DestOrder,typename MatrixType::Index>& _dest, const typename MatrixType::Index* perm)$/;"	f	namespace:Eigen::internal
permute_symm_to_symm	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^void permute_symm_to_symm(const MatrixType& mat, SparseMatrix<typename MatrixType::Scalar,DstOrder,typename MatrixType::Index>& _dest, const typename MatrixType::Index* perm)$/;"	f	namespace:Eigen::internal
pexp	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^Packet pexp(const Packet& a) { using std::exp; return exp(a); }$/;"	f	namespace:Eigen::internal
pexp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet2d pexp<Packet2d>(const Packet2d& _x)$/;"	f	namespace:Eigen::internal
pexp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f pexp<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pfirst	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> inline typename unpacket_traits<Packet>::type pfirst(const Packet& a)$/;"	f	namespace:Eigen::internal
pfirst	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pfirst	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { float EIGEN_ALIGN16 x[4]; vec_st(a, 0, x); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int   EIGEN_ALIGN16 x[4]; vec_st(a, 0, x); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pfirst	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { float EIGEN_ALIGN16 x[4]; vst1q_f32(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int   EIGEN_ALIGN16 x[4]; vst1q_s32(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double>  pfirst<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pfirst	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pfirst	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { double x = _mm_cvtsd_f64(a); return x; }$/;"	f	namespace:Eigen::internal
pfirst	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { return _mm_cvtsd_f64(a); }$/;"	f	namespace:Eigen::internal
pfirst	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { return a.m128d_f64[0]; }$/;"	f	namespace:Eigen::internal
pfirst	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { float x = _mm_cvtss_f32(a); return x; }$/;"	f	namespace:Eigen::internal
pfirst	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { return _mm_cvtss_f32(a); }$/;"	f	namespace:Eigen::internal
pfirst	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { return a.m128_f32[0]; }$/;"	f	namespace:Eigen::internal
pfirst	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int x = _mm_cvtsi128_si32(a); return x; }$/;"	f	namespace:Eigen::internal
pfirst	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { return _mm_cvtsi128_si32(a); }$/;"	f	namespace:Eigen::internal
pivotL	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_pivotL.h	/^Index SparseLUImpl<Scalar,Index>::pivotL(const Index jcol, const RealScalar& diagpivotthresh, IndexVector& perm_r, IndexVector& iperm_c, Index& pivrow, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
plain_array	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^  plain_array() $/;"	f	struct:Eigen::internal::plain_array
plain_array	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^  plain_array() {}$/;"	f	struct:Eigen::internal::plain_array
plain_array	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^  plain_array(constructor_without_unaligned_array_assert) $/;"	f	struct:Eigen::internal::plain_array
plain_array	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^  plain_array(constructor_without_unaligned_array_assert) {}$/;"	f	struct:Eigen::internal::plain_array
plain_array	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^struct plain_array$/;"	s	namespace:Eigen::internal
plain_array	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, 0, MatrixOrArrayOptions, Alignment>$/;"	s	namespace:Eigen::internal
plain_array	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, Size, MatrixOrArrayOptions, 16>$/;"	s	namespace:Eigen::internal
plain_matrix_type	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T> struct plain_matrix_type<T,Sparse>$/;"	s	namespace:Eigen::internal
planeSplit	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		void planeSplit(IndexType* ind, const IndexType count, int cutfeat, DistanceType cutval, IndexType& lim1, IndexType& lim2)$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
pload	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^pload(const typename unpacket_traits<Packet>::type* from) { return *from; }$/;"	f	namespace:Eigen::internal
pload	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pload <Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet2cf(pload<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
pload	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float* from) { EIGEN_DEBUG_ALIGNED_LOAD return vec_ld(0, from); }$/;"	f	namespace:Eigen::internal
pload	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int*     from) { EIGEN_DEBUG_ALIGNED_LOAD return vec_ld(0, from); }$/;"	f	namespace:Eigen::internal
pload	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pload<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet2cf(pload<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
pload	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float* from) { EIGEN_DEBUG_ALIGNED_LOAD return vld1q_f32(from); }$/;"	f	namespace:Eigen::internal
pload	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int*   from) { EIGEN_DEBUG_ALIGNED_LOAD return vld1q_s32(from); }$/;"	f	namespace:Eigen::internal
pload	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pload <Packet1cd>(const std::complex<double>* from)$/;"	f	namespace:Eigen::internal
pload	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pload <Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet2cf(pload<Packet4f>(&numext::real_ref(*from))); }$/;"	f	namespace:Eigen::internal
pload	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pload<Packet2d>(const double*  from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_pd(from); }$/;"	f	namespace:Eigen::internal
pload	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float*   from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_ps(from); }$/;"	f	namespace:Eigen::internal
pload	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int*     from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_si128(reinterpret_cast<const Packet4i*>(from)); }$/;"	f	namespace:Eigen::internal
ploaddup	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^ploaddup(const typename unpacket_traits<Packet>::type* from) { return *from; }$/;"	f	namespace:Eigen::internal
ploaddup	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploaddup<Packet2cf>(const std::complex<float>*     from)$/;"	f	namespace:Eigen::internal
ploaddup	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float*   from)$/;"	f	namespace:Eigen::internal
ploaddup	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
ploaddup	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploaddup<Packet2cf>(const std::complex<float>* from) { return pset1<Packet2cf>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float*   from)$/;"	f	namespace:Eigen::internal
ploaddup	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
ploaddup	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploaddup<Packet1cd>(const std::complex<double>* from) { return pset1<Packet1cd>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploaddup<Packet2cf>(const std::complex<float>* from) { return pset1<Packet2cf>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploaddup<Packet2d>(const double*  from)$/;"	f	namespace:Eigen::internal
ploaddup	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float*   from)$/;"	f	namespace:Eigen::internal
ploaddup	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
ploadt	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^inline Packet ploadt(const typename unpacket_traits<Packet>::type* from)$/;"	f	namespace:Eigen::internal
ploadu	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^ploadu(const typename unpacket_traits<Packet>::type* from) { return *from; }$/;"	f	namespace:Eigen::internal
ploadu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploadu<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet2cf(ploadu<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float* from)$/;"	f	namespace:Eigen::internal
ploadu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int* from)$/;"	f	namespace:Eigen::internal
ploadu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploadu<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet2cf(ploadu<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float* from) { EIGEN_DEBUG_UNALIGNED_LOAD return vld1q_f32(from); }$/;"	f	namespace:Eigen::internal
ploadu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int* from)   { EIGEN_DEBUG_UNALIGNED_LOAD return vld1q_s32(from); }$/;"	f	namespace:Eigen::internal
ploadu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploadu<Packet1cd>(const std::complex<double>* from)$/;"	f	namespace:Eigen::internal
ploadu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploadu<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet2cf(ploadu<Packet4f>(&numext::real_ref(*from))); }$/;"	f	namespace:Eigen::internal
ploadu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^  template<> EIGEN_STRONG_INLINE Packet2d ploadu<Packet2d>(const double* from) { EIGEN_DEBUG_UNALIGNED_LOAD return _mm_loadu_pd(from); }$/;"	f	namespace:Eigen::internal
ploadu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^  template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float*  from) {$/;"	f	namespace:Eigen::internal
ploadu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^  template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int*    from) { EIGEN_DEBUG_UNALIGNED_LOAD return _mm_loadu_si128(reinterpret_cast<const Packet4i*>(from)); }$/;"	f	namespace:Eigen::internal
ploadu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploadu<Packet2d>(const double* from)$/;"	f	namespace:Eigen::internal
ploadu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float* from)$/;"	f	namespace:Eigen::internal
ploadu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int* from)$/;"	f	namespace:Eigen::internal
plog	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^Packet plog(const Packet& a) { using std::log; return log(a); }$/;"	f	namespace:Eigen::internal
plog	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f plog<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
plset	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^plset(const Scalar& a) { return a; }$/;"	f	namespace:Eigen::internal
plset	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f plset<float>(const float& a) { return vec_add(pset1<Packet4f>(a), p4f_COUNTDOWN); }$/;"	f	namespace:Eigen::internal
plset	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i plset<int>(const int& a)     { return vec_add(pset1<Packet4i>(a), p4i_COUNTDOWN); }$/;"	f	namespace:Eigen::internal
plset	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f plset<float>(const float& a)$/;"	f	namespace:Eigen::internal
plset	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i plset<int>(const int& a)$/;"	f	namespace:Eigen::internal
plset	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d plset<double>(const double& a) { return _mm_add_pd(pset1<Packet2d>(a),_mm_set_pd(1,0)); }$/;"	f	namespace:Eigen::internal
plset	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f plset<float>(const float& a) { return _mm_add_ps(pset1<Packet4f>(a), _mm_set_ps(3,2,1,0)); }$/;"	f	namespace:Eigen::internal
plset	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i plset<int>(const int& a) { return _mm_add_epi32(pset1<Packet4i>(a),_mm_set_epi32(3,2,1,0)); }$/;"	f	namespace:Eigen::internal
plus	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^Timestamp Timestamp::plus(unsigned long secs, unsigned long usecs) const$/;"	f	class:Timestamp
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^pmadd(const Packet&  a,$/;"	f	namespace:Eigen::internal
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c) { return vec_madd(a, b, c); }$/;"	f	namespace:Eigen::internal
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return padd(pmul(a,b), c); }$/;"	f	namespace:Eigen::internal
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c) { return vmlaq_f32(c,a,b); }$/;"	f	namespace:Eigen::internal
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return vmlaq_s32(c,a,b); }$/;"	f	namespace:Eigen::internal
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet2d& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet2d& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet4f& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet4f& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return padd(pmul(a,b), c); }$/;"	f	namespace:Eigen::internal
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const RealScalar& x, const Scalar& y, const Scalar& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const RealScalar& y, const Scalar& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const Scalar& y, const Scalar& c) const { return internal::pmadd(x,y,c); }$/;"	f	struct:Eigen::internal::conj_helper
pmadd	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const Scalar& y, const Scalar& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmax	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^pmax(const Packet& a,$/;"	f	namespace:Eigen::internal
pmax	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_max(a, b); }$/;"	f	namespace:Eigen::internal
pmax	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_max(a, b); }$/;"	f	namespace:Eigen::internal
pmax	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b) { return vmaxq_f32(a,b); }$/;"	f	namespace:Eigen::internal
pmax	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b) { return vmaxq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pmax	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmax<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_max_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmax	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_max_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmax	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b)$/;"	f	namespace:Eigen::internal
pmin	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^pmin(const Packet& a,$/;"	f	namespace:Eigen::internal
pmin	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_min(a, b); }$/;"	f	namespace:Eigen::internal
pmin	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_min(a, b); }$/;"	f	namespace:Eigen::internal
pmin	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b) { return vminq_f32(a,b); }$/;"	f	namespace:Eigen::internal
pmin	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b) { return vminq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pmin	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmin<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_min_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmin	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_min_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmin	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b)$/;"	f	namespace:Eigen::internal
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^pmul(const Packet& a,$/;"	f	namespace:Eigen::internal
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^template<> inline std::complex<double> pmul(const std::complex<double>& a, const std::complex<double>& b)$/;"	f	namespace:Eigen::internal
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^template<> inline std::complex<float> pmul(const std::complex<float>& a, const std::complex<float>& b)$/;"	f	namespace:Eigen::internal
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& a, const Packet2cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pmul<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_madd(a,b,p4f_ZERO); }$/;"	f	namespace:Eigen::internal
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& a, const Packet2cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pmul<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return vmulq_f32(a,b); }$/;"	f	namespace:Eigen::internal
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmul<Packet4i>(const Packet4i& a, const Packet4i& b) { return vmulq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& a, const Packet1cd& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& x, const Packet2d& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet2d& x, const Packet1cd& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& a, const Packet2cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& x, const Packet4f& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet4f& x, const Packet2cf& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pmul<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pmul<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmul<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_mul_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_mul_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmul<Packet4i>(const Packet4i& a, const Packet4i& b)$/;"	f	namespace:Eigen::internal
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const RealScalar& x, const Scalar& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const Scalar& x, const RealScalar& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const Scalar& x, const Scalar& y) const { return internal::pmul(x,y); }$/;"	f	struct:Eigen::internal::conj_helper
pmul	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const Scalar& x, const Scalar& y) const$/;"	f	struct:Eigen::internal::conj_helper
pnegate	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^pnegate(const Packet& a) { return -a; }$/;"	f	namespace:Eigen::internal
pnegate	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pnegate(const Packet2cf& a) { return Packet2cf(pnegate(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a) { return psub<Packet4f>(p4f_ZERO, a); }$/;"	f	namespace:Eigen::internal
pnegate	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a) { return psub<Packet4i>(p4i_ZERO, a); }$/;"	f	namespace:Eigen::internal
pnegate	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pnegate(const Packet2cf& a) { return Packet2cf(pnegate<Packet4f>(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a) { return vnegq_f32(a); }$/;"	f	namespace:Eigen::internal
pnegate	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a) { return vnegq_s32(a); }$/;"	f	namespace:Eigen::internal
pnegate	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pnegate(const Packet1cd& a) { return Packet1cd(pnegate(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pnegate(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pnegate	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pnegate(const Packet2d& a)$/;"	f	namespace:Eigen::internal
pnegate	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a)$/;"	f	namespace:Eigen::internal
pnegate	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a)$/;"	f	namespace:Eigen::internal
pnorm_weight	./Thirdparty/sparseicp/ICP.h	/^    void pnorm_weight(Eigen::VectorXd& r, double p, double reg=1e-8) {$/;"	f	namespace:ICP
pointAt	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^ParametrizedLine<_Scalar, _AmbientDim,_Options>::pointAt(const _Scalar& t) const$/;"	f	class:Eigen::ParametrizedLine
point_to_plane	./Thirdparty/sparseicp/ICP.h	/^    Eigen::Affine3d point_to_plane(Eigen::MatrixBase<Derived1>& X,$/;"	f	namespace:RigidMotionEstimator
point_to_plane	./Thirdparty/sparseicp/ICP.h	/^    inline Eigen::Affine3d point_to_plane(Eigen::MatrixBase<Derived1>& X,$/;"	f	namespace:RigidMotionEstimator
point_to_plane	./Thirdparty/sparseicp/ICP.h	/^    void point_to_plane(Eigen::MatrixBase<Derived1>& X,$/;"	f	namespace:ICP
point_to_plane	./Thirdparty/sparseicp/ICP.h	/^    void point_to_plane(Eigen::MatrixBase<Derived1>& X,$/;"	f	namespace:SICP
point_to_point	./Thirdparty/sparseicp/ICP.h	/^    Eigen::Affine3d point_to_point(Eigen::MatrixBase<Derived1>& X,$/;"	f	namespace:RigidMotionEstimator
point_to_point	./Thirdparty/sparseicp/ICP.h	/^    inline Eigen::Affine3d point_to_point(Eigen::MatrixBase<Derived1>& X,$/;"	f	namespace:RigidMotionEstimator
point_to_point	./Thirdparty/sparseicp/ICP.h	/^    void point_to_point(Eigen::Matrix3Xd& X,$/;"	f	namespace:ICP
point_to_point	./Thirdparty/sparseicp/ICP.h	/^    void point_to_point(Eigen::MatrixBase<Derived1>& X,$/;"	f	namespace:SICP
pointer	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    typedef T*        pointer;$/;"	t	class:Eigen::aligned_allocator
pointer	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    typedef T*        pointer;$/;"	t	class:Eigen::aligned_allocator_indirection
pool	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		PooledAllocator pool;$/;"	m	class:nanoflann::KDTreeSingleIndexAdaptor
pop	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    virtual void pop() { assert(!_backup.empty()); _estimate = _backup.top(); _backup.pop(); updateCache();}$/;"	f	class:g2o::BaseVertex
pop	./Thirdparty/g2o/g2o/core/estimate_propagator.cpp	/^  EstimatePropagator::AdjacencyMapEntry* EstimatePropagator::PriorityQueue::pop()$/;"	f	class:g2o::EstimatePropagator::PriorityQueue
pop	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::pop()$/;"	f	class:g2o::OptimizableGraph
pop	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::pop(HyperGraph::VertexSet& vset)$/;"	f	class:g2o::OptimizableGraph
pop	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::pop()$/;"	f	class:g2o::SparseOptimizer
pop	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::pop(HyperGraph::VertexSet& vlist)$/;"	f	class:g2o::SparseOptimizer
pop	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::pop(SparseOptimizer::VertexContainer& vlist)$/;"	f	class:g2o::SparseOptimizer
por	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^por(const Packet& a, const Packet& b) { return a | b; }$/;"	f	namespace:Eigen::internal
por	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf por    <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_or(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
por	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i por<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
por	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf por    <Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
por	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
por	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i por<Packet4i>(const Packet4i& a, const Packet4i& b) { return vorrq_s32(a,b); }$/;"	f	namespace:Eigen::internal
por	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd por    <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_or_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf por    <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_or_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d por<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_or_pd(a,b); }$/;"	f	namespace:Eigen::internal
por	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_or_ps(a,b); }$/;"	f	namespace:Eigen::internal
por	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i por<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_or_si128(a,b); }$/;"	f	namespace:Eigen::internal
poseDim	./Thirdparty/g2o/g2o/core/optimization_algorithm_property.h	/^  int poseDim;                \/\/\/< dimension of the pose vertices (-1 if variable)$/;"	m	struct:g2o::OptimizationAlgorithmProperty
postIteration	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::postIteration(int iter)$/;"	f	class:g2o::OptimizableGraph
pow	./Thirdparty/sparseicp/include/Eigen/src/Core/GlobalFunctions.h	/^  pow(const Eigen::ArrayBase<Derived>& x, const Eigen::ArrayBase<Derived>& exponents) $/;"	f	namespace:Eigen
pow	./Thirdparty/sparseicp/include/Eigen/src/Core/GlobalFunctions.h	/^  pow(const Eigen::ArrayBase<Derived>& x, const typename Derived::Scalar& exponent) {$/;"	f	namespace:Eigen
pow	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(pow, Scalar) pow(const Scalar& x, const Scalar& y)$/;"	f	namespace:Eigen::numext
pow	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::pow(const Scalar& exponent) const$/;"	f	class:Eigen::Cwise
pow	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^pow(const Scalar& exponent) const$/;"	f
pow_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct pow_default_impl$/;"	s	namespace:Eigen::internal
pow_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct pow_default_impl<Scalar, true>$/;"	s	namespace:Eigen::internal
pow_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct pow_impl : pow_default_impl<Scalar, NumTraits<Scalar>::IsInteger> {};$/;"	s	namespace:Eigen::internal
pow_retval	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct pow_retval$/;"	s	namespace:Eigen::internal
preIteration	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::preIteration(int iter)$/;"	f	class:g2o::OptimizableGraph
precision	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^  int precision;$/;"	m	struct:Eigen::IOFormat
precision	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T precision () { return NumTraits<T>::dummy_precision(); }$/;"	f	namespace:Eigen
preconditioner	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Preconditioner& preconditioner() { return m_preconditioner; }$/;"	f	class:Eigen::IterativeSolverBase
preconditioner	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  const Preconditioner& preconditioner() const { return m_preconditioner; }$/;"	f	class:Eigen::IterativeSolverBase
predux	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_max_op
predux	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_min_op
predux	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_sum_op
predux	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const result_type predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_product_op
predux	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> inline typename unpacket_traits<Packet>::type predux(const Packet& a)$/;"	f	namespace:Eigen::internal
predux	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
predux	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a) { return pfirst(_mm_hadd_pd(a, a)); }$/;"	f	namespace:Eigen::internal
predux	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_max	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> inline typename unpacket_traits<Packet>::type predux_max(const Packet& a)$/;"	f	namespace:Eigen::internal
predux_max	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_max	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_max<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_max	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_max	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_max<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_max	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_max<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_max	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_max	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_max<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_min	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> inline typename unpacket_traits<Packet>::type predux_min(const Packet& a)$/;"	f	namespace:Eigen::internal
predux_min	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_min	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_min<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_min	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_min	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_min<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_min	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_min<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_min	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_min	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_min<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_mul	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> inline typename unpacket_traits<Packet>::type predux_mul(const Packet& a)$/;"	f	namespace:Eigen::internal
predux_mul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_mul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_mul<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_mul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_mul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_mul<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_mul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux_mul<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
predux_mul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_mul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_mul	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_mul<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
preduxp	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^preduxp(const Packet* vecs) { return vecs[0]; }$/;"	f	namespace:Eigen::internal
preduxp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preduxp<Packet2cf>(const Packet2cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preduxp<Packet4f>(const Packet4f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)$/;"	f	namespace:Eigen::internal
preduxp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preduxp<Packet2cf>(const Packet2cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preduxp<Packet4f>(const Packet4f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)$/;"	f	namespace:Eigen::internal
preduxp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preduxp<Packet1cd>(const Packet1cd* vecs)$/;"	f	namespace:Eigen::internal
preduxp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preduxp<Packet2cf>(const Packet2cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preduxp<Packet2d>(const Packet2d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preduxp<Packet4f>(const Packet4f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)$/;"	f	namespace:Eigen::internal
prefetch	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^template<typename Scalar> inline void prefetch(const Scalar* addr)$/;"	f	namespace:Eigen::internal
prefetch	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<float> >(const std::complex<float> *   addr) { vec_dstt((float *)addr, DST_CTRL(2,2,32), DST_CHAN); }$/;"	f	namespace:Eigen::internal
prefetch	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float* addr) { vec_dstt(addr, DST_CTRL(2,2,32), DST_CHAN); }$/;"	f	namespace:Eigen::internal
prefetch	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*     addr) { vec_dstt(addr, DST_CTRL(2,2,32), DST_CHAN); }$/;"	f	namespace:Eigen::internal
prefetch	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<float> >(const std::complex<float> *   addr) { __pld((float *)addr); }$/;"	f	namespace:Eigen::internal
prefetch	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float* addr) { __pld(addr); }$/;"	f	namespace:Eigen::internal
prefetch	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*     addr) { __pld(addr); }$/;"	f	namespace:Eigen::internal
prefetch	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<double> >(const std::complex<double> *   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<float> >(const std::complex<float> *   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float*   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*       addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prerotate	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::prerotate(const RotationType& rotation)$/;"	f	class:Eigen::Transform
prerotate	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::prerotate(const RotationType& rotation)$/;"	f	class:Eigen::Transform
prescale	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::prescale(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
prescale	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^inline Transform<Scalar,Dim>& Transform<Scalar,Dim>::prescale(Scalar s)$/;"	f	class:Eigen::Transform
prescale	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::prescale(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
prescale	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::prescale(const Scalar& s)$/;"	f	class:Eigen::Transform
preshear	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::preshear(Scalar sx, Scalar sy)$/;"	f	class:Eigen::Transform
preshear	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::preshear(const Scalar& sx, const Scalar& sy)$/;"	f	class:Eigen::Transform
pretranslate	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::pretranslate(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
pretranslate	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::pretranslate(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
prev	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    Index prev ;  \/* previous column in degree list, if col is in a *\/$/;"	m	union:internal::colamd_col::__anon349
preverse	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> inline Packet preverse(const Packet& a)$/;"	f	namespace:Eigen::internal
preverse	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preverse(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
preverse	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a) { return (Packet4f)vec_perm((Packet16uc)a,(Packet16uc)a, p16uc_REVERSE); }$/;"	f	namespace:Eigen::internal
preverse	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a) { return (Packet4i)vec_perm((Packet16uc)a,(Packet16uc)a, p16uc_REVERSE); }$/;"	f	namespace:Eigen::internal
preverse	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preverse(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
preverse	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a) {$/;"	f	namespace:Eigen::internal
preverse	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a) {$/;"	f	namespace:Eigen::internal
preverse	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preverse(const Packet1cd& a) { return a; }$/;"	f	namespace:Eigen::internal
preverse	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preverse(const Packet2cf& a) { return Packet2cf(_mm_castpd_ps(preverse(_mm_castps_pd(a.v)))); }$/;"	f	namespace:Eigen::internal
preverse	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preverse(const Packet2d& a)$/;"	f	namespace:Eigen::internal
preverse	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a)$/;"	f	namespace:Eigen::internal
preverse	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a)$/;"	f	namespace:Eigen::internal
printProperties	./Thirdparty/g2o/g2o/core/optimization_algorithm.cpp	/^void OptimizationAlgorithm::printProperties(std::ostream& os) const$/;"	f	class:g2o::OptimizationAlgorithm
printRegisteredTypes	./Thirdparty/g2o/g2o/core/factory.cpp	/^void Factory::printRegisteredTypes(std::ostream& os, bool comment) const$/;"	f	class:g2o::Factory
printVerbose	./Thirdparty/g2o/g2o/core/optimization_algorithm.h	/^      virtual void printVerbose(std::ostream& os) const {(void) os;};$/;"	f	class:g2o::OptimizationAlgorithm
printVerbose	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.cpp	/^  void OptimizationAlgorithmDogleg::printVerbose(std::ostream& os) const$/;"	f	class:g2o::OptimizationAlgorithmDogleg
printVerbose	./Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp	/^  void OptimizationAlgorithmGaussNewton::printVerbose(std::ostream& os) const$/;"	f	class:g2o::OptimizationAlgorithmGaussNewton
printVerbose	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^  void OptimizationAlgorithmLevenberg::printVerbose(std::ostream& os) const$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
print_icpn	./Thirdparty/sparseicp/ICP.h	/^        bool print_icpn = false;  \/\/\/ (debug) print ICP iteration $/;"	m	struct:SICP::Parameters
print_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^std::ostream & print_matrix(std::ostream & s, const Derived& _m, const IOFormat& fmt)$/;"	f	namespace:Eigen::internal
print_pose	./src/PnPsolver.cc	/^void PnPsolver::print_pose(const double R[3][3], const double t[3])$/;"	f	class:ORB_SLAM2::PnPsolver
print_pose	./src/PoseSolver.cc	/^void PoseSolver::print_pose(const double R[3][3], const double t[3])$/;"	f	class:ORB_SLAM2::PoseSolver
prod	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::prod() const$/;"	f	class:Eigen::DenseBase
prod	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_prod>::Type prod() const$/;"	f	class:Eigen::VectorwiseOp
product_coeff_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_impl<DefaultTraversal, 0, Lhs, Rhs, RetScalar>$/;"	s	namespace:Eigen::internal
product_coeff_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_impl<DefaultTraversal, Dynamic, Lhs, Rhs, RetScalar>$/;"	s	namespace:Eigen::internal
product_coeff_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_impl<DefaultTraversal, UnrollingIndex, Lhs, Rhs, RetScalar>$/;"	s	namespace:Eigen::internal
product_coeff_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_impl<InnerVectorizedTraversal, Dynamic, Lhs, Rhs, RetScalar>$/;"	s	namespace:Eigen::internal
product_coeff_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_impl<InnerVectorizedTraversal, UnrollingIndex, Lhs, Rhs, RetScalar>$/;"	s	namespace:Eigen::internal
product_coeff_vectorized_dyn_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_vectorized_dyn_selector$/;"	s	namespace:Eigen::internal
product_coeff_vectorized_dyn_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_vectorized_dyn_selector<Lhs,Rhs,1,1>$/;"	s	namespace:Eigen::internal
product_coeff_vectorized_dyn_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_vectorized_dyn_selector<Lhs,Rhs,1,RhsCols>$/;"	s	namespace:Eigen::internal
product_coeff_vectorized_dyn_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_vectorized_dyn_selector<Lhs,Rhs,LhsRows,1>$/;"	s	namespace:Eigen::internal
product_coeff_vectorized_unroller	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_vectorized_unroller$/;"	s	namespace:Eigen::internal
product_coeff_vectorized_unroller	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_vectorized_unroller<0, Lhs, Rhs, Packet>$/;"	s	namespace:Eigen::internal
product_packet_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_packet_impl<ColMajor, 0, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
product_packet_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_packet_impl<ColMajor, Dynamic, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
product_packet_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_packet_impl<ColMajor, UnrollingIndex, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
product_packet_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_packet_impl<RowMajor, 0, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
product_packet_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_packet_impl<RowMajor, Dynamic, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
product_packet_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_packet_impl<RowMajor, UnrollingIndex, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
product_selfadjoint_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,LhsSelfAdjoint,ConjugateLhs, RhsStorageOrder,RhsSelfAdjoint,ConjugateRhs,RowMajor>$/;"	s	namespace:Eigen::internal
product_selfadjoint_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,false,ConjugateLhs, RhsStorageOrder,true,ConjugateRhs,ColMajor>$/;"	s	namespace:Eigen::internal
product_selfadjoint_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,true,ConjugateLhs, RhsStorageOrder,false,ConjugateRhs,ColMajor>$/;"	s	namespace:Eigen::internal
product_size_category	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<int Size, int MaxSize> struct product_size_category$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct product_triangular_matrix_matrix<Scalar,Index,Mode,LhsIsTriangular,$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct product_triangular_matrix_matrix<Scalar,Index,Mode,false,$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct product_triangular_matrix_matrix<Scalar,Index,Mode,true,$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix_trmm	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	/^struct product_triangular_matrix_matrix_trmm :$/;"	s	namespace:Eigen::internal
product_type	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<typename Lhs, typename Rhs> struct product_type$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    1,    1>      { enum { ret = InnerProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Large>  { enum { ret = GemvProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Large>  { enum { ret = GemvProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Small>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Small>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Large, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Small>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<int Depth>     struct product_type_selector<1,    1,    Depth>  { enum { ret = InnerProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<int M, int N>  struct product_type_selector<M,N,1>              { enum { ret = OuterProduct }; };$/;"	s	namespace:Eigen::internal
project	./Thirdparty/g2o/g2o/types/se3_ops.hpp	/^  Vector2d project(const Vector3d& v)$/;"	f
project	./Thirdparty/g2o/g2o/types/se3_ops.hpp	/^  Vector3d project(const Vector4d& v)$/;"	f
project2d	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^Vector2d project2d(const Vector3d& v)  {$/;"	f	namespace:g2o
projection	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline VectorType projection(const VectorType& p) const { return p - signedDistance(p) * normal(); }$/;"	f	class:Eigen::Hyperplane
projection	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  VectorType projection(const VectorType& p) const$/;"	f	class:Eigen::ParametrizedLine
projection	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  inline VectorType projection(const VectorType& p) const { return p - signedDistance(p) * normal(); }$/;"	f	class:Eigen::Hyperplane
projection	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType projection(const VectorType& p) const$/;"	f	class:Eigen::ParametrizedLine
projective_transform_inverse	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct projective_transform_inverse$/;"	s	namespace:Eigen::internal
projective_transform_inverse	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct projective_transform_inverse<TransformType, Projective>$/;"	s	namespace:Eigen::internal
promote_index_type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/XprHelper.h	/^struct promote_index_type$/;"	s	namespace:Eigen::internal
promote_storage_type	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^template<> struct promote_storage_type<Dense,Sparse>$/;"	s	namespace:Eigen::internal
promote_storage_type	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^template<> struct promote_storage_type<Sparse,Dense>$/;"	s	namespace:Eigen::internal
propagate	./Thirdparty/g2o/g2o/core/estimate_propagator.cpp	/^  void EstimatePropagator::propagate(OptimizableGraph::Vertex* v, $/;"	f	class:g2o::EstimatePropagator
propagate	./Thirdparty/g2o/g2o/core/estimate_propagator.cpp	/^  void EstimatePropagator::propagate(OptimizableGraph::VertexSet& vset, $/;"	f	class:g2o::EstimatePropagator
properties	./Thirdparty/g2o/g2o/core/optimization_algorithm.h	/^      const PropertyMap& properties() const { return _properties;}$/;"	f	class:g2o::OptimizationAlgorithm
property	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	/^      const OptimizationAlgorithmProperty& property() const { return _property;}$/;"	f	class:g2o::AbstractOptimizationAlgorithmCreator
prune	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    void prune(const Scalar& reference, const RealScalar& epsilon = NumTraits<RealScalar>::dummy_precision())$/;"	f	class:Eigen::internal::CompressedStorage
prune	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    void prune(const KeepFunc& keep = KeepFunc())$/;"	f	class:Eigen::SparseMatrix
prune	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    void prune(const Scalar& reference, const RealScalar& epsilon = NumTraits<RealScalar>::dummy_precision())$/;"	f	class:Eigen::SparseMatrix
prune	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    void prune(const Scalar& reference, const RealScalar& epsilon = NumTraits<RealScalar>::dummy_precision())$/;"	f	class:Eigen::SparseVector
pruneL	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_pruneL.h	/^void SparseLUImpl<Scalar,Index>::pruneL(const Index jcol, const IndexVector& perm_r, const Index pivrow, const Index nseg, const IndexVector& segrep, BlockIndexVector repfnz, IndexVector& xprune, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
pruned	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    SparseSparseProduct pruned(const Scalar& reference = 0, const RealScalar& epsilon = NumTraits<RealScalar>::dummy_precision()) const$/;"	f	class:Eigen::SparseSparseProduct
pset1	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^pset1(const typename unpacket_traits<Packet>::type& a) { return a; }$/;"	f	namespace:Eigen::internal
pset1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pset1<Packet2cf>(const std::complex<float>&  from)$/;"	f	namespace:Eigen::internal
pset1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) {$/;"	f	namespace:Eigen::internal
pset1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from)   {$/;"	f	namespace:Eigen::internal
pset1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pset1<Packet2cf>(const std::complex<float>&  from)$/;"	f	namespace:Eigen::internal
pset1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return vdupq_n_f32(from); }$/;"	f	namespace:Eigen::internal
pset1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from)   { return vdupq_n_s32(from); }$/;"	f	namespace:Eigen::internal
pset1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pset1<Packet1cd>(const std::complex<double>&  from)$/;"	f	namespace:Eigen::internal
pset1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pset1<Packet2cf>(const std::complex<float>&  from)$/;"	f	namespace:Eigen::internal
pset1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double& from) { return _mm_set1_pd(from); }$/;"	f	namespace:Eigen::internal
pset1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double& from) { return _mm_set_pd(from,from); }$/;"	f	namespace:Eigen::internal
pset1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return _mm_set1_ps(from); }$/;"	f	namespace:Eigen::internal
pset1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return _mm_set_ps(from,from,from,from); }$/;"	f	namespace:Eigen::internal
pset1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from) { return _mm_set1_epi32(from); }$/;"	f	namespace:Eigen::internal
pset1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from) { return _mm_set_epi32(from,from,from,from); }$/;"	f	namespace:Eigen::internal
pseudoEigenvalueMatrix	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^MatrixType EigenSolver<MatrixType>::pseudoEigenvalueMatrix() const$/;"	f	class:Eigen::EigenSolver
pseudoEigenvectors	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    const MatrixType& pseudoEigenvectors() const$/;"	f	class:Eigen::EigenSolver
psin	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^Packet psin(const Packet& a) { using std::sin; return sin(a); }$/;"	f	namespace:Eigen::internal
psin	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f psin<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
psqrt	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^Packet psqrt(const Packet& a) { using std::sqrt; return sqrt(a); }$/;"	f	namespace:Eigen::internal
psqrt	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f psqrt<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
psqrt	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/MathFunctions.h	/^template<> EIGEN_STRONG_INLINE Packet2d psqrt<Packet2d>(const Packet2d& x) { return _mm_sqrt_pd(x); }$/;"	f	namespace:Eigen::internal
psqrt	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/MathFunctions.h	/^template<> EIGEN_STRONG_INLINE Packet4f psqrt<Packet4f>(const Packet4f& x) { return _mm_sqrt_ps(x); }$/;"	f	namespace:Eigen::internal
pstore	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^template<typename Scalar, typename Packet> inline void pstore(Scalar* to, const Packet& from)$/;"	f	namespace:Eigen::internal
pstore	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet4f& from) { EIGEN_DEBUG_ALIGNED_STORE vec_st(from, 0, to); }$/;"	f	namespace:Eigen::internal
pstore	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet4i& from) { EIGEN_DEBUG_ALIGNED_STORE vec_st(from, 0, to); }$/;"	f	namespace:Eigen::internal
pstore	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet4f& from) { EIGEN_DEBUG_ALIGNED_STORE vst1q_f32(to, from); }$/;"	f	namespace:Eigen::internal
pstore	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet4i& from) { EIGEN_DEBUG_ALIGNED_STORE vst1q_s32(to, from); }$/;"	f	namespace:Eigen::internal
pstore	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore(&numext::real_ref(*to), from.v); }$/;"	f	namespace:Eigen::internal
pstore	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<double>(double* to, const Packet2d& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_pd(to, from); }$/;"	f	namespace:Eigen::internal
pstore	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet4f& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_ps(to, from); }$/;"	f	namespace:Eigen::internal
pstore	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet4i& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_si128(reinterpret_cast<Packet4i*>(to), from); }$/;"	f	namespace:Eigen::internal
pstore1	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^inline void pstore1(typename unpacket_traits<Packet>::type* to, const typename unpacket_traits<Packet>::type& a)$/;"	f	namespace:Eigen::internal
pstore1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet2d>(double* to, const double& a)$/;"	f	namespace:Eigen::internal
pstore1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet4f>(float* to, const float& a)$/;"	f	namespace:Eigen::internal
pstoret	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^inline void pstoret(Scalar* to, const Packet& from)$/;"	f	namespace:Eigen::internal
pstoreu	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^template<typename Scalar, typename Packet> inline void pstoreu(Scalar* to, const Packet& from)$/;"	f	namespace:Eigen::internal
pstoreu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*  to, const Packet4f& from)$/;"	f	namespace:Eigen::internal
pstoreu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*      to, const Packet4i& from)$/;"	f	namespace:Eigen::internal
pstoreu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*  to, const Packet4f& from) { EIGEN_DEBUG_UNALIGNED_STORE vst1q_f32(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*      to, const Packet4i& from) { EIGEN_DEBUG_UNALIGNED_STORE vst1q_s32(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(&numext::real_ref(*to), from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<double>(double* to, const Packet2d& from) {$/;"	f	namespace:Eigen::internal
pstoreu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*  to, const Packet4f& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(reinterpret_cast<double*>(to), _mm_castps_pd(from)); }$/;"	f	namespace:Eigen::internal
pstoreu	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*      to, const Packet4i& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(reinterpret_cast<double*>(to), _mm_castsi128_pd(from)); }$/;"	f	namespace:Eigen::internal
psub	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^psub(const Packet& a,$/;"	f	namespace:Eigen::internal
psub	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf psub<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_sub(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_sub(a,b); }$/;"	f	namespace:Eigen::internal
psub	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_sub(a,b); }$/;"	f	namespace:Eigen::internal
psub	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf psub<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(psub<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return vsubq_f32(a,b); }$/;"	f	namespace:Eigen::internal
psub	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return vsubq_s32(a,b); }$/;"	f	namespace:Eigen::internal
psub	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd psub<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_sub_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf psub<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_sub_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d psub<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_sub_pd(a,b); }$/;"	f	namespace:Eigen::internal
psub	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_sub_ps(a,b); }$/;"	f	namespace:Eigen::internal
psub	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_sub_epi32(a,b); }$/;"	f	namespace:Eigen::internal
ptan	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^Packet ptan(const Packet& a) { using std::tan; return tan(a); }$/;"	f	namespace:Eigen::internal
punpackp	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^EIGEN_STRONG_INLINE void punpackp(Packet4f* vecs)$/;"	f	namespace:Eigen::internal
push	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    virtual void push() { _backup.push(_estimate);}$/;"	f	class:g2o::BaseVertex
push	./Thirdparty/g2o/g2o/core/estimate_propagator.cpp	/^  void EstimatePropagator::PriorityQueue::push(AdjacencyMapEntry* entry)$/;"	f	class:g2o::EstimatePropagator::PriorityQueue
push	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::push()$/;"	f	class:g2o::OptimizableGraph
push	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::push(HyperGraph::VertexSet& vset)$/;"	f	class:g2o::OptimizableGraph
push	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::push()$/;"	f	class:g2o::SparseOptimizer
push	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::push(HyperGraph::VertexSet& vlist)$/;"	f	class:g2o::SparseOptimizer
push	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::push(SparseOptimizer::VertexContainer& vlist)$/;"	f	class:g2o::SparseOptimizer
pushDownZero	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^    inline void RealQZ<MatrixType>::pushDownZero(Index z, Index f, Index l)$/;"	f	class:Eigen::RealQZ
push_back	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdDeque.h	/^  void push_back(const value_type& x)$/;"	f	class:std::deque
push_back	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdList.h	/^    void push_back(const value_type& x)$/;"	f	class:std::list
push_back	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdVector.h	/^  void push_back(const value_type& x)$/;"	f	class:std::vector
push_front	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdDeque.h	/^  void push_front(const value_type& x)$/;"	f	class:std::deque
pws	./include/PnPsolver.h	/^  double * pws, * us, * alphas, * pcs;$/;"	m	class:ORB_SLAM2::PnPsolver
pws	./include/PoseSolver.h	/^  double * pws, * us, * alphas, * pcs;$/;"	m	class:ORB_SLAM2::PoseSolver
pxor	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^pxor(const Packet& a, const Packet& b) { return a ^ b; }$/;"	f	namespace:Eigen::internal
pxor	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pxor   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_xor(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
pxor	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
pxor	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pxor   <Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pxor	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pxor	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return veorq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pxor	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pxor   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_xor_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pxor   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_xor_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pxor<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_xor_pd(a,b); }$/;"	f	namespace:Eigen::internal
pxor	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_xor_ps(a,b); }$/;"	f	namespace:Eigen::internal
pxor	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_xor_si128(a,b); }$/;"	f	namespace:Eigen::internal
qnxnto	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	./Thirdparty/DBoW2/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	./Thirdparty/g2o/build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	./build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	./build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	./cmake-build-debug/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qr	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/QR.h	/^MatrixBase<Derived>::qr() const$/;"	f	class:Eigen::MatrixBase
qr_preconditioner_impl	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^> struct qr_preconditioner_impl {};$/;"	s	namespace:Eigen::internal
qr_preconditioner_impl	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, ColPivHouseholderQRPreconditioner, PreconditionIfMoreColsThanRows, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, ColPivHouseholderQRPreconditioner, PreconditionIfMoreRowsThanCols, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, FullPivHouseholderQRPreconditioner, PreconditionIfMoreColsThanRows, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, FullPivHouseholderQRPreconditioner, PreconditionIfMoreRowsThanCols, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, HouseholderQRPreconditioner, PreconditionIfMoreColsThanRows, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, HouseholderQRPreconditioner, PreconditionIfMoreRowsThanCols, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, QRPreconditioner, Case, false>$/;"	c	namespace:Eigen::internal
qr_preconditioner_should_do_anything	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^struct qr_preconditioner_should_do_anything$/;"	s	namespace:Eigen::internal
qr_solve	./src/PnPsolver.cc	/^void PnPsolver::qr_solve(CvMat * A, CvMat * b, CvMat * X)$/;"	f	class:ORB_SLAM2::PnPsolver
qr_solve	./src/PoseSolver.cc	/^void PoseSolver::qr_solve(CvMat * A, CvMat * b, CvMat * X)$/;"	f	class:ORB_SLAM2::PoseSolver
quat_product	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^template<int Arch, class Derived1, class Derived2, typename Scalar, int _Options> struct quat_product$/;"	s	namespace:Eigen::internal
quat_product	./Thirdparty/sparseicp/include/Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct quat_product<Architecture::SSE, Derived, OtherDerived, double, Aligned>$/;"	s	namespace:Eigen::internal
quat_product	./Thirdparty/sparseicp/include/Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct quat_product<Architecture::SSE, Derived, OtherDerived, float, Aligned>$/;"	s	namespace:Eigen::internal
quaternionbase_assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^struct quaternionbase_assign_impl<Other,3,3>$/;"	s	namespace:Eigen::internal
quaternionbase_assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^struct quaternionbase_assign_impl<Other,4,1>$/;"	s	namespace:Eigen::internal
query	./Thirdparty/sparseicp/ICP.h	/^        inline void query(const num_t *query_point, const size_t num_closest, IndexType *out_indices, num_t *out_distances_sq) const {$/;"	f	struct:nanoflann::KDTreeAdaptor
query	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline void query(const num_t *query_point, const size_t num_closest, IndexType *out_indices, num_t *out_distances_sq, const int nChecks_IGNORED = 10) const$/;"	f	struct:nanoflann::KDTreeEigenMatrixAdaptor
queryCacheSizes	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryCacheSizes_amd	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_amd(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryCacheSizes_intel	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_intel(int& l1, int& l2, int& l3, int max_std_funcs)$/;"	f	namespace:Eigen::internal
queryCacheSizes_intel_codes	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_intel_codes(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryCacheSizes_intel_direct	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_intel_direct(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryL1CacheSize	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline int queryL1CacheSize()$/;"	f	namespace:Eigen::internal
queryTopLevelCacheSize	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline int queryTopLevelCacheSize()$/;"	f	namespace:Eigen::internal
queueIt	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^          PriorityQueue::iterator queueIt;$/;"	m	class:g2o::EstimatePropagator::AdjacencyMapEntry
r	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^  int r, c;$/;"	m	struct:g2o::MatrixElem	file:
r	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^      int r, c;$/;"	m	struct:g2o::__anon468::TripletEntry
r	./Thirdparty/g2o/g2o/types/sim3.h	/^    Quaterniond r;$/;"	m	struct:g2o::Sim3
rad2deg	./Thirdparty/g2o/g2o/stuff/misc.h	/^inline double rad2deg(double rad)$/;"	f	namespace:g2o
radius	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		const DistanceType radius;$/;"	m	class:nanoflann::RadiusResultSet
radiusSearch	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		size_t radiusSearch(const ElementType *query_point,const DistanceType radius, std::vector<std::pair<IndexType,DistanceType> >& IndicesDists, const SearchParams& searchParams) const$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
random	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(random, Scalar) random()$/;"	f	namespace:Eigen::internal
random	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(random, Scalar) random(const Scalar& x, const Scalar& y)$/;"	f	namespace:Eigen::internal
random_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct random_default_impl {};$/;"	s	namespace:Eigen::internal
random_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct random_default_impl<Scalar, false, false>$/;"	s	namespace:Eigen::internal
random_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct random_default_impl<Scalar, false, true>$/;"	s	namespace:Eigen::internal
random_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct random_default_impl<Scalar, true, false>$/;"	s	namespace:Eigen::internal
random_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct random_impl : random_default_impl<Scalar, NumTraits<Scalar>::IsComplex, NumTraits<Scalar>::IsInteger> {};$/;"	s	namespace:Eigen::internal
random_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^template<> struct random_impl<bool>$/;"	s	namespace:Eigen::internal
random_retval	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct random_retval$/;"	s	namespace:Eigen::internal
rank	./Thirdparty/g2o/g2o/core/base_edge.h	/^      virtual int rank() const {return _dimension;}$/;"	f	class:g2o::BaseEdge
rank	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    inline Index rank() const$/;"	f	class:Eigen::FullPivLU
rank	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index rank() const$/;"	f	class:Eigen::ColPivHouseholderQR
rank	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index rank() const$/;"	f	class:Eigen::FullPivHouseholderQR
rank	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    Index rank() const$/;"	f	class:Eigen::SPQR
rank	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    Index rank() const $/;"	f	class:Eigen::SparseQR
rank	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^  inline Index rank() const { return m_rank; }$/;"	f	struct:Eigen::internal::image_retval_base
rank	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^  inline Index rank() const { return m_rank; }$/;"	f	struct:Eigen::internal::kernel_retval_base
rankUpdate	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^LDLT<MatrixType,_UpLo>& LDLT<MatrixType,_UpLo>::rankUpdate(const MatrixBase<Derived>& w, const typename NumTraits<typename MatrixType::Scalar>::Real& sigma)$/;"	f	class:Eigen::LDLT
rankUpdate	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^  static typename MatrixType::Index rankUpdate(MatrixType& mat, const VectorType& vec, const RealScalar& sigma)$/;"	f	struct:Eigen::internal::llt_inplace
rankUpdate	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^LLT<_MatrixType,_UpLo> LLT<_MatrixType,_UpLo>::rankUpdate(const VectorType& v, const RealScalar& sigma)$/;"	f	class:Eigen::LLT
rankUpdate	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointProduct.h	/^::rankUpdate(const MatrixBase<DerivedU>& u, const Scalar& alpha)$/;"	f	class:Eigen::SelfAdjointView
rankUpdate	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointRank2Update.h	/^::rankUpdate(const MatrixBase<DerivedU>& u, const MatrixBase<DerivedV>& v, const Scalar& alpha)$/;"	f	class:Eigen::SelfAdjointView
rankUpdate	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^SparseSelfAdjointView<MatrixType,UpLo>::rankUpdate(const SparseMatrixBase<DerivedU>& u, const Scalar& alpha)$/;"	f	class:Eigen::SparseSelfAdjointView
ratio_	./4pcs/Registration.h	/^            double ratio_;$/;"	m	class:pcl::FPCS::FPCSRegistration
rawMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const CholMatrixType rawMatrix() const {$/;"	f	class:Eigen::SimplicialCholesky
read	./Thirdparty/g2o/g2o/core/parameter_container.cpp	/^  bool ParameterContainer::read(std::istream& is, const std::map<std::string, std::string>* _renamedTypesLookup){$/;"	f	class:g2o::ParameterContainer
read	./Thirdparty/g2o/g2o/types/types_sba.cpp	/^  bool VertexSBAPointXYZ::read(std::istream& is)$/;"	f	class:g2o::VertexSBAPointXYZ
read	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp	/^  bool EdgeInverseSim3ProjectXYZ::read(std::istream& is)$/;"	f	class:g2o::EdgeInverseSim3ProjectXYZ
read	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp	/^  bool EdgeSim3::read(std::istream& is)$/;"	f	class:g2o::EdgeSim3
read	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp	/^  bool EdgeSim3ProjectXYZ::read(std::istream& is)$/;"	f	class:g2o::EdgeSim3ProjectXYZ
read	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp	/^  bool VertexSim3Expmap::read(std::istream& is)$/;"	f	class:g2o::VertexSim3Expmap
read	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^bool EdgeSE3ProjectXYZ::read(std::istream& is){$/;"	f	class:g2o::EdgeSE3ProjectXYZ
read	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^bool EdgeSE3ProjectXYZOnlyPose::read(std::istream& is){$/;"	f	class:g2o::EdgeSE3ProjectXYZOnlyPose
read	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^bool EdgeStereoSE3ProjectXYZ::read(std::istream& is){$/;"	f	class:g2o::EdgeStereoSE3ProjectXYZ
read	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^bool EdgeStereoSE3ProjectXYZOnlyPose::read(std::istream& is){$/;"	f	class:g2o::EdgeStereoSE3ProjectXYZOnlyPose
read	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^bool VertexSE3Expmap::read(std::istream& is) {$/;"	f	class:g2o::VertexSE3Expmap
readFloats	./Thirdparty/g2o/g2o/stuff/string_tools.h	/^OutputIterator readFloats(const char* str, OutputIterator out)$/;"	f	namespace:g2o
readInts	./Thirdparty/g2o/g2o/stuff/string_tools.h	/^OutputIterator readInts(const char* str, OutputIterator out)$/;"	f	namespace:g2o
readLine	./Thirdparty/g2o/g2o/stuff/string_tools.cpp	/^int readLine(std::istream& is, std::stringstream& currentLine)$/;"	f	namespace:g2o
read_obj	./Thirdparty/sparseicp/io_obj.h	/^bool read_obj(MatrixType& vertices, const std::string& filename) {$/;"	f
real	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(real, Scalar) real(const Scalar& x)$/;"	f	namespace:Eigen::numext
real	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^real() const { return derived(); }$/;"	f
real	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^real() { return derived(); }$/;"	f
real_2x2_jacobi_svd	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^void real_2x2_jacobi_svd(const MatrixType& matrix, Index p, Index q,$/;"	f	namespace:Eigen::internal
real_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct real_default_impl$/;"	s	namespace:Eigen::internal
real_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct real_default_impl<Scalar,true>$/;"	s	namespace:Eigen::internal
real_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^template<typename Scalar> struct real_impl : real_default_impl<Scalar> {};$/;"	s	namespace:Eigen::internal
real_ref	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(real_ref, Scalar) real_ref(Scalar& x)$/;"	f	namespace:Eigen::numext
real_ref	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^inline typename internal::add_const_on_value_type< EIGEN_MATHFUNC_RETVAL(real_ref, Scalar) >::type real_ref(const Scalar& x)$/;"	f	namespace:Eigen::numext
real_ref_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct real_ref_impl$/;"	s	namespace:Eigen::internal
real_ref_retval	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct real_ref_retval$/;"	s	namespace:Eigen::internal
real_retval	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct real_retval$/;"	s	namespace:Eigen::internal
reallocate	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    void reallocate(Index size)$/;"	f	class:Eigen::internal::AmbiVector
reallocate	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    inline void reallocate(size_t size)$/;"	f	class:Eigen::internal::CompressedStorage
reallocateSparse	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    void reallocateSparse()$/;"	f	class:Eigen::internal::AmbiVector
rebind	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    struct rebind$/;"	s	class:Eigen::aligned_allocator
rebind	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    struct rebind$/;"	s	class:Eigen::aligned_allocator_indirection
reconstructedMatrix	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^MatrixType LDLT<MatrixType,_UpLo>::reconstructedMatrix() const$/;"	f	class:Eigen::LDLT
reconstructedMatrix	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^MatrixType LLT<MatrixType,_UpLo>::reconstructedMatrix() const$/;"	f	class:Eigen::LLT
reconstructedMatrix	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^MatrixType FullPivLU<MatrixType>::reconstructedMatrix() const$/;"	f	class:Eigen::FullPivLU
reconstructedMatrix	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^MatrixType PartialPivLU<MatrixType>::reconstructedMatrix() const$/;"	f	class:Eigen::PartialPivLU
reduceToTriangularForm	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^void ComplexSchur<MatrixType>::reduceToTriangularForm(bool computeU)$/;"	f	class:Eigen::ComplexSchur
redux	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::redux(const Func& func) const$/;"	f	class:Eigen::DenseBase
redux	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    redux(const BinaryOp& func = BinaryOp()) const$/;"	f	class:Eigen::VectorwiseOp
redux_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, DefaultTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, LinearVectorizedTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, LinearVectorizedTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, SliceVectorizedTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^struct redux_impl<Func,Derived, DefaultTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
redux_novec_unroller	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^struct redux_novec_unroller$/;"	s	namespace:Eigen::internal
redux_novec_unroller	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^struct redux_novec_unroller<Func, Derived, Start, 0>$/;"	s	namespace:Eigen::internal
redux_novec_unroller	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^struct redux_novec_unroller<Func, Derived, Start, 1>$/;"	s	namespace:Eigen::internal
redux_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^struct redux_traits$/;"	s	namespace:Eigen::internal
redux_vec_unroller	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^struct redux_vec_unroller$/;"	s	namespace:Eigen::internal
redux_vec_unroller	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^struct redux_vec_unroller<Func, Derived, Start, 1>$/;"	s	namespace:Eigen::internal
reference	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    typedef T&        reference;$/;"	t	class:Eigen::aligned_allocator
reference	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    Scalar reference;$/;"	m	struct:Eigen::SparseMatrix::default_prunning_func
reference	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    typedef T&        reference;$/;"	t	class:Eigen::aligned_allocator_indirection
refreshPropertyPtrs	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  bool DrawAction::refreshPropertyPtrs(HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::DrawAction
registerAction	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  bool HyperGraphActionLibrary::registerAction(HyperGraphElementAction* action)$/;"	f	class:g2o::HyperGraphActionLibrary
registerAction	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  bool HyperGraphElementActionCollection::registerAction(HyperGraphElementAction* action)$/;"	f	class:g2o::HyperGraphElementActionCollection
registerRobustKernel	./Thirdparty/g2o/g2o/core/robust_kernel_factory.cpp	/^void RobustKernelFactory::registerRobustKernel(const std::string& tag, AbstractRobustKernelCreator* c)$/;"	f	class:g2o::RobustKernelFactory
registerSolver	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  void OptimizationAlgorithmFactory::registerSolver(AbstractOptimizationAlgorithmCreator* c)$/;"	f	class:g2o::OptimizationAlgorithmFactory
registerType	./Thirdparty/g2o/g2o/core/factory.cpp	/^void Factory::registerType(const std::string& tag, AbstractHyperGraphElementCreator* c)$/;"	f	class:g2o::Factory
registration	./4pcs/Registration.cc	/^        int FPCSRegistration::registration(const double dist) {$/;"	f	class:pcl::FPCS::FPCSRegistration
relative_error	./src/PnPsolver.cc	/^void PnPsolver::relative_error(double & rot_err, double & transl_err,$/;"	f	class:ORB_SLAM2::PnPsolver
relative_error	./src/PoseSolver.cc	/^void PoseSolver::relative_error(double & rot_err, double & transl_err,$/;"	f	class:ORB_SLAM2::PoseSolver
relax	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index relax; \/\/ To control degree of relaxing supernodes. If the number of nodes (columns) $/;"	m	struct:Eigen::internal::perfvalues
relax_snode	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_relax_snode.h	/^void SparseLUImpl<Scalar,Index>::relax_snode (const Index n, IndexVector& et, const Index relax_columns, IndexVector& descendants, IndexVector& relax_end)$/;"	f	class:Eigen::internal::SparseLUImpl
remaining	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		size_t  remaining;  \/* Number of bytes left in current block of storage. *\/$/;"	m	class:nanoflann::PooledAllocator
removeComputeErrorAction	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::removeComputeErrorAction(HyperGraphAction* action)$/;"	f	class:g2o::SparseOptimizer
removeEdge	./Thirdparty/g2o/g2o/core/hyper_graph.cpp	/^  bool HyperGraph::removeEdge(Edge* e)$/;"	f	class:g2o::HyperGraph
removePostIterationAction	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::removePostIterationAction(HyperGraphAction* action)$/;"	f	class:g2o::OptimizableGraph
removePreIterationAction	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::removePreIterationAction(HyperGraphAction* action)$/;"	f	class:g2o::OptimizableGraph
removeVertex	./Thirdparty/g2o/g2o/core/hyper_graph.cpp	/^  bool HyperGraph::removeVertex(Vertex* v)$/;"	f	class:g2o::HyperGraph
removeVertex	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::removeVertex(HyperGraph::Vertex* v)$/;"	f	class:g2o::SparseOptimizer
remove_all	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_all	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const&>  { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const*>  { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T&>        { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T*>        { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<const T>   { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_const	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template <class T, unsigned int Size> struct remove_const<const T[Size]> { typedef T type[Size]; };$/;"	s	namespace:Eigen::internal
remove_const	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_const	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T> { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_const	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T[]> { typedef T type[]; };$/;"	s	namespace:Eigen::internal
remove_pointer	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_pointer	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*> { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_pointer	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*const> { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_reference	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_reference	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference<T&> { typedef T type; };$/;"	s	namespace:Eigen::internal
replicate	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^DenseBase<Derived>::replicate() const$/;"	f	class:Eigen::DenseBase
replicate	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^DenseBase<Derived>::replicate(Index rowFactor,Index colFactor) const$/;"	f	class:Eigen::DenseBase
replicate	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^VectorwiseOp<ExpressionType,Direction>::replicate(Index factor) const$/;"	f	class:Eigen::VectorwiseOp
replicate	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    replicate(Index factor = Factor) const$/;"	f	class:Eigen::VectorwiseOp
reprojection_error	./src/PnPsolver.cc	/^double PnPsolver::reprojection_error(const double R[3][3], const double t[3])$/;"	f	class:ORB_SLAM2::PnPsolver
reprojection_error	./src/PoseSolver.cc	/^double PoseSolver::reprojection_error(const double R[3][3], const double t[3])$/;"	f	class:ORB_SLAM2::PoseSolver
requiresMarginalize	./Thirdparty/g2o/g2o/core/optimization_algorithm_property.h	/^  bool requiresMarginalize;   \/\/\/< whether the solver requires marginalization of landmarks$/;"	m	struct:g2o::OptimizationAlgorithmProperty
res	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^  Scalar res;$/;"	m	struct:Eigen::internal::coeff_visitor
reserve	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    void reserve(size_t size)$/;"	f	class:Eigen::internal::CompressedStorage
reserve	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void reserve(Index reserveSize)$/;"	f	class:Eigen::SparseMatrix
reserve	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void reserve(const SizesType& reserveSizes, const typename SizesType::Scalar& enableif =$/;"	f	class:Eigen::SparseMatrix
reserve	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void reserve(const SizesType& reserveSizes, const typename SizesType::value_type& enableif = typename SizesType::value_type())$/;"	f	class:Eigen::SparseMatrix
reserve	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline void reserve(Index reserveSize) { m_data.reserve(reserveSize); }$/;"	f	class:Eigen::SparseVector
reserveInnerVectors	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void reserveInnerVectors(const SizesType& reserveSizes)$/;"	f	class:Eigen::SparseMatrix
reset	./Thirdparty/DBoW2/DUtils/Random.cpp	/^void DUtils::Random::UnrepeatedRandomizer::reset()$/;"	f	class:DUtils::Random::UnrepeatedRandomizer
reset	./Thirdparty/g2o/g2o/core/estimate_propagator.cpp	/^  void EstimatePropagator::AdjacencyMapEntry::reset()$/;"	f	class:g2o::EstimatePropagator::AdjacencyMapEntry
reset	./Thirdparty/g2o/g2o/core/estimate_propagator.cpp	/^  void EstimatePropagator::reset()$/;"	f	class:g2o::EstimatePropagator
reset	./Thirdparty/g2o/g2o/core/hyper_dijkstra.cpp	/^  void HyperDijkstra::reset()$/;"	f	class:g2o::HyperDijkstra
reset_correspondences	./src/PnPsolver.cc	/^void PnPsolver::reset_correspondences(void)$/;"	f	class:ORB_SLAM2::PnPsolver
reset_correspondences	./src/PoseSolver.cc	/^void PoseSolver::reset_correspondences(void)$/;"	f	class:ORB_SLAM2::PoseSolver
resize	./Thirdparty/g2o/g2o/core/base_binary_edge.hpp	/^void BaseBinaryEdge<D, E, VertexXiType, VertexXjType>::resize(size_t size)$/;"	f	class:BaseBinaryEdge
resize	./Thirdparty/g2o/g2o/core/base_multi_edge.hpp	/^void BaseMultiEdge<D, E>::resize(size_t size)$/;"	f	class:BaseMultiEdge
resize	./Thirdparty/g2o/g2o/core/base_unary_edge.hpp	/^void BaseUnaryEdge<D, E, VertexXiType>::resize(size_t size)$/;"	f	class:BaseUnaryEdge
resize	./Thirdparty/g2o/g2o/core/block_solver.hpp	/^void BlockSolver<Traits>::resize(int* blockPoseIndices, int numPoseBlocks, $/;"	f	class:g2o::BlockSolver
resize	./Thirdparty/g2o/g2o/core/hyper_graph.cpp	/^  void HyperGraph::Edge::resize(size_t size)$/;"	f	class:g2o::HyperGraph::Edge
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index nbRows, Index nbCols) { m_expression.const_cast_derived().resize(nbRows,nbCols); }$/;"	f	class:Eigen::ArrayWrapper
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index nbRows, Index nbCols) { m_expression.const_cast_derived().resize(nbRows,nbCols); }$/;"	f	class:Eigen::MatrixWrapper
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index newSize) { m_expression.const_cast_derived().resize(newSize); }$/;"	f	class:Eigen::ArrayWrapper
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index newSize) { m_expression.const_cast_derived().resize(newSize); }$/;"	f	class:Eigen::MatrixWrapper
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    void resize(Index nbRows, Index nbCols)$/;"	f	class:Eigen::DenseBase
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    void resize(Index newSize)$/;"	f	class:Eigen::DenseBase
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    EIGEN_STRONG_INLINE void resize(DenseIndex size, DenseIndex nbRows, DenseIndex)$/;"	f	class:Eigen::DenseStorage
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    EIGEN_STRONG_INLINE void resize(DenseIndex size, DenseIndex, DenseIndex nbCols)$/;"	f	class:Eigen::DenseStorage
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline void resize(DenseIndex, DenseIndex nbRows, DenseIndex nbCols) { m_rows = nbRows; m_cols = nbCols; }$/;"	f	class:Eigen::DenseStorage
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline void resize(DenseIndex, DenseIndex nbRows, DenseIndex) { m_rows = nbRows; }$/;"	f	class:Eigen::DenseStorage
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline void resize(DenseIndex, DenseIndex, DenseIndex nbCols) { m_cols = nbCols; }$/;"	f	class:Eigen::DenseStorage
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline void resize(DenseIndex,DenseIndex,DenseIndex) {}$/;"	f	class:Eigen::DenseStorage
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    void resize(DenseIndex size, DenseIndex nbRows, DenseIndex nbCols)$/;"	f	class:Eigen::DenseStorage
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline void resize(Index size) { m_diagonal.resize(size); }$/;"	f	class:Eigen::DiagonalMatrix
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline void resize(Index newSize)$/;"	f	class:Eigen::PermutationBase
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void resize(Index nbRows, Index nbCols)$/;"	f	class:Eigen::PlainObjectBase
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    inline void resize(Index nbRows, NoChange_t)$/;"	f	class:Eigen::PlainObjectBase
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    inline void resize(Index size)$/;"	f	class:Eigen::PlainObjectBase
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    inline void resize(NoChange_t, Index nbCols)$/;"	f	class:Eigen::PlainObjectBase
resize	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline void resize(int newSize)$/;"	f	class:Eigen::TranspositionsBase
resize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    void resize(Index size)$/;"	f	class:Eigen::internal::AmbiVector
resize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    void resize(size_t size, float reserveSizeFactor = 0)$/;"	f	class:Eigen::internal::CompressedStorage
resize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::SparseMatrix
resize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    void resize(Index newSize)$/;"	f	class:Eigen::SparseVector
resize	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::SparseVector
resize	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdDeque.h	/^  void resize(size_type new_size)$/;"	f	class:std::deque
resize	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdDeque.h	/^  void resize(size_type new_size, const value_type& x)$/;"	f	class:std::deque
resize	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdList.h	/^    void resize(size_type new_size)$/;"	f	class:std::list
resize	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdList.h	/^    void resize(size_type new_size, const value_type& x)$/;"	f	class:std::list
resize	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdVector.h	/^  void resize(size_type new_size)$/;"	f	class:std::vector
resize	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdVector.h	/^  void resize(size_type new_size, const value_type& x)$/;"	f	class:std::vector
resizeLike	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void resizeLike(const EigenBase<OtherDerived>& _other)$/;"	f	class:Eigen::PlainObjectBase
resizeNonZeros	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    void resizeNonZeros(Index size)$/;"	f	class:Eigen::SparseMatrix
resizeNonZeros	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    void resizeNonZeros(Index size) { m_data.resize(size); }$/;"	f	class:Eigen::SparseVector
resizeParameters	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        inline void resizeParameters(size_t newSize) {$/;"	f	class:g2o::OptimizableGraph::Edge
resizeVector	./Thirdparty/g2o/g2o/core/solver.cpp	/^void Solver::resizeVector(size_t sx)$/;"	f	class:g2o::Solver
resolveCache	./Thirdparty/g2o/g2o/core/cache.h	/^  void OptimizableGraph::Edge::resolveCache(CacheType*& cache, $/;"	f	class:g2o::OptimizableGraph::Edge
resolveCaches	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Edge::resolveCaches() {$/;"	f	class:g2o::OptimizableGraph::Edge
resolveDependancies	./Thirdparty/g2o/g2o/core/cache.cpp	/^  bool Cache::resolveDependancies(){$/;"	f	class:g2o::Cache
resolveParameters	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Edge::resolveParameters() {$/;"	f	class:g2o::OptimizableGraph::Edge
restart	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_Index>::restart()$/;"	f	class:Eigen::internal::AmbiVector
restoreDiagonal	./Thirdparty/g2o/g2o/core/block_solver.hpp	/^void BlockSolver<Traits>::restoreDiagonal()$/;"	f	class:g2o::BlockSolver
result_of	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct result_of<Func(ArgType)> {$/;"	s	namespace:Eigen::internal
result_of	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct result_of<Func(ArgType0,ArgType1)> {$/;"	s	namespace:Eigen::internal
result_of	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct result_of {};$/;"	s	namespace:Eigen::internal
result_type	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef NewType result_type;$/;"	t	struct:Eigen::internal::scalar_cast_op
result_type	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_abs2_op
result_type	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_abs_op
result_type	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_imag_op
result_type	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_imag_ref_op
result_type	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_real_op
result_type	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_real_ref_op
result_type	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename scalar_product_traits<LhsScalar,RhsScalar>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_conj_product_op
result_type	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename scalar_product_traits<LhsScalar,RhsScalar>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_product_op
result_type	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename scalar_product_traits<LhsScalar,RhsScalar>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_quotient_op
result_type	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  typedef typename scalar_product_traits<Scalar1,Scalar2>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_multiple2_op
result_type	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^                   >::type  result_type;$/;"	t	struct:Eigen::internal::member_redux
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = 0 };$/;"	e	enum:Eigen::internal::inner_stride_at_compile_time::__anon181
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = 0 };$/;"	e	enum:Eigen::internal::outer_stride_at_compile_time::__anon183
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = traits<Derived>::InnerStrideAtCompileTime };$/;"	e	enum:Eigen::internal::inner_stride_at_compile_time::__anon180
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = traits<Derived>::OuterStrideAtCompileTime };$/;"	e	enum:Eigen::internal::outer_stride_at_compile_time::__anon182
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Functor> struct functor_has_linear_access { enum { ret = 1 }; };$/;"	e	enum:Eigen::internal::functor_has_linear_access::__anon288
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Functor> struct functor_is_product_like { enum { ret = 0 }; };$/;"	e	enum:Eigen::internal::functor_is_product_like::__anon290
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename LhsScalar,typename RhsScalar> struct functor_is_product_like<scalar_conj_product_op<LhsScalar,RhsScalar> > { enum { ret = 1 }; };$/;"	e	enum:Eigen::internal::functor_is_product_like::__anon292
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename LhsScalar,typename RhsScalar> struct functor_is_product_like<scalar_product_op<LhsScalar,RhsScalar> > { enum { ret = 1 }; };$/;"	e	enum:Eigen::internal::functor_is_product_like::__anon291
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename LhsScalar,typename RhsScalar> struct functor_is_product_like<scalar_quotient_op<LhsScalar,RhsScalar> > { enum { ret = 1 }; };$/;"	e	enum:Eigen::internal::functor_is_product_like::__anon293
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct functor_has_linear_access<scalar_identity_op<Scalar> > { enum { ret = 0 }; };$/;"	e	enum:Eigen::internal::functor_has_linear_access::__anon289
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    1,    1>      { enum { ret = InnerProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon150
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Large>  { enum { ret = GemvProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon158
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon157
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon159
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon152
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon156
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Large>  { enum { ret = GemvProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon161
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon160
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon166
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Small>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon169
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon164
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Small>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon167
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Large, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon155
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon154
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon162
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon151
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon165
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Small>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon168
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon163
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon153
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<int Depth>     struct product_type_selector<1,    1,    Depth>  { enum { ret = InnerProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon149
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^template<int M, int N>  struct product_type_selector<M,N,1>              { enum { ret = OuterProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon148
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^  enum { ret =    bool(blas_traits<DerivedA>::IsTransposed) != DestIsTransposed$/;"	e	enum:Eigen::internal::check_transpose_aliasing_compile_time_selector::__anon64
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^  enum { ret = bool(blas_traits<OtherDerived>::IsTransposed) != DestIsTransposed };$/;"	e	enum:Eigen::internal::check_transpose_aliasing_compile_time_selector::__anon63
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/util/ForwardDeclarations.h	/^  enum { ret = (traits<Derived>::Flags & DirectAccessBit) ? 1 : 0 };$/;"	e	enum:Eigen::internal::has_direct_access::__anon83
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^    enum { ret = meta_sqrt<Y,NewInf,NewSup>::ret };$/;"	e	enum:Eigen::internal::__anon129
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^class meta_sqrt<Y, InfX, SupX, true> { public:  enum { ret = (SupX*SupX <= Y) ? SupX : InfX }; };$/;"	e	enum:Eigen::meta_sqrt::__anon130
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^{ enum { ret = false }; };$/;"	e	enum:Eigen::is_diagonal::__anon135
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^{ enum { ret = true }; };$/;"	e	enum:Eigen::is_diagonal::__anon136
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^{ enum { ret = true }; };$/;"	e	enum:Eigen::is_diagonal::__anon137
ret	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^{ enum { ret = true }; };$/;"	e	enum:Eigen::is_diagonal::__anon138
ret	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^    enum { ret = ei_meta_sqrt<Y,NewInf,NewSup>::ret };$/;"	e	enum:Eigen::__anon376
ret	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^class ei_meta_sqrt<Y, InfX, SupX, true> { public:  enum { ret = (SupX*SupX <= Y) ? SupX : InfX }; };$/;"	e	enum:ei_meta_sqrt::__anon377
ret	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^struct ei_meta_false { enum { ret = 0 }; };$/;"	e	enum:Eigen::ei_meta_false::__anon373
ret	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^struct ei_meta_if <false, Then, Else> { typedef Else ret; };$/;"	t	struct:Eigen::ei_meta_if
ret	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^struct ei_meta_if { typedef Then ret; };$/;"	t	struct:Eigen::ei_meta_if
ret	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^struct ei_meta_true {  enum { ret = 1 }; };$/;"	e	enum:Eigen::ei_meta_true::__anon372
ret	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T, typename U> struct ei_is_same_type { enum { ret = 0 }; };$/;"	e	enum:Eigen::ei_is_same_type::__anon374
ret	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_is_same_type<T,T> { enum { ret = 1 }; };$/;"	e	enum:Eigen::ei_is_same_type::__anon375
ret	./Thirdparty/sparseicp/include/Eigen/src/Householder/Householder.h	/^    ret = n==Dynamic ? n : n-1$/;"	e	enum:Eigen::internal::decrement_size::__anon2
ret	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^         ret = !( (QRPreconditioner == NoQRPreconditioner) ||$/;"	e	enum:Eigen::internal::qr_preconditioner_should_do_anything::__anon354
ret	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^{ typedef Sparse ret; };$/;"	t	struct:Eigen::internal::promote_storage_type
retval	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar retval;$/;"	t	struct:Eigen::internal::atanh2_default_impl
retval	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar retval;$/;"	t	struct:Eigen::internal::pow_default_impl
reverse	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^DenseBase<Derived>::reverse() const$/;"	f	class:Eigen::DenseBase
reverse	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^DenseBase<Derived>::reverse()$/;"	f	class:Eigen::DenseBase
reverse	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    const Reverse<ExpressionType, Direction> reverse() const$/;"	f	class:Eigen::VectorwiseOp
reverseInPlace	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^inline void DenseBase<Derived>::reverseInPlace()$/;"	f	class:Eigen::DenseBase
reverse_packet	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    typedef internal::reverse_packet_cond<PacketScalar,ReversePacket> reverse_packet;$/;"	t	class:Eigen::Reverse
reverse_packet_cond	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^template<typename PacketScalar, bool ReversePacket> struct reverse_packet_cond$/;"	s	namespace:Eigen::internal
reverse_packet_cond	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^template<typename PacketScalar> struct reverse_packet_cond<PacketScalar,false>$/;"	s	namespace:Eigen::internal
rhs	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    const _RhsNested& rhs() const { return m_rhs; }$/;"	f	class:Eigen::CwiseBinaryOp
rhs	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    const _RhsNested& rhs() const { return m_rhs; }$/;"	f	class:Eigen::ProductBase
rhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    const _RhsNested& rhs() const { return m_rhs; }$/;"	f	class:Eigen::CoeffBasedProduct
rhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE const _RhsNested& rhs() const { return m_rhs; }$/;"	f	class:Eigen::SparseDenseOuterProduct
rhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    EIGEN_STRONG_INLINE const _RhsNested& rhs() const { return m_rhs; }$/;"	f	class:Eigen::SparseDiagonalProduct
rhs	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    EIGEN_STRONG_INLINE const _RhsNested& rhs() const { return m_rhs; }$/;"	f	class:Eigen::SparseSparseProduct
rhs	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^  inline const RhsNestedCleaned& rhs() const { return m_rhs; }$/;"	f	struct:Eigen::internal::solve_retval_base
rhs	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^  inline const RhsNestedCleaned& rhs() const { return m_rhs; }$/;"	f	struct:Eigen::internal::sparse_solve_retval_base
rhs_length	./Thirdparty/sparseicp/include/Eigen/src/Core/products/Parallelizer.h	/^  Index rhs_length;$/;"	m	struct:Eigen::internal::GemmParallelInfo
rhs_start	./Thirdparty/sparseicp/include/Eigen/src/Core/products/Parallelizer.h	/^  Index rhs_start;$/;"	m	struct:Eigen::internal::GemmParallelInfo
right	./Thirdparty/sparseicp/include/nanoflann.hpp	/^					IndexType left, right;$/;"	m	struct:nanoflann::KDTreeSingleIndexAdaptor::Node::__anon463::__anon464
rightCols	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline ColsBlockXpr rightCols(Index n)$/;"	f
rightCols	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline ConstColsBlockXpr rightCols(Index n) const$/;"	f
rightCols	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNColsBlockXpr<N>::Type rightCols(Index n = N) const$/;"	f
rightCols	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename NColsBlockXpr<N>::Type rightCols(Index n = N)$/;"	f
rightHouseholderSequence	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^HouseholderSequence<VectorsType,CoeffsType,OnTheRight> rightHouseholderSequence(const VectorsType& v, const CoeffsType& h)$/;"	f	namespace:Eigen
rightMultiply	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  void SparseBlockMatrix<MatrixType>::rightMultiply(double*& dest, const double* src) const {$/;"	f	class:g2o::SparseBlockMatrix
rightMultiply	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      void rightMultiply(double*& dest, const double* src) const$/;"	f	class:g2o::SparseBlockMatrixCCS
robustInformation	./Thirdparty/g2o/g2o/core/base_edge.h	/^      InformationType robustInformation(const Eigen::Vector3d& rho)$/;"	f	class:g2o::BaseEdge
robustKernel	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        RobustKernel* robustKernel() const { return _robustKernel;}$/;"	f	class:g2o::OptimizableGraph::Edge
robust_weight	./Thirdparty/sparseicp/ICP.h	/^    void robust_weight(Function f, Eigen::VectorXd& r, double p) {$/;"	f	namespace:ICP
robustify	./Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelCauchy::robustify(double e2, Eigen::Vector3d& rho) const$/;"	f	class:g2o::RobustKernelCauchy
robustify	./Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelDCS::robustify(double e2, Eigen::Vector3d& rho) const$/;"	f	class:g2o::RobustKernelDCS
robustify	./Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelHuber::robustify(double e, Eigen::Vector3d& rho) const$/;"	f	class:g2o::RobustKernelHuber
robustify	./Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelPseudoHuber::robustify(double e2, Eigen::Vector3d& rho) const$/;"	f	class:g2o::RobustKernelPseudoHuber
robustify	./Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelSaturated::robustify(double e2, Eigen::Vector3d& rho) const$/;"	f	class:g2o::RobustKernelSaturated
robustify	./Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelScaleDelta::robustify(double error, Eigen::Vector3d& rho) const$/;"	f	class:g2o::RobustKernelScaleDelta
robustify	./Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelTukey::robustify(double e, Eigen::Vector3d& rho) const$/;"	f	class:g2o::RobustKernelTukey
root_bbox	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		BoundingBox root_bbox;$/;"	m	class:nanoflann::KDTreeSingleIndexAdaptor
root_node	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		NodePtr root_node;$/;"	m	class:nanoflann::KDTreeSingleIndexAdaptor
rotate	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::rotate(const RotationType& rotation)$/;"	f	class:Eigen::Transform
rotate	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::rotate(const RotationType& rotation)$/;"	f	class:Eigen::Transform
rotation	./Thirdparty/g2o/g2o/types/se3quat.h	/^      inline const Quaterniond& rotation() const {return _r;}$/;"	f	class:g2o::SE3Quat
rotation	./Thirdparty/g2o/g2o/types/sim3.h	/^    inline Quaterniond& rotation() {return r;}$/;"	f	struct:g2o::Sim3
rotation	./Thirdparty/g2o/g2o/types/sim3.h	/^    inline const Quaterniond& rotation() const {return r;}$/;"	f	struct:g2o::Sim3
rotation	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::rotation() const$/;"	f	class:Eigen::Transform
rotation	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::rotation() const$/;"	f	class:Eigen::Transform
rotation_	./4pcs/Registration.h	/^            Eigen::Matrix3f rotation_;$/;"	m	class:pcl::FPCS::FPCSRegistration
rotation_base_generic_product_selector	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^struct rotation_base_generic_product_selector< RotationDerived, DiagonalMatrix<Scalar,Dim,MaxDim>, false >$/;"	s	namespace:Eigen::internal
rotation_base_generic_product_selector	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^struct rotation_base_generic_product_selector<RotationDerived,MatrixType,false>$/;"	s	namespace:Eigen::internal
rotation_base_generic_product_selector	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^struct rotation_base_generic_product_selector<RotationDerived,OtherVectorType,true>$/;"	s	namespace:Eigen::internal
rotation_gt_	./4pcs/Registration.h	/^            Eigen::Matrix3f rotation_gt_;$/;"	m	class:pcl::FPCS::FPCSRegistration
row	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^        int row;              \/\/\/< row of the block$/;"	m	struct:g2o::SparseBlockMatrixCCS::RowBlock
row	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^    row = (UnrollCount-1) % Derived::RowsAtCompileTime$/;"	e	enum:Eigen::internal::all_unroller::__anon200
row	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^    row = (UnrollCount-1) % Derived::RowsAtCompileTime$/;"	e	enum:Eigen::internal::any_unroller::__anon201
row	./Thirdparty/sparseicp/include/Eigen/src/Core/CoreIterators.h	/^    inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::DenseBase::InnerIterator
row	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    row = (UnrollCount-1) % Derived1::RowsAtCompileTime$/;"	e	enum:Eigen::internal::triangular_assignment_selector::__anon334
row	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    row = (UnrollCount-1) % Derived1::RowsAtCompileTime$/;"	e	enum:Eigen::internal::triangular_assignment_selector::__anon335
row	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    row = (UnrollCount-1) % Derived1::RowsAtCompileTime$/;"	e	enum:Eigen::internal::triangular_assignment_selector::__anon232
row	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^    row = (UnrollCount-1) % Derived::RowsAtCompileTime$/;"	e	enum:Eigen::internal::visitor_impl::__anon235
row	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^  Index row, col;$/;"	m	struct:Eigen::internal::coeff_visitor
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::MappedSparseMatrix::InnerIterator
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^        inline Index row() const { return IsRowMajor ? m_outer : this->index(); }$/;"	f	class:Eigen::BlockImpl::InnerIterator
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^        inline Index row() const { return IsRowMajor ? m_outer : this->index(); }$/;"	f	class:Eigen::BlockImpl::ReverseInnerIterator
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      inline Index row()    const { return Base::row()   - m_block.m_startRow.value(); }$/;"	f	class:Eigen::BlockImpl::InnerIterator
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^      inline Index row()    const { return Base::row()   - m_block.m_startRow.value(); }$/;"	f	class:Eigen::BlockImpl::ReverseInnerIterator
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return Lhs::IsRowMajor ? m_lhsIter.row() : index(); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return m_lhsIter.row(); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return m_rhsIter.row(); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    inline Index row() const { return Transpose ? Base::row() : m_outer; }$/;"	f	class:Eigen::SparseDenseOuterProduct::InnerIterator
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Index row() const { return m_outer; }$/;"	f	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::SparseMatrix::InnerIterator
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTranspose.h	/^    Index row() const { return Base::col(); }$/;"	f	class:Eigen::TransposeImpl::InnerIterator
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTranspose.h	/^    Index row() const { return Base::col(); }$/;"	f	class:Eigen::TransposeImpl::ReverseInnerIterator
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index row() const { return (MatrixType::Flags&RowMajorBit ? Base::outer() : this->index()); }$/;"	f	class:Eigen::SparseTriangularView::InnerIterator
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index row() const { return Base::row(); }$/;"	f	class:Eigen::SparseTriangularView::ReverseInnerIterator
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^  const Index& row() const { return m_row; }$/;"	f	class:Eigen::Triplet
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Index row() const { return IsColVector ? index() : 0; }$/;"	f	class:Eigen::SparseVector::InnerIterator
row	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Index row() const { return IsColVector ? index() : 0; }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
row	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Index row() const { return index(); }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
row	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline ConstRowXpr row(Index i) const$/;"	f
row	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline RowXpr row(Index i)$/;"	f
rowBaseOfBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    inline int rowBaseOfBlock(int r) const { return r ? _rowBlockIndices[r-1] : 0 ; }$/;"	f	class:g2o::SparseBlockMatrix
rowBaseOfBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int rowBaseOfBlock(int r) const { return r ? _rowBlockIndices[r-1] : 0 ; }$/;"	f	class:g2o::SparseBlockMatrixCCS
rowBaseOfBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int rowBaseOfBlock(int r) const { return r ? _rowBlockIndices[r-1] : 0 ; }$/;"	f	class:g2o::SparseBlockMatrixHashMap
rowBlockIndices	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    const std::vector<int>& rowBlockIndices() const { return _rowBlockIndices;}$/;"	f	class:g2o::SparseBlockMatrix
rowBlockIndices	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    std::vector<int>& rowBlockIndices() { return _rowBlockIndices;}$/;"	f	class:g2o::SparseBlockMatrix
rowBlockIndices	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<int>& rowBlockIndices() const { return _rowBlockIndices;}$/;"	f	class:g2o::SparseBlockMatrixCCS
rowBlockIndices	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<int>& rowBlockIndices() const { return _rowBlockIndices;}$/;"	f	class:g2o::SparseBlockMatrixHashMap
rowIndex	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index* rowIndex()  { return m_rowind; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rowIndex	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index* rowIndex() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rowIndexByOuterInner	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE Index rowIndexByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
rowIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index* rowIndexPtr() { return m_rowind_colptr; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rowIndexPtr	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index* rowIndexPtr() const $/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rowOffset	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    EIGEN_STRONG_INLINE Index rowOffset() const { return m_index.value()>0 ? 0 : -m_index.value(); }$/;"	f	class:Eigen::Diagonal
rowPrefix	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
rowSeparator	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
rowSpacer	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
rowStride	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index rowStride() const$/;"	f	class:Eigen::DenseCoeffsBase
rowSuffix	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
rowblk	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index rowblk; \/\/ The minimum row dimension for 2-D blocking to be used;$/;"	m	struct:Eigen::internal::perfvalues
rows	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    inline int rows() const {return _rowBlockIndices.size() ? _rowBlockIndices.back() : 0;}$/;"	f	class:g2o::SparseBlockMatrix
rows	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int rows() const {return _rowBlockIndices.size() ? _rowBlockIndices.back() : 0;}$/;"	f	class:g2o::SparseBlockMatrixCCS
rows	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int rows() const {return _rowBlockIndices.size() ? _rowBlockIndices.back() : 0;}$/;"	f	class:g2o::SparseBlockMatrixHashMap
rows	./Thirdparty/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      int rows() const {return _blockIndices.size() ? _blockIndices.back() : 0;}$/;"	f	class:g2o::SparseBlockMatrixDiagonal
rows	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::LDLT
rows	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::LLT
rows	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    inline Index rows() const { return m_cholmodFactor->n; }$/;"	f	class:Eigen::CholmodBase
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::ArrayWrapper
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::MatrixWrapper
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::internal::BandMatrix
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline Index rows() const { return m_blockRows.value(); }$/;"	f	class:Eigen::internal::BlockImpl_dense
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index rows() const {$/;"	f	class:Eigen::CwiseBinaryOp
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::CwiseNullaryOp
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_xpr.rows(); }$/;"	f	class:Eigen::CwiseUnaryOp
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::CwiseUnaryView
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseIndex rows() const {return m_rows;}$/;"	f	class:Eigen::DenseStorage
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseIndex rows(void) const {return _Rows;}$/;"	f	class:Eigen::DenseStorage
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline DenseIndex rows(void) const {return m_rows;}$/;"	f	class:Eigen::DenseStorage
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    static inline DenseIndex rows(void) {return _Rows;}$/;"	f	class:Eigen::DenseStorage
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^    inline Index rows() const$/;"	f	class:Eigen::Diagonal
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline Index rows() const { return diagonal().size(); }$/;"	f	class:Eigen::DiagonalBase
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::DiagonalProduct
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^  inline Index rows() const { return derived().rows(); }$/;"	f	struct:Eigen::EigenBase
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::Flagged
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^    inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::ForceAlignedAccess
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::MapBase
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^    inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::NestByValue
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline Index rows() const { return Index(indices().size()); }$/;"	f	class:Eigen::PermutationBase
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	struct:Eigen::internal::permut_matrix_product_retval
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline int rows() const { return m_permutation.rows(); }$/;"	f	class:Eigen::Transpose
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_storage.rows(); }$/;"	f	class:Eigen::PlainObjectBase
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    inline Index rows() const { return m_lhs.rows(); }$/;"	f	class:Eigen::ProductBase
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^    inline Index rows() const { return m_matrix.rows() * m_rowFactor.value(); }$/;"	f	class:Eigen::Replicate
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^    inline Index rows() const { return static_cast<const Derived*>(this)->rows(); }$/;"	f	class:Eigen::ReturnByValue
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::Reverse
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    Index rows() const { return m_condition.rows(); }$/;"	f	class:Eigen::Select
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SelfAdjointView
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SelfCwiseBinaryOp
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  inline Index rows() const { return m_rhs.rows(); }$/;"	f	struct:Eigen::internal::triangular_solve_retval
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^    inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::SwapWrapper
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    inline Index rows() const { return m_matrix.cols(); }$/;"	f	class:Eigen::Transpose
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline int rows() const { return m_matrix.rows(); }$/;"	f	struct:Eigen::internal::transposition_matrix_product_retval
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline Index rows() const { return derived().rows(); }$/;"	f	class:Eigen::TriangularBase
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::TriangularView
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    Index rows() const { return (Direction==Vertical   ? 1 : m_matrix.rows()); }$/;"	f	class:Eigen::PartialReduxExpr
rows	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_lhs.rows(); }$/;"	f	class:Eigen::CoeffBasedProduct
rows	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^    inline Index rows() const { return m_matrix.rows() - 1; }$/;"	f	class:Eigen::Minor
rows	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    Index rows() const { return m_hess.packedMatrix().rows(); }$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
rows	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Index rows() const { return m_matrix.rows(); }$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
rows	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^    inline Index rows() const { return m_matrix.rows() + (int(Direction)==Vertical   ? 1 : 0); }$/;"	f	class:Eigen::Homogeneous
rows	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  inline Index rows() const { return m_lhs.rows(); }$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
rows	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  inline Index rows() const { return m_lhs.rows(); }$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
rows	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    Index rows() const { return Side==OnTheLeft ? m_vectors.rows() : m_vectors.cols(); }$/;"	f	class:Eigen::HouseholderSequence
rows	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    Index rows() const { return m_invdiag.size(); }$/;"	f	class:Eigen::DiagonalPreconditioner
rows	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    Index rows() const { return m_lu.rows(); }$/;"	f	class:Eigen::IncompleteLUT
rows	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index rows() const { return mp_matrix ? mp_matrix->rows() : 0; }$/;"	f	class:Eigen::IterativeSolverBase
rows	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    inline Index rows() const { return m_lu.rows(); }$/;"	f	class:Eigen::FullPivLU
rows	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^  inline Index rows() const { return m_matrix.rows(); }$/;"	f	struct:Eigen::internal::inverse_impl
rows	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    inline Index rows() const { return m_lu.rows(); }$/;"	f	class:Eigen::PartialPivLU
rows	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    inline Index rows() const { return m_size; }$/;"	f	class:Eigen::PastixBase
rows	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    inline Index rows() const { return m_size; }$/;"	f	class:Eigen::PardisoImpl
rows	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index rows() const { return m_qr.rows(); }$/;"	f	class:Eigen::ColPivHouseholderQR
rows	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    Index rows() const { return m_qr.rows(); }$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
rows	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index rows() const { return m_qr.rows(); }$/;"	f	class:Eigen::FullPivHouseholderQR
rows	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    inline Index rows() const { return m_qr.rows(); }$/;"	f	class:Eigen::HouseholderQR
rows	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    inline Index rows() const {return m_H->nrow; }$/;"	f	class:Eigen::SPQR
rows	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  inline Index rows() const { return m_transpose ? m_spqr.rows() : m_spqr.cols(); }$/;"	f	struct:Eigen::SPQR_QProduct
rows	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    inline Index rows() const { return m_rows; }$/;"	f	class:Eigen::JacobiSVD
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SimplicialCholeskyBase
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index rows() const { return IsRowMajor ? m_outerSize : m_innerSize; }$/;"	f	class:Eigen::MappedSparseMatrix
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    EIGEN_STRONG_INLINE Index rows() const { return IsRowMajor ? m_outerSize.value() : m_matrix.rows(); }$/;"	f	class:Eigen::BlockImpl
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline int rows() const { return m_blockRows.value(); }$/;"	f	class:Eigen::BlockImpl
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE Index rows() const { return Tr ? m_rhs.rows() : m_lhs.rows(); }$/;"	f	class:Eigen::SparseDenseOuterProduct
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_lhs.rows(); }$/;"	f	class:Eigen::SparseDiagonalProduct
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index rows() const { return IsRowMajor ? m_outerSize : m_innerSize; }$/;"	f	class:Eigen::SparseMatrix
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Index rows() const { return derived().rows(); }$/;"	f	class:Eigen::SparseMatrixBase
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^    inline int rows() const { return m_matrix.rows(); }$/;"	f	struct:Eigen::internal::permut_sparsematrix_product_retval
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_lhs.rows(); }$/;"	f	class:Eigen::SparseSparseProduct
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SparseSelfAdjointView
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SparseTriangularView
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index rows() const { return IsColVector ? m_size : 1; }$/;"	f	class:Eigen::SparseVector
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^  inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SparseView
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    inline Index rows() const { return m_mat.rows(); }$/;"	f	class:Eigen::SparseLU
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  Index rows() { return m_mapL.rows(); }$/;"	f	struct:Eigen::SparseLUMatrixLReturnType
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  Index rows() { return m_mapL.rows(); }$/;"	f	struct:Eigen::SparseLUMatrixUReturnType
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index rows() { return m_row; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    inline Index rows() const { return m_pmat.rows(); }$/;"	f	class:Eigen::SparseQR
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  inline Index rows() const { return m_qr.rows(); }$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
rows	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  inline Index rows() const { return m_transpose ? m_qr.rows() : m_qr.cols(); }$/;"	f	struct:Eigen::SparseQR_QProduct
rows	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SuperLUBase
rows	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline Index rows() const { return m_copyMatrix.rows(); }$/;"	f	class:Eigen::UmfPackLU
rows	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^  inline Index rows() const { return m_dec.rows(); }$/;"	f	struct:Eigen::internal::image_retval_base
rows	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^  inline Index rows() const { return m_dec.cols(); }$/;"	f	struct:Eigen::internal::kernel_retval_base
rows	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^  inline Index rows() const { return m_dec.cols(); }$/;"	f	struct:Eigen::internal::solve_retval_base
rows	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^  inline Index rows() const { return m_dec.cols(); }$/;"	f	struct:Eigen::internal::solve_retval_with_guess
rows	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^  inline Index rows() const { return m_dec.cols(); }$/;"	f	struct:Eigen::internal::sparse_solve_retval_base
rowsOfBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix.h	/^    inline int rowsOfBlock(int r) const { return r ? _rowBlockIndices[r] - _rowBlockIndices[r-1] : _rowBlockIndices[0] ; }$/;"	f	class:g2o::SparseBlockMatrix
rowsOfBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int rowsOfBlock(int r) const { return r ? _rowBlockIndices[r] - _rowBlockIndices[r-1] : _rowBlockIndices[0] ; }$/;"	f	class:g2o::SparseBlockMatrixCCS
rowsOfBlock	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int rowsOfBlock(int r) const { return r ? _rowBlockIndices[r] - _rowBlockIndices[r-1] : _rowBlockIndices[0] ; }$/;"	f	class:g2o::SparseBlockMatrixHashMap
rowsPermutation	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    inline const PermutationType& rowsPermutation() const$/;"	f	class:Eigen::SparseLU
rowsTranspositions	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    const IntDiagSizeVectorType& rowsTranspositions() const$/;"	f	class:Eigen::FullPivHouseholderQR
rows_select	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    rows_select = product_size_category<Rows,MaxRows>::value,$/;"	e	enum:Eigen::internal::product_type::__anon146
rowwise	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^DenseBase<Derived>::rowwise() const$/;"	f	class:Eigen::DenseBase
rowwise	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^DenseBase<Derived>::rowwise()$/;"	f	class:Eigen::DenseBase
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_DONT_INLINE void run(const Derived& src, OtherDerived& dst, typename Derived::Index start, typename Derived::Index end)$/;"	f	struct:Eigen::internal::unaligned_assign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.derived()); }$/;"	f	struct:Eigen::internal::assign_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.eval()); }$/;"	f	struct:Eigen::internal::assign_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.transpose()); }$/;"	f	struct:Eigen::internal::assign_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.transpose().eval()); }$/;"	f	struct:Eigen::internal::assign_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &, const Derived2 &) {}$/;"	f	struct:Eigen::internal::assign_DefaultTraversal_CompleteUnrolling
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &, const Derived2 &) {}$/;"	f	struct:Eigen::internal::assign_LinearTraversal_CompleteUnrolling
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &, const Derived2 &) {}$/;"	f	struct:Eigen::internal::assign_innervec_CompleteUnrolling
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &, const Derived2 &, typename Derived1::Index) {}$/;"	f	struct:Eigen::internal::assign_DefaultTraversal_InnerUnrolling
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &, const Derived2 &, typename Derived1::Index) {}$/;"	f	struct:Eigen::internal::assign_innervec_InnerUnrolling
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)$/;"	f	struct:Eigen::internal::assign_DefaultTraversal_CompleteUnrolling
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)$/;"	f	struct:Eigen::internal::assign_LinearTraversal_CompleteUnrolling
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)$/;"	f	struct:Eigen::internal::assign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)$/;"	f	struct:Eigen::internal::assign_innervec_CompleteUnrolling
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src, typename Derived1::Index outer)$/;"	f	struct:Eigen::internal::assign_DefaultTraversal_InnerUnrolling
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src, typename Derived1::Index outer)$/;"	f	struct:Eigen::internal::assign_innervec_InnerUnrolling
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(const Derived&, OtherDerived&, typename Derived::Index, typename Derived::Index) {}$/;"	f	struct:Eigen::internal::unaligned_assign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static inline void run(Derived1 &, const Derived2 &) { }$/;"	f	struct:Eigen::internal::assign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^  static inline void run(Derived1 &dst, const Derived2 &src)$/;"	f	struct:Eigen::internal::assign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^  static inline void run(Derived1& dst, const CwiseUnaryOp<UnaryOp, Derived2>& src)$/;"	f	struct:Eigen::internal::vml_assign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived & \/*mat*\/) { return false; }$/;"	f	struct:Eigen::internal::any_unroller
run	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &) { return false; }$/;"	f	struct:Eigen::internal::all_unroller
run	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &) { return false; }$/;"	f	struct:Eigen::internal::any_unroller
run	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &\/*mat*\/) { return true; }$/;"	f	struct:Eigen::internal::all_unroller
run	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &mat)$/;"	f	struct:Eigen::internal::all_unroller
run	./Thirdparty/sparseicp/include/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &mat)$/;"	f	struct:Eigen::internal::any_unroller
run	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^  static EIGEN_STRONG_INLINE Derived& run(Derived& m)$/;"	f	struct:Eigen::internal::setIdentity_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^  static inline typename Derived::Index run(const Derived& m)$/;"	f	struct:Eigen::internal::first_aligned_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^  static inline typename Derived::Index run(const Derived&)$/;"	f	struct:Eigen::internal::first_aligned_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^  static inline RealScalar run(const MatrixBase<Derived>& m)$/;"	f	struct:Eigen::internal::lpNorm_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^  static inline ResScalar run(const MatrixBase<T>& a, const MatrixBase<U>& b)$/;"	f	struct:Eigen::internal::dot_nocheck
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^  static inline typename NumTraits<typename traits<Derived>::Scalar>::Real run(const MatrixBase<Derived>& m)$/;"	f	struct:Eigen::internal::lpNorm_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived& y, const typename Derived::RealScalar& prec)$/;"	f	struct:Eigen::internal::isApprox_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived& y, const typename Derived::RealScalar& prec)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_object_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived& y, const typename Derived::RealScalar&)$/;"	f	struct:Eigen::internal::isApprox_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived&, const typename Derived::RealScalar&)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_object_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const typename Derived::RealScalar& y, const typename Derived::RealScalar& prec)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_scalar_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const typename Derived::RealScalar&, const typename Derived::RealScalar&)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_scalar_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  static inline void run(const ProductType& prod, Dest& dest, const typename ProductType::Scalar& alpha)$/;"	f	struct:Eigen::internal::gemv_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  static void run(const ProductType& prod, Dest& dest, const typename ProductType::Scalar& alpha)$/;"	f	struct:Eigen::internal::gemv_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^  static inline void run(PacketType&, const PacketType&) {}$/;"	f	struct:Eigen::internal::palign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^  static inline int run()$/;"	f	struct:Eigen::internal::significant_decimals_default_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline NewType run(const OldType& x)$/;"	f	struct:Eigen::internal::cast_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::abs2_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::imag_default_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::norm1_default_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::real_default_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x, const Scalar& y)$/;"	f	struct:Eigen::internal::hypot_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar&)$/;"	f	struct:Eigen::internal::imag_default_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const std::complex<RealScalar>& x)$/;"	f	struct:Eigen::internal::abs2_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar& run(Scalar& x)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar& run(Scalar& x)$/;"	f	struct:Eigen::internal::real_ref_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run()$/;"	f	struct:Eigen::internal::random_default_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(Scalar x, Scalar y)$/;"	f	struct:Eigen::internal::pow_default_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(Scalar&)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::conj_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::norm1_default_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x, const Scalar& y)$/;"	f	struct:Eigen::internal::atanh2_default_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x, const Scalar& y)$/;"	f	struct:Eigen::internal::pow_default_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x, const Scalar& y)$/;"	f	struct:Eigen::internal::random_default_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar&, const Scalar&)$/;"	f	struct:Eigen::internal::atanh2_default_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline bool run()$/;"	f	struct:Eigen::internal::random_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline const RealScalar& run(const Scalar& x)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline const RealScalar& run(const Scalar& x)$/;"	f	struct:Eigen::internal::real_ref_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  static inline const Scalar run(const Scalar&)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^  static EIGEN_ALWAYS_INLINE void run(Index rows, Index cols)$/;"	f	struct:Eigen::internal::check_rows_cols_for_overflow
run	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^  static EIGEN_ALWAYS_INLINE void run(Index, Index)$/;"	f	struct:Eigen::internal::check_rows_cols_for_overflow
run	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^  static inline void run(MatrixTypeA& a, MatrixTypeB& b)$/;"	f	struct:Eigen::internal::matrix_swap_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^  static void run(DenseBase<Derived>& _this, Index rows, Index cols)$/;"	f	struct:Eigen::internal::conservative_resize_like_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^  static void run(DenseBase<Derived>& _this, Index size)$/;"	f	struct:Eigen::internal::conservative_resize_like_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^  static void run(DenseBase<Derived>& _this, const DenseBase<OtherDerived>& other)$/;"	f	struct:Eigen::internal::conservative_resize_like_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE PacketScalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_vec_unroller
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE PacketScalar run(const Derived &mat, const Func&)$/;"	f	struct:Eigen::internal::redux_vec_unroller
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_novec_unroller
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func&)$/;"	f	struct:Eigen::internal::redux_novec_unroller
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived& mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived&, const Func&) { return Scalar(); }$/;"	f	struct:Eigen::internal::redux_novec_unroller
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^  static Scalar run(const Derived& mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^  static inline PacketScalar run(const PacketScalar& x) { return preverse(x); }$/;"	f	struct:Eigen::internal::reverse_packet_cond
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^  static inline PacketScalar run(const PacketScalar& x) { return x; }$/;"	f	struct:Eigen::internal::reverse_packet_cond
run	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^  static inline void run(Derived1 &, const Derived2 &) {}$/;"	f	struct:Eigen::internal::triangular_assignment_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^  static inline void run(Derived1 &dst, const Derived2 &src)$/;"	f	struct:Eigen::internal::triangular_assignment_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  static void run(const Lhs& lhs, Rhs& rhs)$/;"	f	struct:Eigen::internal::triangular_solver_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  static void run(const Lhs& lhs, Rhs& rhs)$/;"	f	struct:Eigen::internal::triangular_solver_unroller
run	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  static void run(const Lhs&, Rhs&) {}$/;"	f	struct:Eigen::internal::triangular_solver_unroller
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    static void run(const Derived& dst, const OtherDerived& other)$/;"	f	struct:Eigen::internal::checkTransposeAliasing_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    static void run(const Derived&, const OtherDerived&)$/;"	f	struct:Eigen::internal::checkTransposeAliasing_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^  static bool run(const Scalar* dest, const CwiseBinaryOp<BinOp,DerivedA,DerivedB>& src)$/;"	f	struct:Eigen::internal::check_transpose_aliasing_run_time_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^  static bool run(const Scalar* dest, const OtherDerived& src)$/;"	f	struct:Eigen::internal::check_transpose_aliasing_run_time_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^  static void run(MatrixType& m) {$/;"	f	struct:Eigen::internal::inplace_transpose_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^  static inline void run(Derived1 &, const Derived2 &) {}$/;"	f	struct:Eigen::internal::triangular_assignment_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^  static inline void run(Derived1 &dst, const Derived2 &src)$/;"	f	struct:Eigen::internal::triangular_assignment_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^  static inline void run(const Derived &mat, Visitor& visitor)$/;"	f	struct:Eigen::internal::visitor_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^  static inline void run(const Derived& mat, Visitor& visitor)$/;"	f	struct:Eigen::internal::visitor_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet2cf& first, const Packet2cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4f& first, const Packet4f& second)$/;"	f	struct:Eigen::internal::palign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4i& first, const Packet4i& second)$/;"	f	struct:Eigen::internal::palign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE static void run(Packet2cf& first, const Packet2cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet1cd& \/*first*\/, const Packet1cd& \/*second*\/)$/;"	f	struct:Eigen::internal::palign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet2cf& first, const Packet2cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet2d& first, const Packet2d& second)$/;"	f	struct:Eigen::internal::palign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4f& first, const Packet4f& second)$/;"	f	struct:Eigen::internal::palign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4i& first, const Packet4i& second)$/;"	f	struct:Eigen::internal::palign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index \/*row*\/, Index \/*col*\/, const Lhs& lhs, const Rhs& rhs, typename Lhs::Scalar &res)$/;"	f	struct:Eigen::internal::product_coeff_vectorized_dyn_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index \/*row*\/, Index col, const Lhs& lhs, const Rhs& rhs, typename Lhs::Scalar &res)$/;"	f	struct:Eigen::internal::product_coeff_vectorized_dyn_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index \/*col*\/, const Lhs& lhs, const Rhs& rhs, typename Lhs::Scalar &res)$/;"	f	struct:Eigen::internal::product_coeff_vectorized_dyn_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, Packet &res)$/;"	f	struct:Eigen::internal::product_packet_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, Packet& res)$/;"	f	struct:Eigen::internal::product_packet_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, RetScalar &res)$/;"	f	struct:Eigen::internal::product_coeff_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, RetScalar& res)$/;"	f	struct:Eigen::internal::product_coeff_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, typename Lhs::PacketScalar &pres)$/;"	f	struct:Eigen::internal::product_coeff_vectorized_unroller
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, typename Lhs::Scalar &res)$/;"	f	struct:Eigen::internal::product_coeff_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, typename Lhs::Scalar &res)$/;"	f	struct:Eigen::internal::product_coeff_vectorized_dyn_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    EIGEN_ALWAYS_INLINE static void run(const CJ& cj, A& a, B& b, C& c, T& \/*t*\/)$/;"	f	struct:Eigen::internal::gebp_madd_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    EIGEN_ALWAYS_INLINE static void run(const CJ& cj, T& a, T& b, T& c, T& t)$/;"	f	struct:Eigen::internal::gebp_madd_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  static EIGEN_STRONG_INLINE void run($/;"	f	struct:Eigen::internal::general_matrix_matrix_product
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^static void run(Index rows, Index cols, Index depth,$/;"	f	struct:Eigen::internal::general_matrix_matrix_product
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  static EIGEN_STRONG_INLINE void run(Index size, Index depth,const LhsScalar* _lhs, Index lhsStride,$/;"	f	struct:Eigen::internal::general_matrix_matrix_triangular_product
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  static EIGEN_STRONG_INLINE void run(Index size, Index depth,const LhsScalar* lhs, Index lhsStride,$/;"	f	struct:Eigen::internal::general_matrix_matrix_triangular_product
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  static void run(MatrixType& mat, const ProductType& prod, const typename MatrixType::Scalar& alpha)$/;"	f	struct:Eigen::general_product_to_triangular_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^EIGEN_DONT_INLINE void general_matrix_vector_product<Index,LhsScalar,ColMajor,ConjugateLhs,RhsScalar,ConjugateRhs,Version>::run($/;"	f	class:Eigen::internal::general_matrix_vector_product
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixVector.h	/^EIGEN_DONT_INLINE void general_matrix_vector_product<Index,LhsScalar,RowMajor,ConjugateLhs,RhsScalar,ConjugateRhs,Version>::run($/;"	f	class:Eigen::internal::general_matrix_vector_product
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  static EIGEN_STRONG_INLINE void run($/;"	f	struct:Eigen::internal::product_selfadjoint_matrix
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^EIGEN_DONT_INLINE void product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,false,ConjugateLhs, RhsStorageOrder,true,ConjugateRhs,ColMajor>::run($/;"	f	class:Eigen::internal::product_selfadjoint_matrix
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^EIGEN_DONT_INLINE void product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,true,ConjugateLhs, RhsStorageOrder,false,ConjugateRhs,ColMajor>::run($/;"	f	class:Eigen::internal::product_selfadjoint_matrix
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^EIGEN_DONT_INLINE void selfadjoint_matrix_vector_product<Scalar,Index,StorageOrder,UpLo,ConjugateLhs,ConjugateRhs,Version>::run($/;"	f	class:Eigen::internal::selfadjoint_matrix_vector_product
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointProduct.h	/^  static void run(Index size, Scalar* mat, Index stride, const Scalar* vecX, const Scalar* vecY, const Scalar& alpha)$/;"	f	struct:Eigen::selfadjoint_rank1_update
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointProduct.h	/^  static void run(MatrixType& mat, const OtherType& other, const typename MatrixType::Scalar& alpha)$/;"	f	struct:Eigen::selfadjoint_product_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointRank2Update.h	/^  static void run(Scalar* mat, Index stride, const UType& u, const VType& v, const Scalar& alpha)$/;"	f	struct:Eigen::internal::selfadjoint_rank2_update_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^                                                        RhsStorageOrder,ConjugateRhs,ColMajor,Version>::run($/;"	f	class:Eigen::internal::product_triangular_matrix_matrix
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  static EIGEN_STRONG_INLINE void run($/;"	f	struct:Eigen::internal::product_triangular_matrix_matrix
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^  ::run(Index _rows, Index _cols, const LhsScalar* _lhs, Index lhsStride,$/;"	f	class:Eigen::internal::triangular_matrix_vector_product
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^  static void run(const TriangularProduct<Mode,true,Lhs,false,Rhs,true>& prod, Dest& dest, const typename TriangularProduct<Mode,true,Lhs,false,Rhs,true>::Scalar& alpha)$/;"	f	struct:Eigen::internal::trmv_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverMatrix.h	/^  static void run($/;"	f	struct:Eigen::internal::triangular_solve_matrix
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverMatrix.h	/^EIGEN_DONT_INLINE void triangular_solve_matrix<Scalar,Index,OnTheLeft,Mode,Conjugate,TriStorageOrder,ColMajor>::run($/;"	f	class:Eigen::internal::triangular_solve_matrix
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverMatrix.h	/^EIGEN_DONT_INLINE void triangular_solve_matrix<Scalar,Index,OnTheRight,Mode,Conjugate,TriStorageOrder,ColMajor>::run($/;"	f	class:Eigen::internal::triangular_solve_matrix
run	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverVector.h	/^  static void run(Index size, const LhsScalar* _lhs, Index lhsStride, RhsScalar* rhs)$/;"	f	struct:Eigen::internal::triangular_solve_vector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  static EIGEN_STRONG_INLINE To run(const From& x) { return x; }$/;"	f	struct:Eigen::internal::get_factor
run	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  static EIGEN_STRONG_INLINE typename NumTraits<Scalar>::Real run(const Scalar& x) { return numext::real(x); }$/;"	f	struct:Eigen::internal::get_factor
run	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  static const typename T::Scalar* run(const T& m)$/;"	f	struct:Eigen::internal::extract_data_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/util/BlasUtil.h	/^  static typename T::Scalar* run(const T&) { return 0; }$/;"	f	struct:Eigen::internal::extract_data_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^  static inline void run(const T* start, const T* end, T* target)$/;"	f	struct:Eigen::internal::smart_copy_helper
run	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  static inline void run(Quaternion<Scalar>& q, const Other& mat)$/;"	f	struct:Eigen::ei_quaternion_assign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  static inline void run(Quaternion<Scalar>& q, const Other& vec)$/;"	f	struct:Eigen::ei_quaternion_assign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^    static inline void run(Transform *transform, const MatrixBase<OtherDerived>& other)$/;"	f	struct:Eigen::Transform::construct_from_matrix
run	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  static ResultType run(const TransformType& tr, const Other& other)$/;"	f	struct:Eigen::ei_transform_product_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^  static void run(ComplexSchur<MatrixType>& _this, const MatrixType& matrix, bool computeU)$/;"	f	struct:Eigen::internal::complex_schur_reduce_to_hessenberg
run	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^  run(const MatrixBase<Derived>& m)$/;"	f	class:Eigen::internal::eigenvalues_selector::MatrixBase
run	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline void run(SolverType& eig, const typename SolverType::MatrixType& A, int options)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
run	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline void run(SolverType& solver, const MatrixType& mat, int options)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
run	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  static void run(MatrixType& mat, DiagonalType& diag, SubDiagonalType& subdiag, bool extractQ)$/;"	f	struct:Eigen::internal::tridiagonalization_inplace_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  static void run(MatrixType& mat, DiagonalType& diag, SubDiagonalType&, bool extractQ)$/;"	f	struct:Eigen::internal::tridiagonalization_inplace_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  static const type& run (const TransformType& x) { return x.matrix(); }$/;"	f	struct:Eigen::internal::take_matrix_for_product
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  static const type& run(const type &x) { return x; }$/;"	f	struct:Eigen::internal::take_matrix_for_product
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  static type run (const TransformType& x) { return x.affine(); }$/;"	f	struct:Eigen::internal::take_matrix_for_product
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	/^  run(const VectorLhs& lhs, const VectorRhs& rhs)$/;"	f	struct:Eigen::internal::cross3_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	/^  static inline VectorType run(const Derived& src)$/;"	f	struct:Eigen::internal::unitOrthogonal_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  static EIGEN_STRONG_INLINE Quaternion<Scalar> run(const QuaternionBase<Derived1>& a, const QuaternionBase<Derived2>& b){$/;"	f	struct:Eigen::internal::quat_product
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  template<class Derived> static inline void run(QuaternionBase<Derived>& q, const Other& mat)$/;"	f	struct:Eigen::internal::quaternionbase_assign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  template<class Derived> static inline void run(QuaternionBase<Derived>& q, const Other& vec)$/;"	f	struct:Eigen::internal::quaternionbase_assign_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^  static EIGEN_STRONG_INLINE ReturnType run(const RotationDerived& r, const OtherVectorType& v)$/;"	f	struct:Eigen::internal::rotation_base_generic_product_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^  static inline ReturnType run(const RotationDerived& r, const DiagonalMatrix<Scalar,Dim,MaxDim>& m)$/;"	f	struct:Eigen::internal::rotation_base_generic_product_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^  static inline ReturnType run(const RotationDerived& r, const MatrixType& m)$/;"	f	struct:Eigen::internal::rotation_base_generic_product_selector
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  static EIGEN_STRONG_INLINE ResultType run(const TransformType& T, const MatrixType& other)$/;"	f	struct:Eigen::internal::transform_right_product_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  static ResultType run(const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::transform_transform_product_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  static ResultType run(const Other& other, const TransformType& tr)$/;"	f	struct:Eigen::internal::transform_left_product_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  static ResultType run(const Other& other,const TransformType& tr)$/;"	f	struct:Eigen::internal::transform_left_product_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  static inline AffinePart run(MatrixType& m)$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  static inline ConstAffinePart run(const MatrixType& m)$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  static inline MatrixType& run(MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  static inline const MatrixType& run(const MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  static inline void run(Transform<typename Other::Scalar,Dim,AffineCompact,Options> *transform, const Other& other)$/;"	f	struct:Eigen::internal::transform_construct_from_matrix
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  static inline void run(Transform<typename Other::Scalar,Dim,Mode,Options> *transform, const Other& other)$/;"	f	struct:Eigen::internal::transform_construct_from_matrix
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  static inline void run(const TransformType& m, TransformType& res)$/;"	f	struct:Eigen::internal::projective_transform_inverse
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  static inline void run(const TransformType&, TransformType&)$/;"	f	struct:Eigen::internal::projective_transform_inverse
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/arch/Geometry_SSE.h	/^  run(const VectorLhs& lhs, const VectorRhs& rhs)$/;"	f	struct:Eigen::internal::cross3_impl
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/arch/Geometry_SSE.h	/^  static inline Quaternion<double> run(const QuaternionBase<Derived>& _a, const QuaternionBase<OtherDerived>& _b)$/;"	f	struct:Eigen::internal::quat_product
run	./Thirdparty/sparseicp/include/Eigen/src/Geometry/arch/Geometry_SSE.h	/^  static inline Quaternion<float> run(const QuaternionBase<Derived>& _a, const QuaternionBase<OtherDerived>& _b)$/;"	f	struct:Eigen::internal::quat_product
run	./Thirdparty/sparseicp/include/Eigen/src/LU/Determinant.h	/^  static inline typename traits<Derived>::Scalar run(const Derived& m)$/;"	f	struct:Eigen::internal::determinant_impl
run	./Thirdparty/sparseicp/include/Eigen/src/LU/Determinant.h	/^  static typename traits<Derived>::Scalar run(const Derived& m)$/;"	f	struct:Eigen::internal::determinant_impl
run	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^  static inline void run($/;"	f	struct:Eigen::internal::compute_inverse_and_det_with_check
run	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^  static inline void run(const MatrixType& matrix, ResultType& result)$/;"	f	struct:Eigen::internal::compute_inverse
run	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^  static void run(const MatrixType& matrix, ResultType& result)$/;"	f	struct:Eigen::internal::compute_inverse_size4
run	./Thirdparty/sparseicp/include/Eigen/src/LU/arch/Inverse_SSE.h	/^  static void run(const MatrixType& matrix, ResultType& result)$/;"	f	struct:Eigen::internal::compute_inverse_size4
run	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    static Index run( _MKL_DSS_HANDLE_t pt, Index maxfct, Index mnum, Index type, Index phase, Index n, void *a,$/;"	f	struct:Eigen::internal::pardiso_run_selector
run	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, ColPivHouseholderQRPreconditioner>& svd, const MatrixType& matrix)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, FullPivHouseholderQRPreconditioner>& svd, const MatrixType& matrix)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, HouseholderQRPreconditioner>& svd, const MatrixType& matrix)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, QRPreconditioner>&, const MatrixType&)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  static void run(typename SVD::WorkMatrixType& work_matrix, SVD& svd, Index p, Index q)$/;"	f	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
run	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^  static void run(typename SVD::WorkMatrixType&, SVD&, Index, Index) {}$/;"	f	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
run	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  static void run(const Lhs& lhs, const Rhs& rhs, ResultType& res)$/;"	f	struct:Eigen::internal::conservative_sparse_sparse_product_selector
run	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void run(const SparseLhsType& lhs, const DenseRhsType& rhs, DenseResType& res, const typename Res::Scalar& alpha)$/;"	f	struct:Eigen::internal::sparse_time_dense_product_impl
run	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^  static void run(const Lhs& lhs, const Rhs& rhs, ResultType& res, const RealScalar& tolerance)$/;"	f	struct:Eigen::internal::sparse_sparse_product_with_pruning_selector
run	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^  static void run(Dest& dst, const Src& src) {$/;"	f	struct:Eigen::internal::sparse_vector_assign_selector
run	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	/^  static void run(const Lhs& lhs, Rhs& other)$/;"	f	struct:Eigen::internal::sparse_solve_triangular_selector
run	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	/^  static void run(const Lhs& lhs, Rhs& other)$/;"	f	struct:Eigen::internal::sparse_solve_triangular_sparse_selector
run	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^EIGEN_DONT_INLINE void LU_kernel_bmod<1>::run(const int \/*segsize*\/, BlockScalarVector& dense, ScalarVector& \/*tempv*\/, ScalarVector& lusup, Index& luptr,$/;"	f	class:Eigen::internal::LU_kernel_bmod
run	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^EIGEN_DONT_INLINE void LU_kernel_bmod<SegSizeAtCompileTime>::run(const int segsize, BlockScalarVector& dense, ScalarVector& tempv, ScalarVector& lusup, Index& luptr, const Index lda,$/;"	f	class:Eigen::internal::LU_kernel_bmod
run	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  static void run(MatrixType& mat, SluMatrix& res)$/;"	f	struct:Eigen::SluMatrixMapHelper
s	./Thirdparty/g2o/g2o/types/sim3.h	/^    double s;$/;"	m	struct:g2o::Sim3
s	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^    Scalar s() const { return m_s; }$/;"	f	class:Eigen::JacobiRotation
s	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^    Scalar& s() { return m_s; }$/;"	f	class:Eigen::JacobiRotation
sample	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline VectorType sample() const$/;"	f	class:Eigen::AlignedBox
save	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::save(const std::string &filename) const$/;"	f	class:DBoW2::TemplatedVocabulary
save	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::save(cv::FileStorage &f,$/;"	f	class:DBoW2::TemplatedVocabulary
save	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::save(const char* filename, int level) const$/;"	f	class:g2o::OptimizableGraph
save	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::save(ostream& os, int level) const$/;"	f	class:g2o::OptimizableGraph
saveEdge	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::saveEdge(std::ostream& os, OptimizableGraph::Edge* e) const$/;"	f	class:g2o::OptimizableGraph
saveHessian	./Thirdparty/g2o/g2o/core/block_solver.hpp	/^bool BlockSolver<Traits>::saveHessian(const std::string& fileName) const$/;"	f	class:g2o::BlockSolver
saveIndex	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		void saveIndex(FILE* stream)$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
saveM	./Thirdparty/DBoW2/DBoW2/BowVector.cpp	/^void BowVector::saveM(const std::string &filename, size_t W) const$/;"	f	class:DBoW2::BowVector
saveSubset	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::saveSubset(ostream& os, HyperGraph::EdgeSet& eset)$/;"	f	class:g2o::OptimizableGraph
saveSubset	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::saveSubset(ostream& os, HyperGraph::VertexSet& vset, int level)$/;"	f	class:g2o::OptimizableGraph
saveToTextFile	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::saveToTextFile(const std::string &filename) const$/;"	f	class:DBoW2::TemplatedVocabulary
saveVertex	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::saveVertex(std::ostream& os, OptimizableGraph::Vertex* v) const$/;"	f	class:g2o::OptimizableGraph
save_tree	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		void save_tree(FILE* stream, NodePtr tree)$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
save_value	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	void save_value(FILE* stream, const T& value, size_t count = 1)$/;"	f	namespace:nanoflann
save_value	./Thirdparty/sparseicp/include/nanoflann.hpp	/^	void save_value(FILE* stream, const std::vector<T>& value)$/;"	f	namespace:nanoflann
scalar_abs2_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_abs2_op {$/;"	s	namespace:Eigen::internal
scalar_abs_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_abs_op {$/;"	s	namespace:Eigen::internal
scalar_acos_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_acos_op {$/;"	s	namespace:Eigen::internal
scalar_add_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline scalar_add_op(const Scalar& other) : m_other(other) { }$/;"	f	struct:Eigen::internal::scalar_add_op
scalar_add_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline scalar_add_op(const scalar_add_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_add_op
scalar_add_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct scalar_add_op {$/;"	s	namespace:Eigen::internal
scalar_asin_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_asin_op {$/;"	s	namespace:Eigen::internal
scalar_binary_pow_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar, typename OtherScalar> struct scalar_binary_pow_op {$/;"	s	namespace:Eigen::internal
scalar_boolean_and_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct scalar_boolean_and_op {$/;"	s	namespace:Eigen::internal
scalar_boolean_or_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct scalar_boolean_or_op {$/;"	s	namespace:Eigen::internal
scalar_cast_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct scalar_cast_op {$/;"	s	namespace:Eigen::internal
scalar_conj_product_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename LhsScalar,typename RhsScalar> struct scalar_conj_product_op {$/;"	s	namespace:Eigen::internal
scalar_conjugate_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_conjugate_op {$/;"	s	namespace:Eigen::internal
scalar_constant_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE scalar_constant_op(const Scalar& other) : m_other(other) { }$/;"	f	struct:Eigen::internal::scalar_constant_op
scalar_constant_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE scalar_constant_op(const scalar_constant_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_constant_op
scalar_constant_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct scalar_constant_op {$/;"	s	namespace:Eigen::internal
scalar_cos_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_cos_op {$/;"	s	namespace:Eigen::internal
scalar_cube_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct scalar_cube_op {$/;"	s	namespace:Eigen::internal
scalar_difference_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_difference_op {$/;"	s	namespace:Eigen::internal
scalar_exp_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_exp_op {$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl {};$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl<Scalar, false, false>$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl<Scalar, false, true>$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl<Scalar, true, false>$/;"	s	namespace:Eigen::internal
scalar_fuzzy_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_impl : scalar_fuzzy_default_impl<Scalar, NumTraits<Scalar>::IsComplex, NumTraits<Scalar>::IsInteger> {};$/;"	s	namespace:Eigen::internal
scalar_fuzzy_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^template<> struct scalar_fuzzy_impl<bool>$/;"	s	namespace:Eigen::internal
scalar_hypot_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_hypot_op {$/;"	s	namespace:Eigen::internal
scalar_identity_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_identity_op {$/;"	s	namespace:Eigen::internal
scalar_imag_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct scalar_imag_op {$/;"	s	namespace:Eigen::internal
scalar_imag_ref_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct scalar_imag_ref_op {$/;"	s	namespace:Eigen::internal
scalar_inverse_mult_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  scalar_inverse_mult_op(const Scalar& other) : m_other(other) {}$/;"	f	struct:Eigen::internal::scalar_inverse_mult_op
scalar_inverse_mult_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct scalar_inverse_mult_op {$/;"	s	namespace:Eigen::internal
scalar_inverse_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct scalar_inverse_op {$/;"	s	namespace:Eigen::internal
scalar_log_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_log_op {$/;"	s	namespace:Eigen::internal
scalar_max_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_max_op {$/;"	s	namespace:Eigen::internal
scalar_max_op	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Cwise.h	/^    const EIGEN_CWISE_BINOP_RETURN_TYPE(internal::scalar_max_op)$/;"	f	class:Eigen::Cwise
scalar_min_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_min_op {$/;"	s	namespace:Eigen::internal
scalar_min_op	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Cwise.h	/^    const EIGEN_CWISE_BINOP_RETURN_TYPE(internal::scalar_min_op)$/;"	f	class:Eigen::Cwise
scalar_multiple2_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE scalar_multiple2_op(const Scalar2& other) : m_other(other) { }$/;"	f	struct:Eigen::internal::scalar_multiple2_op
scalar_multiple2_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE scalar_multiple2_op(const scalar_multiple2_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_multiple2_op
scalar_multiple2_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct scalar_multiple2_op {$/;"	s	namespace:Eigen::internal
scalar_multiple_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE scalar_multiple_op(const Scalar& other) : m_other(other) { }$/;"	f	struct:Eigen::internal::scalar_multiple_op
scalar_multiple_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE scalar_multiple_op(const scalar_multiple_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_multiple_op
scalar_multiple_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct scalar_multiple_op {$/;"	s	namespace:Eigen::internal
scalar_opposite_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_opposite_op {$/;"	s	namespace:Eigen::internal
scalar_pow_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline scalar_pow_op(const Scalar& exponent) : m_exponent(exponent) {}$/;"	f	struct:Eigen::internal::scalar_pow_op
scalar_pow_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  inline scalar_pow_op(const scalar_pow_op& other) : m_exponent(other.m_exponent) { }$/;"	f	struct:Eigen::internal::scalar_pow_op
scalar_pow_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct scalar_pow_op {$/;"	s	namespace:Eigen::internal
scalar_product_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename LhsScalar,typename RhsScalar> struct scalar_product_op {$/;"	s	namespace:Eigen::internal
scalar_product_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T, typename U> struct scalar_product_traits$/;"	s	namespace:Eigen
scalar_product_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct scalar_product_traits<T,T>$/;"	s	namespace:Eigen
scalar_product_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct scalar_product_traits<T,std::complex<T> >$/;"	s	namespace:Eigen
scalar_product_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct scalar_product_traits<std::complex<T>, T>$/;"	s	namespace:Eigen
scalar_quotient1_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE scalar_quotient1_op(const Scalar& other) : m_other(other) {}$/;"	f	struct:Eigen::internal::scalar_quotient1_op
scalar_quotient1_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE scalar_quotient1_op(const scalar_quotient1_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_quotient1_op
scalar_quotient1_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct scalar_quotient1_op {$/;"	s	namespace:Eigen::internal
scalar_quotient_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename LhsScalar,typename RhsScalar> struct scalar_quotient_op {$/;"	s	namespace:Eigen::internal
scalar_random_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Random.h	/^template<typename Scalar> struct scalar_random_op {$/;"	s	namespace:Eigen::internal
scalar_real_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct scalar_real_op {$/;"	s	namespace:Eigen::internal
scalar_real_ref_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct scalar_real_ref_op {$/;"	s	namespace:Eigen::internal
scalar_sin_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_sin_op {$/;"	s	namespace:Eigen::internal
scalar_sqrt_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_sqrt_op {$/;"	s	namespace:Eigen::internal
scalar_square_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^struct scalar_square_op {$/;"	s	namespace:Eigen::internal
scalar_sum_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_sum_op {$/;"	s	namespace:Eigen::internal
scalar_tan_op	./Thirdparty/sparseicp/include/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_tan_op {$/;"	s	namespace:Eigen::internal
scale	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  void SparseBlockMatrix<MatrixType>::scale(double a_) {$/;"	f	class:g2o::SparseBlockMatrix
scale	./Thirdparty/g2o/g2o/types/sim3.h	/^    inline const double& scale() const {return s;}$/;"	f	struct:g2o::Sim3
scale	./Thirdparty/g2o/g2o/types/sim3.h	/^    inline double& scale() {return s;}$/;"	f	struct:g2o::Sim3
scale	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::scale(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
scale	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^inline Transform<Scalar,Dim>& Transform<Scalar,Dim>::scale(Scalar s)$/;"	f	class:Eigen::Transform
scale	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::scale(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
scale	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::scale(const Scalar& s)$/;"	f	class:Eigen::Transform
scale	./include/Registrating.h	/^		float scale;$/;"	m	class:ORB_SLAM2::Registrating
scaleAndAddTo	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    template<typename Dest> void scaleAndAddTo(Dest& dest, const Scalar& alpha) const$/;"	f	class:Eigen::GeneralProduct
scaleAndAddTo	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    template<typename Dest> void scaleAndAddTo(Dest& dst, const Scalar& alpha) const$/;"	f	class:Eigen::GeneralProduct
scaleAndAddTo	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    inline void scaleAndAddTo(Dest& dst, const Scalar& a_alpha) const { m_prod.derived().scaleAndAddTo(dst,a_alpha * m_alpha); }$/;"	f	class:Eigen::ScaledProduct
scaleAndAddTo	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    inline void scaleAndAddTo(Dest& dst, const Scalar& alpha) const { derived().scaleAndAddTo(dst,alpha); }$/;"	f	class:Eigen::ProductBase
scaleAndAddTo	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    template<typename Dest> void scaleAndAddTo(Dest& dst, const Scalar& alpha) const$/;"	f	class:Eigen::GeneralProduct
scaleAndAddTo	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  template<typename Dest> void scaleAndAddTo(Dest& dst, const Scalar& alpha) const$/;"	f	struct:Eigen::SelfadjointProductMatrix
scaleAndAddTo	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  template<typename Dest> void scaleAndAddTo(Dest& dest, const Scalar& alpha) const$/;"	f	struct:Eigen::SelfadjointProductMatrix
scaleAndAddTo	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  template<typename Dest> void scaleAndAddTo(Dest& dst, const Scalar& alpha) const$/;"	f	struct:Eigen::TriangularProduct
scaleAndAddTo	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^  template<typename Dest> void scaleAndAddTo(Dest& dst, const Scalar& alpha) const$/;"	f	struct:Eigen::TriangularProduct
scaleAndAddTo	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    template<typename Dest> void scaleAndAddTo(Dest& dest, const Scalar& alpha) const$/;"	f	class:Eigen::DenseTimeSparseProduct
scaleAndAddTo	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    template<typename Dest> void scaleAndAddTo(Dest& dest, const Scalar& alpha) const$/;"	f	class:Eigen::SparseTimeDenseProduct
scaleAndAddTo	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    template<typename Dest> void scaleAndAddTo(Dest& \/*dest*\/, const Scalar& \/*alpha*\/) const$/;"	f	class:Eigen::DenseTimeSparseSelfAdjointProduct
scaleAndAddTo	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    template<typename Dest> void scaleAndAddTo(Dest& dest, const Scalar& alpha) const$/;"	f	class:Eigen::SparseSelfAdjointTimeDenseProduct
scaleFactor	./include/ORBextractor.h	/^    double scaleFactor;$/;"	m	class:ORB_SLAM2::ORBextractor
scale_	./4pcs/Registration.h	/^            float scale_;$/;"	m	class:pcl::FPCS::FPCSRegistration
scale_gt_	./4pcs/Registration.h	/^            float scale_gt_;$/;"	m	class:pcl::FPCS::FPCSRegistration
schur	./Thirdparty/g2o/g2o/core/block_solver.h	/^      virtual bool schur() { return _doSchur;}$/;"	f	class:g2o::BlockSolver
scomplex	./Thirdparty/sparseicp/include/Eigen/src/Core/util/MKL_support.h	/^typedef std::complex<float>  scomplex;$/;"	t	namespace:Eigen
score	./Thirdparty/DBoW2/DBoW2/ScoringObject.cpp	/^double BhattacharyyaScoring::score(const BowVector &v1, $/;"	f	class:BhattacharyyaScoring
score	./Thirdparty/DBoW2/DBoW2/ScoringObject.cpp	/^double ChiSquareScoring::score(const BowVector &v1, const BowVector &v2) $/;"	f	class:ChiSquareScoring
score	./Thirdparty/DBoW2/DBoW2/ScoringObject.cpp	/^double DotProductScoring::score(const BowVector &v1, $/;"	f	class:DotProductScoring
score	./Thirdparty/DBoW2/DBoW2/ScoringObject.cpp	/^double KLScoring::score(const BowVector &v1, const BowVector &v2) const$/;"	f	class:KLScoring
score	./Thirdparty/DBoW2/DBoW2/ScoringObject.cpp	/^double L1Scoring::score(const BowVector &v1, const BowVector &v2) const$/;"	f	class:L1Scoring
score	./Thirdparty/DBoW2/DBoW2/ScoringObject.cpp	/^double L2Scoring::score(const BowVector &v1, const BowVector &v2) const$/;"	f	class:L2Scoring
score	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^inline double TemplatedVocabulary<TDescriptor,F>::score$/;"	f	class:DBoW2::TemplatedVocabulary
score	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    Index score ; \/* the score used to maintain heap, if col is alive *\/$/;"	m	union:internal::colamd_col::__anon348
searchLevel	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		void searchLevel(RESULTSET& result_set, const ElementType* vec, const NodePtr node, DistanceType mindistsq,$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
searchLowerIndex	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index searchLowerIndex(Index key) const$/;"	f	class:Eigen::internal::CompressedStorage
searchLowerIndex	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index searchLowerIndex(size_t start, size_t end, Index key) const$/;"	f	class:Eigen::internal::CompressedStorage
second	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RealPacket second;$/;"	m	struct:Eigen::internal::gebp_traits::DoublePacket
segment	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline ConstSegmentReturnType segment(Index start, Index n) const$/;"	f
segment	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline SegmentReturnType segment(Index start, Index n)$/;"	f
segment	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstFixedSegmentReturnType<N>::Type segment(Index start, Index n = N) const$/;"	f
segment	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedSegmentReturnType<N>::Type segment(Index start, Index n = N)$/;"	f
select	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^DenseBase<Derived>::select(const DenseBase<ThenDerived>& thenMatrix,$/;"	f	class:Eigen::DenseBase
select	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^DenseBase<Derived>::select(const typename ElseDerived::Scalar& thenScalar,$/;"	f	class:Eigen::DenseBase
selector	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^  typedef product_type_selector<rows_select, cols_select, depth_select> selector;$/;"	t	struct:Eigen::internal::product_type
self_t	./Thirdparty/sparseicp/ICP.h	/^        typedef KDTreeAdaptor<MatrixType,DIM,Distance> self_t;$/;"	t	struct:nanoflann::KDTreeAdaptor
self_t	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		typedef KDTreeEigenMatrixAdaptor<MatrixType,DIM,Distance> self_t;$/;"	t	struct:nanoflann::KDTreeEigenMatrixAdaptor
selfadjointView	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^MatrixBase<Derived>::selfadjointView() const$/;"	f	class:Eigen::MatrixBase
selfadjointView	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^MatrixBase<Derived>::selfadjointView()$/;"	f	class:Eigen::MatrixBase
selfadjointView	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    SelfAdjointView<MatrixTypeNestedNonRef,Mode> selfadjointView()$/;"	f	class:Eigen::TriangularView
selfadjointView	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    const SelfAdjointView<MatrixTypeNestedNonRef,Mode> selfadjointView() const$/;"	f	class:Eigen::TriangularView
selfadjointView	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^SparseSelfAdjointView<Derived, UpLo> SparseMatrixBase<Derived>::selfadjointView()$/;"	f	class:Eigen::SparseMatrixBase
selfadjointView	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^const SparseSelfAdjointView<Derived, UpLo> SparseMatrixBase<Derived>::selfadjointView() const$/;"	f	class:Eigen::SparseMatrixBase
selfadjoint_matrix_vector_product	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct selfadjoint_matrix_vector_product$/;"	s	namespace:Eigen::internal
selfadjoint_matrix_vector_product_symv	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	/^struct selfadjoint_matrix_vector_product_symv :$/;"	s	namespace:Eigen::internal
selfadjoint_product_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_product_selector<MatrixType,OtherType,UpLo,false>$/;"	s	namespace:Eigen
selfadjoint_product_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_product_selector<MatrixType,OtherType,UpLo,true>$/;"	s	namespace:Eigen
selfadjoint_rank1_update	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_rank1_update<Scalar,Index,ColMajor,UpLo,ConjLhs,ConjRhs>$/;"	s	namespace:Eigen
selfadjoint_rank1_update	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_rank1_update<Scalar,Index,RowMajor,UpLo,ConjLhs,ConjRhs>$/;"	s	namespace:Eigen
selfadjoint_rank2_update_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointRank2Update.h	/^struct selfadjoint_rank2_update_selector<Scalar,Index,UType,VType,Lower>$/;"	s	namespace:Eigen::internal
selfadjoint_rank2_update_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointRank2Update.h	/^struct selfadjoint_rank2_update_selector<Scalar,Index,UType,VType,Upper>$/;"	s	namespace:Eigen::internal
set	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    struct set  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived()  = src; } };$/;"	s	class:Eigen::GeneralProduct
setAdditionalVectorSpace	./Thirdparty/g2o/g2o/core/solver.cpp	/^void Solver::setAdditionalVectorSpace(size_t s)$/;"	f	class:g2o::Solver
setAlgorithm	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::setAlgorithm(OptimizationAlgorithm* algorithm)$/;"	f	class:g2o::SparseOptimizer
setBlockOrdering	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    void setBlockOrdering(bool blockOrdering) { _blockOrdering = blockOrdering;}$/;"	f	class:g2o::LinearSolverEigen
setBounds	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    void setBounds(Index start, Index end) { m_start = start; m_end = end; }$/;"	f	class:Eigen::internal::AmbiVector
setCholeskyFactor	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^void MarginalCovarianceCholesky::setCholeskyFactor(int n, int* Lp, int* Li, double* Lx, int* permInv)$/;"	f	class:g2o::MarginalCovarianceCholesky
setColInHessian	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        void setColInHessian(int c) { _colInHessian = c;}$/;"	f	class:g2o::OptimizableGraph::Vertex
setComputeBatchStatistics	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::setComputeBatchStatistics(bool computeBatchStatistics)$/;"	f	class:g2o::SparseOptimizer
setConstant	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setConstant(const Scalar& val)$/;"	f	class:Eigen::DenseBase
setConstant	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setConstant(Index nbRows, Index nbCols, const Scalar& val)$/;"	f	class:Eigen::PlainObjectBase
setConstant	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setConstant(Index size, const Scalar& val)$/;"	f	class:Eigen::PlainObjectBase
setConstant	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    TriangularView& setConstant(const Scalar& value)$/;"	f	class:Eigen::TriangularView
setCpuCacheSizes	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline void setCpuCacheSizes(std::ptrdiff_t l1, std::ptrdiff_t l2)$/;"	f	namespace:Eigen
setDelta	./Thirdparty/g2o/g2o/core/robust_kernel.cpp	/^void RobustKernel::setDelta(double delta)$/;"	f	class:g2o::RobustKernel
setDelta	./Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelHuber::setDelta(double delta)$/;"	f	class:g2o::RobustKernelHuber
setDeltaSqr	./Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelHuber::setDeltaSqr(const double &delta, const double &deltaSqr)$/;"	f	class:g2o::RobustKernelHuber
setDeltaSqr	./Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelTukey::setDeltaSqr(const double &deltaSqr, const double &inv)$/;"	f	class:g2o::RobustKernelTukey
setDroptol	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar>::setDroptol(const RealScalar& droptol)$/;"	f	class:Eigen::IncompleteLUT
setEmpty	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline void setEmpty()$/;"	f	class:Eigen::AlignedBox
setEstimate	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    void setEstimate(const EstimateType& et) { _estimate = et; updateCache();}$/;"	f	class:g2o::BaseVertex
setEstimateData	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Vertex::setEstimateData(const double* v)$/;"	f	class:g2o::OptimizableGraph::Vertex
setEstimateData	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        bool setEstimateData(const std::vector<double>& estimate) { $/;"	f	class:g2o::OptimizableGraph::Vertex
setEstimateDataImpl	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        virtual bool setEstimateDataImpl(const double* ) { return false;}$/;"	f	class:g2o::OptimizableGraph::Vertex
setFillfactor	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar>::setFillfactor(int fillfactor)$/;"	f	class:Eigen::IncompleteLUT
setFixed	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  void OptimizableGraph::setFixed(HyperGraph::VertexSet& vset, bool fixed)$/;"	f	class:g2o::OptimizableGraph
setFixed	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        void setFixed(bool fixed) { _fixed = fixed;}$/;"	f	class:g2o::OptimizableGraph::Vertex
setForceStopFlag	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::setForceStopFlag(bool* flag)$/;"	f	class:g2o::SparseOptimizer
setFromTriplets	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^void SparseMatrix<Scalar,_Options,_Index>::setFromTriplets(const InputIterators& begin, const InputIterators& end)$/;"	f	class:Eigen::SparseMatrix
setFromTwoVectors	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Quaternion<Scalar>& Quaternion<Scalar>::setFromTwoVectors(const MatrixBase<Derived1>& a, const MatrixBase<Derived2>& b)$/;"	f	class:Eigen::Quaternion
setFromTwoVectors	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^inline Derived& QuaternionBase<Derived>::setFromTwoVectors(const MatrixBase<Derived1>& a, const MatrixBase<Derived2>& b)$/;"	f	class:Eigen::QuaternionBase
setGlobalStats	./Thirdparty/g2o/g2o/core/batch_stats.cpp	/^  void G2OBatchStatistics::setGlobalStats(G2OBatchStatistics* b)$/;"	f	class:g2o::G2OBatchStatistics
setHessianIndex	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        void setHessianIndex(int ti) { _hessianIndex = ti;}$/;"	f	class:g2o::OptimizableGraph::Vertex
setId	./Thirdparty/g2o/g2o/core/hyper_graph.cpp	/^  void HyperGraph::Edge::setId(int id)$/;"	f	class:g2o::HyperGraph::Edge
setId	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^	  virtual void setId( int newId) { _id=newId; }$/;"	f	class:g2o::HyperGraph::Vertex
setId	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        virtual void setId(int id) {_id = id;}$/;"	f	class:g2o::OptimizableGraph::Vertex
setId	./Thirdparty/g2o/g2o/core/parameter.cpp	/^  void Parameter::setId(int id_)$/;"	f	class:g2o::Parameter
setIdentity	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::setIdentity()$/;"	f	class:Eigen::MatrixBase
setIdentity	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::setIdentity(Index nbRows, Index nbCols)$/;"	f	class:Eigen::MatrixBase
setIdentity	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline void setIdentity() { m_diagonal.setOnes(); }$/;"	f	class:Eigen::DiagonalMatrix
setIdentity	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline void setIdentity(Index size) { m_diagonal.setOnes(size); }$/;"	f	class:Eigen::DiagonalMatrix
setIdentity	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    void setIdentity()$/;"	f	class:Eigen::PermutationBase
setIdentity	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    void setIdentity(Index newSize)$/;"	f	class:Eigen::PermutationBase
setIdentity	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    void setIdentity()$/;"	f	class:Eigen::TranspositionsBase
setIdentity	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Quaternion& setIdentity() { m_coeffs << 0, 0, 0, 1; return *this; }$/;"	f	class:Eigen::Quaternion
setIdentity	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  void setIdentity() { m_matrix.setIdentity(); }$/;"	f	class:Eigen::Transform
setIdentity	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline QuaternionBase& setIdentity() { coeffs() << 0, 0, 0, 1; return *this; }$/;"	f	class:Eigen::QuaternionBase
setIdentity	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  void setIdentity() { m_matrix.setIdentity(); }$/;"	f	class:Eigen::Transform
setIdentity	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void setIdentity()$/;"	f	class:Eigen::SparseMatrix
setIdentity_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^struct setIdentity_impl<Derived, true>$/;"	s	namespace:Eigen::internal
setInformation	./Thirdparty/g2o/g2o/core/base_edge.h	/^      void setInformation(const InformationType& information) { _information = information;}$/;"	f	class:g2o::BaseEdge
setInfos	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    void setInfos(Index m, Index n, ScalarVector& nzval, IndexVector& nzval_colptr, IndexVector& rowind, $/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
setKernel	./Thirdparty/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelScaleDelta::setKernel(const RobustKernelPtr& ptr)$/;"	f	class:g2o::RobustKernelScaleDelta
setLambda	./Thirdparty/g2o/g2o/core/block_solver.hpp	/^bool BlockSolver<Traits>::setLambda(double lambda, bool backup)$/;"	f	class:g2o::BlockSolver
setLength	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence& setLength(Index length)$/;"	f	class:Eigen::HouseholderSequence
setLevel	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        void setLevel(int l) { _level=l;}$/;"	f	class:g2o::OptimizableGraph::Edge
setLevenberg	./Thirdparty/g2o/g2o/core/solver.cpp	/^void Solver::setLevenberg(bool levenberg)$/;"	f	class:g2o::Solver
setLinSpaced	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setLinSpaced(Index newSize, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
setLinSpaced	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setLinSpaced(const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
setMarginalized	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        void setMarginalized(bool marginalized) { _marginalized = marginalized;}$/;"	f	class:g2o::OptimizableGraph::Vertex
setMaxIterations	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComplexEigenSolver& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::ComplexEigenSolver
setMaxIterations	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexSchur& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::ComplexSchur
setMaxIterations	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/EigenSolver.h	/^    EigenSolver& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::EigenSolver
setMaxIterations	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    GeneralizedEigenSolver& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::GeneralizedEigenSolver
setMaxIterations	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^      RealQZ& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::RealQZ
setMaxIterations	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^    RealSchur& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::RealSchur
setMaxIterations	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& setMaxIterations(int maxIters)$/;"	f	class:Eigen::IterativeSolverBase
setMaxTrialsAfterFailure	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^  void OptimizationAlgorithmLevenberg::setMaxTrialsAfterFailure(int max_trials)$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
setMeasurement	./Thirdparty/g2o/g2o/core/base_edge.h	/^      virtual void setMeasurement(const Measurement& m) { _measurement = m;}$/;"	f	class:g2o::BaseEdge
setMeasurementData	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Edge::setMeasurementData(const double *)$/;"	f	class:g2o::OptimizableGraph::Edge
setMeasurementFromState	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Edge::setMeasurementFromState(){$/;"	f	class:g2o::OptimizableGraph::Edge
setMinimalEstimateData	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Vertex::setMinimalEstimateData(const double* v)$/;"	f	class:g2o::OptimizableGraph::Vertex
setMinimalEstimateData	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        bool setMinimalEstimateData(const std::vector<double>& estimate) {$/;"	f	class:g2o::OptimizableGraph::Vertex
setMinimalEstimateDataImpl	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        virtual bool setMinimalEstimateDataImpl(const double* ) { return false;}$/;"	f	class:g2o::OptimizableGraph::Vertex
setMode	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void setMode(CholmodMode mode)$/;"	f	class:Eigen::CholmodDecomposition
setMode	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholesky& setMode(SimplicialCholeskyMode mode)$/;"	f	class:Eigen::SimplicialCholesky
setNbThreads	./Thirdparty/sparseicp/include/Eigen/src/Core/products/Parallelizer.h	/^inline void setNbThreads(int v)$/;"	f	namespace:Eigen
setNext	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        void setNext(Data* next_) { _next = next_; }$/;"	f	class:g2o::OptimizableGraph::Data
setNodeWeights	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::setNodeWeights$/;"	f	class:DBoW2::TemplatedVocabulary
setNull	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline void setNull()$/;"	f	class:Eigen::AlignedBox
setNull	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline void setNull() { setEmpty(); }$/;"	f	class:Eigen::AlignedBox
setOnes	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setOnes()$/;"	f	class:Eigen::DenseBase
setOnes	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setOnes(Index nbRows, Index nbCols)$/;"	f	class:Eigen::PlainObjectBase
setOnes	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setOnes(Index newSize)$/;"	f	class:Eigen::PlainObjectBase
setOnes	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    TriangularView& setOnes() { return setConstant(Scalar(1)); }$/;"	f	class:Eigen::TriangularView
setOptimizer	./Thirdparty/g2o/g2o/core/optimization_algorithm.cpp	/^void OptimizationAlgorithm::setOptimizer(SparseOptimizer* optimizer)$/;"	f	class:g2o::OptimizationAlgorithm
setOptimizer	./Thirdparty/g2o/g2o/core/solver.cpp	/^void Solver::setOptimizer(SparseOptimizer* optimizer)$/;"	f	class:g2o::Solver
setParameterId	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Edge::setParameterId(int argNum, int paramId){$/;"	f	class:g2o::OptimizableGraph::Edge
setPivotThreshold	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void setPivotThreshold(const RealScalar& tol) { m_tolerance = tol; }$/;"	f	class:Eigen::SPQR
setPivotThreshold	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    void setPivotThreshold(const RealScalar& thresh)$/;"	f	class:Eigen::SparseLU
setPivotThreshold	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    void setPivotThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::SparseQR
setRandom	./Thirdparty/sparseicp/include/Eigen/src/Core/Random.h	/^PlainObjectBase<Derived>::setRandom(Index nbRows, Index nbCols)$/;"	f	class:Eigen::PlainObjectBase
setRandom	./Thirdparty/sparseicp/include/Eigen/src/Core/Random.h	/^PlainObjectBase<Derived>::setRandom(Index newSize)$/;"	f	class:Eigen::PlainObjectBase
setRandom	./Thirdparty/sparseicp/include/Eigen/src/Core/Random.h	/^inline Derived& DenseBase<Derived>::setRandom()$/;"	f	class:Eigen::DenseBase
setRenamedTypesFromString	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::setRenamedTypesFromString(const std::string& types)$/;"	f	class:g2o::OptimizableGraph
setRobustKernel	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  void OptimizableGraph::Edge::setRobustKernel(RobustKernel* ptr)$/;"	f	class:g2o::OptimizableGraph::Edge
setRotation	./Thirdparty/g2o/g2o/types/se3quat.h	/^      void setRotation(const Quaterniond& r_) {_r=r_;}$/;"	f	class:g2o::SE3Quat
setSPQROrdering	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void setSPQROrdering(int ord) { m_ordering = ord;}$/;"	f	class:Eigen::SPQR
setScalarType	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  void setScalarType()$/;"	f	struct:Eigen::SluMatrix
setSchur	./Thirdparty/g2o/g2o/core/block_solver.h	/^      virtual void setSchur(bool s) { _doSchur = s;}$/;"	f	class:g2o::BlockSolver
setScoringType	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::setScoringType(ScoringType type)$/;"	f	class:DBoW2::TemplatedVocabulary
setShift	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    Derived& setShift(const RealScalar& offset)$/;"	f	class:Eigen::CholmodBase
setShift	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence& setShift(Index shift)$/;"	f	class:Eigen::HouseholderSequence
setShift	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Derived& setShift(const RealScalar& offset, const RealScalar& scale = 1)$/;"	f	class:Eigen::SimplicialCholeskyBase
setStorageType	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  void setStorageType(Stype_t t)$/;"	f	struct:Eigen::SluMatrix
setTempIndex	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        void G2O_ATTRIBUTE_DEPRECATED(setTempIndex(int ti)) { setHessianIndex(ti);}$/;"	f	class:g2o::OptimizableGraph::Vertex
setThreshold	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    FullPivLU& setThreshold(Default_t)$/;"	f	class:Eigen::FullPivLU
setThreshold	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    FullPivLU& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::FullPivLU
setThreshold	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR& setThreshold(Default_t)$/;"	f	class:Eigen::ColPivHouseholderQR
setThreshold	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::ColPivHouseholderQR
setThreshold	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR& setThreshold(Default_t)$/;"	f	class:Eigen::FullPivHouseholderQR
setThreshold	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::FullPivHouseholderQR
setTime	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^void Timestamp::setTime(const string &stime){$/;"	f	class:Timestamp
setTime	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^void Timestamp::setTime(double s)$/;"	f	class:Timestamp
setTime	./Thirdparty/DBoW2/DUtils/Timestamp.h	/^	inline void setTime(unsigned long secs, unsigned long usecs){$/;"	f	class:DUtils::Timestamp
setToCurrentTime	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^void Timestamp::setToCurrentTime(){$/;"	f	class:Timestamp
setToOrigin	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        void setToOrigin() { setToOriginImpl(); updateCache();}$/;"	f	class:g2o::OptimizableGraph::Vertex
setToOrigin	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::setToOrigin(){$/;"	f	class:g2o::SparseOptimizer
setToOriginImpl	./Thirdparty/g2o/g2o/types/types_sba.h	/^    virtual void setToOriginImpl() {$/;"	f	class:g2o::VertexSBAPointXYZ
setToOriginImpl	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.h	/^    virtual void setToOriginImpl() {$/;"	f	class:g2o::VertexSim3Expmap
setToOriginImpl	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^  virtual void setToOriginImpl() {$/;"	f	class:g2o::VertexSE3Expmap
setTolerance	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& setTolerance(const RealScalar& tolerance)$/;"	f	class:Eigen::IterativeSolverBase
setTrans	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence& setTrans(bool trans)$/;"	f	class:Eigen::HouseholderSequence
setTranslation	./Thirdparty/g2o/g2o/types/se3quat.h	/^      inline void setTranslation(const Vector3d& t_) {_t = t_;}$/;"	f	class:g2o::SE3Quat
setTypeName	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  void HyperGraphElementAction::setTypeName(const std::string& typeName_)$/;"	f	class:g2o::HyperGraphElementAction
setUpdateNeeded	./Thirdparty/g2o/g2o/core/cache.cpp	/^  void CacheContainer::setUpdateNeeded(bool needUpdate) {$/;"	f	class:g2o::CacheContainer
setUserData	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        void setUserData(Data* obs) { _userData = obs;}$/;"	f	class:g2o::OptimizableGraph::Vertex
setUserLambdaInit	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^  void OptimizationAlgorithmLevenberg::setUserLambdaInit(double lambda)$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
setValue	./Thirdparty/g2o/g2o/stuff/property.h	/^      void setValue(const T& v) {_value = v; }$/;"	f	class:g2o::Property
setVerbose	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::setVerbose(bool verbose)$/;"	f	class:g2o::SparseOptimizer
setVertex	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^          void setVertex(size_t i, Vertex* v) { assert(i < _vertices.size() && "index out of bounds"); _vertices[i]=v;}$/;"	f	class:g2o::HyperGraph::Edge
setWeightingType	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::setWeightingType(WeightingType type)$/;"	f	class:DBoW2::TemplatedVocabulary
setWriteDebug	./Thirdparty/g2o/g2o/core/block_solver.hpp	/^void BlockSolver<Traits>::setWriteDebug(bool writeDebug)$/;"	f	class:g2o::BlockSolver
setWriteDebug	./Thirdparty/g2o/g2o/core/linear_solver.h	/^    virtual void setWriteDebug(bool) {}$/;"	f	class:g2o::LinearSolver
setWriteDebug	./Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^  void OptimizationAlgorithmWithHessian::setWriteDebug(bool writeDebug)$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
setWriteDebug	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    virtual void setWriteDebug(bool b) { _writeDebug = b;}$/;"	f	class:g2o::LinearSolverEigen
setZero	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    void setZero()$/;"	f	class:Eigen::LDLT
setZero	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setZero()$/;"	f	class:Eigen::DenseBase
setZero	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setZero(Index nbRows, Index nbCols)$/;"	f	class:Eigen::PlainObjectBase
setZero	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setZero(Index newSize)$/;"	f	class:Eigen::PlainObjectBase
setZero	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline void setZero() { m_diagonal.setZero(); }$/;"	f	class:Eigen::DiagonalMatrix
setZero	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    inline void setZero(Index size) { m_diagonal.setZero(size); }$/;"	f	class:Eigen::DiagonalMatrix
setZero	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    TriangularView& setZero() { return setConstant(Scalar(0)); }$/;"	f	class:Eigen::TriangularView
setZero	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_Index>::setZero()$/;"	f	class:Eigen::internal::AmbiVector
setZero	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void setZero()$/;"	f	class:Eigen::SparseMatrix
setZero	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline void setZero() { m_data.clear(); }$/;"	f	class:Eigen::SparseVector
set_from_triplets	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^void set_from_triplets(const InputIterator& begin, const InputIterator& end, SparseMatrixType& mat, int Options = 0)$/;"	f	namespace:Eigen::internal
set_is_malloc_allowed	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline bool set_is_malloc_allowed(bool new_value) { return is_malloc_allowed_impl(true, new_value); }$/;"	f	namespace:Eigen::internal
set_maximum_number_of_correspondences	./src/PnPsolver.cc	/^void PnPsolver::set_maximum_number_of_correspondences(int n)$/;"	f	class:ORB_SLAM2::PnPsolver
set_maximum_number_of_correspondences	./src/PoseSolver.cc	/^void PoseSolver::set_maximum_number_of_correspondences(int n)$/;"	f	class:ORB_SLAM2::PoseSolver
set_radius_and_clear	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline void set_radius_and_clear( const DistanceType r )$/;"	f	class:nanoflann::RadiusResultSet
setting_file	./main.cc	/^	std::string setting_file;$/;"	m	struct:__anon469	file:
shared1	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared1 ;$/;"	m	struct:internal::Colamd_Row	typeref:union:internal::Colamd_Row::__anon351
shared1	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared1 ;$/;"	m	struct:internal::colamd_col	typeref:union:internal::colamd_col::__anon347
shared2	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared2 ;$/;"	m	struct:internal::Colamd_Row	typeref:union:internal::Colamd_Row::__anon352
shared2	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared2 ;$/;"	m	struct:internal::colamd_col	typeref:union:internal::colamd_col::__anon348
shared3	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared3 ;$/;"	m	struct:internal::colamd_col	typeref:union:internal::colamd_col::__anon349
shared4	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared4 ;$/;"	m	struct:internal::colamd_col	typeref:union:internal::colamd_col::__anon350
shear	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::shear(Scalar sx, Scalar sy)$/;"	f	class:Eigen::Transform
shear	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::shear(const Scalar& sx, const Scalar& sy)$/;"	f	class:Eigen::Transform
shift	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    Index shift() const { return m_shift; }    \/**< \\brief Returns the shift of the Householder sequence. *\/$/;"	f	class:Eigen::HouseholderSequence
shortestPaths	./Thirdparty/g2o/g2o/core/hyper_dijkstra.cpp	/^  void HyperDijkstra::shortestPaths(HyperGraph::Vertex* v, HyperDijkstra::CostFunction* cost, double maxDistance, $/;"	f	class:g2o::HyperDijkstra
shortestPaths	./Thirdparty/g2o/g2o/core/hyper_dijkstra.cpp	/^  void HyperDijkstra::shortestPaths(HyperGraph::VertexSet& vset, HyperDijkstra::CostFunction* cost, $/;"	f	class:g2o::HyperDijkstra
shrink	./Thirdparty/sparseicp/ICP.h	/^    inline void shrink(Eigen::Matrix3Xd& Q, double mu, double p) {$/;"	f	namespace:SICP
shrink	./Thirdparty/sparseicp/ICP.h	/^    inline void shrink(Eigen::VectorXd& y, double mu, double p) {$/;"	f	namespace:SICP
shrinkage	./Thirdparty/sparseicp/ICP.h	/^    inline double shrinkage(double mu, double n, double p, double s) {$/;"	f	namespace:SICP
shrinkage	./Thirdparty/sparseicp/ICP.h	/^    inline double shrinkage<0>(double, double, double, double s) {return s;}$/;"	f	namespace:SICP
sign	./Thirdparty/g2o/g2o/stuff/misc.h	/^inline int sign(T x)$/;"	f	namespace:g2o
signDeterminant	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^     Scalar signDeterminant()$/;"	f	class:Eigen::SparseLU
signedDistance	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline Scalar signedDistance(const VectorType& p) const { return p.eigen2_dot(normal()) + offset(); }$/;"	f	class:Eigen::Hyperplane
signedDistance	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  inline Scalar signedDistance(const VectorType& p) const { return normal().dot(p) + offset(); }$/;"	f	class:Eigen::Hyperplane
significant_decimals_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^struct significant_decimals_default_impl$/;"	s	namespace:Eigen::internal
significant_decimals_default_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^struct significant_decimals_default_impl<Scalar, true>$/;"	s	namespace:Eigen::internal
significant_decimals_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/IO.h	/^struct significant_decimals_impl$/;"	s	namespace:Eigen::internal
sin	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::sin() const$/;"	f	class:Eigen::Cwise
sin	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^sin() const$/;"	f
singularValues	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^    const SingularValuesType& singularValues() const { return m_sigma; }$/;"	f	class:Eigen::SVD
singularValues	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    const SingularValuesType& singularValues() const$/;"	f	class:Eigen::JacobiSVD
size	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^inline unsigned int TemplatedVocabulary<TDescriptor,F>::size() const$/;"	f	class:DBoW2::TemplatedVocabulary
size	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^  inline Index size() const { return rows() * cols(); }$/;"	f	struct:Eigen::EigenBase
size	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon141
size	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline Index size() const { return Index(indices().size()); }$/;"	f	class:Eigen::PermutationBase
size	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline Index size() const { return indices().size(); }$/;"	f	class:Eigen::TranspositionsBase
size	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline int size() const { return m_transpositions.size(); }$/;"	f	class:Eigen::Transpose
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon211
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    size=4$/;"	e	enum:Eigen::internal::packet_traits::__anon213
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon212
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon214
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon215
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon204
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon205
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^    size = 4,$/;"	e	enum:Eigen::internal::packet_traits::__anon206
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^    size=4$/;"	e	enum:Eigen::internal::packet_traits::__anon207
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon208
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon209
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon218
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon219
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon217
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    size=2,$/;"	e	enum:Eigen::internal::packet_traits::__anon224
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    size=4$/;"	e	enum:Eigen::internal::packet_traits::__anon225
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon223
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon227
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon226
size	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon228
size	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Index size() const { return m_size; }$/;"	f	class:Eigen::internal::AmbiVector
size	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    inline size_t size() const { return m_size; }$/;"	f	class:Eigen::internal::CompressedStorage
size	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Index size() const { return rows() * cols(); }$/;"	f	class:Eigen::SparseMatrixBase
size	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline CountType size() const$/;"	f	class:nanoflann::KNNResultSet
size	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline size_t size() const { return m_indices_dists.size(); }$/;"	f	class:nanoflann::RadiusResultSet
size	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		size_t size() const$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
size_type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    typedef size_t    size_type;$/;"	t	class:Eigen::aligned_allocator
size_type	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    typedef size_t    size_type;$/;"	t	class:Eigen::aligned_allocator_indirection
sizes	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline const CwiseBinaryOp< internal::scalar_difference_op<Scalar>, const VectorType, const VectorType> sizes() const$/;"	f	class:Eigen::AlignedBox
skew	./Thirdparty/g2o/g2o/types/se3_ops.hpp	/^  Matrix3d skew(const Vector3d&v)$/;"	f
slerp	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^Quaternion<Scalar> Quaternion<Scalar>::slerp(Scalar t, const Quaternion& other) const$/;"	f	class:Eigen::Quaternion
slerp	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline Rotation2D slerp(Scalar t, const Rotation2D& other) const$/;"	f	class:Eigen::Rotation2D
slerp	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::slerp(const Scalar& t, const QuaternionBase<OtherDerived>& other) const$/;"	f	class:Eigen::QuaternionBase
slerp	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^  inline Rotation2D slerp(const Scalar& t, const Rotation2D& other) const$/;"	f	class:Eigen::Rotation2D
slice	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  SparseBlockMatrix<MatrixType>*  SparseBlockMatrix<MatrixType>::slice(int rmin, int rmax, int cmin, int cmax, bool alloc) const {$/;"	f	class:g2o::SparseBlockMatrix
smart_copy	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<typename T> void smart_copy(const T* start, const T* end, T* target)$/;"	f	namespace:Eigen::internal
smart_copy_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<typename T> struct smart_copy_helper<T,false> {$/;"	s	namespace:Eigen::internal
smart_copy_helper	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^template<typename T> struct smart_copy_helper<T,true> {$/;"	s	namespace:Eigen::internal
solve	./Thirdparty/g2o/g2o/core/block_solver.hpp	/^bool BlockSolver<Traits>::solve(){$/;"	f	class:g2o::BlockSolver
solve	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.cpp	/^  OptimizationAlgorithm::SolverResult OptimizationAlgorithmDogleg::solve(int iteration, bool online)$/;"	f	class:g2o::OptimizationAlgorithmDogleg
solve	./Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp	/^  OptimizationAlgorithm::SolverResult OptimizationAlgorithmGaussNewton::solve(int iteration, bool online)$/;"	f	class:g2o::OptimizationAlgorithmGaussNewton
solve	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^  OptimizationAlgorithm::SolverResult OptimizationAlgorithmLevenberg::solve(int iteration, bool online)$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
solve	./Thirdparty/g2o/g2o/solvers/linear_solver_dense.h	/^      bool solve(const SparseBlockMatrix<MatrixType>& A, double* x, double* b)$/;"	f	class:g2o::LinearSolverDense
solve	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    bool solve(const SparseBlockMatrix<MatrixType>& A, double* x, double* b)$/;"	f	class:g2o::LinearSolverEigen
solve	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    bool solve(const MatrixBase<OtherDerived>& b, ResultType *result) const$/;"	f	class:Eigen::LDLT
solve	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::LDLT
solve	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    bool solve(const MatrixBase<OtherDerived>& b, ResultType *result) const$/;"	f	class:Eigen::LLT
solve	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::LLT
solve	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::CholmodBase
solve	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    solve(const SparseMatrixBase<Rhs>& b) const$/;"	f	class:Eigen::CholmodBase
solve	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^TriangularView<Derived,Mode>::solve(const MatrixBase<Other>& other) const$/;"	f	class:Eigen::TriangularView
solve	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    solve(const MatrixBase<Other>& other) const$/;"	f	class:Eigen::TriangularView
solve	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/LU.h	/^    bool solve(const MatrixBase<OtherDerived>& b, ResultType *result) const$/;"	f	class:Eigen::LU
solve	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/QR.h	/^    bool solve(const MatrixBase<OtherDerived>& b, ResultType *result) const$/;"	f	class:Eigen::QR
solve	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^bool SVD<MatrixType>::solve(const MatrixBase<OtherDerived> &b, ResultType* result) const$/;"	f	class:Eigen::SVD
solve	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    inline const Rhs& solve(const Rhs& b) const { return b; }$/;"	f	class:Eigen::IdentityPreconditioner
solve	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::DiagonalPreconditioner
solve	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^     solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::IncompleteLUT
solve	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::IterativeSolverBase
solve	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  solve(const SparseMatrixBase<Rhs>& b) const$/;"	f	class:Eigen::IterativeSolverBase
solve	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::FullPivLU
solve	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::PartialPivLU
solve	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::PastixBase
solve	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    solve(const SparseMatrixBase<Rhs>& b) const$/;"	f	class:Eigen::PastixBase
solve	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::PardisoImpl
solve	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    solve(const SparseMatrixBase<Rhs>& b) const$/;"	f	class:Eigen::PardisoImpl
solve	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::ColPivHouseholderQR
solve	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::FullPivHouseholderQR
solve	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::HouseholderQR
solve	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    inline const internal::solve_retval<SPQR, Rhs> solve(const MatrixBase<Rhs>& B) const $/;"	f	class:Eigen::SPQR
solve	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::JacobiSVD
solve	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SimplicialCholeskyBase
solve	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    solve(const SparseMatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SimplicialCholeskyBase
solve	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	/^SparseTriangularView<ExpressionType,Mode>::solve(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseTriangularView
solve	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    inline const internal::solve_retval<SparseLU, Rhs> solve(const MatrixBase<Rhs>& B) const $/;"	f	class:Eigen::SparseLU
solve	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    inline const internal::sparse_solve_retval<SparseLU, Rhs> solve(const SparseMatrixBase<Rhs>& B) const $/;"	f	class:Eigen::SparseLU
solve	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    inline const internal::solve_retval<SparseQR, Rhs> solve(const MatrixBase<Rhs>& B) const $/;"	f	class:Eigen::SparseQR
solve	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    inline const internal::sparse_solve_retval<SparseQR, Rhs> solve(const SparseMatrixBase<Rhs>& B) const$/;"	f	class:Eigen::SparseQR
solve	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const internal::solve_retval<SuperLUBase, Rhs> solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SuperLUBase
solve	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const internal::sparse_solve_retval<SuperLUBase, Rhs> solve(const SparseMatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SuperLUBase
solve	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const internal::solve_retval<UmfPackLU, Rhs> solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::UmfPackLU
solve	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const internal::sparse_solve_retval<UmfPackLU, Rhs> solve(const SparseMatrixBase<Rhs>& b) const$/;"	f	class:Eigen::UmfPackLU
solveBlocks	./Thirdparty/g2o/g2o/core/linear_solver.h	/^    virtual bool solveBlocks(double**&blocks, const SparseBlockMatrix<MatrixType>& A) { (void)blocks; (void) A; return false; }$/;"	f	class:g2o::LinearSolver
solveDirect	./Thirdparty/g2o/g2o/core/base_vertex.hpp	/^double BaseVertex<D, T>::solveDirect(double lambda) {$/;"	f	class:BaseVertex
solveInPlace	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^bool LDLT<MatrixType,_UpLo>::solveInPlace(MatrixBase<Derived> &bAndX) const$/;"	f	class:Eigen::LDLT
solveInPlace	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^void LLT<MatrixType,_UpLo>::solveInPlace(MatrixBase<Derived> &bAndX) const$/;"	f	class:Eigen::LLT
solveInPlace	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^void TriangularView<MatrixType,Mode>::solveInPlace(const MatrixBase<OtherDerived>& _other) const$/;"	f	class:Eigen::TriangularView
solveInPlace	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    void solveInPlace(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::TriangularView
solveInPlace	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	/^void SparseTriangularView<ExpressionType,Mode>::solveInPlace(MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseTriangularView
solveInPlace	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	/^void SparseTriangularView<ExpressionType,Mode>::solveInPlace(SparseMatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseTriangularView
solveInPlace	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  template<typename Dest>   void solveInPlace(MatrixBase<Dest> &X) const$/;"	f	struct:Eigen::SparseLUMatrixUReturnType
solveInPlace	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^  void solveInPlace( MatrixBase<Dest> &X) const$/;"	f	struct:Eigen::SparseLUMatrixLReturnType
solveInPlace	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^void MappedSuperNodalMatrix<Scalar,Index>::solveInPlace( MatrixBase<Dest>&X) const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
solvePattern	./Thirdparty/g2o/g2o/core/linear_solver.h	/^    virtual bool solvePattern(SparseBlockMatrix<MatrixXd>& spinv, const std::vector<std::pair<int, int> >& blockIndices, const SparseBlockMatrix<MatrixType>& A){$/;"	f	class:g2o::LinearSolver
solveTriangular	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/TriangularSolver.h	/^Flagged<ExpressionType,Added,Removed>::solveTriangular(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::Flagged
solveTriangular	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	/^SparseMatrixBase<Derived>::solveTriangular(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseMatrixBase
solveTriangularInPlace	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/TriangularSolver.h	/^void Flagged<ExpressionType,Added,Removed>::solveTriangularInPlace(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::Flagged
solveTriangularInPlace	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	/^void SparseMatrixBase<Derived>::solveTriangularInPlace(MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseMatrixBase
solveWithGuess	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  solveWithGuess(const MatrixBase<Rhs>& b, const Guess& x0) const$/;"	f	class:Eigen::BiCGSTAB
solveWithGuess	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  solveWithGuess(const MatrixBase<Rhs>& b, const Guess& x0) const$/;"	f	class:Eigen::ConjugateGradient
solve_for_sign	./src/PnPsolver.cc	/^void PnPsolver::solve_for_sign(void)$/;"	f	class:ORB_SLAM2::PnPsolver
solve_for_sign	./src/PoseSolver.cc	/^void PoseSolver::solve_for_sign(void)$/;"	f	class:ORB_SLAM2::PoseSolver
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^struct solve_retval<LDLT<_MatrixType,_UpLo>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^struct solve_retval<LLT<_MatrixType, UpLo>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^struct solve_retval<CholmodBase<_MatrixType,_UpLo,Derived>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^struct solve_retval<DiagonalPreconditioner<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^struct solve_retval<BiCGSTAB<_MatrixType, _Preconditioner>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^struct solve_retval<ConjugateGradient<_MatrixType,_UpLo,_Preconditioner>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^struct solve_retval<IncompleteLUT<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^struct solve_retval<FullPivLU<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^struct solve_retval<PartialPivLU<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^struct solve_retval<PastixBase<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^struct solve_retval<PardisoImpl<_Derived>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^struct solve_retval<ColPivHouseholderQR<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^struct solve_retval<FullPivHouseholderQR<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/QR/HouseholderQR.h	/^struct solve_retval<HouseholderQR<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^struct solve_retval<SPQR<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^struct solve_retval<JacobiSVD<_MatrixType, QRPreconditioner>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^struct solve_retval<SimplicialCholeskyBase<Derived>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^struct solve_retval<SparseLU<_MatrixType,Derived>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^struct solve_retval<SparseQR<_MatrixType,OrderingType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct solve_retval<SuperLUBase<_MatrixType,Derived>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^struct solve_retval<UmfPackLU<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval_base	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^  solve_retval_base(const DecompositionType& dec, const Rhs& rhs)$/;"	f	struct:Eigen::internal::solve_retval_base
solve_retval_base	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^template<typename _DecompositionType, typename Rhs> struct solve_retval_base$/;"	s	namespace:Eigen::internal
solve_retval_with_guess	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^  solve_retval_with_guess(const DecompositionType& dec, const Rhs& rhs, const Guess& guess)$/;"	f	struct:Eigen::internal::solve_retval_with_guess
solve_retval_with_guess	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^template<typename DecompositionType, typename Rhs, typename Guess> struct solve_retval_with_guess$/;"	s	namespace:Eigen::internal
solver	./Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h	/^      Solver* solver() { return _solver;}$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
solver	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    OptimizationAlgorithm* solver() { return _algorithm;}$/;"	f	class:g2o::SparseOptimizer
sort	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^SVD<MatrixType>& SVD<MatrixType>::sort()$/;"	f	class:Eigen::SVD
sortColumns	./Thirdparty/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      void sortColumns()$/;"	f	class:g2o::SparseBlockMatrixCCS
sortEigenvalues	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^void ComplexEigenSolver<MatrixType>::sortEigenvalues(bool computeEigenvectors)$/;"	f	class:Eigen::ComplexEigenSolver
sortVectorContainers	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::sortVectorContainers()$/;"	f	class:g2o::SparseOptimizer
sort_matrix_Q	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^    inline void sort_matrix_Q()$/;"	f	class:Eigen::SparseQR
sort_pred	./Thirdparty/sparseicp/ICP.h	/^    struct sort_pred {$/;"	s	namespace:ICP
sorted	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		bool sorted; \/\/!< only for radius search, require neighbours sorted by distance (default: true)$/;"	m	struct:nanoflann::SearchParams
sparseView	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^const SparseView<Derived> MatrixBase<Derived>::sparseView(const Scalar& m_reference,$/;"	f	class:Eigen::MatrixBase
sparse_cwise_binary_op_inner_iterator_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE sparse_cwise_binary_op_inner_iterator_selector(const CwiseBinaryXpr& xpr, Index outer)$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
sparse_cwise_binary_op_inner_iterator_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^class sparse_cwise_binary_op_inner_iterator_selector<BinaryOp, Lhs, Rhs, Derived, Sparse, Sparse>$/;"	c	namespace:Eigen::internal
sparse_cwise_binary_op_inner_iterator_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^class sparse_cwise_binary_op_inner_iterator_selector<scalar_product_op<T>, Lhs, Rhs, Derived, Dense, Sparse>$/;"	c	namespace:Eigen::internal
sparse_cwise_binary_op_inner_iterator_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^class sparse_cwise_binary_op_inner_iterator_selector<scalar_product_op<T>, Lhs, Rhs, Derived, Sparse, Dense>$/;"	c	namespace:Eigen::internal
sparse_cwise_binary_op_inner_iterator_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^class sparse_cwise_binary_op_inner_iterator_selector<scalar_product_op<T>, Lhs, Rhs, Derived, Sparse, Sparse>$/;"	c	namespace:Eigen::internal
sparse_diagonal_product_inner_iterator_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline sparse_diagonal_product_inner_iterator_selector($/;"	f	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
sparse_diagonal_product_inner_iterator_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^class sparse_diagonal_product_inner_iterator_selector$/;"	c	namespace:Eigen::internal
sparse_eval	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T,int Cols> struct sparse_eval<T,1,Cols> {$/;"	s	namespace:Eigen::internal
sparse_eval	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T,int Rows,int Cols> struct sparse_eval {$/;"	s	namespace:Eigen::internal
sparse_eval	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T,int Rows> struct sparse_eval<T,Rows,1> {$/;"	s	namespace:Eigen::internal
sparse_eval	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T> struct sparse_eval<T,1,1> {$/;"	s	namespace:Eigen::internal
sparse_solve_retval	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^struct sparse_solve_retval<CholmodBase<_MatrixType,_UpLo,Derived>, Rhs>$/;"	s	namespace:Eigen::internal
sparse_solve_retval	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^struct sparse_solve_retval<IterativeSolverBase<Derived>, Rhs>$/;"	s	namespace:Eigen::internal
sparse_solve_retval	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^struct sparse_solve_retval<PastixBase<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
sparse_solve_retval	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^struct sparse_solve_retval<PardisoImpl<Derived>, Rhs>$/;"	s	namespace:Eigen::internal
sparse_solve_retval	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^struct sparse_solve_retval<SimplicialCholeskyBase<Derived>, Rhs>$/;"	s	namespace:Eigen::internal
sparse_solve_retval	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^struct sparse_solve_retval<SparseLU<_MatrixType,Derived>, Rhs>$/;"	s	namespace:Eigen::internal
sparse_solve_retval	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^struct sparse_solve_retval<SparseQR<_MatrixType, OrderingType>, Rhs>$/;"	s	namespace:Eigen::internal
sparse_solve_retval	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct sparse_solve_retval<SuperLUBase<_MatrixType,Derived>, Rhs>$/;"	s	namespace:Eigen::internal
sparse_solve_retval	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^struct sparse_solve_retval<UmfPackLU<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
sparse_solve_retval_base	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^  sparse_solve_retval_base(const DecompositionType& dec, const Rhs& rhs)$/;"	f	struct:Eigen::internal::sparse_solve_retval_base
sparse_solve_retval_base	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^template<typename _DecompositionType, typename Rhs> struct sparse_solve_retval_base$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Lower,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Lower,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Upper,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Upper,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_sparse_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_sparse_selector<Lhs,Rhs,Mode,UpLo,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_impl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^static void sparse_sparse_product_with_pruning_impl(const Lhs& lhs, const Rhs& rhs, ResultType& res, const typename ResultType::RealScalar& tolerance)$/;"	f	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^inline void sparse_time_dense_product(const SparseLhsType& lhs, const DenseRhsType& rhs, DenseResType& res, const AlphaType& alpha)$/;"	f	namespace:Eigen::internal
sparse_time_dense_product_impl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, ColMajor, false>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product_impl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, ColMajor, true>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product_impl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, RowMajor, false>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product_impl	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, RowMajor, true>$/;"	s	namespace:Eigen::internal
sparse_vector_assign_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^struct sparse_vector_assign_selector<Dest,Src,SVA_Inner> {$/;"	s	namespace:Eigen::internal
sparse_vector_assign_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^struct sparse_vector_assign_selector<Dest,Src,SVA_Outer> {$/;"	s	namespace:Eigen::internal
sparse_vector_assign_selector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^struct sparse_vector_assign_selector<Dest,Src,SVA_RuntimeSwitch> {$/;"	s	namespace:Eigen::internal
sparselu_gemm	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	/^void sparselu_gemm(Index m, Index n, Index d, const Scalar* A, Index lda, const Scalar* B, Index ldb, Scalar* C, Index ldc)$/;"	f	namespace:Eigen::internal
splitOffTwoRows	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^    inline void RealQZ<MatrixType>::splitOffTwoRows(Index i)$/;"	f	class:Eigen::RealQZ
splitOffTwoRows	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::splitOffTwoRows(Index iu, bool computeU, const Scalar& exshift)$/;"	f	class:Eigen::RealSchur
sprintf	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	28;"	d	file:
sqrt	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::sqrt() const$/;"	f	class:Eigen::Cwise
sqrt	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^sqrt() const$/;"	f
square	./Thirdparty/g2o/g2o/stuff/misc.h	/^inline T square(T x)$/;"	f	namespace:g2o
square	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::square() const$/;"	f	class:Eigen::Cwise
square	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^square() const$/;"	f
squaredDistance	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  RealScalar squaredDistance(const VectorType& p) const$/;"	f	class:Eigen::ParametrizedLine
squaredDistance	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  RealScalar squaredDistance(const VectorType& p) const$/;"	f	class:Eigen::ParametrizedLine
squaredExteriorDistance	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^inline Scalar AlignedBox<Scalar,AmbiantDim>::squaredExteriorDistance(const VectorType& p) const$/;"	f	class:Eigen::AlignedBox
squaredExteriorDistance	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^inline Scalar AlignedBox<Scalar,AmbientDim>::squaredExteriorDistance(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
squaredExteriorDistance	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^inline Scalar AlignedBox<Scalar,AmbientDim>::squaredExteriorDistance(const MatrixBase<Derived>& a_p) const$/;"	f	class:Eigen::AlignedBox
squaredNorm	./Thirdparty/sparseicp/include/Eigen/src/Core/Dot.h	/^EIGEN_STRONG_INLINE typename NumTraits<typename internal::traits<Derived>::Scalar>::Real MatrixBase<Derived>::squaredNorm() const$/;"	f	class:Eigen::MatrixBase
squaredNorm	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_squaredNorm,RealScalar>::Type squaredNorm() const$/;"	f	class:Eigen::VectorwiseOp
squaredNorm	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar squaredNorm() const { return m_coeffs.squaredNorm(); }$/;"	f	class:Eigen::Quaternion
squaredNorm	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar squaredNorm() const { return coeffs().squaredNorm(); }$/;"	f	class:Eigen::QuaternionBase
squaredNorm	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::squaredNorm() const$/;"	f	class:Eigen::SparseMatrixBase
squeeze	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    void squeeze()$/;"	f	class:Eigen::internal::CompressedStorage
stableNorm	./Thirdparty/sparseicp/include/Eigen/src/Core/StableNorm.h	/^MatrixBase<Derived>::stableNorm() const$/;"	f	class:Eigen::MatrixBase
stableNorm	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_stableNorm,RealScalar>::Type stableNorm() const$/;"	f	class:Eigen::VectorwiseOp
stable_norm_kernel	./Thirdparty/sparseicp/include/Eigen/src/Core/StableNorm.h	/^inline void stable_norm_kernel(const ExpressionType& bl, Scalar& ssq, Scalar& scale, Scalar& invScale)$/;"	f	namespace:Eigen::internal
stackSize	./Thirdparty/g2o/g2o/core/base_vertex.h	/^    virtual int stackSize() const {return _backup.size();}$/;"	f	class:g2o::BaseVertex
start	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/VectorBlock.h	/^MatrixBase<Derived>::start() const$/;"	f	class:Eigen::MatrixBase
start	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/VectorBlock.h	/^MatrixBase<Derived>::start()$/;"	f	class:Eigen::MatrixBase
start	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/VectorBlock.h	/^MatrixBase<Derived>::start(Index size) const$/;"	f	class:Eigen::MatrixBase
start	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/VectorBlock.h	/^MatrixBase<Derived>::start(Index size)$/;"	f	class:Eigen::MatrixBase
start	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  Index start ;   \/* index for A of first col in this row *\/$/;"	m	struct:internal::Colamd_Row
start	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  Index start ;   \/* index for A of first row in this column, or DEAD *\/$/;"	m	struct:internal::colamd_col
startCol	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    Index startCol() const $/;"	f	class:Eigen::internal::BlockImpl_dense
startFill	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED void startFill(Index reserve)$/;"	f	class:Eigen::SparseVector
startRow	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    Index startRow() const $/;"	f	class:Eigen::internal::BlockImpl_dense
startVec	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void startVec(Index outer)$/;"	f	class:Eigen::SparseMatrix
startVec	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline void startVec(Index outer)$/;"	f	class:Eigen::SparseVector
static_assertion	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^    struct static_assertion {};$/;"	s	namespace:Eigen::internal
static_assertion	./Thirdparty/sparseicp/include/Eigen/src/Core/util/StaticAssert.h	/^    struct static_assertion<true>$/;"	s	namespace:Eigen::internal
std	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdDeque.h	/^namespace std {$/;"	n
std	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdList.h	/^namespace std$/;"	n
std	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdVector.h	/^namespace std {$/;"	n
stem_function	./Thirdparty/sparseicp/include/Eigen/src/Core/util/ForwardDeclarations.h	/^struct stem_function$/;"	s	namespace:Eigen::internal
step	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/RealQZ.h	/^    inline void RealQZ<MatrixType>::step(Index f, Index l, Index iter)$/;"	f	class:Eigen::RealQZ
stepType2Str	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.cpp	/^  const char* OptimizationAlgorithmDogleg::stepType2Str(int stepType)$/;"	f	class:g2o::OptimizationAlgorithmDogleg
stop	./Thirdparty/sparseicp/ICP.h	/^        double stop = 1e-5;       \/\/\/ stopping criteria$/;"	m	struct:SICP::Parameters
stop	./Thirdparty/sparseicp/ICP.h	/^        double stop;    \/\/\/ stopping criteria$/;"	m	class:ICP::Parameters
stopRequested	./src/LocalMapping.cc	/^bool LocalMapping::stopRequested()$/;"	f	class:ORB_SLAM2::LocalMapping
stopWords	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^int TemplatedVocabulary<TDescriptor,F>::stopWords(double minWeight)$/;"	f	class:DBoW2::TemplatedVocabulary
storage	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  } storage;$/;"	m	struct:Eigen::SluMatrix	typeref:struct:Eigen::SluMatrix::__anon460
strEndsWith	./Thirdparty/g2o/g2o/stuff/string_tools.cpp	/^bool strEndsWith(const std::string& s, const std::string& end)$/;"	f	namespace:g2o
strExpandFilename	./Thirdparty/g2o/g2o/stuff/string_tools.cpp	/^std::string strExpandFilename(const std::string& filename)$/;"	f	namespace:g2o
strPrintf	./Thirdparty/g2o/g2o/stuff/string_tools.cpp	/^int strPrintf(std::string& str, const char* fmt, ...)$/;"	f	namespace:g2o
strSplit	./Thirdparty/g2o/g2o/stuff/string_tools.cpp	/^std::vector<std::string> strSplit(const std::string& str, const std::string& delimiters)$/;"	f	namespace:g2o
strStartsWith	./Thirdparty/g2o/g2o/stuff/string_tools.cpp	/^bool strStartsWith(const std::string& s, const std::string& start)$/;"	f	namespace:g2o
strToLower	./Thirdparty/g2o/g2o/stuff/string_tools.cpp	/^std::string strToLower(const std::string& s)$/;"	f	namespace:g2o
strToUpper	./Thirdparty/g2o/g2o/stuff/string_tools.cpp	/^std::string strToUpper(const std::string& s)$/;"	f	namespace:g2o
stride	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index stride() const$/;"	f	class:Eigen::DenseCoeffsBase
stringToType	./Thirdparty/g2o/g2o/stuff/string_tools.h	/^T stringToType(const std::string& s, bool failIfLeftoverChars = true)$/;"	f	namespace:g2o
sub	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline const typename Base::template DiagonalIntReturnType<-1>::Type sub() const$/;"	f	class:Eigen::internal::TridiagonalMatrix
sub	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline typename Base::template DiagonalIntReturnType<-1>::Type sub()$/;"	f	class:Eigen::internal::TridiagonalMatrix
sub	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    struct sub  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() -= src; } };$/;"	s	class:Eigen::GeneralProduct
sub	./Thirdparty/sparseicp/include/nanoflann.hpp	/^				} sub;$/;"	m	union:nanoflann::KDTreeSingleIndexAdaptor::Node::__anon463	typeref:struct:nanoflann::KDTreeSingleIndexAdaptor::Node::__anon463::__anon465
subDiagonal	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^Tridiagonalization<MatrixType>::subDiagonal() const$/;"	f	class:Eigen::Tridiagonalization
subTo	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    void subTo(MatrixBase<DenseDerived> &other) const$/;"	f	class:Eigen::DiagonalBase
subTo	./Thirdparty/sparseicp/include/Eigen/src/Core/EigenBase.h	/^  template<typename Dest> inline void subTo(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
subTo	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    inline void subTo(Dest& dest) const {$/;"	f	class:Eigen::GeneralProduct
subTo	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    inline void subTo(Dest& dst) const { scaleAndAddTo(dst, Scalar(-1)); }$/;"	f	class:Eigen::ScaledProduct
subTo	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^    inline void subTo(Dest& dst) const { scaleAndAddTo(dst,Scalar(-1)); }$/;"	f	class:Eigen::ProductBase
subVector	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    SubVector subVector(Index i)$/;"	f	class:Eigen::VectorwiseOp
subVectors	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    Index subVectors() const$/;"	f	class:Eigen::VectorwiseOp
subdiagonalEntryIsNeglegible	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/ComplexSchur.h	/^inline bool ComplexSchur<MatrixType>::subdiagonalEntryIsNeglegible(Index i)$/;"	f	class:Eigen::ComplexSchur
subs	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline Index subs() const { return derived().subs(); }$/;"	f	class:Eigen::internal::BandMatrixBase
subs	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline Index subs() const { return m_subs.value(); }$/;"	f	class:Eigen::internal::BandMatrix
subs	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline Index subs() const { return m_subs.value(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
sum	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::sum() const$/;"	f	class:Eigen::DenseBase
sum	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_sum>::Type sum() const$/;"	f	class:Eigen::VectorwiseOp
sum	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseRedux.h	/^SparseMatrix<_Scalar,_Options,_Index>::sum() const$/;"	f	class:Eigen::SparseMatrix
sum	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseRedux.h	/^SparseMatrixBase<Derived>::sum() const$/;"	f	class:Eigen::SparseMatrixBase
sum	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseRedux.h	/^SparseVector<_Scalar,_Options,_Index>::sum() const$/;"	f	class:Eigen::SparseVector
sumupDuplicates	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^void SparseMatrix<Scalar,_Options,_Index>::sumupDuplicates()$/;"	f	class:Eigen::SparseMatrix
supIndex	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Index supIndex() const { return m_supno; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
supToCol	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index* supToCol() { return m_sup_to_col; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
supToCol	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index* supToCol() const $/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
super	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline const typename Base::template DiagonalIntReturnType<1>::Type super() const$/;"	f	class:Eigen::internal::TridiagonalMatrix
super	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline typename Base::template DiagonalIntReturnType<1>::Type super()$/;"	f	class:Eigen::internal::TridiagonalMatrix
supers	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline Index supers() const { return derived().supers(); }$/;"	f	class:Eigen::internal::BandMatrixBase
supers	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline Index supers() const { return m_supers.value(); }$/;"	f	class:Eigen::internal::BandMatrix
supers	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    inline Index supers() const { return m_supers.value(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
supno	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector supno; \/\/ Supernode number corresponding to this column (column to supernode mapping)$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
supportsSchur	./Thirdparty/g2o/g2o/core/block_solver.h	/^      virtual bool supportsSchur() {return true;}$/;"	f	class:g2o::BlockSolver
supportsSchur	./Thirdparty/g2o/g2o/core/solver.h	/^      virtual bool supportsSchur() {return false;}$/;"	f	class:g2o::Solver
svd	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/SVD.h	/^MatrixBase<Derived>::svd() const$/;"	f	class:Eigen::MatrixBase
svd_precondition_2x2_block_to_be_real	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^struct svd_precondition_2x2_block_to_be_real {};$/;"	s	namespace:Eigen::internal
svd_precondition_2x2_block_to_be_real	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^struct svd_precondition_2x2_block_to_be_real<MatrixType, QRPreconditioner, false>$/;"	s	namespace:Eigen::internal
svd_precondition_2x2_block_to_be_real	./Thirdparty/sparseicp/include/Eigen/src/SVD/JacobiSVD.h	/^struct svd_precondition_2x2_block_to_be_real<MatrixType, QRPreconditioner, true>$/;"	s	namespace:Eigen::internal
swap	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^    void swap(ArrayBase<OtherDerived> const & other)$/;"	f	class:Eigen::Array
swap	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    void swap(PlainObjectBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
swap	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    void swap(const DenseBase<OtherDerived>& other,$/;"	f	class:Eigen::DenseBase
swap	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline void swap(DenseStorage& ) {}$/;"	f	class:Eigen::DenseStorage
swap	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline void swap(DenseStorage& other) { std::swap(m_data,other.m_data); std::swap(m_cols,other.m_cols); }$/;"	f	class:Eigen::DenseStorage
swap	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline void swap(DenseStorage& other) { std::swap(m_data,other.m_data); std::swap(m_rows,other.m_rows); }$/;"	f	class:Eigen::DenseStorage
swap	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline void swap(DenseStorage& other) { std::swap(m_data,other.m_data); }$/;"	f	class:Eigen::DenseStorage
swap	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline void swap(DenseStorage& other)$/;"	f	class:Eigen::DenseStorage
swap	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^    void swap(MatrixBase<OtherDerived> const & other)$/;"	f	class:Eigen::Matrix
swap	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    void swap(MatrixBase<OtherDerived> const & other)$/;"	f	class:Eigen::TriangularView
swap	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    void swap(TriangularBase<OtherDerived> const & other)$/;"	f	class:Eigen::TriangularView
swap	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    void swap(CompressedStorage& other)$/;"	f	class:Eigen::internal::CompressedStorage
swap	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void swap(SparseMatrix& other)$/;"	f	class:Eigen::SparseMatrix
swap	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline void swap(SparseVector& other)$/;"	f	class:Eigen::SparseVector
symmPermutation	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  bool SparseBlockMatrix<MatrixType>::symmPermutation(SparseBlockMatrix<MatrixType>*& dest, const int* pinv, bool  upperTriangle) const{$/;"	f	class:g2o::SparseBlockMatrix
symm_pack_lhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct symm_pack_lhs$/;"	s	namespace:Eigen::internal
symm_pack_rhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct symm_pack_rhs$/;"	s	namespace:Eigen::internal
sync	./Thirdparty/sparseicp/include/Eigen/src/Core/products/Parallelizer.h	/^  int volatile sync;$/;"	m	struct:Eigen::internal::GemmParallelInfo
t	./Thirdparty/g2o/g2o/types/sim3.h	/^    Vector3d t;$/;"	m	struct:g2o::Sim3
t	./include/Registrating.h	/^		cv::Mat R, t;$/;"	m	class:ORB_SLAM2::Registrating
tOptions	./Thirdparty/DBoW2/DUtils/Timestamp.h	/^  enum tOptions$/;"	g	class:DUtils::Timestamp
tag	./Thirdparty/g2o/g2o/core/factory.cpp	/^const std::string& Factory::tag(const HyperGraph::HyperGraphElement* e) const$/;"	f	class:g2o::Factory
tail	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline ConstSegmentReturnType tail(Index n) const$/;"	f
tail	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline SegmentReturnType tail(Index n)$/;"	f
tail	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstFixedSegmentReturnType<N>::Type tail(Index n = N) const$/;"	f
tail	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedSegmentReturnType<N>::Type tail(Index n = N)$/;"	f
takePatternFromHash	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  void SparseBlockMatrix<MatrixType>::takePatternFromHash(SparseBlockMatrixHashMap<MatrixType>& hashMatrix)$/;"	f	class:g2o::SparseBlockMatrix
take_affine_part	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  typedef internal::transform_take_affine_part<Transform> take_affine_part;$/;"	t	class:Eigen::Transform
take_matrix_for_product	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^struct take_matrix_for_product$/;"	s	namespace:Eigen::internal
take_matrix_for_product	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^struct take_matrix_for_product<Transform<Scalar, Dim, Mode, Options> >$/;"	s	namespace:Eigen::internal
take_matrix_for_product	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^struct take_matrix_for_product<Transform<Scalar, Dim, Projective, Options> >$/;"	s	namespace:Eigen::internal
tan	./Thirdparty/sparseicp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^tan() const$/;"	f
target_candidate_basis_	./4pcs/Registration.h	/^            PointCloud<Set4>::Ptr target_candidate_basis_;$/;"	m	class:pcl::FPCS::FPCSRegistration
tempIndex	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        int G2O_ATTRIBUTE_DEPRECATED(tempIndex() const) { return hessianIndex();}$/;"	f	class:g2o::OptimizableGraph::Vertex
terminate	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    bool terminate() {return _forceStopFlag ? (*_forceStopFlag) : false; }$/;"	f	class:g2o::SparseOptimizer
testMatch	./src/Tracking.cc	/^void Tracking::testMatch(const cv::Mat &im) {$/;"	f	class:ORB_SLAM2::Tracking
thenMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^    const ThenMatrixType& thenMatrix() const$/;"	f	class:Eigen::Select
thickness	./Thirdparty/sparseicp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    Index thickness ; \/* number of original columns represented by this *\/$/;"	m	union:internal::colamd_col::__anon347
threshold	./Thirdparty/sparseicp/include/Eigen/src/LU/FullPivLU.h	/^    RealScalar threshold() const$/;"	f	class:Eigen::FullPivLU
threshold	./Thirdparty/sparseicp/include/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar threshold() const$/;"	f	class:Eigen::ColPivHouseholderQR
threshold	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar threshold() const$/;"	f	class:Eigen::FullPivHouseholderQR
throw_std_bad_alloc	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^inline void throw_std_bad_alloc()$/;"	f	namespace:Eigen::internal
timeIteration	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    double timeIteration;             \/\/\/< total time;$/;"	m	struct:g2o::G2OBatchStatistics
timeLinearSolution	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    double timeLinearSolution;        \/\/\/< total time for solving Ax=b (including detup for schur)$/;"	m	struct:g2o::G2OBatchStatistics
timeLinearSolver	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    double timeLinearSolver;          \/\/\/< time for solving, excluding Schur setup$/;"	m	struct:g2o::G2OBatchStatistics
timeLinearize	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    double timeLinearize;             \/\/\/< jacobians$/;"	m	struct:g2o::G2OBatchStatistics
timeMarginals	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    double timeMarginals;             \/\/\/< computing the inverse elements (solve blocks) and thus the marginal covariances$/;"	m	struct:g2o::G2OBatchStatistics
timeNumericDecomposition	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    double timeNumericDecomposition;  \/\/\/< numeric decomposition  (0 if not done)$/;"	m	struct:g2o::G2OBatchStatistics
timeQuadraticForm	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    double timeQuadraticForm;         \/\/\/< construct the quadratic form in the graph$/;"	m	struct:g2o::G2OBatchStatistics
timeResiduals	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    double timeResiduals;             \/\/\/< residuals$/;"	m	struct:g2o::G2OBatchStatistics
timeSchurComplement	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    double timeSchurComplement;      \/\/\/< compute schur complement (0 if not done)$/;"	m	struct:g2o::G2OBatchStatistics
timeSymbolicDecomposition	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    double timeSymbolicDecomposition; \/\/\/< symbolic decomposition (0 if not done)$/;"	m	struct:g2o::G2OBatchStatistics
timeUpdate	./Thirdparty/g2o/g2o/core/batch_stats.h	/^    double timeUpdate;                \/\/\/< time to apply the update$/;"	m	struct:g2o::G2OBatchStatistics
timeval	./Thirdparty/g2o/g2o/stuff/timeutil.h	/^typedef struct timeval {$/;"	s	namespace:g2o
timeval	./Thirdparty/g2o/g2o/stuff/timeutil.h	/^} timeval;$/;"	t	namespace:g2o	typeref:struct:g2o::timeval
timezone	./Thirdparty/g2o/g2o/stuff/timeutil.cpp	/^struct timezone$/;"	s	namespace:g2o	file:
toCvMat	./src/Converter.cc	/^cv::Mat Converter::toCvMat(const Eigen::Matrix3d &m)$/;"	f	class:ORB_SLAM2::Converter
toCvMat	./src/Converter.cc	/^cv::Mat Converter::toCvMat(const Eigen::Matrix<double,3,1> &m)$/;"	f	class:ORB_SLAM2::Converter
toCvMat	./src/Converter.cc	/^cv::Mat Converter::toCvMat(const Eigen::Matrix<double,4,4> &m)$/;"	f	class:ORB_SLAM2::Converter
toCvMat	./src/Converter.cc	/^cv::Mat Converter::toCvMat(const float x, const float y, const float z, const float w) {$/;"	f	class:ORB_SLAM2::Converter
toCvMat	./src/Converter.cc	/^cv::Mat Converter::toCvMat(const g2o::SE3Quat &SE3)$/;"	f	class:ORB_SLAM2::Converter
toCvMat	./src/Converter.cc	/^cv::Mat Converter::toCvMat(const g2o::Sim3 &Sim3)$/;"	f	class:ORB_SLAM2::Converter
toCvSE3	./src/Converter.cc	/^cv::Mat Converter::toCvSE3(const Eigen::Matrix<double,3,3> &R, const Eigen::Matrix<double,3,1> &t)$/;"	f	class:ORB_SLAM2::Converter
toDense	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Matrix<Scalar,RowsAtCompileTime,ColsAtCompileTime> toDense() const$/;"	f	class:Eigen::SparseMatrixBase
toDenseMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^    DenseMatrixType toDenseMatrix() const$/;"	f	class:Eigen::internal::BandMatrixBase
toDenseMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^    DenseMatrixType toDenseMatrix() const { return derived(); }$/;"	f	class:Eigen::DiagonalBase
toDenseMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    DenseMatrixType toDenseMatrix() const { return *this; }$/;"	f	class:Eigen::Transpose
toDenseMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    DenseMatrixType toDenseMatrix() const$/;"	f	class:Eigen::PermutationBase
toDenseMatrix	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    DenseMatrixType toDenseMatrix() const$/;"	f	class:Eigen::TriangularBase
toDescriptorVector	./src/Converter.cc	/^std::vector<cv::Mat> Converter::toDescriptorVector(const cv::Mat &Descriptors)$/;"	f	class:ORB_SLAM2::Converter
toMat32F	./Thirdparty/DBoW2/DBoW2/FORB.cpp	/^void FORB::toMat32F(const std::vector<TDescriptor> &descriptors, $/;"	f	class:DBoW2::FORB
toMat8U	./Thirdparty/DBoW2/DBoW2/FORB.cpp	/^void FORB::toMat8U(const std::vector<TDescriptor> &descriptors, $/;"	f	class:DBoW2::FORB
toMatrix3d	./src/Converter.cc	/^Eigen::Matrix<double,3,3> Converter::toMatrix3d(const cv::Mat &cvMat3)$/;"	f	class:ORB_SLAM2::Converter
toMinimalVector	./Thirdparty/g2o/g2o/types/se3quat.h	/^      inline Vector6d toMinimalVector() const{$/;"	f	class:g2o::SE3Quat
toQMatrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^QMatrix Transform<Scalar,Dim>::toQMatrix(void) const$/;"	f	class:Eigen::Transform
toQMatrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^QMatrix Transform<Scalar,Dim,Mode,Options>::toQMatrix(void) const$/;"	f	class:Eigen::Transform
toQTransform	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^QTransform Transform<Scalar,Dim>::toQTransform(void) const$/;"	f	class:Eigen::Transform
toQTransform	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^QTransform Transform<Scalar,Dim,Mode,Options>::toQTransform(void) const$/;"	f	class:Eigen::Transform
toQuaternion	./src/Converter.cc	/^std::vector<float> Converter::toQuaternion(const cv::Mat &M)$/;"	f	class:ORB_SLAM2::Converter
toRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^AngleAxis<Scalar>::toRotationMatrix(void) const$/;"	f	class:Eigen::AngleAxis
toRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^Quaternion<Scalar>::toRotationMatrix(void) const$/;"	f	class:Eigen::Quaternion
toRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^Rotation2D<Scalar>::toRotationMatrix(void) const$/;"	f	class:Eigen::Rotation2D
toRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    inline RotationMatrixType toRotationMatrix() const { return derived().toRotationMatrix(); }$/;"	f	class:Eigen::RotationBase
toRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^AngleAxis<Scalar>::toRotationMatrix(void) const$/;"	f	class:Eigen::AngleAxis
toRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::toRotationMatrix(void) const$/;"	f	class:Eigen::QuaternionBase
toRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^Rotation2D<Scalar>::toRotationMatrix(void) const$/;"	f	class:Eigen::Rotation2D
toRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^    inline RotationMatrixType toRotationMatrix() const { return derived().toRotationMatrix(); }$/;"	f	class:Eigen::RotationBase
toRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^static inline Matrix<Scalar,2,2> toRotationMatrix(const Scalar& s)$/;"	f	namespace:Eigen::internal
toRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^static inline Matrix<Scalar,Dim,Dim> toRotationMatrix(const RotationBase<OtherDerived,Dim>& r)$/;"	f	namespace:Eigen::internal
toRotationMatrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/RotationBase.h	/^static inline const MatrixBase<OtherDerived>& toRotationMatrix(const MatrixBase<OtherDerived>& mat)$/;"	f	namespace:Eigen::internal
toSE3Quat	./src/Converter.cc	/^g2o::SE3Quat Converter::toSE3Quat(const cv::Mat &cvT)$/;"	f	class:ORB_SLAM2::Converter
toString	./Thirdparty/DBoW2/DBoW2/FORB.cpp	/^std::string FORB::toString(const FORB::TDescriptor &a)$/;"	f	class:DBoW2::FORB
toString	./Thirdparty/g2o/g2o/stuff/property.h	/^      virtual std::string toString() const$/;"	f	class:g2o::Property
toVector	./Thirdparty/g2o/g2o/types/se3quat.h	/^      inline Vector7d toVector() const{$/;"	f	class:g2o::SE3Quat
toVector3d	./src/Converter.cc	/^Eigen::Matrix<double,3,1> Converter::toVector3d(const cv::Mat &cvVector)$/;"	f	class:ORB_SLAM2::Converter
toVector3d	./src/Converter.cc	/^Eigen::Matrix<double,3,1> Converter::toVector3d(const cv::Point3f &cvPoint)$/;"	f	class:ORB_SLAM2::Converter
to_homogeneous_matrix	./Thirdparty/g2o/g2o/types/se3quat.h	/^      Matrix<double,4,4> to_homogeneous_matrix() const$/;"	f	class:g2o::SE3Quat
tolerance	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  RealScalar tolerance() const { return m_tolerance; }$/;"	f	class:Eigen::IterativeSolverBase
topLeftCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> topLeftCorner()$/;"	f
topLeftCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> topLeftCorner(Index cRows, Index cCols)$/;"	f
topLeftCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived> topLeftCorner(Index cRows, Index cCols)$/;"	f
topLeftCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> topLeftCorner() const$/;"	f
topLeftCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> topLeftCorner(Index cRows, Index cCols) const$/;"	f
topLeftCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived> topLeftCorner(Index cRows, Index cCols) const$/;"	f
topRightCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> topRightCorner()$/;"	f
topRightCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> topRightCorner(Index cRows, Index cCols)$/;"	f
topRightCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived> topRightCorner(Index cRows, Index cCols)$/;"	f
topRightCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> topRightCorner() const$/;"	f
topRightCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> topRightCorner(Index cRows, Index cCols) const$/;"	f
topRightCorner	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived> topRightCorner(Index cRows, Index cCols) const$/;"	f
topRows	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline ConstRowsBlockXpr topRows(Index n) const$/;"	f
topRows	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline RowsBlockXpr topRows(Index n)$/;"	f
topRows	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNRowsBlockXpr<N>::Type topRows(Index n = N) const$/;"	f
topRows	./Thirdparty/sparseicp/include/Eigen/src/plugins/BlockMethods.h	/^inline typename NRowsBlockXpr<N>::Type topRows(Index n = N)$/;"	f
trace	./Thirdparty/sparseicp/include/Eigen/src/Core/Redux.h	/^MatrixBase<Derived>::trace() const$/;"	f	class:Eigen::MatrixBase
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Array.h	/^struct traits<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> > : traits<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^struct traits<ArrayWrapper<ExpressionType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^struct traits<MatrixWrapper<ExpressionType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^struct traits<BandMatrix<_Scalar,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/BandMatrix.h	/^struct traits<BandMatrixWrapper<_CoefficientsType,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^struct traits<Block<XprType, BlockRows, BlockCols, InnerPanel> > : traits<XprType>$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseBinaryOp.h	/^struct traits<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseNullaryOp.h	/^struct traits<CwiseNullaryOp<NullaryOp, PlainObjectType> > : traits<PlainObjectType>$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryOp.h	/^struct traits<CwiseUnaryOp<UnaryOp, XprType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/CwiseUnaryView.h	/^struct traits<CwiseUnaryView<ViewOp, MatrixType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Diagonal.h	/^struct traits<Diagonal<MatrixType,DiagIndex> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^struct traits<DiagonalMatrix<_Scalar,SizeAtCompileTime,MaxSizeAtCompileTime> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalMatrix.h	/^struct traits<DiagonalWrapper<_DiagonalVectorType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/DiagonalProduct.h	/^struct traits<DiagonalProduct<MatrixType, DiagonalType, ProductOrder> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^struct traits<Flagged<ExpressionType, Added, Removed> > : traits<ExpressionType>$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^struct traits<ForceAlignedAccess<ExpressionType> > : public traits<ExpressionType>$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^struct traits<GeneralProduct<Lhs,Rhs,GemvProduct> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^struct traits<GeneralProduct<Lhs,Rhs,InnerProduct> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^struct traits<GeneralProduct<Lhs,Rhs,OuterProduct> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Map.h	/^struct traits<Map<PlainObjectType, MapOptions, StrideType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Matrix.h	/^struct traits<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^struct traits<NestByValue<ExpressionType> > : public traits<ExpressionType>$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^struct traits<Map<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, IndexType>,_PacketAccess> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^struct traits<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, IndexType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^struct traits<PermutationWrapper<_IndicesType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^struct traits<Transpose<PermutationBase<Derived> > >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^struct traits<permut_matrix_product_retval<PermutationType, MatrixType, Side, Transposed> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^struct traits<ProductBase<Derived,_Lhs,_Rhs> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^struct traits<ScaledProduct<NestedProduct> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^struct traits<Ref<_PlainObjectType, _Options, _StrideType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^struct traits<RefBase<Derived> > : public traits<Derived> {};$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Replicate.h	/^struct traits<Replicate<MatrixType,RowFactor,ColFactor> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^struct traits<ReturnByValue<Derived> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^struct traits<Reverse<MatrixType, Direction> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Select.h	/^struct traits<Select<ConditionMatrixType, ThenMatrixType, ElseMatrixType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^struct traits<SelfAdjointView<MatrixType, UpLo> > : traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfCwiseBinaryOp.h	/^struct traits<SelfCwiseBinaryOp<BinaryOp,Lhs,Rhs> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^struct traits<triangular_solve_retval<Side, TriangularType, Rhs> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Swap.h	/^struct traits<SwapWrapper<ExpressionType> > : traits<ExpressionType> {};$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^struct traits<Transpose<MatrixType> > : traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^struct traits<Map<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,IndexType>,_PacketAccess> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^struct traits<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,IndexType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^struct traits<TranspositionsWrapper<_IndicesType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^struct traits<transposition_matrix_product_retval<TranspositionType, MatrixType, Side, Transposed> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^struct traits<TriangularView<MatrixType, _Mode> > : traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorBlock.h	/^struct traits<VectorBlock<VectorType, Size> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^struct traits<PartialReduxExpr<MatrixType, MemberOp, Direction> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct traits<CoeffBasedProduct<LhsNested,RhsNested,NestingFlags> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct traits<GeneralProduct<Lhs,Rhs,GemmProduct> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct traits<SelfadjointProductMatrix<Lhs,LhsMode,false,Rhs,RhsMode,false> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct traits<SelfadjointProductMatrix<Lhs,0,true,Rhs,RhsMode,false> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct traits<SelfadjointProductMatrix<Lhs,LhsMode,false,Rhs,0,true> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct traits<TriangularProduct<Mode,LhsIsTriangular,Lhs,false,Rhs,false> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct traits<TriangularProduct<Mode,LhsIsTriangular,Lhs,false,Rhs,true> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct traits<TriangularProduct<Mode,LhsIsTriangular,Lhs,true,Rhs,false> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Core/util/ForwardDeclarations.h	/^template<typename T> struct traits<const T> : traits<T> {};$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Minor.h	/^struct traits<Minor<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^struct traits<HessenbergDecompositionMatrixHReturnType<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct traits<TridiagonalizationMatrixTReturnType<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AngleAxis.h	/^template<typename _Scalar> struct traits<AngleAxis<_Scalar> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^struct traits<Homogeneous<MatrixType,Direction> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^struct traits<homogeneous_left_product_impl<Homogeneous<MatrixType,Vertical>,Lhs> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^struct traits<homogeneous_right_product_impl<Homogeneous<MatrixType,Horizontal>,Rhs> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  struct traits<Map<Quaternion<_Scalar>, _Options> > : traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  struct traits<Map<const Quaternion<_Scalar>, _Options> > : traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^struct traits<Quaternion<_Scalar,_Options> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Rotation2D.h	/^template<typename _Scalar> struct traits<Rotation2D<_Scalar> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^struct traits<HouseholderSequence<VectorsType,CoeffsType,Side> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^struct traits<BiCGSTAB<_MatrixType,_Preconditioner> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^struct traits<ConjugateGradient<_MatrixType,_UpLo,_Preconditioner> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/LU/Inverse.h	/^struct traits<inverse_impl<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/QR/FullPivHouseholderQR.h	/^struct traits<FullPivHouseholderQRMatrixQReturnType<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    template <typename SPQRType, typename Derived> struct traits<SPQR_QProduct<SPQRType, Derived> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    template <typename SPQRType> struct traits<SPQRMatrixQReturnType<SPQRType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    template <typename SPQRType> struct traits<SPQRMatrixQTransposeReturnType<SPQRType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^template<typename _MatrixType, int _UpLo> struct traits<SimplicialCholesky<_MatrixType,_UpLo> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^template<typename _MatrixType, int _UpLo> struct traits<SimplicialLLT<_MatrixType,_UpLo> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^template<typename _MatrixType,int _UpLo> struct traits<SimplicialLDLT<_MatrixType,_UpLo> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^struct traits<MappedSparseMatrix<_Scalar, _Flags, _Index> > : traits<SparseMatrix<_Scalar, _Flags, _Index> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct traits<DenseTimeSparseProduct<Lhs,Rhs> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct traits<SparseDenseOuterProduct<Lhs,Rhs,Tr> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct traits<SparseTimeDenseProduct<Lhs,Rhs> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^struct traits<SparseDiagonalProduct<Lhs, Rhs> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^struct traits<Diagonal<const SparseMatrix<_Scalar, _Options, _Index>, DiagIndex> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^struct traits<SparseMatrix<_Scalar, _Options, _Index> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparsePermutation.h	/^struct traits<permut_sparsematrix_product_retval<PermutationType, MatrixType, Side, Transposed> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseProduct.h	/^struct traits<SparseSparseProduct<LhsNested, RhsNested> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct traits<DenseTimeSparseSelfAdjointProduct<Lhs,Rhs,UpLo> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct traits<SparseSelfAdjointTimeDenseProduct<Lhs,Rhs,UpLo> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct traits<SparseSelfAdjointView<MatrixType,UpLo> > : traits<MatrixType> {$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct traits<SparseSymmetricPermutationProduct<MatrixType,UpLo> > : traits<MatrixType> {$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^struct traits<SparseTriangularView<MatrixType,Mode> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^struct traits<SparseVector<_Scalar, _Options, _Index> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseView.h	/^struct traits<SparseView<MatrixType> > : traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  template <typename SparseQRType, typename Derived> struct traits<SparseQR_QProduct<SparseQRType, Derived> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  template <typename SparseQRType> struct traits<SparseQRMatrixQReturnType<SparseQRType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  template <typename SparseQRType> struct traits<SparseQRMatrixQTransposeReturnType<SparseQRType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/misc/Image.h	/^struct traits<image_retval_base<DecompositionType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/misc/Kernel.h	/^struct traits<kernel_retval_base<DecompositionType> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/misc/Solve.h	/^struct traits<solve_retval_base<DecompositionType, Rhs> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^struct traits<solve_retval_with_guess<DecompositionType, Rhs, Guess> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/Eigen/src/misc/SparseSolve.h	/^struct traits<sparse_solve_retval_base<DecompositionType, Rhs> >$/;"	s	namespace:Eigen::internal
traits	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		struct traits {$/;"	s	struct:nanoflann::metric_L1
traits	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		struct traits {$/;"	s	struct:nanoflann::metric_L2
traits	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		struct traits {$/;"	s	struct:nanoflann::metric_L2_Simple
trans	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    bool trans() const { return m_trans; }     \/**< \\brief Returns the transpose flag. *\/$/;"	f	class:Eigen::HouseholderSequence
transform	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^WordId TemplatedVocabulary<TDescriptor, F>::transform$/;"	f	class:DBoW2::TemplatedVocabulary
transform	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::transform$/;"	f	class:DBoW2::TemplatedVocabulary
transform	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::transform($/;"	f	class:DBoW2::TemplatedVocabulary
transform	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^void TemplatedVocabulary<TDescriptor,F>::transform(const TDescriptor &feature, $/;"	f	class:DBoW2::TemplatedVocabulary
transform	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline Hyperplane& transform(const MatrixBase<XprType>& mat, TransformTraits traits = Affine)$/;"	f	class:Eigen::Hyperplane
transform	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline Hyperplane& transform(const Transform<Scalar,AmbientDimAtCompileTime>& t,$/;"	f	class:Eigen::Hyperplane
transform	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  inline Hyperplane& transform(const MatrixBase<XprType>& mat, TransformTraits traits = Affine)$/;"	f	class:Eigen::Hyperplane
transform	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  inline Hyperplane& transform(const Transform<Scalar,AmbientDimAtCompileTime,Affine,TrOptions>& t,$/;"	f	class:Eigen::Hyperplane
transform_	./4pcs/Registration.h	/^            Eigen::Matrix4f transform_;$/;"	m	class:pcl::FPCS::FPCSRegistration
transform_construct_from_matrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, AffineCompact,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_construct_from_matrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, Mode,Options,Dim,HDim, Dim,Dim>$/;"	s	namespace:Eigen::internal
transform_construct_from_matrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, Mode,Options,Dim,HDim, Dim,HDim>$/;"	s	namespace:Eigen::internal
transform_construct_from_matrix	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, Mode,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_gt_	./4pcs/Registration.h	/^            Eigen::Matrix4f transform_gt_;$/;"	m	class:pcl::FPCS::FPCSRegistration
transform_left_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,AffineCompact,Options,Dim,HDim, Dim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,AffineCompact,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,Mode,Options,Dim,HDim, Dim,Dim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,Mode,Options,Dim,HDim, Dim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,Mode,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_product_result	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_product_result$/;"	s	namespace:Eigen::internal
transform_right_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_right_product_impl< TransformType, MatrixType, 0 >$/;"	s	namespace:Eigen::internal
transform_right_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_right_product_impl< TransformType, MatrixType, 1 >$/;"	s	namespace:Eigen::internal
transform_right_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_right_product_impl< TransformType, MatrixType, 2 >$/;"	s	namespace:Eigen::internal
transform_take_affine_part	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_take_affine_part<Transform<Scalar,Dim,AffineCompact, Options> > {$/;"	s	namespace:Eigen::internal
transform_take_affine_part	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^template<typename TransformType> struct transform_take_affine_part {$/;"	s	namespace:Eigen::internal
transform_traits	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_traits$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,AffineCompact,LhsOptions>,Transform<Scalar,Dim,Projective,RhsOptions>,true >$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,LhsMode,LhsOptions>,Transform<Scalar,Dim,RhsMode,RhsOptions>,false >$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,LhsMode,LhsOptions>,Transform<Scalar,Dim,RhsMode,RhsOptions>,true >$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,Projective,LhsOptions>,Transform<Scalar,Dim,AffineCompact,RhsOptions>,true >$/;"	s	namespace:Eigen::internal
translate	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline AlignedBox& translate(const VectorType& t)$/;"	f	class:Eigen::AlignedBox
translate	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::translate(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
translate	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox& translate(const MatrixBase<Derived>& a_t)$/;"	f	class:Eigen::AlignedBox
translate	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::translate(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
translation	./Thirdparty/g2o/g2o/types/se3quat.h	/^      inline const Vector3d& translation() const {return _t;}$/;"	f	class:g2o::SE3Quat
translation	./Thirdparty/g2o/g2o/types/sim3.h	/^    inline Vector3d& translation() {return t;}$/;"	f	struct:g2o::Sim3
translation	./Thirdparty/g2o/g2o/types/sim3.h	/^    inline const Vector3d& translation() const {return t;}$/;"	f	struct:g2o::Sim3
translation	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline ConstTranslationPart translation() const { return m_matrix.template block<Dim,1>(0,Dim); }$/;"	f	class:Eigen::Transform
translation	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline TranslationPart translation() { return m_matrix.template block<Dim,1>(0,Dim); }$/;"	f	class:Eigen::Transform
translation	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline ConstTranslationPart translation() const { return ConstTranslationPart(m_matrix,0,Dim); }$/;"	f	class:Eigen::Transform
translation	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline TranslationPart translation() { return TranslationPart(m_matrix,0,Dim); }$/;"	f	class:Eigen::Transform
translation	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  VectorType& translation() { return m_coeffs; }$/;"	f	class:Eigen::Translation
translation	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  const VectorType& translation() const { return m_coeffs; }$/;"	f	class:Eigen::Translation
translationExt	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,1> translationExt()$/;"	f	class:Eigen::Transform
translationExt	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Transform.h	/^  inline const Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,1> translationExt() const$/;"	f	class:Eigen::Transform
transpose	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  bool SparseBlockMatrix<MatrixType>::transpose(SparseBlockMatrix<MatrixTransposedType>*& dest) const {$/;"	f	class:g2o::SparseBlockMatrix
transpose	./Thirdparty/sparseicp/include/Eigen/src/Core/PermutationMatrix.h	/^    inline Transpose<PermutationBase> transpose() const$/;"	f	class:Eigen::PermutationBase
transpose	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^DenseBase<Derived>::transpose() const$/;"	f	class:Eigen::DenseBase
transpose	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^DenseBase<Derived>::transpose()$/;"	f	class:Eigen::DenseBase
transpose	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    inline Transpose<TranspositionsBase> transpose() const$/;"	f	class:Eigen::TranspositionsBase
transpose	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline TriangularView<Transpose<MatrixType>,TransposeMode> transpose()$/;"	f	class:Eigen::TriangularView
transpose	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^    inline const TriangularView<Transpose<MatrixType>,TransposeMode> transpose() const$/;"	f	class:Eigen::TriangularView
transpose	./Thirdparty/sparseicp/include/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence transpose() const$/;"	f	class:Eigen::HouseholderSequence
transpose	./Thirdparty/sparseicp/include/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation transpose() const { using numext::conj; return JacobiRotation(m_c, -conj(m_s)); }$/;"	f	class:Eigen::JacobiRotation
transpose	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQRMatrixQTransposeReturnType<SPQRType> transpose() const$/;"	f	struct:Eigen::SPQRMatrixQReturnType
transpose	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Transpose<Derived> transpose() { return derived(); }$/;"	f	class:Eigen::SparseMatrixBase
transpose	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    const Transpose<const Derived> transpose() const { return derived(); }$/;"	f	class:Eigen::SparseMatrixBase
transpose	./Thirdparty/sparseicp/include/Eigen/src/SparseQR/SparseQR.h	/^  SparseQRMatrixQTransposeReturnType<SparseQRType> transpose() const$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
transposeInPlace	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^inline void DenseBase<Derived>::transposeInPlace()$/;"	f	class:Eigen::DenseBase
transposed	./Thirdparty/g2o/g2o/core/base_multi_edge.h	/^        bool transposed;          \/\/\/< the block has to be transposed$/;"	m	struct:g2o::BaseMultiEdge::HessianHelper
transposition_matrix_product_retval	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^    transposition_matrix_product_retval(const TranspositionType& tr, const MatrixType& matrix)$/;"	f	struct:Eigen::internal::transposition_matrix_product_retval
transposition_matrix_product_retval	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpositions.h	/^struct transposition_matrix_product_retval$/;"	s	namespace:Eigen::internal
transpositionsP	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    inline const TranspositionType& transpositionsP() const$/;"	f	class:Eigen::LDLT
treePostorder	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseColEtree.h	/^void treePostorder(Index n, IndexVector& parent, IndexVector& post)$/;"	f	namespace:Eigen::internal
triangularView	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^MatrixBase<Derived>::triangularView() const$/;"	f	class:Eigen::MatrixBase
triangularView	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^MatrixBase<Derived>::triangularView()$/;"	f	class:Eigen::MatrixBase
triangularView	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^SparseMatrixBase<Derived>::triangularView() const$/;"	f	class:Eigen::SparseMatrixBase
triangular_assignment_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^struct triangular_assignment_selector<Derived1, Derived2, (SelfAdjoint|Lower), UnrollCount, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^struct triangular_assignment_selector<Derived1, Derived2, (SelfAdjoint|Upper), UnrollCount, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^struct triangular_assignment_selector<Derived1, Derived2, SelfAdjoint|Lower, 0, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^struct triangular_assignment_selector<Derived1, Derived2, SelfAdjoint|Lower, Dynamic, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^struct triangular_assignment_selector<Derived1, Derived2, SelfAdjoint|Upper, 0, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/SelfAdjointView.h	/^struct triangular_assignment_selector<Derived1, Derived2, SelfAdjoint|Upper, Dynamic, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_selector$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_selector<Derived1, Derived2, Lower, Dynamic, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_selector<Derived1, Derived2, Mode, 0, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_selector<Derived1, Derived2, StrictlyLower, Dynamic, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_selector<Derived1, Derived2, StrictlyUpper, Dynamic, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_selector<Derived1, Derived2, UnitLower, Dynamic, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_selector<Derived1, Derived2, UnitUpper, Dynamic, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_selector<Derived1, Derived2, Upper, Dynamic, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_matrix_vector_product	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct triangular_matrix_vector_product<Index,Mode,LhsScalar,ConjLhs,RhsScalar,ConjRhs,ColMajor,Version>$/;"	s	namespace:Eigen::internal
triangular_matrix_vector_product	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct triangular_matrix_vector_product<Index,Mode,LhsScalar,ConjLhs,RhsScalar,ConjRhs,RowMajor,Version>$/;"	s	namespace:Eigen::internal
triangular_matrix_vector_product_trmv	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	/^struct triangular_matrix_vector_product_trmv :$/;"	s	namespace:Eigen::internal
triangular_solve_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverMatrix.h	/^struct triangular_solve_matrix<Scalar,Index,OnTheLeft,Mode,Conjugate,TriStorageOrder,ColMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverMatrix.h	/^struct triangular_solve_matrix<Scalar,Index,OnTheRight,Mode,Conjugate,TriStorageOrder,ColMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_matrix	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverMatrix.h	/^struct triangular_solve_matrix<Scalar,Index,Side,Mode,Conjugate,TriStorageOrder,RowMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_retval	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^  triangular_solve_retval(const TriangularType& tri, const Rhs& rhs)$/;"	f	struct:Eigen::internal::triangular_solve_retval
triangular_solve_retval	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^template<int Side, typename TriangularType, typename Rhs> struct triangular_solve_retval$/;"	s	namespace:Eigen::internal
triangular_solve_vector	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverVector.h	/^struct triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheLeft, Mode, Conjugate, ColMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_vector	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverVector.h	/^struct triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheLeft, Mode, Conjugate, RowMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_vector	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularSolverVector.h	/^struct triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheRight, Mode, Conjugate, StorageOrder>$/;"	s	namespace:Eigen::internal
triangular_solver_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,OnTheLeft,Mode,CompleteUnrolling,1> {$/;"	s	namespace:Eigen::internal
triangular_solver_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,OnTheRight,Mode,CompleteUnrolling,1> {$/;"	s	namespace:Eigen::internal
triangular_solver_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,Side,Mode,NoUnrolling,1>$/;"	s	namespace:Eigen::internal
triangular_solver_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,Side,Mode,NoUnrolling,Dynamic>$/;"	s	namespace:Eigen::internal
triangular_solver_unroller	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_unroller<Lhs,Rhs,Mode,Index,Size,false> {$/;"	s	namespace:Eigen::internal
triangular_solver_unroller	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_unroller<Lhs,Rhs,Mode,Index,Size,true> {$/;"	s	namespace:Eigen::internal
tribb_kernel	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct tribb_kernel$/;"	s	namespace:Eigen::internal
tridiagonal_qr_step	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^static void tridiagonal_qr_step(RealScalar* diag, RealScalar* subdiag, Index start, Index end, Scalar* matrixQ, Index n)$/;"	f	namespace:Eigen::internal
tridiagonalization_inplace	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^void tridiagonalization_inplace(MatrixType& mat, DiagonalType& diag, SubDiagonalType& subdiag, bool extractQ)$/;"	f	namespace:Eigen::internal
tridiagonalization_inplace	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^void tridiagonalization_inplace(MatrixType& matA, CoeffVectorType& hCoeffs)$/;"	f	namespace:Eigen::internal
tridiagonalization_inplace_selector	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct tridiagonalization_inplace_selector$/;"	s	namespace:Eigen::internal
tridiagonalization_inplace_selector	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct tridiagonalization_inplace_selector<MatrixType,1,IsComplex>$/;"	s	namespace:Eigen::internal
tridiagonalization_inplace_selector	./Thirdparty/sparseicp/include/Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct tridiagonalization_inplace_selector<MatrixType,3,false>$/;"	s	namespace:Eigen::internal
trim	./Thirdparty/g2o/g2o/stuff/string_tools.cpp	/^std::string trim(const std::string& s)$/;"	f	namespace:g2o
trimLeft	./Thirdparty/g2o/g2o/stuff/string_tools.cpp	/^std::string trimLeft(const std::string& s)$/;"	f	namespace:g2o
trimRight	./Thirdparty/g2o/g2o/stuff/string_tools.cpp	/^std::string trimRight(const std::string& s)$/;"	f	namespace:g2o
trimmed_weight	./Thirdparty/sparseicp/ICP.h	/^    void trimmed_weight(Eigen::VectorXd& r, double p) {$/;"	f	namespace:ICP
trmv_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^template<> struct trmv_selector<ColMajor>$/;"	s	namespace:Eigen::internal
trmv_selector	./Thirdparty/sparseicp/include/Eigen/src/Core/products/TriangularMatrixVector.h	/^template<> struct trmv_selector<RowMajor>$/;"	s	namespace:Eigen::internal
trsolve_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/SolveTriangular.h	/^class trsolve_traits$/;"	c	namespace:Eigen::internal
true_type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct true_type {  enum { value = 1 }; };$/;"	s	namespace:Eigen::internal
trustRegion	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      double trustRegion() const { return _delta;}$/;"	f	class:g2o::OptimizationAlgorithmDogleg
tukey_weight	./Thirdparty/sparseicp/ICP.h	/^    void tukey_weight(Eigen::VectorXd& r, double p) {$/;"	f	namespace:ICP
tv_sec	./Thirdparty/g2o/g2o/stuff/timeutil.h	/^  long tv_sec;$/;"	m	struct:g2o::timeval
tv_usec	./Thirdparty/g2o/g2o/stuff/timeutil.h	/^  long tv_usec;$/;"	m	struct:g2o::timeval
twistedBy	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrixBase.h	/^    SparseSymmetricPermutationProduct<Derived,Upper|Lower> twistedBy(const PermutationMatrix<Dynamic,Dynamic,Index>& perm) const$/;"	f	class:Eigen::SparseMatrixBase
twistedBy	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSymmetricPermutationProduct<_MatrixTypeNested,UpLo> twistedBy(const PermutationMatrix<Dynamic,Dynamic,Index>& perm) const$/;"	f	class:Eigen::SparseSelfAdjointView
type	./Thirdparty/g2o/g2o/core/cache.h	/^          const std::string& type() const { return _type;}$/;"	f	class:g2o::Cache::CacheKey
type	./Thirdparty/g2o/g2o/core/optimization_algorithm_property.h	/^  std::string type;           \/\/\/< type of solver, e.g., "CSparse Cholesky", "PCG"$/;"	m	struct:g2o::OptimizationAlgorithmProperty
type	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^  typedef typename conditional<is_arithmetic<T>::value, T, typename add_const_on_value_type<T>::type>::type type;$/;"	t	struct:Eigen::internal::add_const_on_value_type_if_arithmetic
type	./Thirdparty/sparseicp/include/Eigen/src/Core/GenericPacketMath.h	/^  typedef T type;$/;"	t	struct:Eigen::internal::packet_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::atanh2_retval
type	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::conj_retval
type	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::pow_retval
type	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::random_retval
type	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef T type;$/;"	t	struct:Eigen::internal::global_math_functions_filtering_base
type	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real & type;$/;"	t	struct:Eigen::internal::imag_ref_retval
type	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real & type;$/;"	t	struct:Eigen::internal::real_ref_retval
type	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::abs2_retval
type	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::hypot_retval
type	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::imag_retval
type	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::norm1_retval
type	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::real_retval
type	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  typedef typename T::Eigen_BaseClassForSpecializationOfGlobalMathFuncImpl type;$/;"	t	struct:Eigen::internal::global_math_functions_filtering_base
type	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^template<typename T> struct always_void { typedef void type; };$/;"	t	struct:Eigen::internal::always_void
type	./Thirdparty/sparseicp/include/Eigen/src/Core/MatrixBase.h	/^      typedef Matrix<Scalar,MatrixBase::RowsAtCompileTime,MatrixBase::ColsAtCompileTime> type;$/;"	t	struct:Eigen::MatrixBase::cross_product_return_type
type	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedAlignedMapType { typedef Eigen::Map<Derived, Aligned, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedAlignedMapType
type	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstAlignedMapType { typedef Eigen::Map<const Derived, Aligned, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedConstAlignedMapType
type	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstMapType { typedef Eigen::Map<const Derived, Unaligned, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedConstMapType
type	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedMapType { typedef Eigen::Map<Derived, Unaligned, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedMapType
type	./Thirdparty/sparseicp/include/Eigen/src/Core/ProductBase.h	/^  typedef PlainObject const& type;$/;"	t	struct:Eigen::internal::nested
type	./Thirdparty/sparseicp/include/Eigen/src/Core/Ref.h	/^    typedef typename internal::conditional<MatchAtCompileTime,internal::true_type,internal::false_type>::type type;$/;"	t	struct:Eigen::internal::traits::match
type	./Thirdparty/sparseicp/include/Eigen/src/Core/ReturnByValue.h	/^  typedef typename traits<Derived>::ReturnType type;$/;"	t	struct:Eigen::internal::nested
type	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^  typedef typename dense_xpr_base<Transpose<MatrixType> >::type type;$/;"	t	struct:Eigen::internal::TransposeImpl_base
type	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^      typedef typename ProdRetType::PlainObject type;$/;"	t	struct:Eigen::TriangularView::eigen2_product_return_type
type	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^  typedef SelfAdjointView<MatrixType, Upper> type;$/;"	t	struct:Eigen::internal::eigen2_part_return_type
type	./Thirdparty/sparseicp/include/Eigen/src/Core/TriangularMatrix.h	/^  typedef TriangularView<MatrixType, Mode> type;$/;"	t	struct:Eigen::internal::eigen2_part_return_type
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^  typedef Packet2cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet4f type;$/;"	t	struct:Eigen::internal::packet_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet4i type;$/;"	t	struct:Eigen::internal::packet_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^  typedef Packet2cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet4f type;$/;"	t	struct:Eigen::internal::packet_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet4i type;$/;"	t	struct:Eigen::internal::packet_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  typedef Packet1cd type;$/;"	t	struct:Eigen::internal::packet_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  typedef Packet2cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet2d type;$/;"	t	struct:Eigen::internal::packet_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet4f type;$/;"	t	struct:Eigen::internal::packet_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet4i type;$/;"	t	struct:Eigen::internal::packet_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	./Thirdparty/sparseicp/include/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef PlainObject const& type;$/;"	t	struct:Eigen::internal::nested
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/ForwardDeclarations.h	/^  typedef ComplexScalar type(ComplexScalar, int);$/;"	t	struct:Eigen::internal::stem_function
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^    typedef typename binary_result_of_select<Func, ArgType0, ArgType1, FunctorType>::type type;$/;"	t	struct:Eigen::internal::result_of
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^    typedef typename unary_result_of_select<Func, ArgType, FunctorType>::type type;$/;"	t	struct:Eigen::internal::result_of
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select {typedef ArgType0 type;};$/;"	t	struct:Eigen::internal::binary_result_of_select
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct conditional <false, Then, Else> { typedef Else type; };$/;"	t	struct:Eigen::internal::conditional
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct conditional { typedef Then type; };$/;"	t	struct:Eigen::internal::conditional
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select {typedef ArgType type;};$/;"	t	struct:Eigen::internal::unary_result_of_select
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_std_result_type)> {typedef typename Func::result_type type;};$/;"	t	struct:Eigen::internal::unary_result_of_select
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_tr1_result)> {typedef typename Func::template result<Func(ArgType)>::type type;};$/;"	t	struct:Eigen::internal::unary_result_of_select
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template <class T, unsigned int Size> struct remove_const<const T[Size]> { typedef T type[Size]; };$/;"	t	struct:Eigen::internal::remove_const
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const { typedef T type; };$/;"	t	struct:Eigen::internal::remove_const
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_const
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T[]> { typedef T type[]; };$/;"	t	struct:Eigen::internal::remove_const
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const { typedef const T type; };$/;"	t	struct:Eigen::internal::add_const
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const<T&> { typedef T& type; };$/;"	t	struct:Eigen::internal::add_const
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type            { typedef const T type;  };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T const* const>  { typedef T const* const type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T&>        { typedef T const& type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T* const>  { typedef T const* const type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T*>        { typedef T const* type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all { typedef T type; };$/;"	t	struct:Eigen::internal::remove_all
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const&>  { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const*>  { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T&>        { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T*>        { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<const T>   { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer { typedef T type; };$/;"	t	struct:Eigen::internal::remove_pointer
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_pointer
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*const> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_pointer
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference { typedef T type; };$/;"	t	struct:Eigen::internal::remove_reference
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference<T&> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_reference
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^{ typedef T type; };$/;"	t	struct:Eigen::internal::enable_if
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^{typedef typename Func::result_type type;};$/;"	t	struct:Eigen::internal::binary_result_of_select
type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^{typedef typename Func::template result<Func(ArgType0,ArgType1)>::type type;};$/;"	t	struct:Eigen::internal::binary_result_of_select
type	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype { typedef T type; };$/;"	t	struct:Eigen::ei_cleantype
type	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<T&>        { typedef typename ei_cleantype<T>::type type; };$/;"	t	struct:Eigen::ei_cleantype
type	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<T*>        { typedef typename ei_cleantype<T>::type type; };$/;"	t	struct:Eigen::ei_cleantype
type	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<const T&>  { typedef typename ei_cleantype<T>::type type; };$/;"	t	struct:Eigen::ei_cleantype
type	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<const T*>  { typedef typename ei_cleantype<T>::type type; };$/;"	t	struct:Eigen::ei_cleantype
type	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<const T>   { typedef typename ei_cleantype<T>::type type; };$/;"	t	struct:Eigen::ei_cleantype
type	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unconst { typedef T type; };$/;"	t	struct:Eigen::ei_unconst
type	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unconst<T const &> { typedef T & type; };$/;"	t	struct:Eigen::ei_unconst
type	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unconst<T const *> { typedef T * type; };$/;"	t	struct:Eigen::ei_unconst
type	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unconst<const T> { typedef T type; };$/;"	t	struct:Eigen::ei_unconst
type	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unpointer { typedef T type; };$/;"	t	struct:Eigen::ei_unpointer
type	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unpointer<T*> { typedef T type; };$/;"	t	struct:Eigen::ei_unpointer
type	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unpointer<T*const> { typedef T type; };$/;"	t	struct:Eigen::ei_unpointer
type	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unref { typedef T type; };$/;"	t	struct:Eigen::ei_unref
type	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unref<T&> { typedef T type; };$/;"	t	struct:Eigen::ei_unref
type	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typedef MatrixOrTransformType type;$/;"	t	struct:Eigen::internal::take_matrix_for_product
type	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename TransformType::MatrixType type;$/;"	t	struct:Eigen::internal::take_matrix_for_product
type	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename internal::add_const<typename TransformType::ConstAffinePart>::type type;$/;"	t	struct:Eigen::internal::take_matrix_for_product
type	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Umeyama.h	/^  > type;$/;"	t	struct:Eigen::internal::umeyama_transform_matrix_type
type	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^    typedef Matrix<_Scalar, 1, 1> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseMatrix<_Scalar, _Options, _Index> type;$/;"	t	struct:Eigen::internal::plain_matrix_type
type	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseMatrix<_Scalar, _Options, _Index> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseVector<_Scalar, ColMajor, _Index> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseVector<_Scalar, RowMajor, _Index> type;$/;"	t	struct:Eigen::internal::sparse_eval
typeName	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^      const std::string& typeName() const { return _typeName;}$/;"	f	class:g2o::HyperGraphElementAction
types_six_dof_expmap	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.h	/^namespace types_six_dof_expmap {$/;"	n	namespace:g2o
tz_dsttime	./Thirdparty/g2o/g2o/stuff/timeutil.cpp	/^  int  tz_dsttime;     \/* type of dst correction *\/$/;"	m	struct:g2o::timezone	file:
tz_minuteswest	./Thirdparty/g2o/g2o/stuff/timeutil.cpp	/^  int  tz_minuteswest; \/* minutes W of Greenwich *\/$/;"	m	struct:g2o::timezone	file:
uc	./include/PnPsolver.h	/^  double uc, vc, fu, fv;$/;"	m	class:ORB_SLAM2::PnPsolver
uc	./include/PoseSolver.h	/^  double uc, vc, fu, fv;$/;"	m	class:ORB_SLAM2::PoseSolver
ucol	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  ScalarVector  ucol; \/\/ nonzero values of U ordered by columns $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
umax	./include/ORBextractor.h	/^    std::vector<int> umax;$/;"	m	class:ORB_SLAM2::ORBextractor
umeyama	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Umeyama.h	/^umeyama(const MatrixBase<Derived>& src, const MatrixBase<OtherDerived>& dst, bool with_scaling = true)$/;"	f	namespace:Eigen
umeyama_transform_matrix_type	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Umeyama.h	/^struct umeyama_transform_matrix_type$/;"	s	namespace:Eigen::internal
umfpack_free_numeric	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_numeric(void **Numeric, double)$/;"	f	namespace:Eigen
umfpack_free_numeric	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_numeric(void **Numeric, std::complex<double>)$/;"	f	namespace:Eigen
umfpack_free_symbolic	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_symbolic(void **Symbolic, double)$/;"	f	namespace:Eigen
umfpack_free_symbolic	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_symbolic(void **Symbolic, std::complex<double>)$/;"	f	namespace:Eigen
umfpack_get_determinant	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_determinant(double *Mx, double *Ex, void *NumericHandle, double User_Info [UMFPACK_INFO])$/;"	f	namespace:Eigen
umfpack_get_determinant	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_determinant(std::complex<double> *Mx, double *Ex, void *NumericHandle, double User_Info [UMFPACK_INFO])$/;"	f	namespace:Eigen
umfpack_get_lunz	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_lunz(int *lnz, int *unz, int *n_row, int *n_col, int *nz_udiag, void *Numeric, double)$/;"	f	namespace:Eigen
umfpack_get_lunz	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_lunz(int *lnz, int *unz, int *n_row, int *n_col, int *nz_udiag, void *Numeric, std::complex<double>)$/;"	f	namespace:Eigen
umfpack_get_numeric	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_numeric(int Lp[], int Lj[], double Lx[], int Up[], int Ui[], double Ux[],$/;"	f	namespace:Eigen
umfpack_get_numeric	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_numeric(int Lp[], int Lj[], std::complex<double> Lx[], int Up[], int Ui[], std::complex<double> Ux[],$/;"	f	namespace:Eigen
umfpack_numeric	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_numeric( const int Ap[], const int Ai[], const double Ax[],$/;"	f	namespace:Eigen
umfpack_numeric	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_numeric( const int Ap[], const int Ai[], const std::complex<double> Ax[],$/;"	f	namespace:Eigen
umfpack_solve	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_solve( int sys, const int Ap[], const int Ai[], const double Ax[],$/;"	f	namespace:Eigen
umfpack_solve	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_solve( int sys, const int Ap[], const int Ai[], const std::complex<double> Ax[],$/;"	f	namespace:Eigen
umfpack_symbolic	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_symbolic(int n_row,int n_col,$/;"	f	namespace:Eigen
unaligned_assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct unaligned_assign_impl$/;"	s	namespace:Eigen::internal
unaligned_assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign.h	/^struct unaligned_assign_impl<false>$/;"	s	namespace:Eigen::internal
unaryExpr	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^unaryExpr(const CustomUnaryOp& func = CustomUnaryOp()) const$/;"	f
unaryViewExpr	./Thirdparty/sparseicp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^unaryViewExpr(const CustomViewOp& func = CustomViewOp()) const$/;"	f
unary_result_of_select	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select {typedef ArgType type;};$/;"	s	namespace:Eigen::internal
unary_result_of_select	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_std_result_type)> {typedef typename Func::result_type type;};$/;"	s	namespace:Eigen::internal
unary_result_of_select	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_tr1_result)> {typedef typename Func::template result<Func(ArgType)>::type type;};$/;"	s	namespace:Eigen::internal
unblocked	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  static EIGEN_STRONG_INLINE bool unblocked(MatrixType& mat, TranspositionType& transpositions, Workspace& temp, SignMatrix& sign)$/;"	f	struct:Eigen::internal::ldlt_inplace
unblocked	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  static bool unblocked(MatrixType& mat, TranspositionType& transpositions, Workspace& temp, SignMatrix& sign)$/;"	f	struct:Eigen::internal::ldlt_inplace
unblocked	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^  static EIGEN_STRONG_INLINE typename MatrixType::Index unblocked(MatrixType& mat)$/;"	f	struct:Eigen::internal::llt_inplace
unblocked	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LLT.h	/^  static typename MatrixType::Index unblocked(MatrixType& mat)$/;"	f	struct:Eigen::internal::llt_inplace
unblocked_lu	./Thirdparty/sparseicp/include/Eigen/src/LU/PartialPivLU.h	/^  static Index unblocked_lu(MatrixType& lu, PivIndex* row_transpositions, PivIndex& nb_transpositions)$/;"	f	struct:Eigen::internal::partial_lu_impl
uncompress	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    void uncompress()$/;"	f	class:Eigen::SparseMatrix
uniform_weight	./Thirdparty/sparseicp/ICP.h	/^    void uniform_weight(Eigen::VectorXd& r) {$/;"	f	namespace:ICP
unitOrthogonal	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	/^MatrixBase<Derived>::unitOrthogonal() const$/;"	f	class:Eigen::MatrixBase
unitOrthogonal_selector	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	/^struct unitOrthogonal_selector$/;"	s	namespace:Eigen::internal
unitOrthogonal_selector	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	/^struct unitOrthogonal_selector<Derived,2>$/;"	s	namespace:Eigen::internal
unitOrthogonal_selector	./Thirdparty/sparseicp/include/Eigen/src/Geometry/OrthoMethods.h	/^struct unitOrthogonal_selector<Derived,3>$/;"	s	namespace:Eigen::internal
unlock	./Thirdparty/g2o/g2o/core/openmp_mutex.h	/^      void unlock() { omp_unset_lock(&_lock); }$/;"	f	class:g2o::OpenMPMutex
unlockQuadraticForm	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        void unlockQuadraticForm() { _quadraticFormMutex.unlock();}$/;"	f	class:g2o::OptimizableGraph::Vertex
unpackRhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void unpackRhs(DenseIndex n, const RhsScalar* rhs, RhsScalar* b)$/;"	f	class:Eigen::internal::gebp_traits
unpackRhs	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void unpackRhs(DenseIndex n, const Scalar* rhs, Scalar* b)$/;"	f	class:Eigen::internal::gebp_traits
unpacket_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	s	namespace:Eigen::internal
unproject	./Thirdparty/g2o/g2o/types/se3_ops.hpp	/^  Vector3d unproject(const Vector2d& v)$/;"	f
unproject	./Thirdparty/g2o/g2o/types/se3_ops.hpp	/^  Vector4d unproject(const Vector3d& v)$/;"	f
unproject2d	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^Vector3d unproject2d(const Vector2d& v)  {$/;"	f	namespace:g2o
unregisterAction	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  bool HyperGraphActionLibrary::unregisterAction(HyperGraphElementAction* action)$/;"	f	class:g2o::HyperGraphActionLibrary
unregisterAction	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  bool HyperGraphElementActionCollection::unregisterAction(HyperGraphElementAction* action)$/;"	f	class:g2o::HyperGraphElementActionCollection
unregisterSolver	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  void OptimizationAlgorithmFactory::unregisterSolver(AbstractOptimizationAlgorithmCreator* c)$/;"	f	class:g2o::OptimizationAlgorithmFactory
unregisterType	./Thirdparty/g2o/g2o/core/factory.cpp	/^  void Factory::unregisterType(const std::string& tag)$/;"	f	class:g2o::Factory
unregisterType	./Thirdparty/g2o/g2o/core/robust_kernel_factory.cpp	/^void RobustKernelFactory::unregisterType(const std::string& tag)$/;"	f	class:g2o::RobustKernelFactory
update	./Thirdparty/g2o/g2o/core/cache.cpp	/^  void Cache::update(){$/;"	f	class:g2o::Cache
update	./Thirdparty/g2o/g2o/core/cache.cpp	/^  void CacheContainer::update() {$/;"	f	class:g2o::CacheContainer
update	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::update(const double* update)$/;"	f	class:g2o::SparseOptimizer
update	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  static EIGEN_STRONG_INLINE bool update(MatrixType& mat, TranspositionType& transpositions, Workspace& tmp, WType& w, const typename MatrixType::RealScalar& sigma=1)$/;"	f	struct:Eigen::internal::ldlt_inplace
update	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  static bool update(MatrixType& mat, const TranspositionType& transpositions, Workspace& tmp, const WType& w, const typename MatrixType::RealScalar& sigma=1)$/;"	f	struct:Eigen::internal::ldlt_inplace
updateCache	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  void OptimizableGraph::Vertex::updateCache(){$/;"	f	class:g2o::OptimizableGraph::Vertex
updateInPlace	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^  static bool updateInPlace(MatrixType& mat, MatrixBase<WDerived>& w, const typename MatrixType::RealScalar& sigma=1)$/;"	f	struct:Eigen::internal::ldlt_inplace
updateInitialization	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::updateInitialization(HyperGraph::VertexSet& vset, HyperGraph::EdgeSet& eset)$/;"	f	class:g2o::SparseOptimizer
updateLinearSystem	./Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^  void OptimizationAlgorithmWithHessian::updateLinearSystem()$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
updateMapFromString	./Thirdparty/g2o/g2o/stuff/property.cpp	/^  bool PropertyMap::updateMapFromString(const std::string& values)$/;"	f	class:g2o::PropertyMap
updatePropertiesFromString	./Thirdparty/g2o/g2o/core/optimization_algorithm.cpp	/^bool OptimizationAlgorithm::updatePropertiesFromString(const std::string& propString)$/;"	f	class:g2o::OptimizationAlgorithm
updatePropertyFromString	./Thirdparty/g2o/g2o/stuff/property.cpp	/^  bool PropertyMap::updatePropertyFromString(const std::string& name, const std::string& value)$/;"	f	class:g2o::PropertyMap
updateSize	./Thirdparty/g2o/g2o/core/jacobian_workspace.cpp	/^void JacobianWorkspace::updateSize(const HyperGraph::Edge* e_)$/;"	f	class:g2o::JacobianWorkspace
updateSize	./Thirdparty/g2o/g2o/core/jacobian_workspace.cpp	/^void JacobianWorkspace::updateSize(const OptimizableGraph& graph)$/;"	f	class:g2o::JacobianWorkspace
updateSize	./Thirdparty/g2o/g2o/core/jacobian_workspace.cpp	/^void JacobianWorkspace::updateSize(int numVertices, int dimension)$/;"	f	class:g2o::JacobianWorkspace
updateStructure	./Thirdparty/g2o/g2o/core/block_solver.hpp	/^bool BlockSolver<Traits>::updateStructure(const std::vector<HyperGraph::Vertex*>& vset, const HyperGraph::EdgeSet& edges)$/;"	f	class:g2o::BlockSolver
updateStructure	./Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^  bool OptimizationAlgorithmWithHessian::updateStructure(const std::vector<HyperGraph::Vertex*>& vset, const HyperGraph::EdgeSet& edges)$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
update_segrep	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  bool update_segrep(Index \/*krep*\/, Index \/*jj*\/)$/;"	f	struct:Eigen::internal::column_dfs_traits
update_segrep	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  bool update_segrep(Index krep, Index jj)$/;"	f	struct:Eigen::internal::panel_dfs_traits
us	./include/PnPsolver.h	/^  double * pws, * us, * alphas, * pcs;$/;"	m	class:ORB_SLAM2::PnPsolver
us	./include/PoseSolver.h	/^  double * pws, * us, * alphas, * pcs;$/;"	m	class:ORB_SLAM2::PoseSolver
use_penalty	./Thirdparty/sparseicp/ICP.h	/^        bool use_penalty = false; \/\/\/ if use_penalty then penalty method else ADMM or ALM (see max_inner)$/;"	m	struct:SICP::Parameters
usedMemory	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		size_t  usedMemory;$/;"	m	class:nanoflann::PooledAllocator
usedMemory	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		size_t usedMemory() const$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
userData	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        Data* userData() { return _userData; }$/;"	f	class:g2o::OptimizableGraph::Vertex
userData	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^        const Data* userData() const { return _userData; }$/;"	f	class:g2o::OptimizableGraph::Vertex
userLambdaInit	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      double userLambdaInit() {return _userLambdaInit->value();}$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
users	./Thirdparty/sparseicp/include/Eigen/src/Core/products/Parallelizer.h	/^  int volatile users;$/;"	m	struct:Eigen::internal::GemmParallelInfo
usub	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector usub; \/\/ row indices of U columns in ucol$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
v	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/AltiVec/Complex.h	/^  Packet4f  v;$/;"	m	struct:Eigen::internal::Packet2cf
v	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/Complex.h	/^  Packet4f  v;$/;"	m	struct:Eigen::internal::Packet2cf
v	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  __m128  v;$/;"	m	struct:Eigen::internal::Packet2cf
v	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/Complex.h	/^  __m128d  v;$/;"	m	struct:Eigen::internal::Packet1cd
vKeys	./include/ORBextractor.h	/^    std::vector<cv::KeyPoint> vKeys;$/;"	m	class:ORB_SLAM2::ExtractorNode
value	./Thirdparty/g2o/g2o/stuff/property.h	/^      const T& value() const {return _value;}$/;"	f	class:g2o::Property
value	./Thirdparty/sparseicp/include/Eigen/src/Core/CoreIterators.h	/^    EIGEN_STRONG_INLINE Scalar value() const$/;"	f	class:Eigen::DenseBase::InnerIterator
value	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseBase.h	/^    CoeffReturnType value() const$/;"	f	class:Eigen::DenseBase
value	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^         value = is_large  ? Large$/;"	e	enum:Eigen::internal::product_size_category::__anon144
value	./Thirdparty/sparseicp/include/Eigen/src/Core/GeneralProduct.h	/^    value = selector::ret$/;"	e	enum:Eigen::internal::product_type::__anon147
value	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^         value = (upper <= lower + 1) ? int(floor_log2_terminate)$/;"	e	enum:Eigen::internal::floor_log2_selector::__anon173
value	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  enum { value = (n >= ((unsigned int)(1) << (lower+1))) ? lower+1 : lower };$/;"	e	enum:Eigen::internal::floor_log2::__anon176
value	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  enum { value = floor_log2<n, floor_log2_selector<n, lower, upper>::middle, upper>::value };$/;"	e	enum:Eigen::internal::floor_log2::__anon175
value	./Thirdparty/sparseicp/include/Eigen/src/Core/MathFunctions.h	/^  enum { value = floor_log2<n, lower, floor_log2_selector<n, lower, upper>::middle>::value };$/;"	e	enum:Eigen::internal::floor_log2::__anon174
value	./Thirdparty/sparseicp/include/Eigen/src/Core/VectorwiseOp.h	/^  { enum { value = (Size-1) * functor_traits<BinaryOp>::Cost }; };$/;"	e	enum:Eigen::internal::member_redux::Cost::__anon23
value	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon220
value	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128d> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon222
value	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128i> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon221
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/ForwardDeclarations.h	/^         value = has_direct_access ? (has_write_access ? DirectWriteAccessors : DirectAccessors)$/;"	e	enum:Eigen::internal::accessors_level::__anon84
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct false_type { enum { value = 0 }; };$/;"	e	enum:Eigen::internal::false_type::__anon108
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^struct true_type {  enum { value = 1 }; };$/;"	e	enum:Eigen::internal::true_type::__anon107
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const { enum { value = 0 }; };$/;"	e	enum:Eigen::internal::is_const::__anon125
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const<T const> { enum { value = 1 }; };$/;"	e	enum:Eigen::internal::is_const::__anon126
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<bool>          { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon115
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<char>          { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon116
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<double>        { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon113
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<float>         { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon112
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<long double>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon114
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed char>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon117
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed int>    { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon121
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed long>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon123
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed short>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon119
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned char> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon118
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned int>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon122
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned long> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon124
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned short>{ enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon120
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T, typename U> struct is_same { enum { value = 0 }; };$/;"	e	enum:Eigen::internal::is_same::__anon109
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_arithmetic      { enum { value = false }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon111
value	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_same<T,T> { enum { value = 1 }; };$/;"	e	enum:Eigen::internal::is_same::__anon110
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^      Scalar value;$/;"	m	struct:Eigen::internal::AmbiVector::ListEl
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    Scalar value() const { return m_cachedValue; }$/;"	f	class:Eigen::internal::AmbiVector::Iterator
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar& value(size_t i) { return m_values[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    inline const Scalar& value(size_t i) const { return m_values[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Scalar value() const { return m_matrix.valuePtr()[m_id-1]; }$/;"	f	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Scalar value() const { return m_matrix.valuePtr()[m_id]; }$/;"	f	class:Eigen::MappedSparseMatrix::InnerIterator
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return m_functor(m_lhsIter.value(), m_rhsIter.value()); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return m_value; }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE typename CwiseUnaryOpImpl::Scalar value() const { return m_functor(Base::value()); }$/;"	f	class:Eigen::CwiseUnaryOpImpl::InnerIterator
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE typename CwiseUnaryOpImpl::Scalar value() const { return m_functor(Base::value()); }$/;"	f	class:Eigen::CwiseUnaryOpImpl::ReverseInnerIterator
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE typename CwiseUnaryViewImpl::Scalar value() const { return m_functor(Base::value()); }$/;"	f	class:Eigen::CwiseUnaryViewImpl::InnerIterator
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE typename CwiseUnaryViewImpl::Scalar value() const { return m_functor(Base::value()); }$/;"	f	class:Eigen::CwiseUnaryViewImpl::ReverseInnerIterator
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseDenseProduct.h	/^    inline Scalar value() const { return Base::value() * m_factor; }$/;"	f	class:Eigen::SparseDenseOuterProduct::InnerIterator
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Scalar& value() const { return m_values[m_id-1]; }$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Scalar& value() const { return m_values[m_id]; }$/;"	f	class:Eigen::SparseMatrix::InnerIterator
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Scalar value() const$/;"	f	class:Eigen::SparseTriangularView::InnerIterator
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseUtil.h	/^  const Scalar& value() const { return m_value; }$/;"	f	class:Eigen::Triplet
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar value() const { return m_data.value(m_id); }$/;"	f	class:Eigen::SparseVector::InnerIterator
value	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar value() const { return m_data.value(m_id-1); }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
value	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Scalar value() const { return m_matrix.valuePtr()[m_idval]; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
valuePtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Scalar* valuePtr() { return m_values; }$/;"	f	class:Eigen::MappedSparseMatrix
valuePtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline const Scalar* valuePtr() const { return m_values; }$/;"	f	class:Eigen::MappedSparseMatrix
valuePtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline Scalar* valuePtr()$/;"	f	class:Eigen::BlockImpl
valuePtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar* valuePtr() const$/;"	f	class:Eigen::BlockImpl
valuePtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar* valuePtr() { return &m_data.value(0); }$/;"	f	class:Eigen::SparseMatrix
valuePtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Scalar* valuePtr() const { return &m_data.value(0); }$/;"	f	class:Eigen::SparseMatrix
valuePtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Scalar* valuePtr() { return &m_data.value(0); }$/;"	f	class:Eigen::SparseVector
valuePtr	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE const Scalar* valuePtr() const { return &m_data.value(0); }$/;"	f	class:Eigen::SparseVector
valuePtr	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Scalar* valuePtr() {  return m_nzval; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
valuePtr	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Scalar* valuePtr() const $/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
valueRef	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_matrix.valuePtr()[m_id-1]); }$/;"	f	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
valueRef	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_matrix.valuePtr()[m_id]); }$/;"	f	class:Eigen::MappedSparseMatrix::InnerIterator
valueRef	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE typename CwiseUnaryViewImpl::Scalar& valueRef() { return m_functor(Base::valueRef()); }$/;"	f	class:Eigen::CwiseUnaryViewImpl::InnerIterator
valueRef	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE typename CwiseUnaryViewImpl::Scalar& valueRef() { return m_functor(Base::valueRef()); }$/;"	f	class:Eigen::CwiseUnaryViewImpl::ReverseInnerIterator
valueRef	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_values[m_id-1]); }$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
valueRef	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_values[m_id]); }$/;"	f	class:Eigen::SparseMatrix::InnerIterator
valueRef	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_data.value(m_id)); }$/;"	f	class:Eigen::SparseVector::InnerIterator
valueRef	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_data.value(m_id-1)); }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
valueRef	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_matrix.valuePtr()[m_idval]); }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
value_type	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    typedef T         value_type;$/;"	t	class:Eigen::aligned_allocator
value_type	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^        typedef Index value_type;$/;"	t	class:Eigen::SparseMatrix::SingletonVector
value_type	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    typedef T         value_type;$/;"	t	class:Eigen::aligned_allocator_indirection
values	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void *values;$/;"	m	struct:Eigen::SluMatrix::__anon460
vasprintf	./Thirdparty/g2o/g2o/stuff/os_specific.c	/^int vasprintf(char** strp, const char* fmt, va_list ap)$/;"	f
vc	./include/PnPsolver.h	/^  double uc, vc, fu, fv;$/;"	m	class:ORB_SLAM2::PnPsolver
vc	./include/PoseSolver.h	/^  double uc, vc, fu, fv;$/;"	m	class:ORB_SLAM2::PoseSolver
vec	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Block<Coefficients,3,1> vec() { return m_coeffs.template start<3>(); }$/;"	f	class:Eigen::Quaternion
vec	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline const Block<const Coefficients,3,1> vec() const { return m_coeffs.template start<3>(); }$/;"	f	class:Eigen::Quaternion
vec	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline VectorBlock<Coefficients,3> vec() { return coeffs().template head<3>(); }$/;"	f	class:Eigen::QuaternionBase
vec	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline const VectorBlock<const Coefficients,3> vec() const { return coeffs().template head<3>(); }$/;"	f	class:Eigen::QuaternionBase
vec2d_swizzle1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	39;"	d
vec4f_swizzle1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	33;"	d
vec4f_swizzle2	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	42;"	d
vec4i_swizzle1	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	36;"	d
vec4i_swizzle2	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/SSE/PacketMath.h	45;"	d
veclen	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		size_t veclen() const$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
vector	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  VectorType& vector() { return m_coeffs; }$/;"	f	class:Eigen::Translation
vector	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  const VectorType& vector() const { return m_coeffs; }$/;"	f	class:Eigen::Translation
vector	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  VectorType& vector() { return m_coeffs; }$/;"	f	class:Eigen::Translation
vector	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  const VectorType& vector() const { return m_coeffs; }$/;"	f	class:Eigen::Translation
vector	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdVector.h	/^  class vector<T,EIGEN_ALIGNED_ALLOCATOR<T> >$/;"	c	namespace:std
vectorD	./Thirdparty/sparseicp/include/Eigen/src/Cholesky/LDLT.h	/^    inline Diagonal<const MatrixType> vectorD() const$/;"	f	class:Eigen::LDLT
vectorD	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const VectorType vectorD() const {$/;"	f	class:Eigen::SimplicialCholesky
vectorD	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const VectorType vectorD() const {$/;"	f	class:Eigen::SimplicialLDLT
vectorSize	./Thirdparty/g2o/g2o/core/solver.h	/^      size_t vectorSize() const { return _xSize;}$/;"	f	class:g2o::Solver
vector_base	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/StdVector.h	/^                 Eigen::aligned_allocator_indirection<EIGEN_WORKAROUND_MSVC_STL_SUPPORT(T)> > vector_base;$/;"	t	class:std::vector
verbose	./Thirdparty/g2o/g2o/core/sparse_optimizer.h	/^    bool verbose()  const {return _verbose;}$/;"	f	class:g2o::SparseOptimizer
verifyInformationMatrices	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::verifyInformationMatrices(bool verbose) const$/;"	f	class:g2o::OptimizableGraph
vertex	./Thirdparty/g2o/g2o/core/cache.cpp	/^  OptimizableGraph::Vertex* Cache::vertex() { $/;"	f	class:g2o::Cache
vertex	./Thirdparty/g2o/g2o/core/cache.cpp	/^  OptimizableGraph::Vertex* CacheContainer::vertex() {$/;"	f	class:g2o::CacheContainer
vertex	./Thirdparty/g2o/g2o/core/hyper_graph.cpp	/^  HyperGraph::Vertex* HyperGraph::vertex(int id)$/;"	f	class:g2o::HyperGraph
vertex	./Thirdparty/g2o/g2o/core/hyper_graph.cpp	/^  const HyperGraph::Vertex* HyperGraph::vertex(int id) const$/;"	f	class:g2o::HyperGraph
vertex	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^          Vertex* vertex(size_t i) { assert(i < _vertices.size() && "index out of bounds"); return _vertices[i];}$/;"	f	class:g2o::HyperGraph::Edge
vertex	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^          const Vertex* vertex(size_t i) const { assert(i < _vertices.size() && "index out of bounds"); return _vertices[i];}$/;"	f	class:g2o::HyperGraph::Edge
vertex	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    inline Vertex* vertex(int id) { return reinterpret_cast<Vertex*>(HyperGraph::vertex(id));}$/;"	f	struct:g2o::OptimizableGraph
vertex	./Thirdparty/g2o/g2o/core/optimizable_graph.h	/^    inline const Vertex* vertex (int id) const{ return reinterpret_cast<const Vertex*>(HyperGraph::vertex(id));}$/;"	f	struct:g2o::OptimizableGraph
vertices	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^          VertexContainer& vertices() { return _vertices;}$/;"	f	class:g2o::HyperGraph::Edge
vertices	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^          const VertexContainer& vertices() const { return _vertices;}$/;"	f	class:g2o::HyperGraph::Edge
vertices	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^      VertexIDMap& vertices() {return _vertices;}$/;"	f	class:g2o::HyperGraph
vertices	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^      const VertexIDMap& vertices() const {return _vertices;}$/;"	f	class:g2o::HyperGraph
viewAsCholmod	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^cholmod_dense viewAsCholmod(MatrixBase<Derived>& mat)$/;"	f	namespace:Eigen
viewAsCholmod	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^cholmod_sparse viewAsCholmod(SparseMatrix<_Scalar,_Options,_Index>& mat)$/;"	f	namespace:Eigen
viewAsCholmod	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^cholmod_sparse viewAsCholmod(const SparseSelfAdjointView<SparseMatrix<_Scalar,_Options,_Index>, UpLo>& mat)$/;"	f	namespace:Eigen
viewAsCholmod	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^const cholmod_sparse viewAsCholmod(const SparseMatrix<_Scalar,_Options,_Index>& mat)$/;"	f	namespace:Eigen
viewAsEigen	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^MappedSparseMatrix<Scalar,Flags,Index> viewAsEigen(cholmod_sparse& cm)$/;"	f	namespace:Eigen
vind	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		std::vector<IndexType> vind;$/;"	m	class:nanoflann::KDTreeSingleIndexAdaptor
visit	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^void DenseBase<Derived>::visit(Visitor& visitor) const$/;"	f	class:Eigen::DenseBase
visitAdjacencyMap	./Thirdparty/g2o/g2o/core/hyper_dijkstra.cpp	/^  void HyperDijkstra::visitAdjacencyMap(AdjacencyMap& amap, TreeAction* action, bool useDistance)$/;"	f	class:g2o::HyperDijkstra
visited	./Thirdparty/g2o/g2o/core/estimate_propagator.h	/^      OptimizableGraph::VertexSet& visited() {return _visited; }$/;"	f	class:g2o::EstimatePropagator
visited	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^    HyperGraph::VertexSet& visited() {return _visited; }$/;"	f	struct:g2o::HyperDijkstra
visitor_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^struct visitor_impl$/;"	s	namespace:Eigen::internal
visitor_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^struct visitor_impl<Visitor, Derived, 1>$/;"	s	namespace:Eigen::internal
visitor_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Visitor.h	/^struct visitor_impl<Visitor, Derived, Dynamic>$/;"	s	namespace:Eigen::internal
vld1_f32	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE float32x2_t vld1_f32 (const float* x) { return ::vld1_f32 ((const float32_t*)x); }$/;"	f	namespace:Eigen::internal
vld1q_f32	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE float32x4_t vld1q_f32(const float* x) { return ::vld1q_f32((const float32_t*)x); }$/;"	f	namespace:Eigen::internal
vml_assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^struct vml_assign_impl$/;"	s	namespace:Eigen::internal
vml_assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^struct vml_assign_impl<Derived1, Derived2, UnaryOp, Traversal, Unrolling, InnerVectorizedTraversal>$/;"	s	namespace:Eigen::internal
vml_assign_impl	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^struct vml_assign_impl<Derived1, Derived2, UnaryOp, Traversal, Unrolling, LinearVectorizedTraversal>$/;"	s	namespace:Eigen::internal
vml_assign_traits	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^class vml_assign_traits$/;"	c	namespace:Eigen::internal
vml_call	./Thirdparty/sparseicp/include/Eigen/src/Core/Assign_MKL.h	/^template<typename Op> struct vml_call$/;"	s	namespace:Eigen::internal
voc_file	./main.cc	/^	std::string voc_file;$/;"	m	struct:__anon469	file:
volatile	./cmake-build-debug/CMakeFiles/3.10.3/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
volume	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  inline Scalar volume() const$/;"	f	class:Eigen::AlignedBox
vst1_f32	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE void        vst1_f32 (float* to, float32x2_t from) { ::vst1_f32 ((float32_t*)to,from); }$/;"	f	namespace:Eigen::internal
vst1q_f32	./Thirdparty/sparseicp/include/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE void        vst1q_f32(float* to, float32x4_t from) { ::vst1q_f32((float32_t*)to,from); }$/;"	f	namespace:Eigen::internal
w	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    w() const { return (*this)[3]; }$/;"	f	class:Eigen::DenseCoeffsBase
w	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    w() { return (*this)[3]; }$/;"	f	class:Eigen::DenseCoeffsBase
w	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar w() const { return m_coeffs.coeff(3); }$/;"	f	class:Eigen::Quaternion
w	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar& w() { return m_coeffs.coeffRef(3); }$/;"	f	class:Eigen::Quaternion
w	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar w() const { return this->derived().coeffs().coeff(3); }$/;"	f	class:Eigen::QuaternionBase
w	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar& w() { return this->derived().coeffs().coeffRef(3); }$/;"	f	class:Eigen::QuaternionBase
wastedMemory	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		size_t  wastedMemory;$/;"	m	class:nanoflann::PooledAllocator
weight	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^    WordValue weight;$/;"	m	struct:DBoW2::TemplatedVocabulary::Node
weightComp	./include/KeyFrame.h	/^    static bool weightComp( int a, int b){$/;"	f	class:ORB_SLAM2::KeyFrame
word_id	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^    WordId word_id;$/;"	m	struct:DBoW2::TemplatedVocabulary::Node
workaround_msvc_stl_support	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    inline workaround_msvc_stl_support() : T() {}$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
workaround_msvc_stl_support	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    inline workaround_msvc_stl_support(const T& other) : T(other) {}$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
workaround_msvc_stl_support	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^  template<typename T> struct workaround_msvc_stl_support : public T$/;"	s	namespace:Eigen::internal
workspaceForVertex	./Thirdparty/g2o/g2o/core/jacobian_workspace.h	/^      double* workspaceForVertex(int vertexIndex)$/;"	f	class:g2o::JacobianWorkspace
worstDist	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline DistanceType worstDist() const { return radius; }$/;"	f	class:nanoflann::RadiusResultSet
worstDist	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline DistanceType worstDist() const$/;"	f	class:nanoflann::KNNResultSet
worst_item	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		std::pair<IndexType,DistanceType> worst_item() const$/;"	f	class:nanoflann::RadiusResultSet
wrap	./Thirdparty/g2o/g2o/stuff/misc.h	/^inline T wrap(T l, T x, T u) $/;"	f	namespace:g2o
write	./Thirdparty/g2o/g2o/core/matrix_structure.cpp	/^bool MatrixStructure::write(const char* filename) const$/;"	f	class:g2o::MatrixStructure
write	./Thirdparty/g2o/g2o/core/parameter_container.cpp	/^  bool ParameterContainer::write(std::ostream& os) const{$/;"	f	class:g2o::ParameterContainer
write	./Thirdparty/g2o/g2o/types/types_sba.cpp	/^  bool VertexSBAPointXYZ::write(std::ostream& os) const$/;"	f	class:g2o::VertexSBAPointXYZ
write	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp	/^  bool EdgeInverseSim3ProjectXYZ::write(std::ostream& os) const$/;"	f	class:g2o::EdgeInverseSim3ProjectXYZ
write	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp	/^  bool EdgeSim3::write(std::ostream& os) const$/;"	f	class:g2o::EdgeSim3
write	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp	/^  bool EdgeSim3ProjectXYZ::write(std::ostream& os) const$/;"	f	class:g2o::EdgeSim3ProjectXYZ
write	./Thirdparty/g2o/g2o/types/types_seven_dof_expmap.cpp	/^  bool VertexSim3Expmap::write(std::ostream& os) const$/;"	f	class:g2o::VertexSim3Expmap
write	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^bool EdgeSE3ProjectXYZ::write(std::ostream& os) const {$/;"	f	class:g2o::EdgeSE3ProjectXYZ
write	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^bool EdgeSE3ProjectXYZOnlyPose::write(std::ostream& os) const {$/;"	f	class:g2o::EdgeSE3ProjectXYZOnlyPose
write	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^bool EdgeStereoSE3ProjectXYZ::write(std::ostream& os) const {$/;"	f	class:g2o::EdgeStereoSE3ProjectXYZ
write	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^bool EdgeStereoSE3ProjectXYZOnlyPose::write(std::ostream& os) const {$/;"	f	class:g2o::EdgeStereoSE3ProjectXYZOnlyPose
write	./Thirdparty/g2o/g2o/types/types_six_dof_expmap.cpp	/^bool VertexSE3Expmap::write(std::ostream& os) const {$/;"	f	class:g2o::VertexSE3Expmap
writeDebug	./Thirdparty/g2o/g2o/core/block_solver.h	/^      virtual bool writeDebug() const {return _linearSolver->writeDebug();}$/;"	f	class:g2o::BlockSolver
writeDebug	./Thirdparty/g2o/g2o/core/linear_solver.h	/^    virtual bool writeDebug() const { return false;}$/;"	f	class:g2o::LinearSolver
writeDebug	./Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.h	/^      virtual bool writeDebug() const { return _writeDebug->value();}$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
writeDebug	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    virtual bool writeDebug() const { return _writeDebug;}$/;"	f	class:g2o::LinearSolverEigen
writeOctave	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  bool SparseBlockMatrix<MatrixType>::writeOctave(const char* filename, bool upperTriangle) const$/;"	f	class:g2o::SparseBlockMatrix
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline void writePacket(Index index, const PacketScalar& val)$/;"	f	class:Eigen::ArrayWrapper
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline void writePacket(Index index, const PacketScalar& val)$/;"	f	class:Eigen::MatrixWrapper
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline void writePacket(Index rowId, Index colId, const PacketScalar& val)$/;"	f	class:Eigen::ArrayWrapper
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/ArrayWrapper.h	/^    inline void writePacket(Index rowId, Index colId, const PacketScalar& val)$/;"	f	class:Eigen::MatrixWrapper
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline void writePacket(Index index, const PacketScalar& val)$/;"	f	class:Eigen::internal::BlockImpl_dense
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/Block.h	/^    inline void writePacket(Index rowId, Index colId, const PacketScalar& val)$/;"	f	class:Eigen::internal::BlockImpl_dense
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE void writePacket$/;"	f	class:Eigen::DenseCoeffsBase
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::Flagged
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/Flagged.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::Flagged
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::ForceAlignedAccess
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/ForceAlignedAccess.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::ForceAlignedAccess
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline void writePacket(Index index, const PacketScalar& val)$/;"	f	class:Eigen::MapBase
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/MapBase.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& val)$/;"	f	class:Eigen::MapBase
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::NestByValue
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/NestByValue.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::NestByValue
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void writePacket(Index index, const PacketScalar& val)$/;"	f	class:Eigen::PlainObjectBase
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void writePacket(Index rowId, Index colId, const PacketScalar& val)$/;"	f	class:Eigen::PlainObjectBase
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::Reverse
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/Reverse.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::Reverse
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::TransposeImpl
writePacket	./Thirdparty/sparseicp/include/Eigen/src/Core/Transpose.h	/^    inline void writePacket(Index rowId, Index colId, const PacketScalar& x)$/;"	f	class:Eigen::TransposeImpl
writePacketByOuterInner	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE void writePacketByOuterInner$/;"	f	class:Eigen::DenseCoeffsBase
writeToCSV	./Thirdparty/g2o/g2o/stuff/property.cpp	/^  void PropertyMap::writeToCSV(std::ostream& os) const$/;"	f	class:g2o::PropertyMap
write_obj_replaceverts	./Thirdparty/sparseicp/io_obj.h	/^bool write_obj_replaceverts(const std::string& prev_filename, const MatrixType& vertices, const std::string& filename) {$/;"	f
x	./Thirdparty/g2o/g2o/core/solver.h	/^      const double* x() const { return _x;}$/;"	f	class:g2o::Solver
x	./Thirdparty/g2o/g2o/core/solver.h	/^      double* x() { return _x;}$/;"	f	class:g2o::Solver
x	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^      double x;$/;"	m	struct:g2o::__anon468::TripletEntry
x	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    x() const { return (*this)[0]; }$/;"	f	class:Eigen::DenseCoeffsBase
x	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    x() { return (*this)[0]; }$/;"	f	class:Eigen::DenseCoeffsBase
x	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar x() const { return m_coeffs.coeff(0); }$/;"	f	class:Eigen::Quaternion
x	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar& x() { return m_coeffs.coeffRef(0); }$/;"	f	class:Eigen::Quaternion
x	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar x() const { return this->derived().coeffs().coeff(0); }$/;"	f	class:Eigen::QuaternionBase
x	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar& x() { return this->derived().coeffs().coeffRef(0); }$/;"	f	class:Eigen::QuaternionBase
x	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  inline Scalar x() const { return m_coeffs.x(); }$/;"	f	class:Eigen::Translation
x	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  inline Scalar& x() { return m_coeffs.x(); }$/;"	f	class:Eigen::Translation
xlsub	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector xlsub; \/\/ pointers to the beginning of each column in lsub$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
xlusup	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector xlusup; \/\/ pointers to the beginning of each column in lusup$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
xsup	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector xsup; \/\/First supernode column ... xsup(s) points to the beginning of the s-th supernode$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
xusub	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector xusub; \/\/ Pointers to the beginning of each column of U in ucol $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
y	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    y() const { return (*this)[1]; }$/;"	f	class:Eigen::DenseCoeffsBase
y	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    y() { return (*this)[1]; }$/;"	f	class:Eigen::DenseCoeffsBase
y	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar y() const { return m_coeffs.coeff(1); }$/;"	f	class:Eigen::Quaternion
y	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar& y() { return m_coeffs.coeffRef(1); }$/;"	f	class:Eigen::Quaternion
y	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar y() const { return this->derived().coeffs().coeff(1); }$/;"	f	class:Eigen::QuaternionBase
y	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar& y() { return this->derived().coeffs().coeffRef(1); }$/;"	f	class:Eigen::QuaternionBase
y	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  inline Scalar y() const { return m_coeffs.y(); }$/;"	f	class:Eigen::Translation
y	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  inline Scalar& y() { return m_coeffs.y(); }$/;"	f	class:Eigen::Translation
z	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    z() const { return (*this)[2]; }$/;"	f	class:Eigen::DenseCoeffsBase
z	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseCoeffsBase.h	/^    z() { return (*this)[2]; }$/;"	f	class:Eigen::DenseCoeffsBase
z	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar z() const { return m_coeffs.coeff(2); }$/;"	f	class:Eigen::Quaternion
z	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar& z() { return m_coeffs.coeffRef(2); }$/;"	f	class:Eigen::Quaternion
z	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar z() const { return this->derived().coeffs().coeff(2); }$/;"	f	class:Eigen::QuaternionBase
z	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar& z() { return this->derived().coeffs().coeffRef(2); }$/;"	f	class:Eigen::QuaternionBase
z	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  inline Scalar z() const { return m_coeffs.z(); }$/;"	f	class:Eigen::Translation
z	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Translation.h	/^  inline Scalar& z() { return m_coeffs.z(); }$/;"	f	class:Eigen::Translation
~AbstractHyperGraphElementCreator	./Thirdparty/g2o/g2o/core/creators.h	/^      virtual ~AbstractHyperGraphElementCreator() { }$/;"	f	class:g2o::AbstractHyperGraphElementCreator
~AbstractOptimizationAlgorithmCreator	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	/^      virtual ~AbstractOptimizationAlgorithmCreator() { }$/;"	f	class:g2o::AbstractOptimizationAlgorithmCreator
~AbstractRobustKernelCreator	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	/^      virtual ~AbstractRobustKernelCreator() { }$/;"	f	class:g2o::AbstractRobustKernelCreator
~AlignedBox	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  ~AlignedBox() {}$/;"	f	class:Eigen::AlignedBox
~AlignedBox	./Thirdparty/sparseicp/include/Eigen/src/Geometry/AlignedBox.h	/^  ~AlignedBox() {}$/;"	f	class:Eigen::AlignedBox
~AmbiVector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/AmbiVector.h	/^    ~AmbiVector() { delete[] m_buffer; }$/;"	f	class:Eigen::internal::AmbiVector
~BaseEdge	./Thirdparty/g2o/g2o/core/base_edge.h	/^      virtual ~BaseEdge() {}$/;"	f	class:g2o::BaseEdge
~BaseProperty	./Thirdparty/g2o/g2o/stuff/property.cpp	/^  BaseProperty::~BaseProperty(){}$/;"	f	class:g2o::BaseProperty
~BiCGSTAB	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  ~BiCGSTAB() {}$/;"	f	class:Eigen::BiCGSTAB
~BlockSolver	./Thirdparty/g2o/g2o/core/block_solver.hpp	/^BlockSolver<Traits>::~BlockSolver()$/;"	f	class:g2o::BlockSolver
~BlockSolverBase	./Thirdparty/g2o/g2o/core/block_solver.h	/^      virtual ~BlockSolverBase() {}$/;"	f	class:g2o::BlockSolverBase
~BowVector	./Thirdparty/DBoW2/DBoW2/BowVector.cpp	/^BowVector::~BowVector(void)$/;"	f	class:DBoW2::BowVector
~CacheContainer	./Thirdparty/g2o/g2o/core/cache.cpp	/^  CacheContainer::~CacheContainer(){$/;"	f	class:g2o::CacheContainer
~CholmodBase	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodBase()$/;"	f	class:Eigen::CholmodBase
~CholmodDecomposition	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodDecomposition() {}$/;"	f	class:Eigen::CholmodDecomposition
~CholmodSimplicialLDLT	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodSimplicialLDLT() {}$/;"	f	class:Eigen::CholmodSimplicialLDLT
~CholmodSimplicialLLT	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodSimplicialLLT() {}$/;"	f	class:Eigen::CholmodSimplicialLLT
~CholmodSupernodalLLT	./Thirdparty/sparseicp/include/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodSupernodalLLT() {}$/;"	f	class:Eigen::CholmodSupernodalLLT
~CommaInitializer	./Thirdparty/sparseicp/include/Eigen/src/Core/CommaInitializer.h	/^  inline ~CommaInitializer()$/;"	f	struct:Eigen::CommaInitializer
~CompressedStorage	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/CompressedStorage.h	/^    ~CompressedStorage()$/;"	f	class:Eigen::internal::CompressedStorage
~ConjugateGradient	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  ~ConjugateGradient() {}$/;"	f	class:Eigen::ConjugateGradient
~CostFunction	./Thirdparty/g2o/g2o/core/hyper_dijkstra.h	/^      virtual ~CostFunction() { }$/;"	f	struct:g2o::HyperDijkstra::CostFunction
~CreatorInformation	./Thirdparty/g2o/g2o/core/factory.h	/^          ~CreatorInformation()$/;"	f	class:g2o::Factory::CreatorInformation
~Data	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::Data::~Data(){$/;"	f	class:g2o::OptimizableGraph::Data
~DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Cols*m_rows); }$/;"	f	class:Eigen::DenseStorage
~DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Rows*m_cols); }$/;"	f	class:Eigen::DenseStorage
~DenseStorage	./Thirdparty/sparseicp/include/Eigen/src/Core/DenseStorage.h	/^    inline ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, m_rows*m_cols); }$/;"	f	class:Eigen::DenseStorage
~Edge	./Thirdparty/g2o/g2o/core/hyper_graph.cpp	/^  HyperGraph::Edge::~Edge()$/;"	f	class:g2o::HyperGraph::Edge
~Edge	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::Edge::~Edge()$/;"	f	class:g2o::OptimizableGraph::Edge
~FPCSRegistration	./4pcs/Registration.h	/^            ~FPCSRegistration() {$/;"	f	class:pcl::FPCS::FPCSRegistration
~Factory	./Thirdparty/g2o/g2o/core/factory.cpp	/^Factory::~Factory()$/;"	f	class:g2o::Factory
~FeatureVector	./Thirdparty/DBoW2/DBoW2/FeatureVector.cpp	/^FeatureVector::~FeatureVector(void)$/;"	f	class:DBoW2::FeatureVector
~GeneralScoring	./Thirdparty/DBoW2/DBoW2/ScoringObject.h	/^  virtual ~GeneralScoring() {} \/\/!< Required for virtual base classes$/;"	f	class:DBoW2::GeneralScoring
~HyperGraph	./Thirdparty/g2o/g2o/core/hyper_graph.cpp	/^  HyperGraph::~HyperGraph()$/;"	f	class:g2o::HyperGraph
~HyperGraphAction	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphAction::~HyperGraphAction()$/;"	f	class:g2o::HyperGraphAction
~HyperGraphActionLibrary	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphActionLibrary::~HyperGraphActionLibrary()$/;"	f	class:g2o::HyperGraphActionLibrary
~HyperGraphElement	./Thirdparty/g2o/g2o/core/hyper_graph.h	/^        virtual ~HyperGraphElement() {}$/;"	f	struct:g2o::HyperGraph::HyperGraphElement
~HyperGraphElementAction	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementAction::~HyperGraphElementAction()$/;"	f	class:g2o::HyperGraphElementAction
~HyperGraphElementActionCollection	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementActionCollection::~HyperGraphElementActionCollection()$/;"	f	class:g2o::HyperGraphElementActionCollection
~Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  ~Hyperplane() {}$/;"	f	class:Eigen::Hyperplane
~Hyperplane	./Thirdparty/sparseicp/include/Eigen/src/Geometry/Hyperplane.h	/^  ~Hyperplane() {}$/;"	f	class:Eigen::Hyperplane
~IterativeSolverBase	./Thirdparty/sparseicp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  ~IterativeSolverBase() {}$/;"	f	class:Eigen::IterativeSolverBase
~JacobianWorkspace	./Thirdparty/g2o/g2o/core/jacobian_workspace.cpp	/^JacobianWorkspace::~JacobianWorkspace()$/;"	f	class:g2o::JacobianWorkspace
~KDTreeAdaptor	./Thirdparty/sparseicp/ICP.h	/^        ~KDTreeAdaptor() {delete index;}$/;"	f	struct:nanoflann::KDTreeAdaptor
~KDTreeEigenMatrixAdaptor	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		~KDTreeEigenMatrixAdaptor() {$/;"	f	struct:nanoflann::KDTreeEigenMatrixAdaptor
~KDTreeSingleIndexAdaptor	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		~KDTreeSingleIndexAdaptor()$/;"	f	class:nanoflann::KDTreeSingleIndexAdaptor
~LinearSolver	./Thirdparty/g2o/g2o/core/linear_solver.h	/^    virtual ~LinearSolver() {}$/;"	f	class:g2o::LinearSolver
~LinearSolverCCS	./Thirdparty/g2o/g2o/core/linear_solver.h	/^    ~LinearSolverCCS()$/;"	f	class:g2o::LinearSolverCCS
~LinearSolverDense	./Thirdparty/g2o/g2o/solvers/linear_solver_dense.h	/^      virtual ~LinearSolverDense()$/;"	f	class:g2o::LinearSolverDense
~LinearSolverEigen	./Thirdparty/g2o/g2o/solvers/linear_solver_eigen.h	/^    virtual ~LinearSolverEigen()$/;"	f	class:g2o::LinearSolverEigen
~MappedSparseMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline ~MappedSparseMatrix() {}$/;"	f	class:Eigen::MappedSparseMatrix
~MappedSuperNodalMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    ~MappedSuperNodalMatrix()$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
~MarginalCovarianceCholesky	./Thirdparty/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^MarginalCovarianceCholesky::~MarginalCovarianceCholesky()$/;"	f	class:g2o::MarginalCovarianceCholesky
~MatrixStructure	./Thirdparty/g2o/g2o/core/matrix_structure.cpp	/^MatrixStructure::~MatrixStructure()$/;"	f	class:g2o::MatrixStructure
~ORBextractor	./include/ORBextractor.h	/^    ~ORBextractor(){}$/;"	f	class:ORB_SLAM2::ORBextractor
~OpenMPMutex	./Thirdparty/g2o/g2o/core/openmp_mutex.h	/^      ~OpenMPMutex() { omp_destroy_lock(&_lock); }$/;"	f	class:g2o::OpenMPMutex
~OptimizableGraph	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::~OptimizableGraph()$/;"	f	class:g2o::OptimizableGraph
~OptimizationAlgorithm	./Thirdparty/g2o/g2o/core/optimization_algorithm.cpp	/^OptimizationAlgorithm::~OptimizationAlgorithm()$/;"	f	class:g2o::OptimizationAlgorithm
~OptimizationAlgorithmDogleg	./Thirdparty/g2o/g2o/core/optimization_algorithm_dogleg.cpp	/^  OptimizationAlgorithmDogleg::~OptimizationAlgorithmDogleg()$/;"	f	class:g2o::OptimizationAlgorithmDogleg
~OptimizationAlgorithmFactory	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  OptimizationAlgorithmFactory::~OptimizationAlgorithmFactory()$/;"	f	class:g2o::OptimizationAlgorithmFactory
~OptimizationAlgorithmGaussNewton	./Thirdparty/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp	/^  OptimizationAlgorithmGaussNewton::~OptimizationAlgorithmGaussNewton()$/;"	f	class:g2o::OptimizationAlgorithmGaussNewton
~OptimizationAlgorithmLevenberg	./Thirdparty/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^  OptimizationAlgorithmLevenberg::~OptimizationAlgorithmLevenberg()$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
~OptimizationAlgorithmWithHessian	./Thirdparty/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^  OptimizationAlgorithmWithHessian::~OptimizationAlgorithmWithHessian()$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
~Parameter	./Thirdparty/g2o/g2o/core/parameter.h	/^        virtual ~Parameter() {};$/;"	f	class:g2o::Parameter
~ParameterContainer	./Thirdparty/g2o/g2o/core/parameter_container.cpp	/^  ParameterContainer::~ParameterContainer(){$/;"	f	class:g2o::ParameterContainer
~Parameters	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphAction::Parameters::~Parameters()$/;"	f	class:g2o::HyperGraphAction::Parameters
~Parameters	./Thirdparty/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementAction::Parameters::~Parameters()$/;"	f	class:g2o::HyperGraphElementAction::Parameters
~ParametrizedLine	./Thirdparty/sparseicp/include/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  ~ParametrizedLine() {}$/;"	f	class:Eigen::ParametrizedLine
~ParametrizedLine	./Thirdparty/sparseicp/include/Eigen/src/Geometry/ParametrizedLine.h	/^  ~ParametrizedLine() {}$/;"	f	class:Eigen::ParametrizedLine
~PardisoImpl	./Thirdparty/sparseicp/include/Eigen/src/PardisoSupport/PardisoSupport.h	/^    ~PardisoImpl()$/;"	f	class:Eigen::PardisoImpl
~PastixBase	./Thirdparty/sparseicp/include/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    ~PastixBase() $/;"	f	class:Eigen::PastixBase
~PnPsolver	./src/PnPsolver.cc	/^PnPsolver::~PnPsolver()$/;"	f	class:ORB_SLAM2::PnPsolver
~PooledAllocator	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		~PooledAllocator()$/;"	f	class:nanoflann::PooledAllocator
~PoseSolver	./src/PoseSolver.cc	/^PoseSolver::~PoseSolver()$/;"	f	class:ORB_SLAM2::PoseSolver
~PropertyMap	./Thirdparty/g2o/g2o/stuff/property.cpp	/^  PropertyMap::~PropertyMap() {$/;"	f	class:g2o::PropertyMap
~RadiusResultSet	./Thirdparty/sparseicp/include/nanoflann.hpp	/^		inline ~RadiusResultSet() { }$/;"	f	class:nanoflann::RadiusResultSet
~RegisterActionProxy	./Thirdparty/g2o/g2o/core/hyper_graph_action.h	/^        ~RegisterActionProxy()$/;"	f	class:g2o::RegisterActionProxy
~RegisterOptimizationAlgorithmProxy	./Thirdparty/g2o/g2o/core/optimization_algorithm_factory.h	/^      ~RegisterOptimizationAlgorithmProxy()$/;"	f	class:g2o::RegisterOptimizationAlgorithmProxy
~RegisterRobustKernelProxy	./Thirdparty/g2o/g2o/core/robust_kernel_factory.h	/^      ~RegisterRobustKernelProxy()$/;"	f	class:g2o::RegisterRobustKernelProxy
~RegisterTypeProxy	./Thirdparty/g2o/g2o/core/factory.h	/^      ~RegisterTypeProxy()$/;"	f	class:g2o::RegisterTypeProxy
~RobustKernel	./Thirdparty/g2o/g2o/core/robust_kernel.h	/^      virtual ~RobustKernel() {}$/;"	f	class:g2o::RobustKernel
~RobustKernelFactory	./Thirdparty/g2o/g2o/core/robust_kernel_factory.cpp	/^RobustKernelFactory::~RobustKernelFactory()$/;"	f	class:g2o::RobustKernelFactory
~SPQR	./Thirdparty/sparseicp/include/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    ~SPQR()$/;"	f	class:Eigen::SPQR
~ScopeTime	./Thirdparty/g2o/g2o/stuff/timeutil.cpp	/^ScopeTime::~ScopeTime() {$/;"	f	class:g2o::ScopeTime
~ScopedOpenMPMutex	./Thirdparty/g2o/g2o/core/openmp_mutex.h	/^      ~ScopedOpenMPMutex() { _mutex->unlock(); }$/;"	f	class:g2o::ScopedOpenMPMutex
~SimplicialCholeskyBase	./Thirdparty/sparseicp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    ~SimplicialCholeskyBase()$/;"	f	class:Eigen::SimplicialCholeskyBase
~Solver	./Thirdparty/g2o/g2o/core/solver.cpp	/^Solver::~Solver()$/;"	f	class:g2o::Solver
~SparseBlockMatrix	./Thirdparty/g2o/g2o/core/sparse_block_matrix.hpp	/^  SparseBlockMatrix<MatrixType>::~SparseBlockMatrix(){$/;"	f	class:g2o::SparseBlockMatrix
~SparseLU	./Thirdparty/sparseicp/include/Eigen/src/SparseLU/SparseLU.h	/^    ~SparseLU()$/;"	f	class:Eigen::SparseLU
~SparseMatrix	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseMatrix.h	/^    inline ~SparseMatrix()$/;"	f	class:Eigen::SparseMatrix
~SparseOptimizer	./Thirdparty/g2o/g2o/core/sparse_optimizer.cpp	/^  SparseOptimizer::~SparseOptimizer(){$/;"	f	class:g2o::SparseOptimizer
~SparseVector	./Thirdparty/sparseicp/include/Eigen/src/SparseCore/SparseVector.h	/^    inline ~SparseVector() {}$/;"	f	class:Eigen::SparseVector
~SuperILU	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ~SuperILU()$/;"	f	class:Eigen::SuperILU
~SuperLU	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ~SuperLU()$/;"	f	class:Eigen::SuperLU
~SuperLUBase	./Thirdparty/sparseicp/include/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ~SuperLUBase()$/;"	f	class:Eigen::SuperLUBase
~TemplatedVocabulary	./Thirdparty/DBoW2/DBoW2/TemplatedVocabulary.h	/^TemplatedVocabulary<TDescriptor,F>::~TemplatedVocabulary()$/;"	f	class:DBoW2::TemplatedVocabulary
~Timestamp	./Thirdparty/DBoW2/DUtils/Timestamp.cpp	/^Timestamp::~Timestamp(void)$/;"	f	class:Timestamp
~UmfPackLU	./Thirdparty/sparseicp/include/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    ~UmfPackLU()$/;"	f	class:Eigen::UmfPackLU
~UnrepeatedRandomizer	./Thirdparty/DBoW2/DUtils/Random.h	/^  ~UnrepeatedRandomizer(){}$/;"	f	class:DUtils::Random::UnrepeatedRandomizer
~Vertex	./Thirdparty/g2o/g2o/core/hyper_graph.cpp	/^  HyperGraph::Vertex::~Vertex()$/;"	f	class:g2o::HyperGraph::Vertex
~Vertex	./Thirdparty/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::Vertex::~Vertex()$/;"	f	class:g2o::OptimizableGraph::Vertex
~aligned_allocator	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    ~aligned_allocator()$/;"	f	class:Eigen::aligned_allocator
~aligned_allocator_indirection	./Thirdparty/sparseicp/include/Eigen/src/StlSupport/details.h	/^    ~aligned_allocator_indirection() {}$/;"	f	class:Eigen::aligned_allocator_indirection
~aligned_stack_memory_handler	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Memory.h	/^    ~aligned_stack_memory_handler()$/;"	f	class:Eigen::internal::aligned_stack_memory_handler
~gemm_blocking_space	./Thirdparty/sparseicp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    ~gemm_blocking_space()$/;"	f	class:Eigen::internal::gemm_blocking_space
~noncopyable	./Thirdparty/sparseicp/include/Eigen/src/Core/util/Meta.h	/^  ~noncopyable() {}$/;"	f	class:Eigen::internal::noncopyable
